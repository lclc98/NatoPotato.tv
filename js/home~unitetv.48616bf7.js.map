{"version":3,"sources":["webpack:///./node_modules/twitch/lib/API/Badges/ChatBadgeSet.js","webpack:///./node_modules/twitch/lib/Toolkit/UserTools.js","webpack:///./node_modules/twitch/lib/API/Helix/Stream/HelixStreamMarkerWithVideo.js","webpack:///./node_modules/twitch/lib/API/Helix/User/HelixFollow.js","webpack:///./node_modules/twitch/lib/API/Kraken/Channel/ChannelSubscription.js","webpack:///./node_modules/twitch/lib/API/Helix/Subscriptions/HelixSubscription.js","webpack:///./node_modules/twitch/lib/API/Kraken/Chat/ChatEmoteList.js","webpack:///./node_modules/twitch/lib/API/Helix/Stream/HelixStreamMarker.js","webpack:///./node_modules/twitch/lib/Auth/ClientCredentialsAuthProvider.js","webpack:///./node_modules/fetch-ponyfill/build/fetch-browser.js","webpack:///./node_modules/twitch/lib/API/Helix/Clip/HelixClipAPI.js","webpack:///./node_modules/twitch/lib/API/Helix/Video/HelixVideoAPI.js","webpack:///./node_modules/twitch/lib/API/Kraken/Search/SearchAPI.js","webpack:///./node_modules/twitch/lib/API/Helix/Game/HelixGame.js","webpack:///./node_modules/twitch/lib/TwitchClient.js","webpack:///./node_modules/twitch/lib/API/Badges/ChatBadgeVersion.js","webpack:///./node_modules/twitch/lib/API/Kraken/Bits/BitsAPI.js","webpack:///./node_modules/twitch/lib/API/Unsupported/ChannelEvent.js","webpack:///./node_modules/twitch/lib/API/Helix/User/HelixUser.js","webpack:///./node_modules/qs/lib/stringify.js","webpack:///./node_modules/qs/lib/index.js","webpack:///./node_modules/twitch/lib/Toolkit/ArrayTools.js","webpack:///./node_modules/twitch/lib/API/Kraken/Channel/PrivilegedChannel.js","webpack:///./node_modules/twitch/lib/API/Kraken/Chat/ChatAPI.js","webpack:///./node_modules/twitch/lib/Errors/StreamNotLiveError.js","webpack:///./node_modules/twitch/lib/API/Kraken/Channel/ChannelFollow.js","webpack:///./node_modules/twitch/lib/Toolkit/Decorators/Cache.js","webpack:///./node_modules/twitch/lib/API/Helix/Stream/HelixStream.js","webpack:///./node_modules/twitch/lib/API/Helix/Stream/HelixStreamAPI.js","webpack:///./node_modules/twitch/lib/API/Kraken/User/PrivilegedUser.js","webpack:///./node_modules/twitch/lib/Auth/StaticAuthProvider.js","webpack:///./node_modules/twitch/lib/API/Kraken/Bits/CheermoteList.js","webpack:///./node_modules/twitch/lib/Errors/ConfigError.js","webpack:///./node_modules/twitch/lib/Errors/CustomError.js","webpack:///./node_modules/twitch/lib/API/Kraken/Channel/EmoteSetList.js","webpack:///./node_modules/twitch/lib/API/Helix/Video/HelixVideo.js","webpack:///./node_modules/twitch/lib/Toolkit/ObjectTools.js","webpack:///./node_modules/twitch/lib/Errors/HellFreezesOverError.js","webpack:///./node_modules/twitch/lib/API/Badges/ChatBadgeList.js","webpack:///./node_modules/twitch/lib/API/Helix/Subscriptions/HelixSubscriptionAPI.js","webpack:///./node_modules/twitch/lib/API/Kraken/Chat/ChatEmote.js","webpack:///./node_modules/twitch/lib/Errors/NoSubscriptionProgramError.js","webpack:///./node_modules/twitch/lib/API/Helix/WebHooks/HelixWebHooksAPI.js","webpack:///./node_modules/tslib/tslib.es6.js","webpack:///./node_modules/twitch/lib/API/Helix/User/HelixUserAPI.js","webpack:///./node_modules/qs/lib/parse.js","webpack:///./node_modules/twitch/lib/API/Kraken/Channel/ChannelAPI.js","webpack:///./node_modules/twitch/lib/API/Helix/User/HelixPrivilegedUser.js","webpack:///./node_modules/twitch/lib/API/Helix/HelixAPIGroup.js","webpack:///./node_modules/twitch/lib/API/Unsupported/UnsupportedAPI.js","webpack:///./node_modules/twitch/lib/API/Kraken/Chat/ChatRoom.js","webpack:///./node_modules/twitch/lib/API/Kraken/Subscription.js","webpack:///./node_modules/twitch/lib/API/Kraken/Channel/Channel.js","webpack:///./node_modules/twitch/lib/API/Kraken/KrakenAPIGroup.js","webpack:///./node_modules/qs/lib/formats.js","webpack:///./node_modules/twitch/lib/API/Kraken/Channel/ChannelPlaceholder.js","webpack:///./node_modules/twitch/lib/API/AccessToken.js","webpack:///./node_modules/twitch/lib/index.js","webpack:///./node_modules/twitch/lib/API/Badges/BadgesAPI.js","webpack:///./node_modules/twitch/lib/API/Kraken/User/UserSubscription.js","webpack:///./node_modules/twitch/lib/API/Kraken/Stream/Stream.js","webpack:///./node_modules/twitch/lib/Toolkit/Decorators/NonEnumerable.js","webpack:///./node_modules/twitch/lib/API/TokenInfo.js","webpack:///./node_modules/twitch/lib/API/Helix/Bits/HelixBitsAPI.js","webpack:///./node_modules/twitch/lib/API/Helix/Bits/HelixBitsLeaderboardEntry.js","webpack:///./node_modules/qs/lib/utils.js","webpack:///./node_modules/twitch/lib/API/Kraken/User/UserFollow.js","webpack:///./node_modules/twitch/lib/API/Helix/Game/HelixGameAPI.js","webpack:///./node_modules/twitch/lib/API/BaseAPI.js","webpack:///./node_modules/twitch/lib/API/Helix/HelixPaginatedRequestWithTotal.js","webpack:///./node_modules/twitch/lib/API/Kraken/User/UserAPI.js","webpack:///./node_modules/twitch/lib/API/Unsupported/ChattersList.js","webpack:///./node_modules/twitch/lib/Auth/RefreshableAuthProvider.js","webpack:///./node_modules/twitch/lib/API/Kraken/Stream/StreamAPI.js","webpack:///./node_modules/twitch/lib/API/Kraken/User/User.js","webpack:///./node_modules/twitch/lib/API/Helix/HelixPaginatedRequest.js","webpack:///./node_modules/twitch/lib/API/Helix/WebHooks/HelixWebHookSubscription.js","webpack:///./node_modules/twitch/lib/Errors/HTTPStatusCodeError.js","webpack:///./node_modules/twitch/lib/API/Helix/Bits/HelixBitsLeaderboard.js","webpack:///./node_modules/twitch/lib/API/Kraken/User/UserBlock.js","webpack:///./node_modules/twitch/lib/API/Helix/Clip/HelixClip.js"],"names":["Object","defineProperty","exports","value","tslib_1","__webpack_require__","ChatBadgeVersion_1","NonEnumerable_1","ChatBadgeSet","_data","client","this","_client","prototype","get","keys","versions","enumerable","configurable","getVersion","name","default","__decorate","NonEnumerable","extractUserId","user","id","extractUserName","HelixStreamMarker_1","HelixStreamMarkerWithVideo","_super","data","_videoId","_this","call","__extends","URL","getVideo","__awaiter","__generator","_a","helix","videos","getVideoById","HelixFollow","from_id","from_name","getUser","users","getUserById","to_id","to_name","getFollowedUser","Date","followed_at","Subscription_1","User_1","ChannelSubscription","apply","arguments","HelixSubscription","broadcaster_id","broadcaster_name","getBroadcaster","broadcasterId","is_gift","tier","user_id","user_name","userId","ChatEmote_1","Cache_1","ChatEmoteList","map","emote","getAllFromSet","setId","filter","emoticon_set","getById","find","CachedGetter","Cached","Cacheable","HelixStreamMarker","created_at","description","position_seconds","TwitchClient_1","ClientCredentialsAuthProvider","clientId","clientSecret","_clientId","_clientSecret","getAccessToken","scopes","length","Error","_token","isExpired","refresh","_b","label","getAppAccessToken","sent","setAccessToken","token","global","__WEBPACK_AMD_DEFINE_RESULT__","self","fetchPonyfill","options","Promise","XMLHttpRequest","create","fetch","undefined","writable","support","searchParams","iterable","Symbol","blob","Blob","e","formData","arrayBuffer","viewClasses","isDataView","obj","DataView","isPrototypeOf","isArrayBufferView","ArrayBuffer","isView","indexOf","toString","Headers","append","normalizeName","normalizeValue","oldValue","has","hasOwnProperty","set","forEach","callback","thisArg","items","push","iteratorFor","values","entries","iterator","methods","Request","clone","body","_bodyInit","Body","Response","status","statusText","headers","url","error","response","type","redirectStatuses","redirect","RangeError","location","input","init","resolve","reject","request","xhr","onload","parseHeaders","getAllResponseHeaders","responseURL","responseText","onerror","TypeError","ontimeout","open","method","credentials","withCredentials","responseType","setRequestHeader","send","polyfill","String","test","toLowerCase","next","shift","done","Array","isArray","header","getOwnPropertyNames","consumed","bodyUsed","fileReaderReady","reader","result","readBlobAsArrayBuffer","FileReader","promise","readAsArrayBuffer","readBlobAsText","readAsText","readArrayBufferAsText","buf","view","Uint8Array","chars","i","fromCharCode","join","bufferClone","slice","byteLength","buffer","_initBody","_bodyText","_bodyBlob","FormData","_bodyFormData","URLSearchParams","_bodyArrayBuffer","rejected","then","text","decode","json","JSON","parse","normalizeMethod","upcased","toUpperCase","mode","referrer","form","trim","split","bytes","replace","decodeURIComponent","rawHeaders","preProcessedHeaders","line","parts","key","bodyInit","ok","module","BaseAPI_1","HelixClip_1","HelixPaginatedRequest_1","HelixClipAPI","getClipsForBroadcaster","_getClips","__assign","filterType","ids","getClipsForBroadcasterPaginated","_getClipsPaginated","getClipsForGame","gameId","getClipsForGamePaginated","getClipsByIds","getClipById","clips","createClip","params","channelId","createAfterDelay","callAPI","TwitchAPICallType","Helix","scope","query","has_delay","startDate","endDate","limit","_c","started_at","ended_at","first","cursor","pagination","HelixVideo_1","UserTools_1","HelixVideoAPI","getVideosByIds","_getVideos","getVideosByUser","getVideosByUserPaginated","_getVideosPaginated","getVideosByGame","getVideosByGamePaginated","filterValues","_makeVideosQuery","language","period","orderBy","sort","Channel_1","Stream_1","SearchAPI","searchChannels","term","page","offset","channels","channelData","searchStreams","hls","streams","streamData","HelixGame","box_art_url","qs","TokenInfo_1","CheermoteList_1","AccessToken_1","StaticAuthProvider_1","RefreshableAuthProvider_1","ClientCredentialsAuthProvider_1","ConfigError_1","HTTPStatusCodeError_1","KrakenAPIGroup_1","HelixAPIGroup_1","BadgesAPI_1","UnsupportedAPI_1","TwitchClient","config","authProvider","restConfig","__rest","_config","preAuth","cheermotes","defaultBackground","CheermoteBackground","dark","defaultState","CheermoteState","animated","defaultScale","CheermoteScale","x1","initialScopes","accessToken","refreshConfig","tokenData","newToken","getTokenInfo","valid","refreshAccessToken","refreshToken","withClientCredentials","requestOptions","_getUrl","stringify","arrayFormat","Accept","version","jsonBody","bind","concat","code","redirectUri","grant_type","client_id","client_secret","redirect_uri","refresh_token","Kraken","typeName","Custom","ChatBadgeVersion","click_action","click_url","getImageUrl","scale","title","BitsAPI","getCheermotes","channel","includeSponsored","channel_id","include_sponsored","actions","ChannelEvent","_id","start_time","end_time","time_zone_id","buildCoverImageUrl","width","height","cover_image_url","NoSubscriptionProgramError_1","HelixBroadcasterType","HelixUserType","HelixUser","login","display_name","broadcaster_type","profile_image_url","offline_image_url","view_count","getStream","getStreamByUserId","getFollows","getFollowTo","broadcaster","followedUser","follows","follow","currentUser","kraken","getMe","followChannel","unfollow","unfollowChannel","getSubscriptionTo","subscriptions","getSubscriptionForUser","isSubscribedTo","e_1","trys","utils","formats","arrayPrefixGenerators","brackets","prefix","comma","indices","repeat","pushToArray","arr","valueOrArray","toISO","toISOString","defaults","addQueryPrefix","allowDots","charset","charsetSentinel","delimiter","encode","encoder","encodeValuesOnly","formatter","formatters","serializeDate","date","skipNulls","strictNullHandling","object","generateArrayPrefix","isBuffer","keyValue","objKeys","normalizeStringifyOptions","opts","format","joined","flatten","__spread","PrivilegedChannel","stream_key","email","getEditors","getChannelEditors","startCommercial","startChannelCommercial","resetStreamKey","streamKey","resetChannelStreamKey","ChatEmoteList_1","ChatRoom_1","ChatAPI","getEmotesBySets","emotesets","emoticons","getChatRoomsForChannel","rooms","room","CustomError_1","StreamNotLiveError","ChannelFollow","notifications","createCacheKey","propName","createSingleCacheKey","param","cacheKey","objKey","cls","class_1","cache","Map","getFromCache","_cleanCache","entry","setCache","timeInSeconds","expires","now","removeFromCache","internalCacheKey","endsWith","val","startsWith","delete","cacheFailures","Infinity","target","descriptor","origFn","_i","cachedValue","origFn_1","ClearsCache","cacheName","numberOfArguments","args","HelixStreamType","HelixStream","game_id","getGame","games","getGameById","viewer_count","thumbnail_url","HelixStream_1","HelixStreamMarkerWithVideo_1","StreamNotLiveError_1","ArrayTools_1","HelixStreamAPI","getStreams","after","before","community_id","community","game","user_login","userName","getStreamsPaginated","getStreamByUserName","getStreamMarkersForUser","_getStreamMarkers","getStreamMarkersForUserPaginated","_getStreamMarkersPaginated","getStreamMarkersForVideo","videoId","getStreamMarkersForVideoPaginated","createStreamMarker","statusCode","queryType","_mapGetStreamMarkersResult","reduce","video","markers","marker","video_id","PrivilegedUser","email_verified","partnered","twitter_connected","blockUser","userToBlock","unblockUser","userToUnblock","StaticAuthProvider","_accessToken","access_token","_scopes","tokenInfo","some","includes","HellFreezesOverError_1","ObjectTools_1","CheermoteList","indexBy","action","getCheermoteDisplayInfo","bits","cheermoteDefaults","fullOptions","background","state","tiers","correctTier","a","b","min_bits","images","color","getPossibleNames","parseMessage","message","match","names","re","RegExp","exec","name_1","amount","Number","position","index","displayInfo","transformCheerMessage","transformer","currentPosition","__values","foundCheermote","substring","e_1_1","return","substr","ConfigError","CustomError","captureStackTrace","constructor","EmoteSetList","findEmoteId","emoteCode","e_2","_d","emoteSet","emoteSet_1","emoteSet_1_1","e_2_1","HelixVideo","published_at","viewable","duration","part","partialMatch","__read","num","unit","parseInt","h","m","s","mapObject","fn","mapped","assign","objectFromArray","keyFn","key_1","forEachObjectEntry","entriesToObject","HellFreezesOverError","ChatBadgeSet_1","ChatBadgeList","getBadgeSet","_merge","additionalData","__1","HelixSubscription_1","HelixSubscriptionAPI","getSubscriptions","getSubscriptionsPaginated","getSubscriptionsForUsers","list","ChatEmote","NoSubscriptionProgramError","HelixPaginatedRequestWithTotal_1","HelixWebHookSubscription_1","HelixWebHooksAPI","sendHubRequest","callbackUrl","topicUrl","validityInSeconds","secret","hub.mode","hub.topic","hub.callback","hub.lease_seconds","hub.secret","subscribeToUserFollowsFrom","_sendUserFollowsHubRequest","subscribeToUserFollowsTo","unsubscribeFromUserFollowsFrom","unsubscribeFromUserFollowsTo","subscribeToStreamChanges","_sendStreamChangeHubRequest","unsubscribeFromStreamChanges","subscribeToUserChanges","withEmail","_sendUserChangeHubRequest","unsubscribeFromUserChanges","direction","r","__webpack_exports__","d","__param","__metadata","__exportStar","__spreadArrays","__await","__asyncGenerator","__asyncDelegator","__asyncValues","__makeTemplateObject","__importStar","__importDefault","extendStatics","setPrototypeOf","__proto__","p","__","t","n","getOwnPropertySymbols","propertyIsEnumerable","decorators","desc","c","getOwnPropertyDescriptor","Reflect","decorate","paramIndex","decorator","metadataKey","metadataValue","metadata","_arguments","P","generator","fulfilled","step","f","y","g","_","ops","verb","throw","v","op","pop","o","ar","il","k","j","jl","asyncIterator","q","resume","settle","fulfill","cooked","raw","mod","__esModule","UserLookupType","HelixUser_1","HelixPrivilegedUser_1","HelixFollow_1","HelixUserAPI","getUsersByIds","userIds","_getUsers","Id","getUsersByNames","userNames","Login","getUserByName","updateUser","_makeFollowsQuery","total","getFollowsPaginated","hasUserIdParam","lookupType","userData","allowPrototypes","arrayLimit","decoder","depth","ignoreQueryPrefix","interpretNumericEntities","parameterLimit","parseArrays","plainObjects","str","$0","numberStr","isoSentinel","parseValues","cleanStr","skipIndex","bracketEqualsPos","pos","combine","parseObject","chain","leaf","root","cleanRoot","charAt","isNaN","0","parseKeys","givenKey","child","segment","parent","normalizeParseOptions","isRegExp","tempObj","newObj","merge","compact","ChannelSubscription_1","PrivilegedChannel_1","ChannelFollow_1","ChannelAPI","getMyChannel","getChannel","updateChannel","getChannelFollowers","orderDirection","getChannelSubscriptions","_getChannelSubscriptions","sub","getChannelSubscriptionCount","_total","getChannelSubscriptionByUser","byUser","HelixPrivilegedUser","setDescription","HelixBitsAPI_1","HelixClipAPI_1","HelixGameAPI_1","HelixStreamAPI_1","HelixSubscriptionAPI_1","HelixUserAPI_1","HelixVideoAPI_1","HelixWebHooksAPI_1","HelixAPIGroup","ChattersList_1","ChannelEvent_1","UnsupportedAPI","getChatters","channelName","getEvents","events","event","ChatRoom","owner_id","getOwner","topic","is_previewable","minimum_allowed_role","Subscription","sub_plan","sub_plan_name","ChannelPlaceholder_1","Channel","update","broadcaster_language","followers","logo","mature","partner","profile_banner","profile_banner_background_color","updated_at","video_banner","views","BitsAPI_1","ChannelAPI_1","ChatAPI_1","SearchAPI_1","StreamAPI_1","UserAPI_1","KrakenAPIGroup","percentTwenties","RFC1738","RFC3986","ChannelPlaceholder","getStreamByChannel","getFollowers","getSubscriptionBy","hasSubscriber","AccessToken","obtainmentDate","_obtainmentDate","expires_in","getTime","HTTPStatusCodeError","RefreshableAuthProvider","TokenInfo","EmoteSetList_1","Stream","StreamType","ChattersList","PrivilegedUser_1","User","UserBlock_1","UserBlock","UserFollow_1","UserFollow","UserSubscription_1","UserSubscription","HelixPaginatedRequest","HelixBitsLeaderboard_1","HelixBitsLeaderboard","HelixBitsLeaderboardEntry_1","HelixBitsLeaderboardEntry","HelixClip","HelixGame_1","ChatBadgeList_1","BadgesAPI","getGlobalBadges","badge_sets","getChannelBadges","includeGlobal","channelBadges","viewers","video_height","average_fps","delay","is_playlist","stream_type","getPreviewUrl","size","preview","authorization","HelixBitsAPI","getLeaderboard","count","contextUserId","rank","score","hexTable","array","compactQueue","queue","item","prop","compacted","arrayToObject","source","mergeTarget","targetItem","acc","strWithoutPlus","unescape","defaultEncoder","string","escape","out","charCodeAt","refs","HelixGameAPI","getGamesByIds","_getGames","getGamesByNames","getGameByName","getTopGames","getTopGamesPaginated","BaseAPI","HelixPaginatedRequestWithTotal","getTotalCount","_currentData","_fetchData","UserAPI","_userByNameCache","_cleanUserCache","cachedEntries","cachedObject","cachedUsers","toFetch","usersData","usersArr","from","getUserEmotes","emoticon_sets","getSubscriptionData","toChannel","getFollowedChannels","sortby","getFollowedChannel","Boolean","getBlockedUsers","blocks","block","userIdToBlock","userIdToUnblock","chatters","childProvider","_refreshToken","_childProvider","_initialExpiry","expiry","_onRefresh","onRefresh","oldToken","refreshedToken","currentScopes","StreamAPI","stream","languageCode","getAllStreams","All","getAllLiveStreams","Live","getFollowedStreams","bio","getChannelPlaceholder","getEmotes","_callOptions","_mapper","getNext","_processResult","getAll","reset","_currentCursor","additionalOptions","elem","HelixWebHookSubscription","expires_at","_statusCode","_body","embed_url","creator_id","creator_name","getCreator"],"mappings":"gHACAA,OAAAC,eAAAC,EAAA,cAA8CC,OAAA,IAC9C,IAAAC,EAAcC,EAAQ,QACtBC,EAAyBD,EAAQ,QACjCE,EAAsBF,EAAQ,QAI9BG,EAAA,WAEA,SAAAA,EAAAC,EAAAC,GACAC,KAAAF,QACAE,KAAAC,QAAAF,EAuBA,OArBAV,OAAAC,eAAAO,EAAAK,UAAA,gBAIAC,IAAA,WACA,OAAAd,OAAAe,KAAAJ,KAAAF,MAAAO,WAEAC,YAAA,EACAC,cAAA,IAOAV,EAAAK,UAAAM,WAAA,SAAAC,GACA,WAAAd,EAAAe,QAAAV,KAAAF,MAAAO,SAAAI,GAAAT,KAAAC,UAEAR,EAAAkB,WAAA,CACAf,EAAAgB,eACAf,EAAAK,UAAA,kBACAL,EA3BA,GA6BAN,EAAAmB,QAAAb,uCC9BA,SAAAgB,EAAAC,GACA,wBAAAA,MAAAC,GAQA,SAAAC,EAAAF,GACA,wBAAAA,MAAAL,KAhBApB,OAAAC,eAAAC,EAAA,cAA8CC,OAAA,IAS9CD,EAAAsB,gBASAtB,EAAAyB,uDClBA3B,OAAAC,eAAAC,EAAA,cAA8CC,OAAA,IAC9C,IAAAC,EAAcC,EAAQ,QACtBuB,EAA0BvB,EAAQ,QAClCwB,EAAA,SAAAC,GAGA,SAAAD,EAAAE,EAAAC,EAAAtB,GACA,IAAAuB,EAAAH,EAAAI,KAAAvB,KAAAoB,EAAArB,IAAAC,KAEA,OADAsB,EAAAD,WACAC,EAgCA,OArCA7B,EAAA+B,UAAAN,EAAAC,GAOA9B,OAAAC,eAAA4B,EAAAhB,UAAA,OAIAC,IAAA,WACA,OAAAH,KAAAF,MAAA2B,KAEAnB,YAAA,EACAC,cAAA,IAEAlB,OAAAC,eAAA4B,EAAAhB,UAAA,WAIAC,IAAA,WACA,OAAAH,KAAAqB,UAEAf,YAAA,EACAC,cAAA,IAKAW,EAAAhB,UAAAwB,SAAA,WACA,OAAAjC,EAAAkC,UAAA3B,UAAA,oBACA,OAAAP,EAAAmC,YAAA5B,KAAA,SAAA6B,GACA,SAAA7B,KAAAC,QAAA6B,MAAAC,OAAAC,aAAAhC,KAAAqB,gBAIAH,EAtCA,CAuCCD,EAAAP,SACDnB,EAAAmB,QAAAQ,uCC3CA7B,OAAAC,eAAAC,EAAA,cAA8CC,OAAA,IAC9C,IAAAC,EAAcC,EAAQ,QACtBE,EAAsBF,EAAQ,QAI9BuC,EAAA,WAEA,SAAAA,EAAAnC,EAAAC,GACAC,KAAAF,QACAE,KAAAC,QAAAF,EA2EA,OAzEAV,OAAAC,eAAA2C,EAAA/B,UAAA,UAIAC,IAAA,WACA,OAAAH,KAAAF,MAAAoC,SAEA5B,YAAA,EACAC,cAAA,IAEAlB,OAAAC,eAAA2C,EAAA/B,UAAA,mBAIAC,IAAA,WACA,OAAAH,KAAAF,MAAAqC,WAEA7B,YAAA,EACAC,cAAA,IAKA0B,EAAA/B,UAAAkC,QAAA,WACA,OAAA3C,EAAAkC,UAAA3B,UAAA,oBACA,OAAAP,EAAAmC,YAAA5B,KAAA,SAAA6B,GACA,SAAA7B,KAAAC,QAAA6B,MAAAO,MAAAC,YAAAtC,KAAAF,MAAAoC,eAIA7C,OAAAC,eAAA2C,EAAA/B,UAAA,kBAIAC,IAAA,WACA,OAAAH,KAAAF,MAAAyC,OAEAjC,YAAA,EACAC,cAAA,IAEAlB,OAAAC,eAAA2C,EAAA/B,UAAA,2BAIAC,IAAA,WACA,OAAAH,KAAAF,MAAA0C,SAEAlC,YAAA,EACAC,cAAA,IAKA0B,EAAA/B,UAAAuC,gBAAA,WACA,OAAAhD,EAAAkC,UAAA3B,UAAA,oBACA,OAAAP,EAAAmC,YAAA5B,KAAA,SAAA6B,GACA,SAAA7B,KAAAC,QAAA6B,MAAAO,MAAAC,YAAAtC,KAAAF,MAAAyC,aAIAlD,OAAAC,eAAA2C,EAAA/B,UAAA,cAIAC,IAAA,WACA,WAAAuC,KAAA1C,KAAAF,MAAA6C,cAEArC,YAAA,EACAC,cAAA,IAEAd,EAAAkB,WAAA,CACAf,EAAAgB,eACAqB,EAAA/B,UAAA,kBACA+B,EA/EA,GAiFA1C,EAAAmB,QAAAuB,uCCvFA5C,OAAAC,eAAAC,EAAA,cAA8CC,OAAA,IAC9C,IAAAC,EAAcC,EAAQ,QACtBkD,EAAqBlD,EAAQ,QAC7BmD,EAAanD,EAAQ,QAIrBoD,EAAA,SAAA3B,GAEA,SAAA2B,IACA,cAAA3B,KAAA4B,MAAA/C,KAAAgD,YAAAhD,KAYA,OAdAP,EAAA+B,UAAAsB,EAAA3B,GAIA9B,OAAAC,eAAAwD,EAAA5C,UAAA,QAIAC,IAAA,WACA,WAAA0C,EAAAnC,QAAAV,KAAAF,MAAAgB,KAAAd,KAAAC,UAEAK,YAAA,EACAC,cAAA,IAEAuC,EAfA,CAgBCF,EAAAlC,SACDnB,EAAAmB,QAAAoC,uCCxBAzD,OAAAC,eAAAC,EAAA,cAA8CC,OAAA,IAC9C,IAAAC,EAAcC,EAAQ,QACtBE,EAAsBF,EAAQ,QAI9BuD,EAAA,WAEA,SAAAA,EAAAnD,EAAAC,GACAC,KAAAF,QACAE,KAAAC,QAAAF,EAqFA,OAnFAV,OAAAC,eAAA2D,EAAA/C,UAAA,iBAIAC,IAAA,WACA,OAAAH,KAAAF,MAAAoD,gBAEA5C,YAAA,EACAC,cAAA,IAEAlB,OAAAC,eAAA2D,EAAA/C,UAAA,0BAIAC,IAAA,WACA,OAAAH,KAAAF,MAAAqD,kBAEA7C,YAAA,EACAC,cAAA,IAKA0C,EAAA/C,UAAAkD,eAAA,WACA,OAAA3D,EAAAkC,UAAA3B,UAAA,oBACA,OAAAP,EAAAmC,YAAA5B,KAAA,SAAA6B,GACA,SAAA7B,KAAAC,QAAA6B,MAAAO,MAAAC,YAAAtC,KAAAqD,qBAIAhE,OAAAC,eAAA2D,EAAA/C,UAAA,UAIAC,IAAA,WACA,OAAAH,KAAAF,MAAAwD,SAEAhD,YAAA,EACAC,cAAA,IAEAlB,OAAAC,eAAA2D,EAAA/C,UAAA,QAIAC,IAAA,WACA,OAAAH,KAAAF,MAAAyD,MAEAjD,YAAA,EACAC,cAAA,IAEAlB,OAAAC,eAAA2D,EAAA/C,UAAA,UAIAC,IAAA,WACA,OAAAH,KAAAF,MAAA0D,SAEAlD,YAAA,EACAC,cAAA,IAEAlB,OAAAC,eAAA2D,EAAA/C,UAAA,mBAIAC,IAAA,WACA,OAAAH,KAAAF,MAAA2D,WAEAnD,YAAA,EACAC,cAAA,IAKA0C,EAAA/C,UAAAkC,QAAA,WACA,OAAA3C,EAAAkC,UAAA3B,UAAA,oBACA,OAAAP,EAAAmC,YAAA5B,KAAA,SAAA6B,GACA,SAAA7B,KAAAC,QAAA6B,MAAAO,MAAAC,YAAAtC,KAAA0D,cAIAjE,EAAAkB,WAAA,CACAf,EAAAgB,eACAqC,EAAA/C,UAAA,kBACA+C,EAzFA,GA2FA1D,EAAAmB,QAAAuC,uCCjGA5D,OAAAC,eAAAC,EAAA,cAA8CC,OAAA,IAC9C,IAAAC,EAAcC,EAAQ,QACtBE,EAAsBF,EAAQ,QAC9BiE,EAAkBjE,EAAQ,QAC1BkE,EAAclE,EAAQ,QAItBmE,EAAA,WAEA,SAAAA,EAAA/D,EAAAC,GACAC,KAAAF,QACAE,KAAAC,QAAAF,EA8CA,OA5CAV,OAAAC,eAAAuE,EAAA3D,UAAA,UAIAC,IAAA,WACA,IAAAmB,EAAAtB,KACA,OAAAA,KAAAF,MAAAgE,IAAA,SAAAC,GAAoD,WAAAJ,EAAAjD,QAAAqD,EAAAzC,EAAArB,YAEpDK,YAAA,EACAC,cAAA,IAOAsD,EAAA3D,UAAA8D,cAAA,SAAAC,GACA,IAAA3C,EAAAtB,KACA,OAAAA,KAAAF,MAAAoE,OAAA,SAAAH,GAAmD,OAAAA,EAAAI,eAAAF,IAAuCH,IAAA,SAAAC,GAAwB,WAAAJ,EAAAjD,QAAAqD,EAAAzC,EAAArB,YAOlH4D,EAAA3D,UAAAkE,QAAA,SAAArD,GACA,IAAAK,EAAApB,KAAAF,MAAAuE,KAAA,SAAAN,GAAqD,OAAAA,EAAAhD,SACrD,OAAAK,EAAA,IAAAuC,EAAAjD,QAAAU,EAAApB,KAAAC,SAAA,MAEAR,EAAAkB,WAAA,CACAf,EAAAgB,eACAiD,EAAA3D,UAAA,kBACAT,EAAAkB,WAAA,CACAiD,EAAAU,gBACAT,EAAA3D,UAAA,eACAT,EAAAkB,WAAA,CACAiD,EAAAW,UACAV,EAAA3D,UAAA,sBACAT,EAAAkB,WAAA,CACAiD,EAAAW,UACAV,EAAA3D,UAAA,gBACA2D,EAAApE,EAAAkB,WAAA,CACAiD,EAAAY,WACAX,GACAA,EAlDA,GAoDAtE,EAAAmB,QAAAmD,uCC5DAxE,OAAAC,eAAAC,EAAA,cAA8CC,OAAA,IAC9C,IAAAC,EAAcC,EAAQ,QACtBE,EAAsBF,EAAQ,QAC9B+E,EAAA,WAEA,SAAAA,EAAA3E,EAAAC,GACAC,KAAAF,QACAE,KAAAC,QAAAF,EA6CA,OA3CAV,OAAAC,eAAAmF,EAAAvE,UAAA,MAIAC,IAAA,WACA,OAAAH,KAAAF,MAAAiB,IAEAT,YAAA,EACAC,cAAA,IAEAlB,OAAAC,eAAAmF,EAAAvE,UAAA,gBAIAC,IAAA,WACA,WAAAuC,KAAA1C,KAAAF,MAAA4E,aAEApE,YAAA,EACAC,cAAA,IAEAlB,OAAAC,eAAAmF,EAAAvE,UAAA,eAIAC,IAAA,WACA,OAAAH,KAAAF,MAAA6E,aAEArE,YAAA,EACAC,cAAA,IAEAlB,OAAAC,eAAAmF,EAAAvE,UAAA,qBAIAC,IAAA,WACA,OAAAH,KAAAF,MAAA8E,kBAEAtE,YAAA,EACAC,cAAA,IAEAd,EAAAkB,WAAA,CACAf,EAAAgB,eACA6D,EAAAvE,UAAA,kBACAuE,EAjDA,GAmDAlF,EAAAmB,QAAA+D,uCCtDApF,OAAAC,eAAAC,EAAA,cAA8CC,OAAA,IAC9C,IAAAC,EAAcC,EAAQ,QACtBE,EAAsBF,EAAQ,QAC9BmF,EAAqBnF,EAAQ,QAI7BoF,EAAA,WAWA,SAAAA,EAAAC,EAAAC,GACAhF,KAAAiF,UAAAF,EACA/E,KAAAkF,cAAAF,EAuEA,OA9DAF,EAAA5E,UAAAiF,eAAA,SAAAC,GACA,OAAA3F,EAAAkC,UAAA3B,UAAA,oBACA,OAAAP,EAAAmC,YAAA5B,KAAA,SAAA6B,GACA,GAAAuD,KAAAC,OAAA,EACA,UAAAC,MAAA,uDAEA,OAAAtF,KAAAuF,QAAAvF,KAAAuF,OAAAC,UACA,GAAAxF,KAAAyF,WAEA,GAAAzF,KAAAuF,aAOAT,EAAA5E,UAAAuF,QAAA,WACA,OAAAhG,EAAAkC,UAAA3B,UAAA,oBACA,IAAA6B,EACA,OAAApC,EAAAmC,YAAA5B,KAAA,SAAA0F,GACA,OAAAA,EAAAC,OACA,OAEA,OADA9D,EAAA7B,KACA,GAAA6E,EAAAnE,QAAAkF,kBAAA5F,KAAAiF,UAAAjF,KAAAkF,gBACA,gBAAArD,EAAA0D,OAAAG,EAAAG,cAMAf,EAAA5E,UAAA4F,eAAA,SAAAC,GACA/F,KAAAuF,OAAAQ,GAEA1G,OAAAC,eAAAwF,EAAA5E,UAAA,YAIAC,IAAA,WACA,OAAAH,KAAAiF,WAEA3E,YAAA,EACAC,cAAA,IAEAlB,OAAAC,eAAAwF,EAAA5E,UAAA,iBAIAC,IAAA,WACA,UAEAG,YAAA,EACAC,cAAA,IAEAd,EAAAkB,WAAA,CACAf,EAAAgB,eACAkE,EAAA5E,UAAA,oBACAT,EAAAkB,WAAA,CACAf,EAAAgB,eACAkE,EAAA5E,UAAA,wBACAT,EAAAkB,WAAA,CACAf,EAAAgB,eACAkE,EAAA5E,UAAA,iBACA4E,EApFA,GAsFAvF,EAAAmB,QAAAoE,yBC9FA,SAAAkB,GAAA,IAAAC,GAAA,SAAAC,GACA,aAEA,SAAAC,EAAAC,GACA,IAAAC,EAAAD,KAAAC,SAAAH,EAAAG,QACAC,EAAAF,KAAAE,gBAAAJ,EAAAI,eACAN,EAAAE,EAEA,kBACA,IAAAA,EAAA7G,OAAAkH,OAAAP,EAAA,CACAQ,MAAA,CACAhH,WAAAiH,EACAC,UAAA,KAwdA,OApdA,SAAAR,GAGA,IAAAA,EAAAM,MAAA,CAIA,IAAAG,EAAA,CACAC,aAAA,oBAAAV,EACAW,SAAA,WAAAX,GAAA,aAAAY,OACAC,KAAA,eAAAb,GAAA,SAAAA,GAAA,WACA,IAEA,OADA,IAAAc,MACA,EACa,MAAAC,GACb,UALA,GAQAC,SAAA,aAAAhB,EACAiB,YAAA,gBAAAjB,GAGA,GAAAS,EAAAQ,YACA,IAAAC,EAAA,CACA,qBACA,sBACA,6BACA,sBACA,uBACA,sBACA,uBACA,wBACA,yBAGAC,EAAA,SAAAC,GACA,OAAAA,GAAAC,SAAArH,UAAAsH,cAAAF,IAGAG,EAAAC,YAAAC,QAAA,SAAAL,GACA,OAAAA,GAAAF,EAAAQ,QAAAvI,OAAAa,UAAA2H,SAAAtG,KAAA+F,KAAA,GAyDAQ,EAAA5H,UAAA6H,OAAA,SAAAtH,EAAAjB,GACAiB,EAAAuH,EAAAvH,GACAjB,EAAAyI,EAAAzI,GACA,IAAA0I,EAAAlI,KAAA8D,IAAArD,GACAT,KAAA8D,IAAArD,GAAAyH,IAAA,IAAA1I,KAGAsI,EAAA5H,UAAA,mBAAAO,UACAT,KAAA8D,IAAAkE,EAAAvH,KAGAqH,EAAA5H,UAAAC,IAAA,SAAAM,GAEA,OADAA,EAAAuH,EAAAvH,GACAT,KAAAmI,IAAA1H,GAAAT,KAAA8D,IAAArD,GAAA,MAGAqH,EAAA5H,UAAAiI,IAAA,SAAA1H,GACA,OAAAT,KAAA8D,IAAAsE,eAAAJ,EAAAvH,KAGAqH,EAAA5H,UAAAmI,IAAA,SAAA5H,EAAAjB,GACAQ,KAAA8D,IAAAkE,EAAAvH,IAAAwH,EAAAzI,IAGAsI,EAAA5H,UAAAoI,QAAA,SAAAC,EAAAC,GACA,QAAA/H,KAAAT,KAAA8D,IACA9D,KAAA8D,IAAAsE,eAAA3H,IACA8H,EAAAhH,KAAAiH,EAAAxI,KAAA8D,IAAArD,KAAAT,OAKA8H,EAAA5H,UAAAE,KAAA,WACA,IAAAqI,EAAA,GAEA,OADAzI,KAAAsI,QAAA,SAAA9I,EAAAiB,GAA8CgI,EAAAC,KAAAjI,KAC9CkI,EAAAF,IAGAX,EAAA5H,UAAA0I,OAAA,WACA,IAAAH,EAAA,GAEA,OADAzI,KAAAsI,QAAA,SAAA9I,GAAwCiJ,EAAAC,KAAAlJ,KACxCmJ,EAAAF,IAGAX,EAAA5H,UAAA2I,QAAA,WACA,IAAAJ,EAAA,GAEA,OADAzI,KAAAsI,QAAA,SAAA9I,EAAAiB,GAA8CgI,EAAAC,KAAA,CAAAjI,EAAAjB,MAC9CmJ,EAAAF,IAGA9B,EAAAE,WACAiB,EAAA5H,UAAA4G,OAAAgC,UAAAhB,EAAA5H,UAAA2I,SAqJA,IAAAE,EAAA,+CA4CAC,EAAA9I,UAAA+I,MAAA,WACA,WAAAD,EAAAhJ,KAAA,CAAoCkJ,KAAAlJ,KAAAmJ,aAgCpCC,EAAA7H,KAAAyH,EAAA9I,WAgBAkJ,EAAA7H,KAAA8H,EAAAnJ,WAEAmJ,EAAAnJ,UAAA+I,MAAA,WACA,WAAAI,EAAArJ,KAAAmJ,UAAA,CACAG,OAAAtJ,KAAAsJ,OACAC,WAAAvJ,KAAAuJ,WACAC,QAAA,IAAA1B,EAAA9H,KAAAwJ,SACAC,IAAAzJ,KAAAyJ,OAIAJ,EAAAK,MAAA,WACA,IAAAC,EAAA,IAAAN,EAAA,MAA6CC,OAAA,EAAAC,WAAA,KAE7C,OADAI,EAAAC,KAAA,QACAD,GAGA,IAAAE,EAAA,sBAEAR,EAAAS,SAAA,SAAAL,EAAAH,GACA,QAAAO,EAAAjC,QAAA0B,GACA,UAAAS,WAAA,uBAGA,WAAAV,EAAA,MAAqCC,SAAAE,QAAA,CAA0BQ,SAAAP,MAG/DvD,EAAA4B,UACA5B,EAAA8C,UACA9C,EAAAmD,WAEAnD,EAAAM,MAAA,SAAAyD,EAAAC,GACA,WAAA7D,EAAA,SAAA8D,EAAAC,GACA,IAAAC,EAAA,IAAArB,EAAAiB,EAAAC,GACAI,EAAA,IAAAhE,EAEAgE,EAAAC,OAAA,WACA,IAAAnE,EAAA,CACAkD,OAAAgB,EAAAhB,OACAC,WAAAe,EAAAf,WACAC,QAAAgB,EAAAF,EAAAG,yBAAA,KAEArE,EAAAqD,IAAA,gBAAAa,IAAAI,YAAAtE,EAAAoD,QAAArJ,IAAA,iBACA,IAAA+I,EAAA,aAAAoB,IAAAX,SAAAW,EAAAK,aACAR,EAAA,IAAAd,EAAAH,EAAA9C,KAGAkE,EAAAM,QAAA,WACAR,EAAA,IAAAS,UAAA,4BAGAP,EAAAQ,UAAA,WACAV,EAAA,IAAAS,UAAA,4BAGAP,EAAAS,KAAAV,EAAAW,OAAAX,EAAAZ,KAAA,GAEA,YAAAY,EAAAY,YACAX,EAAAY,iBAAA,EACa,SAAAb,EAAAY,cACbX,EAAAY,iBAAA,GAGA,iBAAAZ,GAAA3D,EAAAI,OACAuD,EAAAa,aAAA,QAGAd,EAAAb,QAAAlB,QAAA,SAAA9I,EAAAiB,GACA6J,EAAAc,iBAAA3K,EAAAjB,KAGA8K,EAAAe,KAAA,qBAAAhB,EAAAlB,UAAA,KAAAkB,EAAAlB,cAGAjD,EAAAM,MAAA8E,UAAA,EApaA,SAAAtD,EAAAvH,GAIA,GAHA,kBAAAA,IACAA,EAAA8K,OAAA9K,IAEA,6BAAA+K,KAAA/K,GACA,UAAAoK,UAAA,0CAEA,OAAApK,EAAAgL,cAGA,SAAAxD,EAAAzI,GAIA,MAHA,kBAAAA,IACAA,EAAA+L,OAAA/L,IAEAA,EAIA,SAAAmJ,EAAAF,GACA,IAAAK,EAAA,CACA4C,KAAA,WACA,IAAAlM,EAAAiJ,EAAAkD,QACA,OAAsBC,UAAAnF,IAAAjH,aAUtB,OANAmH,EAAAE,WACAiC,EAAAhC,OAAAgC,UAAA,WACA,OAAAA,IAIAA,EAGA,SAAAhB,EAAA0B,GACAxJ,KAAA8D,IAAA,GAEA0F,aAAA1B,EACA0B,EAAAlB,QAAA,SAAA9I,EAAAiB,GACAT,KAAA+H,OAAAtH,EAAAjB,IACaQ,MACF6L,MAAAC,QAAAtC,GACXA,EAAAlB,QAAA,SAAAyD,GACA/L,KAAA+H,OAAAgE,EAAA,GAAAA,EAAA,KACa/L,MACFwJ,GACXnK,OAAA2M,oBAAAxC,GAAAlB,QAAA,SAAA7H,GACAT,KAAA+H,OAAAtH,EAAA+I,EAAA/I,KACaT,MA0Db,SAAAiM,EAAA/C,GACA,GAAAA,EAAAgD,SACA,OAAA7F,EAAA+D,OAAA,IAAAS,UAAA,iBAEA3B,EAAAgD,UAAA,EAGA,SAAAC,EAAAC,GACA,WAAA/F,EAAA,SAAA8D,EAAAC,GACAgC,EAAA7B,OAAA,WACAJ,EAAAiC,EAAAC,SAEAD,EAAAxB,QAAA,WACAR,EAAAgC,EAAA1C,UAKA,SAAA4C,EAAAvF,GACA,IAAAqF,EAAA,IAAAG,WACAC,EAAAL,EAAAC,GAEA,OADAA,EAAAK,kBAAA1F,GACAyF,EAGA,SAAAE,EAAA3F,GACA,IAAAqF,EAAA,IAAAG,WACAC,EAAAL,EAAAC,GAEA,OADAA,EAAAO,WAAA5F,GACAyF,EAGA,SAAAI,EAAAC,GAIA,IAHA,IAAAC,EAAA,IAAAC,WAAAF,GACAG,EAAA,IAAAnB,MAAAiB,EAAAzH,QAEA4H,EAAA,EAAyBA,EAAAH,EAAAzH,OAAiB4H,IAC1CD,EAAAC,GAAA1B,OAAA2B,aAAAJ,EAAAG,IAEA,OAAAD,EAAAG,KAAA,IAGA,SAAAC,EAAAP,GACA,GAAAA,EAAAQ,MACA,OAAAR,EAAAQ,MAAA,GAEA,IAAAP,EAAA,IAAAC,WAAAF,EAAAS,YAEA,OADAR,EAAAzE,IAAA,IAAA0E,WAAAF,IACAC,EAAAS,OAIA,SAAAnE,IA0FA,OAzFApJ,KAAAkM,UAAA,EAEAlM,KAAAwN,UAAA,SAAAtE,GAEA,GADAlJ,KAAAmJ,UAAAD,EACAA,EAEa,qBAAAA,EACblJ,KAAAyN,UAAAvE,OACa,GAAAvC,EAAAI,MAAAC,KAAA9G,UAAAsH,cAAA0B,GACblJ,KAAA0N,UAAAxE,OACa,GAAAvC,EAAAO,UAAAyG,SAAAzN,UAAAsH,cAAA0B,GACblJ,KAAA4N,cAAA1E,OACa,GAAAvC,EAAAC,cAAAiH,gBAAA3N,UAAAsH,cAAA0B,GACblJ,KAAAyN,UAAAvE,EAAArB,gBACa,GAAAlB,EAAAQ,aAAAR,EAAAI,MAAAM,EAAA6B,GACblJ,KAAA8N,iBAAAV,EAAAlE,EAAAqE,QAEAvN,KAAAmJ,UAAA,IAAAnC,KAAA,CAAAhH,KAAA8N,uBACa,KAAAnH,EAAAQ,cAAAO,YAAAxH,UAAAsH,cAAA0B,KAAAzB,EAAAyB,GAGb,UAAA5D,MAAA,6BAFAtF,KAAA8N,iBAAAV,EAAAlE,QAdAlJ,KAAAyN,UAAA,GAmBAzN,KAAAwJ,QAAArJ,IAAA,kBACA,kBAAA+I,EACAlJ,KAAAwJ,QAAAnB,IAAA,2CACerI,KAAA0N,WAAA1N,KAAA0N,UAAA9D,KACf5J,KAAAwJ,QAAAnB,IAAA,eAAArI,KAAA0N,UAAA9D,MACejD,EAAAC,cAAAiH,gBAAA3N,UAAAsH,cAAA0B,IACflJ,KAAAwJ,QAAAnB,IAAA,oEAKA1B,EAAAI,OACA/G,KAAA+G,KAAA,WACA,IAAAgH,EAAA9B,EAAAjM,MACA,GAAA+N,EACA,OAAAA,EAGA,GAAA/N,KAAA0N,UACA,OAAArH,EAAA8D,QAAAnK,KAAA0N,WACe,GAAA1N,KAAA8N,iBACf,OAAAzH,EAAA8D,QAAA,IAAAnD,KAAA,CAAAhH,KAAA8N,oBACe,GAAA9N,KAAA4N,cACf,UAAAtI,MAAA,wCAEA,OAAAe,EAAA8D,QAAA,IAAAnD,KAAA,CAAAhH,KAAAyN,cAIAzN,KAAAmH,YAAA,WACA,OAAAnH,KAAA8N,iBACA7B,EAAAjM,OAAAqG,EAAA8D,QAAAnK,KAAA8N,kBAEA9N,KAAA+G,OAAAiH,KAAA1B,KAKAtM,KAAAiO,KAAA,WACA,IAAAF,EAAA9B,EAAAjM,MACA,GAAA+N,EACA,OAAAA,EAGA,GAAA/N,KAAA0N,UACA,OAAAhB,EAAA1M,KAAA0N,WACa,GAAA1N,KAAA8N,iBACb,OAAAzH,EAAA8D,QAAAyC,EAAA5M,KAAA8N,mBACa,GAAA9N,KAAA4N,cACb,UAAAtI,MAAA,wCAEA,OAAAe,EAAA8D,QAAAnK,KAAAyN,YAIA9G,EAAAO,WACAlH,KAAAkH,SAAA,WACA,OAAAlH,KAAAiO,OAAAD,KAAAE,KAIAlO,KAAAmO,KAAA,WACA,OAAAnO,KAAAiO,OAAAD,KAAAI,KAAAC,QAGArO,KAMA,SAAAsO,EAAAtD,GACA,IAAAuD,EAAAvD,EAAAwD,cACA,OAAAzF,EAAAnB,QAAA2G,IAAA,EAAAA,EAAAvD,EAGA,SAAAhC,EAAAiB,EAAA7D,GACAA,KAAA,GACA,IAAA8C,EAAA9C,EAAA8C,KAEA,GAAAe,aAAAjB,EAAA,CACA,GAAAiB,EAAAiC,SACA,UAAArB,UAAA,gBAEA7K,KAAAyJ,IAAAQ,EAAAR,IACAzJ,KAAAiL,YAAAhB,EAAAgB,YACA7E,EAAAoD,UACAxJ,KAAAwJ,QAAA,IAAA1B,EAAAmC,EAAAT,UAEAxJ,KAAAgL,OAAAf,EAAAe,OACAhL,KAAAyO,KAAAxE,EAAAwE,KACAvF,GAAA,MAAAe,EAAAd,YACAD,EAAAe,EAAAd,UACAc,EAAAiC,UAAA,QAGAlM,KAAAyJ,IAAA8B,OAAAtB,GAWA,GARAjK,KAAAiL,YAAA7E,EAAA6E,aAAAjL,KAAAiL,aAAA,QACA7E,EAAAoD,SAAAxJ,KAAAwJ,UACAxJ,KAAAwJ,QAAA,IAAA1B,EAAA1B,EAAAoD,UAEAxJ,KAAAgL,OAAAsD,EAAAlI,EAAA4E,QAAAhL,KAAAgL,QAAA,OACAhL,KAAAyO,KAAArI,EAAAqI,MAAAzO,KAAAyO,MAAA,KACAzO,KAAA0O,SAAA,MAEA,QAAA1O,KAAAgL,QAAA,SAAAhL,KAAAgL,SAAA9B,EACA,UAAA2B,UAAA,6CAEA7K,KAAAwN,UAAAtE,GAOA,SAAAgF,EAAAhF,GACA,IAAAyF,EAAA,IAAAhB,SASA,OARAzE,EAAA0F,OAAAC,MAAA,KAAAvG,QAAA,SAAAwG,GACA,GAAAA,EAAA,CACA,IAAAD,EAAAC,EAAAD,MAAA,KACApO,EAAAoO,EAAAlD,QAAAoD,QAAA,WACAvP,EAAAqP,EAAA1B,KAAA,KAAA4B,QAAA,WACAJ,EAAA5G,OAAAiH,mBAAAvO,GAAAuO,mBAAAxP,OAGAmP,EAGA,SAAAnE,EAAAyE,GACA,IAAAzF,EAAA,IAAA1B,EAGAoH,EAAAD,EAAAF,QAAA,oBASA,OARAG,EAAAL,MAAA,SAAAvG,QAAA,SAAA6G,GACA,IAAAC,EAAAD,EAAAN,MAAA,KACAQ,EAAAD,EAAAzD,QAAAiD,OACA,GAAAS,EAAA,CACA,IAAA7P,EAAA4P,EAAAjC,KAAA,KAAAyB,OACApF,EAAAzB,OAAAsH,EAAA7P,MAGAgK,EAKA,SAAAH,EAAAiG,EAAAlJ,GACAA,IACAA,EAAA,IAGApG,KAAA4J,KAAA,UACA5J,KAAAsJ,YAAA7C,IAAAL,EAAAkD,OAAA,IAAAlD,EAAAkD,OACAtJ,KAAAuP,GAAAvP,KAAAsJ,QAAA,KAAAtJ,KAAAsJ,OAAA,IACAtJ,KAAAuJ,WAAA,eAAAnD,IAAAmD,WAAA,KACAvJ,KAAAwJ,QAAA,IAAA1B,EAAA1B,EAAAoD,SACAxJ,KAAAyJ,IAAArD,EAAAqD,KAAA,GACAzJ,KAAAwN,UAAA8B,IAnYA,CAidO,qBAAApJ,IAAAlG,MAGP,CACAwG,MAAAN,EAAAM,MACAsB,QAAA5B,EAAA4B,QACAkB,QAAA9C,EAAA8C,QACAK,SAAAnD,EAAAmD,UAheA,GAseIpD,EAAA,WACJ,OAAAE,GACK5E,KAAAhC,EAAAG,EAAAH,EAAAiQ,QAAA/I,IAAAR,IAAAuJ,EAAAjQ,QAAA0G,IAhfL,CAsfC,qBAAAC,UAAA,qBAAAF,IAAAhG,gECrfDX,OAAAC,eAAAC,EAAA,cAA8CC,OAAA,IAC9C,IAAAC,EAAcC,EAAQ,QACtB+P,EAAgB/P,EAAQ,QACxBmF,EAAqBnF,EAAQ,QAC7BgQ,EAAkBhQ,EAAQ,QAC1BiQ,EAA8BjQ,EAAQ,QAYtCkQ,EAAA,SAAAzO,GAEA,SAAAyO,IACA,cAAAzO,KAAA4B,MAAA/C,KAAAgD,YAAAhD,KA0KA,OA5KAP,EAAA+B,UAAAoO,EAAAzO,GAYAyO,EAAA1P,UAAA2P,uBAAA,SAAAnM,EAAAQ,GAEA,YADA,IAAAA,IAAgCA,EAAA,IAChCzE,EAAAkC,UAAA3B,UAAA,oBACA,OAAAP,EAAAmC,YAAA5B,KAAA,SAAA6B,GACA,SAAA7B,KAAA8P,UAAArQ,EAAAsQ,SAAA,GAAwE7L,EAAA,CAAW8L,WAAA,iBAAAC,IAAAvM,WAYnFkM,EAAA1P,UAAAgQ,gCAAA,SAAAxM,EAAAQ,GAEA,YADA,IAAAA,IAAgCA,EAAA,IAChClE,KAAAmQ,mBAAA1Q,EAAAsQ,SAAA,GAA0D7L,EAAA,CAAW8L,WAAA,iBAAAC,IAAAvM,MAUrEkM,EAAA1P,UAAAkQ,gBAAA,SAAAC,EAAAnM,GAEA,YADA,IAAAA,IAAgCA,EAAA,IAChCzE,EAAAkC,UAAA3B,UAAA,oBACA,OAAAP,EAAAmC,YAAA5B,KAAA,SAAA6B,GACA,SAAA7B,KAAA8P,UAAArQ,EAAAsQ,SAAA,GAAwE7L,EAAA,CAAW8L,WAAA,UAAAC,IAAAI,WAYnFT,EAAA1P,UAAAoQ,yBAAA,SAAAD,EAAAnM,GAEA,YADA,IAAAA,IAAgCA,EAAA,IAChClE,KAAAmQ,mBAAA1Q,EAAAsQ,SAAA,GAA0D7L,EAAA,CAAW8L,WAAA,UAAAC,IAAAI,MAOrET,EAAA1P,UAAAqQ,cAAA,SAAAN,GACA,OAAAxQ,EAAAkC,UAAA3B,UAAA,oBACA,IAAAqM,EACA,OAAA5M,EAAAmC,YAAA5B,KAAA,SAAA6B,GACA,OAAAA,EAAA8D,OACA,gBAAA3F,KAAA8P,UAAA,CACAE,WAAA,KACAC,SAEA,OAEA,OADA5D,EAAAxK,EAAAgE,OACA,GAAAwG,EAAAjL,YAUAwO,EAAA1P,UAAAsQ,YAAA,SAAAzP,GACA,OAAAtB,EAAAkC,UAAA3B,UAAA,oBACA,IAAAyQ,EACA,OAAAhR,EAAAmC,YAAA5B,KAAA,SAAA6B,GACA,OAAAA,EAAA8D,OACA,gBAAA3F,KAAAuQ,cAAA,CAAAxP,KACA,OAEA,OADA0P,EAAA5O,EAAAgE,OACA,GAAA4K,EAAApL,OAAAoL,EAAA,eAYAb,EAAA1P,UAAAwQ,WAAA,SAAAC,GACA,OAAAlR,EAAAkC,UAAA3B,UAAA,oBACA,IAAA4Q,EAAA/O,EAAAgP,EAAAxE,EACA,OAAA5M,EAAAmC,YAAA5B,KAAA,SAAA0F,GACA,OAAAA,EAAAC,OACA,OAEA,OADAiL,EAAAD,EAAAC,UAAA/O,EAAA8O,EAAAE,wBAAA,IAAAhP,KACA,GAAA7B,KAAAC,QAAA6Q,QAAA,CACAlH,KAAA/E,EAAAkM,kBAAAC,MACAvH,IAAA,QACAuB,OAAA,OACAiG,MAAA,aACAC,MAAA,CACAhO,eAAA0N,EACAO,UAAAN,EAAAhJ,eAGA,OAEA,OADAwE,EAAA3G,EAAAG,OACA,GAAAwG,EAAAjL,KAAA,GAAAL,UAKA6O,EAAA1P,UAAA4P,UAAA,SAAAa,GACA,OAAAlR,EAAAkC,UAAA3B,UAAA,oBACA,IAAAgQ,EAAAC,EAAAmB,EAAAC,EAAAxP,EAAAyP,EAAAjF,EACA3G,EACApE,EAAAtB,KACA,OAAAP,EAAAmC,YAAA5B,KAAA,SAAAuR,GACA,OAAAA,EAAA5L,OACA,OAEA,OADAqK,EAAAW,EAAAX,WAAAC,EAAAU,EAAAV,IAAAmB,EAAAT,EAAAS,UAAAC,EAAAV,EAAAU,QAAAxP,EAAA8O,EAAAW,aAAA,IAAAzP,EAAA,GAAAA,EACA,GAAA7B,KAAAC,QAAA6Q,QAAA,CACAlH,KAAA/E,EAAAkM,kBAAAC,MACAvH,IAAA,QACAyH,OAAAxL,EAAA,GACAA,EAAAsK,GAAAC,EACAvK,EAAA8L,WAAAJ,EACA1L,EAAA+L,SAAAJ,EACA3L,EAAAgM,MAAAJ,EAAAzJ,WACAnC,MAEA,OAEA,OADA2G,EAAAkF,EAAA1L,OACA,IACAzE,KAAAiL,EAAAjL,KAAA0C,IAAA,SAAA1C,GAAuE,WAAAsO,EAAAhP,QAAAU,EAAAE,EAAArB,WACvE0R,OAAAtF,EAAAuF,YAAAvF,EAAAuF,WAAAD,eAMA/B,EAAA1P,UAAAiQ,mBAAA,SAAAQ,GACA,IAAA9O,EACAP,EAAAtB,KACAgQ,EAAAW,EAAAX,WAAAC,EAAAU,EAAAV,IAAAmB,EAAAT,EAAAS,UAAAC,EAAAV,EAAAU,QACA,WAAA1B,EAAAjP,QAAA,CACA+I,IAAA,QACAyH,OAAArP,EAAA,GACAA,EAAAmO,GAAAC,EACApO,EAAA2P,WAAAJ,EACAvP,EAAA4P,SAAAJ,EACAxP,IACS7B,KAAAC,QAAA,SAAAmB,GAAiC,WAAAsO,EAAAhP,QAAAU,EAAAE,EAAArB,YAE1C2P,EA7KA,CA8KCH,EAAA/O,SACDnB,EAAAmB,QAAAkP,qCChMAvQ,OAAAC,eAAAC,EAAA,cAA8CC,OAAA,IAC9C,IAAAC,EAAcC,EAAQ,QACtB+P,EAAgB/P,EAAQ,QACxBmF,EAAqBnF,EAAQ,QAC7BmS,EAAmBnS,EAAQ,QAC3BoS,EAAkBpS,EAAQ,QAC1BiQ,EAA8BjQ,EAAQ,QAYtCqS,EAAA,SAAA5Q,GAEA,SAAA4Q,IACA,cAAA5Q,KAAA4B,MAAA/C,KAAAgD,YAAAhD,KAmIA,OArIAP,EAAA+B,UAAAuQ,EAAA5Q,GASA4Q,EAAA7R,UAAA8R,eAAA,SAAA/B,GACA,OAAAxQ,EAAAkC,UAAA3B,UAAA,oBACA,IAAAqM,EACA,OAAA5M,EAAAmC,YAAA5B,KAAA,SAAA6B,GACA,OAAAA,EAAA8D,OACA,gBAAA3F,KAAAiS,WAAA,KAAAhC,IACA,OAEA,OADA5D,EAAAxK,EAAAgE,OACA,GAAAwG,EAAAjL,YAUA2Q,EAAA7R,UAAA8B,aAAA,SAAAjB,GACA,OAAAtB,EAAAkC,UAAA3B,UAAA,oBACA,IAAA+B,EACA,OAAAtC,EAAAmC,YAAA5B,KAAA,SAAA6B,GACA,OAAAA,EAAA8D,OACA,gBAAA3F,KAAAgS,eAAAjR,IACA,OAEA,OADAgB,EAAAF,EAAAgE,OACA,GAAA9D,EAAAsD,OAAAtD,EAAA,eAWAgQ,EAAA7R,UAAAgS,gBAAA,SAAApR,EAAAoD,GAEA,YADA,IAAAA,IAAgCA,EAAA,IAChCzE,EAAAkC,UAAA3B,UAAA,oBACA,IAAA0D,EACA,OAAAjE,EAAAmC,YAAA5B,KAAA,SAAA6B,GAEA,OADA6B,EAAAoO,EAAAjR,cAAAC,GACA,GAAAd,KAAAiS,WAAA,UAAAvO,EAAAQ,SAUA6N,EAAA7R,UAAAiS,yBAAA,SAAArR,EAAAoD,QACA,IAAAA,IAAgCA,EAAA,IAChC,IAAAR,EAAAoO,EAAAjR,cAAAC,GACA,OAAAd,KAAAoS,oBAAA,UAAA1O,EAAAQ,IAQA6N,EAAA7R,UAAAmS,gBAAA,SAAAhC,EAAAnM,GAEA,YADA,IAAAA,IAAgCA,EAAA,IAChCzE,EAAAkC,UAAA3B,UAAA,oBACA,OAAAP,EAAAmC,YAAA5B,KAAA,SAAA6B,GACA,SAAA7B,KAAAiS,WAAA,UAAA5B,EAAAnM,SAUA6N,EAAA7R,UAAAoS,yBAAA,SAAAjC,EAAAnM,GAEA,YADA,IAAAA,IAAgCA,EAAA,IAChClE,KAAAoS,oBAAA,UAAA/B,EAAAnM,IAEA6N,EAAA7R,UAAA+R,WAAA,SAAAjC,EAAAuC,EAAArO,GAEA,YADA,IAAAA,IAAgCA,EAAA,IAChCzE,EAAAkC,UAAA3B,UAAA,oBACA,IAAAqM,EACA/K,EAAAtB,KACA,OAAAP,EAAAmC,YAAA5B,KAAA,SAAA6B,GACA,OAAAA,EAAA8D,OACA,gBAAA3F,KAAAC,QAAA6Q,QAAA,CACArH,IAAA,SACAG,KAAA/E,EAAAkM,kBAAAC,MACAE,MAAAa,EAAAS,iBAAAxC,EAAAuC,EAAArO,MAEA,OAEA,OADAmI,EAAAxK,EAAAgE,OACA,IACAzE,KAAAiL,EAAAjL,KAAA0C,IAAA,SAAA1C,GAAuE,WAAAyQ,EAAAnR,QAAAU,EAAAE,EAAArB,WACvE0R,OAAAtF,EAAAuF,YAAAvF,EAAAuF,WAAAD,eAMAI,EAAA7R,UAAAkS,oBAAA,SAAApC,EAAAuC,EAAArO,GACA,IAAA5C,EAAAtB,KAEA,YADA,IAAAkE,IAAgCA,EAAA,IAChC,IAAAyL,EAAAjP,QAAA,CACA+I,IAAA,SACAyH,MAAAa,EAAAS,iBAAAxC,EAAAuC,EAAArO,IACSlE,KAAAC,QAAA,SAAAmB,GAAiC,WAAAyQ,EAAAnR,QAAAU,EAAAE,EAAArB,YAE1C8R,EAAAS,iBAAA,SAAAxC,EAAAuC,EAAArO,GACA,IAAArC,OACA,IAAAqC,IAAgCA,EAAA,IAChC,IAAAuO,EAAAvO,EAAAuO,SAAAC,EAAAxO,EAAAwO,OAAAC,EAAAzO,EAAAyO,QAAA/I,EAAA1F,EAAA0F,KACA,OAAA/H,EAAA,GACAA,EAAAmO,GAAAuC,EACA1Q,EAAA4Q,WACA5Q,EAAA6Q,SACA7Q,EAAA+Q,KAAAD,EACA9Q,EAAA+H,OACA/H,GAEAkQ,EAtIA,CAuICtC,EAAA/O,SACDnB,EAAAmB,QAAAqR,uCC1JA1S,OAAAC,eAAAC,EAAA,cAA8CC,OAAA,IAC9C,IAAAC,EAAcC,EAAQ,QACtBkE,EAAclE,EAAQ,QACtB+P,EAAgB/P,EAAQ,QACxBmT,EAAgBnT,EAAQ,QACxBoT,EAAepT,EAAQ,QAYvBqT,EAAA,SAAA5R,GAEA,SAAA4R,IACA,cAAA5R,KAAA4B,MAAA/C,KAAAgD,YAAAhD,KAqEA,OAvEAP,EAAA+B,UAAAuR,EAAA5R,GAWA4R,EAAA7S,UAAA8S,eAAA,SAAAC,EAAAC,EAAA5B,GAEA,YADA,IAAAA,IAA+BA,EAAA,IAC/B7R,EAAAkC,UAAA3B,UAAA,oBACA,IAAAkR,EAAA9P,EACAE,EAAAtB,KACA,OAAAP,EAAAmC,YAAA5B,KAAA,SAAA6B,GACA,OAAAA,EAAA8D,OACA,OAKA,OAJAuL,EAAA,CAAiCA,MAAA+B,EAAA3B,QAAAzJ,YACjCqL,IACAhC,EAAAiC,SAAAD,EAAA,GAAA5B,GAAAzJ,YAEA,GAAA7H,KAAAC,QAAA6Q,QAAA,CAAmErH,IAAA,kBAAAyH,WACnE,OAEA,OADA9P,EAAAS,EAAAgE,OACA,GAAAzE,EAAAgS,SAAAtP,IAAA,SAAAuP,GAAwF,WAAAR,EAAAnS,QAAA2S,EAAA/R,EAAArB,kBAaxF8S,EAAA7S,UAAAoT,cAAA,SAAAL,EAAAC,EAAA5B,EAAAiC,GAEA,YADA,IAAAjC,IAA+BA,EAAA,IAC/B7R,EAAAkC,UAAA3B,UAAA,oBACA,IAAAkR,EAAA9P,EACAE,EAAAtB,KACA,OAAAP,EAAAmC,YAAA5B,KAAA,SAAA6B,GACA,OAAAA,EAAA8D,OACA,OAQA,OAPAuL,EAAA,CAAiCA,MAAA+B,EAAA3B,QAAAzJ,YACjCqL,IACAhC,EAAAiC,SAAAD,EAAA,GAAA5B,GAAAzJ,iBAEApB,IAAA8M,IACArC,EAAAqC,MAAA1L,YAEA,GAAA7H,KAAAC,QAAA6Q,QAAA,CAAmErH,IAAA,iBAAAyH,WACnE,OAEA,OADA9P,EAAAS,EAAAgE,OACA,GAAAzE,EAAAoS,QAAA1P,IAAA,SAAA2P,GAAsF,WAAAX,EAAApS,QAAA+S,EAAAnS,EAAArB,kBAKtFR,EAAAkB,WAAA,CACAiD,EAAAW,OAAA,MACAwO,EAAA7S,UAAA,uBACAT,EAAAkB,WAAA,CACAiD,EAAAW,OAAA,MACAwO,EAAA7S,UAAA,sBACA6S,EAAAtT,EAAAkB,WAAA,CACAiD,EAAAY,WACAuO,GACAA,EAxEA,CAyECtD,EAAA/O,SACDnB,EAAAmB,QAAAqS,uCC3FA1T,OAAAC,eAAAC,EAAA,cAA8CC,OAAA,IAC9C,IAAAC,EAAcC,EAAQ,QACtBE,EAAsBF,EAAQ,QAI9BgU,EAAA,WAEA,SAAAA,EAAA5T,EAAAC,GACAC,KAAAF,QACAE,KAAAC,QAAAF,EAmCA,OAjCAV,OAAAC,eAAAoU,EAAAxT,UAAA,MAIAC,IAAA,WACA,OAAAH,KAAAF,MAAAiB,IAEAT,YAAA,EACAC,cAAA,IAEAlB,OAAAC,eAAAoU,EAAAxT,UAAA,QAIAC,IAAA,WACA,OAAAH,KAAAF,MAAAW,MAEAH,YAAA,EACAC,cAAA,IAEAlB,OAAAC,eAAAoU,EAAAxT,UAAA,aAIAC,IAAA,WACA,OAAAH,KAAAF,MAAA6T,aAEArT,YAAA,EACAC,cAAA,IAEAd,EAAAkB,WAAA,CACAf,EAAAgB,eACA8S,EAAAxT,UAAA,kBACAwT,EAvCA,GAyCAnU,EAAAmB,QAAAgT,qCC/CArU,OAAAC,eAAAC,EAAA,cAA8CC,OAAA,IAC9C,IAoBAuR,EApBAtR,EAAcC,EAAQ,QACtBkU,EAASlU,EAAQ,QACjBkE,EAAclE,EAAQ,QACtBmU,EAAkBnU,EAAQ,QAC1BoU,EAAsBpU,EAAQ,QAC9BqU,EAAoBrU,EAAQ,QAC5BsU,EAA2BtU,EAAQ,QACnCuU,EAAgCvU,EAAQ,QACxCwU,EAAsCxU,EAAQ,QAC9CyU,EAAoBzU,EAAQ,QAC5B0U,EAA4B1U,EAAQ,QACpC2U,EAAuB3U,EAAQ,QAC/B4U,EAAsB5U,EAAQ,QAC9B6U,EAAkB7U,EAAQ,QAC1B8U,EAAuB9U,EAAQ,QAC/ByG,EAAoBzG,EAAQ,QAC5BmC,EAAAsE,IAAAK,EAAA3E,EAAA2E,MAAAsB,EAAAjG,EAAAiG,SAKA,SAAAiJ,GAIAA,IAAA,sBAIAA,IAAA,oBAIAA,IAAA,uBAZA,CAaCA,EAAAxR,EAAAwR,oBAAAxR,EAAAwR,kBAAA,KAID,IAAA0D,EAAA,WAMA,SAAAA,EAAAC,GACA,IAAAC,EAAAD,EAAAC,aAAAC,EAAAnV,EAAAoV,OAAAH,EAAA,kBACA,IAAAC,EACA,UAAAR,EAAAzT,QAAA,0BAEAV,KAAA8U,QAAArV,EAAAsQ,SAAA,CAAyCgF,SAAA,EAAAC,WAAA,CACzCC,kBAAAnB,EAAAoB,oBAAAC,KACAC,aAAAtB,EAAAuB,eAAAC,SACAC,aAAAzB,EAAA0B,eAAAC,IACad,gBAA8BC,GAC3C5U,KAAA8U,QAAAC,SAEAJ,EAAAxP,eAAAnF,KAAA8U,QAAAY,eAuWA,IAAA7Q,EAgBA,OApXAA,EAAA4P,EAkBAA,EAAAvJ,gBAAA,SAAAnG,EAAA4Q,EAAAvQ,EAAAwQ,EAAAlB,GAEA,YADA,IAAAA,IAAgCA,EAAA,IAChCjV,EAAAkC,UAAA3B,UAAA,oBACA,IAAA6V,EAAAC,EAAAnB,EACA,OAAAlV,EAAAmC,YAAA5B,KAAA,SAAA6B,GACA,OAAAA,EAAA8D,OACA,OACA,OAAAP,IAAAuQ,EAAA,MACA,GAAA3V,KAAA+V,aAAAhR,EAAA4Q,IACA,OAEA,OADAE,EAAAhU,EAAAgE,OACAgQ,EAAAG,MAAA,MACAJ,EACA,GAAA5V,KAAAiW,mBAAAlR,EAAA6Q,EAAA5Q,aAAA4Q,EAAAM,eADA,MAEA,OAGA,OAFAJ,EAAAjU,EAAAgE,OACA8P,EAAAG,EAAAH,YACA,GAAA3V,KAAA+V,aAAAhR,EAAA4Q,IACA,OACAE,EAAAhU,EAAAgE,OACAhE,EAAA8D,MAAA,EACA,OACA,IAAAkQ,EAAAG,MACA,UAAA7B,EAAAzT,QAAA,4DAEAmB,EAAA8D,MAAA,EACA,OACAP,EAAAyQ,EAAAzQ,OACAvD,EAAA8D,MAAA,EACA,OAIA,OAHAgP,EAAAiB,EACA,IAAA3B,EAAAvT,QAAA,IAAAsT,EAAAtT,QAAAqE,EAAA4Q,EAAAvQ,GAAAwQ,GACA,IAAA5B,EAAAtT,QAAAqE,EAAA4Q,EAAAvQ,GACA,OAAApF,KAAAP,EAAAsQ,SAAA,GAA0E2E,EAAA,CAAWC,yBAcrFF,EAAA0B,sBAAA,SAAApR,EAAAC,EAAA0P,QACA,IAAAA,IAAgCA,EAAA,IAChC,IAAAC,EAAA3P,EACA,IAAAkP,EAAAxT,QAAAqE,EAAAC,GACA,IAAAgP,EAAAtT,QAAAqE,GACA,WAAA/E,KAAAP,EAAAsQ,SAAA,GAA2C2E,EAAA,CAAWC,mBAYtDF,EAAA3D,QAAA,SAAA1K,EAAArB,EAAA4Q,GACA,OAAAlW,EAAAkC,UAAA3B,UAAA,oBACA,IAAAyJ,EAAAkH,EAAAnH,EAAAN,EAAAkN,EAAAzM,EAAA9H,EAAA6D,EAAAuI,EACA,OAAAxO,EAAAmC,YAAA5B,KAAA,SAAAuR,GACA,OAAAA,EAAA5L,OACA,OAyBA,OAxBA8D,EAAAzJ,KAAAqW,QAAAjQ,EAAAqD,IAAArD,EAAAwD,MACA+G,EAAAiD,EAAA0C,UAAAlQ,EAAA8K,MAAA,CAA8DqF,YAAA,WAC9D/M,EAAA,IAAA1B,EAAA,CACA0O,OAAA,8BAAApQ,EAAAqQ,SAAA,aAEArQ,EAAA8C,MACAA,EAAA0K,EAAA0C,UAAAlQ,EAAA8C,MACAM,EAAAzB,OAAA,qDAEA3B,EAAAsQ,WACAxN,EAAAkF,KAAAkI,UAAAlQ,EAAAsQ,UACAlN,EAAAzB,OAAA,oCAEAhD,GACAyE,EAAAzB,OAAA,YAAAhD,GAEA4Q,GACAnM,EAAAzB,OAAA,iBAAA3B,EAAAwD,OAAAmH,EAAAC,MAAA,sBAAA2E,GAEAS,EAAA,CACApL,OAAA5E,EAAA4E,QAAA,MACAxB,UACAN,QAEA,GAAA1C,EAAAmK,EAAAlH,EAAA,IAAAkH,EAAAlH,EAAA2M,IACA,OAEA,OADAzM,EAAA4H,EAAA1L,OACA8D,EAAA4F,GAAA,OACA1N,EAAAuS,EAAA1T,QAAAiW,KACAjR,EAAA,QAAAiE,EAAAL,OAAAK,EAAAJ,YACA,GAAAI,EAAAwE,SACA,iBAAAtM,EAAAkB,MAAAqR,EAAA1T,QAAAgF,EAAAkR,OAAA,CAAArF,EAAA1L,WACA,OACA,aAAA8D,EAAAL,OAEA,QAAA7C,GAEA,GAAAkD,EAAAsE,QACA,OAEA,OADAA,EAAAsD,EAAA1L,OACAoI,EAIA,GAAAG,KAAAC,MAAAJ,IAFA,QAAAxH,SAeAgO,EAAAtP,eAAA,SAAAJ,EAAAC,EAAA6R,EAAAC,GACA,OAAArX,EAAAkC,UAAA3B,UAAA,oBACA,IAAA6B,EACA,OAAApC,EAAAmC,YAAA5B,KAAA,SAAA0F,GACA,OAAAA,EAAAC,OACA,OAEA,OADA9D,EAAAkS,EAAArT,QAAAiW,KACA,GAAA3W,KAAA8Q,QAAA,CACArH,IAAA,eACAuB,OAAA,OACAkG,MAAA,CACA6F,WAAA,qBACAC,UAAAjS,EACAkS,cAAAjS,EACA6R,OACAK,aAAAJ,MAGA,oBAAAjV,EAAAkB,MAAAgR,EAAArT,QAAA,QAAAgF,EAAAG,iBAYA4O,EAAA7O,kBAAA,SAAAb,EAAAC,GACA,OAAAvF,EAAAkC,UAAA3B,UAAA,oBACA,IAAA6B,EACA,OAAApC,EAAAmC,YAAA5B,KAAA,SAAA0F,GACA,OAAAA,EAAAC,OACA,OAEA,OADA9D,EAAAkS,EAAArT,QAAAiW,KACA,GAAA3W,KAAA8Q,QAAA,CACArH,IAAA,eACAuB,OAAA,OACAkG,MAAA,CACA6F,WAAA,qBACAC,UAAAjS,EACAkS,cAAAjS,MAGA,oBAAAnD,EAAAkB,MAAAgR,EAAArT,QAAA,QAAAgF,EAAAG,iBAYA4O,EAAAwB,mBAAA,SAAAlR,EAAAC,EAAAkR,GACA,OAAAzW,EAAAkC,UAAA3B,UAAA,oBACA,IAAA6B,EACA,OAAApC,EAAAmC,YAAA5B,KAAA,SAAA0F,GACA,OAAAA,EAAAC,OACA,OAEA,OADA9D,EAAAkS,EAAArT,QAAAiW,KACA,GAAA3W,KAAA8Q,QAAA,CACArH,IAAA,eACAuB,OAAA,OACAkG,MAAA,CACA6F,WAAA,gBACAC,UAAAjS,EACAkS,cAAAjS,EACAmS,cAAAjB,MAGA,oBAAArU,EAAAkB,MAAAgR,EAAArT,QAAA,QAAAgF,EAAAG,iBAaA4O,EAAAsB,aAAA,SAAAhR,EAAA4Q,GACA,OAAAlW,EAAAkC,UAAA3B,UAAA,oBACA,IAAAoB,EACA,OAAA3B,EAAAmC,YAAA5B,KAAA,SAAA6B,GACA,OAAAA,EAAA8D,OACA,gBAAA3F,KAAA8Q,QAAA,CAA+DrH,IAAA,KAAW1E,EAAA4Q,IAC1E,OAEA,OADAvU,EAAAS,EAAAgE,OACA,OAAAgO,EAAAnT,QAAAU,EAAA2E,cAQA0O,EAAAvU,UAAA6V,aAAA,WACA,OAAAtW,EAAAkC,UAAA3B,UAAA,oBACA,IAAAoB,EACA,OAAA3B,EAAAmC,YAAA5B,KAAA,SAAA6B,GACA,OAAAA,EAAA8D,OACA,gBAAA3F,KAAA8Q,QAAA,CAA+DrH,IAAA,OAC/D,OAEA,OADArI,EAAAS,EAAAgE,OACA,OAAAgO,EAAAnT,QAAAU,EAAA2E,cAUA0O,EAAAvU,UAAAiF,eAAA,SAAAC,GACA,OAAA3F,EAAAkC,UAAA3B,UAAA,oBACA,OAAAP,EAAAmC,YAAA5B,KAAA,SAAA6B,GACA,SAAA7B,KAAA8U,QAAAH,aAAAxP,eAAAC,SAUAqP,EAAAvU,UAAA4Q,QAAA,SAAA1K,GACA,OAAA3G,EAAAkC,UAAA3B,UAAA,oBACA,IAAA2U,EAAAgB,EACA,OAAAlW,EAAAmC,YAAA5B,KAAA,SAAA6B,GACA,OAAAA,EAAA8D,OACA,OAEA,OADAgP,EAAA3U,KAAA8U,QAAAH,aACA,GAAAA,EAAAxP,eAAAiB,EAAA6K,MAAA,CAAA7K,EAAA6K,YAAAxK,IACA,OAEA,OADAkP,EAAA9T,EAAAgE,OACA8P,EAGAA,EAAAnQ,WAAAmP,EAAAlP,QACA,GAAAkP,EAAAlP,WADA,MAFA,GAAAZ,EAAAiM,QAAA1K,EAAAuO,EAAA5P,WAIA,OACA4Q,EAAA9T,EAAAgE,OACAhE,EAAA8D,MAAA,EACA,gBAAAd,EAAAiM,QAAA1K,EAAAuO,EAAA5P,SAAA4Q,sBAKAtW,OAAAC,eAAAmV,EAAAvU,UAAA,UAIAC,IAAA,WACA,WAAAkU,EAAA3T,QAAAV,OAEAM,YAAA,EACAC,cAAA,IAEAlB,OAAAC,eAAAmV,EAAAvU,UAAA,SAIAC,IAAA,WACA,WAAAmU,EAAA5T,QAAAV,OAEAM,YAAA,EACAC,cAAA,IAEAlB,OAAAC,eAAAmV,EAAAvU,UAAA,UAIAC,IAAA,WACA,WAAAoU,EAAA7T,QAAAV,OAEAM,YAAA,EACAC,cAAA,IAEAlB,OAAAC,eAAAmV,EAAAvU,UAAA,eAIAC,IAAA,WACA,WAAAqU,EAAA9T,QAAAV,OAEAM,YAAA,EACAC,cAAA,IAEAkU,EAAA4B,QAAA,SAAA5M,EAAAG,GAEA,OADAA,OAAAnD,IAAAmD,EAAAmH,EAAAqG,OAAAxN,EACAA,GACA,KAAAmH,EAAAqG,OACA,KAAArG,EAAAC,MACA,IAAAqG,EAAAzN,IAAAmH,EAAAqG,OAAA,iBACA,+BAAAC,EAAA,IAAA5N,EAAAsF,QAAA,UACA,KAAAgC,EAAAuG,OACA,OAAA7N,EACA,QACA,OAAAA,IAIAhK,EAAAkB,WAAA,CACAiD,EAAAU,gBACAmQ,EAAAvU,UAAA,eACAT,EAAAkB,WAAA,CACAiD,EAAAU,gBACAmQ,EAAAvU,UAAA,cACAT,EAAAkB,WAAA,CACAiD,EAAAU,gBACAmQ,EAAAvU,UAAA,eACAT,EAAAkB,WAAA,CACAiD,EAAAU,gBACAmQ,EAAAvU,UAAA,oBACAuU,EAAA5P,EAAApF,EAAAkB,WAAA,CACAiD,EAAAY,WACAiQ,GACAA,EAzYA,GA2YAlV,EAAAmB,QAAA+T,uCClbApV,OAAAC,eAAAC,EAAA,cAA8CC,OAAA,IAC9C,IAAAC,EAAcC,EAAQ,QACtBE,EAAsBF,EAAQ,QAI9B6X,EAAA,WAEA,SAAAA,EAAAzX,EAAAC,GACAC,KAAAF,QACAE,KAAAC,QAAAF,EAuDA,OArDAV,OAAAC,eAAAiY,EAAArX,UAAA,eAIAC,IAAA,WACA,OAAAH,KAAAF,MAAA0X,cAEAlX,YAAA,EACAC,cAAA,IAEAlB,OAAAC,eAAAiY,EAAArX,UAAA,YAMAC,IAAA,WACA,OAAAH,KAAAF,MAAA2X,WAEAnX,YAAA,EACAC,cAAA,IAEAlB,OAAAC,eAAAiY,EAAArX,UAAA,eAIAC,IAAA,WACA,OAAAH,KAAAF,MAAA6E,aAEArE,YAAA,EACAC,cAAA,IAOAgX,EAAArX,UAAAwX,YAAA,SAAAC,GACA,OAAA3X,KAAAF,MAAA,aAAA6X,EAAA,MAEAtY,OAAAC,eAAAiY,EAAArX,UAAA,SAIAC,IAAA,WACA,OAAAH,KAAAF,MAAA8X,OAEAtX,YAAA,EACAC,cAAA,IAEAd,EAAAkB,WAAA,CACAf,EAAAgB,eACA2W,EAAArX,UAAA,kBACAqX,EA3DA,GA6DAhY,EAAAmB,QAAA6W,uCCnEAlY,OAAAC,eAAAC,EAAA,cAA8CC,OAAA,IAC9C,IAAAC,EAAcC,EAAQ,QACtBoS,EAAkBpS,EAAQ,QAC1BkE,EAAclE,EAAQ,QACtBoU,EAAsBpU,EAAQ,QAC9B+P,EAAgB/P,EAAQ,QAYxBmY,EAAA,SAAA1W,GAEA,SAAA0W,IACA,cAAA1W,KAAA4B,MAAA/C,KAAAgD,YAAAhD,KAqCA,OAvCAP,EAAA+B,UAAAqW,EAAA1W,GAWA0W,EAAA3X,UAAA4X,cAAA,SAAAC,EAAAC,GAEA,YADA,IAAAA,IAA0CA,GAAA,GAC1CvY,EAAAkC,UAAA3B,UAAA,oBACA,IAAAkR,EAAA9P,EACA,OAAA3B,EAAAmC,YAAA5B,KAAA,SAAA6B,GACA,OAAAA,EAAA8D,OACA,OAQA,OAPAuL,EAAA,GACA6G,IACA7G,EAAA+G,WAAAnG,EAAAjR,cAAAkX,IAEAC,IACA9G,EAAAgH,kBAAA,QAEA,GAAAlY,KAAAC,QAAA6Q,QAAA,CAAmErH,IAAA,eAAAyH,WACnE,OAEA,OADA9P,EAAAS,EAAAgE,OACA,OAAAiO,EAAApT,QAAAU,EAAA+W,QAAAnY,KAAAC,gBAKAR,EAAAkB,WAAA,CACAiD,EAAAW,OAAA,OACAsT,EAAA3X,UAAA,sBACA2X,EAAApY,EAAAkB,WAAA,CACAiD,EAAAY,WACAqT,GACAA,EAxCA,CAyCCpI,EAAA/O,SACDnB,EAAAmB,QAAAmX,uCC3DAxY,OAAAC,eAAAC,EAAA,cAA8CC,OAAA,IAC9C,IAAAC,EAAcC,EAAQ,QACtBmT,EAAgBnT,EAAQ,QACxBE,EAAsBF,EAAQ,QAI9B0Y,EAAA,WAEA,SAAAA,EAAAtY,EAAAC,GACAC,KAAAF,QACAE,KAAAC,QAAAF,EAgGA,OA9FAV,OAAAC,eAAA8Y,EAAAlY,UAAA,MAIAC,IAAA,WACA,OAAAH,KAAAF,MAAAuY,KAEA/X,YAAA,EACAC,cAAA,IAEAlB,OAAAC,eAAA8Y,EAAAlY,UAAA,aAIAC,IAAA,WACA,WAAAuC,KAAA1C,KAAAF,MAAAwY,aAEAhY,YAAA,EACAC,cAAA,IAEAlB,OAAAC,eAAA8Y,EAAAlY,UAAA,WAIAC,IAAA,WACA,WAAAuC,KAAA1C,KAAAF,MAAAyY,WAEAjY,YAAA,EACAC,cAAA,IAEAlB,OAAAC,eAAA8Y,EAAAlY,UAAA,cAIAC,IAAA,WACA,OAAAH,KAAAF,MAAA0Y,cAEAlY,YAAA,EACAC,cAAA,IAEAlB,OAAAC,eAAA8Y,EAAAlY,UAAA,SAIAC,IAAA,WACA,OAAAH,KAAAF,MAAA8X,OAEAtX,YAAA,EACAC,cAAA,IAEAlB,OAAAC,eAAA8Y,EAAAlY,UAAA,eAIAC,IAAA,WACA,OAAAH,KAAAF,MAAA6E,aAEArE,YAAA,EACAC,cAAA,IAEAlB,OAAAC,eAAA8Y,EAAAlY,UAAA,YAIAC,IAAA,WACA,OAAAH,KAAAF,MAAA2S,UAEAnS,YAAA,EACAC,cAAA,IAEAlB,OAAAC,eAAA8Y,EAAAlY,UAAA,WAIAC,IAAA,WACA,WAAA0S,EAAAnS,QAAAV,KAAAF,MAAAiY,QAAA/X,KAAAC,UAEAK,YAAA,EACAC,cAAA,IAQA6X,EAAAlY,UAAAuY,mBAAA,SAAAC,EAAAC,GACA,OAAA3Y,KAAAF,MAAA8Y,gBACA7J,QAAA,UAA6B2J,EAAA7Q,YAC7BkH,QAAA,WAA8B4J,EAAA9Q,aAE9BpI,EAAAkB,WAAA,CACAf,EAAAgB,eACAwX,EAAAlY,UAAA,kBACAkY,EApGA,GAsGA7Y,EAAAmB,QAAA0X,uCC7GA/Y,OAAAC,eAAAC,EAAA,cAA8CC,OAAA,IAC9C,IAAAC,EAAcC,EAAQ,QACtBE,EAAsBF,EAAQ,QAC9BmZ,EAAmCnZ,EAAQ,SAK3C,SAAAoZ,GAIAA,EAAA,qBAIAA,EAAA,yBAIAA,EAAA,YAZA,CAaCvZ,EAAAuZ,uBAAAvZ,EAAAuZ,qBAAA,KAKD,SAAAC,GAIAA,EAAA,iBAIAA,EAAA,iBAIAA,EAAA,0BAIAA,EAAA,WAhBA,CAiBCxZ,EAAAwZ,gBAAAxZ,EAAAwZ,cAAA,KAID,IAAAC,EAAA,WAEA,SAAAA,EAAAlZ,EAAAC,GACAC,KAAAF,QACAE,KAAAC,QAAAF,EAkOA,OAhOAV,OAAAC,eAAA0Z,EAAA9Y,UAAA,YAEAC,IAAA,WACA,OAAAH,KAAAF,MAAAiB,IAEAT,YAAA,EACAC,cAAA,IAEAlB,OAAAC,eAAA0Z,EAAA9Y,UAAA,MAIAC,IAAA,WACA,OAAAH,KAAAF,MAAAiB,IAEAT,YAAA,EACAC,cAAA,IAEAlB,OAAAC,eAAA0Z,EAAA9Y,UAAA,QAIAC,IAAA,WACA,OAAAH,KAAAF,MAAAmZ,OAEA3Y,YAAA,EACAC,cAAA,IAEAlB,OAAAC,eAAA0Z,EAAA9Y,UAAA,eAIAC,IAAA,WACA,OAAAH,KAAAF,MAAAoZ,cAEA5Y,YAAA,EACAC,cAAA,IAEAlB,OAAAC,eAAA0Z,EAAA9Y,UAAA,eAIAC,IAAA,WACA,OAAAH,KAAAF,MAAA6E,aAEArE,YAAA,EACAC,cAAA,IAEAlB,OAAAC,eAAA0Z,EAAA9Y,UAAA,QAIAC,IAAA,WACA,OAAAH,KAAAF,MAAA8J,MAEAtJ,YAAA,EACAC,cAAA,IAEAlB,OAAAC,eAAA0Z,EAAA9Y,UAAA,mBAIAC,IAAA,WACA,OAAAH,KAAAF,MAAAqZ,kBAEA7Y,YAAA,EACAC,cAAA,IAEAlB,OAAAC,eAAA0Z,EAAA9Y,UAAA,qBAIAC,IAAA,WACA,OAAAH,KAAAF,MAAAsZ,mBAEA9Y,YAAA,EACAC,cAAA,IAEAlB,OAAAC,eAAA0Z,EAAA9Y,UAAA,yBAIAC,IAAA,WACA,OAAAH,KAAAF,MAAAuZ,mBAEA/Y,YAAA,EACAC,cAAA,IAEAlB,OAAAC,eAAA0Z,EAAA9Y,UAAA,SAIAC,IAAA,WACA,OAAAH,KAAAF,MAAAwZ,YAEAhZ,YAAA,EACAC,cAAA,IAKAyY,EAAA9Y,UAAAqZ,UAAA,WACA,OAAA9Z,EAAAkC,UAAA3B,UAAA,oBACA,OAAAP,EAAAmC,YAAA5B,KAAA,SAAA6B,GACA,SAAA7B,KAAAC,QAAA6B,MAAA0R,QAAAgG,kBAAAxZ,YAOAgZ,EAAA9Y,UAAAuZ,WAAA,WACA,OAAAzZ,KAAAC,QAAA6B,MAAAO,MAAAoX,WAAA,CAAoD3Y,KAAAd,QAOpDgZ,EAAA9Y,UAAAwZ,YAAA,SAAAC,GACA,OAAAla,EAAAkC,UAAA3B,UAAA,oBACA,IAAA2Q,EAAAtE,EACA,OAAA5M,EAAAmC,YAAA5B,KAAA,SAAA6B,GACA,OAAAA,EAAA8D,OACA,OAKA,OAJAgL,EAAA,CACA7P,KAAAd,KAAAe,GACA6Y,aAAAD,GAEA,GAAA3Z,KAAAC,QAAA6B,MAAAO,MAAAoX,WAAA9I,IACA,OAEA,OADAtE,EAAAxK,EAAAgE,OAAAzE,KACA,GAAAiL,EAAAhH,OAAAgH,EAAA,eAUA2M,EAAA9Y,UAAA2Z,QAAA,SAAAF,GACA,OAAAla,EAAAkC,UAAA3B,UAAA,oBACA,OAAAP,EAAAmC,YAAA5B,KAAA,SAAA6B,GACA,OAAAA,EAAA8D,OACA,gBAAA3F,KAAA0Z,YAAAC,IACA,uBAAA9X,EAAAgE,cAQAmT,EAAA9Y,UAAA4Z,OAAA,WACA,OAAAra,EAAAkC,UAAA3B,UAAA,oBACA,IAAA+Z,EACA,OAAAta,EAAAmC,YAAA5B,KAAA,SAAA6B,GACA,OAAAA,EAAA8D,OACA,gBAAA3F,KAAAC,QAAA+Z,OAAA3X,MAAA4X,SACA,OAEA,OADAF,EAAAlY,EAAAgE,OACA,GAAAkU,EAAAG,cAAAla,aAQAgZ,EAAA9Y,UAAAia,SAAA,WACA,OAAA1a,EAAAkC,UAAA3B,UAAA,oBACA,IAAA+Z,EACA,OAAAta,EAAAmC,YAAA5B,KAAA,SAAA6B,GACA,OAAAA,EAAA8D,OACA,gBAAA3F,KAAAC,QAAA+Z,OAAA3X,MAAA4X,SACA,OAEA,OADAF,EAAAlY,EAAAgE,OACA,GAAAkU,EAAAK,gBAAApa,aAUAgZ,EAAA9Y,UAAAma,kBAAA,SAAAV,GACA,OAAAla,EAAAkC,UAAA3B,UAAA,oBACA,OAAAP,EAAAmC,YAAA5B,KAAA,SAAA6B,GACA,SAAA7B,KAAAC,QAAA6B,MAAAwY,cAAAC,uBAAAZ,EAAA3Z,YASAgZ,EAAA9Y,UAAAsa,eAAA,SAAAb,GACA,OAAAla,EAAAkC,UAAA3B,UAAA,oBACA,IAAAya,EACA,OAAAhb,EAAAmC,YAAA5B,KAAA,SAAA6B,GACA,OAAAA,EAAA8D,OACA,OAEA,OADA9D,EAAA6Y,KAAAhS,KAAA,UACA,GAAA1I,KAAAqa,kBAAAV,IACA,uBAAA9X,EAAAgE,QACA,OAEA,GADA4U,EAAA5Y,EAAAgE,OACA4U,aAAA5B,EAAAnY,QACA,aAEA,MAAA+Z,EACA,uBAKAhb,EAAAkB,WAAA,CACAf,EAAAgB,eACAoY,EAAA9Y,UAAA,kBACA8Y,EAtOA,GAwOAzZ,EAAAmB,QAAAsY,qCCtRA,IAAA2B,EAAYjb,EAAQ,QACpBkb,EAAclb,EAAQ,QACtByI,EAAA9I,OAAAa,UAAAkI,eAEAyS,EAAA,CACAC,SAAA,SAAAC,GACA,OAAAA,EAAA,MAEAC,MAAA,QACAC,QAAA,SAAAF,EAAA1L,GACA,OAAA0L,EAAA,IAAA1L,EAAA,KAEA6L,OAAA,SAAAH,GACA,OAAAA,IAIAjP,EAAAD,MAAAC,QACApD,EAAAmD,MAAA3L,UAAAwI,KACAyS,EAAA,SAAAC,EAAAC,GACA3S,EAAA3F,MAAAqY,EAAAtP,EAAAuP,KAAA,CAAAA,KAGAC,EAAA5Y,KAAAxC,UAAAqb,YAEAC,EAAA,CACAC,gBAAA,EACAC,WAAA,EACAC,QAAA,QACAC,iBAAA,EACAC,UAAA,IACAC,QAAA,EACAC,QAAApB,EAAAmB,OACAE,kBAAA,EACAC,UAAArB,EAAAsB,WAAAtB,EAAA,YAEAK,SAAA,EACAkB,cAAA,SAAAC,GACA,OAAAd,EAAA/Z,KAAA6a,IAEAC,WAAA,EACAC,oBAAA,GAGAhG,EAAA,SAAAA,EACAiG,EACAxB,EACAyB,EACAF,EACAD,EACAN,EACA7X,EACA0O,EACA8I,EACAS,EACAF,EACAD,EACAL,GAEA,IAAArU,EAAAiV,EASA,GARA,oBAAArY,EACAoD,EAAApD,EAAA6W,EAAAzT,GACKA,aAAA5E,KACL4E,EAAA6U,EAAA7U,GACK,UAAAkV,GAAA1Q,EAAAxE,KACLA,IAAA6F,KAAA,MAGA,OAAA7F,EAAA,CACA,GAAAgV,EACA,OAAAP,IAAAC,EAAAD,EAAAhB,EAAAS,EAAAO,QAAAJ,GAAAZ,EAGAzT,EAAA,GAGA,qBAAAA,GAAA,kBAAAA,GAAA,mBAAAA,GAAAqT,EAAA8B,SAAAnV,GAAA,CACA,GAAAyU,EAAA,CACA,IAAAW,EAAAV,EAAAjB,EAAAgB,EAAAhB,EAAAS,EAAAO,QAAAJ,GACA,OAAAM,EAAAS,GAAA,IAAAT,EAAAF,EAAAzU,EAAAkU,EAAAO,QAAAJ,KAEA,OAAAM,EAAAlB,GAAA,IAAAkB,EAAA1Q,OAAAjE,KAGA,IAMAqV,EANA/T,EAAA,GAEA,wBAAAtB,EACA,OAAAsB,EAIA,GAAAkD,EAAA5H,GACAyY,EAAAzY,MACK,CACL,IAAA9D,EAAAf,OAAAe,KAAAkH,GACAqV,EAAA/J,EAAAxS,EAAAwS,QAAAxS,EAGA,QAAA6M,EAAA,EAAmBA,EAAA0P,EAAAtX,SAAoB4H,EAAA,CACvC,IAAAoC,EAAAsN,EAAA1P,GAEAoP,GAAA,OAAA/U,EAAA+H,KAIAvD,EAAAxE,GACA6T,EAAAvS,EAAA0N,EACAhP,EAAA+H,GACA,oBAAAmN,IAAAzB,EAAA1L,GAAA0L,EACAyB,EACAF,EACAD,EACAN,EACA7X,EACA0O,EACA8I,EACAS,EACAF,EACAD,EACAL,IAGAR,EAAAvS,EAAA0N,EACAhP,EAAA+H,GACA0L,GAAAW,EAAA,IAAArM,EAAA,IAAAA,EAAA,KACAmN,EACAF,EACAD,EACAN,EACA7X,EACA0O,EACA8I,EACAS,EACAF,EACAD,EACAL,KAKA,OAAA/S,GAGAgU,EAAA,SAAAC,GACA,IAAAA,EACA,OAAArB,EAGA,UAAAqB,EAAAd,cAAAtV,IAAAoW,EAAAd,SAAA,oBAAAc,EAAAd,QACA,UAAAlR,UAAA,iCAGA,IAAA8Q,EAAAkB,EAAAlB,SAAAH,EAAAG,QACA,wBAAAkB,EAAAlB,SAAA,UAAAkB,EAAAlB,SAAA,eAAAkB,EAAAlB,QACA,UAAA9Q,UAAA,qEAGA,IAAAiS,EAAAlC,EAAA,WACA,wBAAAiC,EAAAC,OAAA,CACA,IAAA3U,EAAA5G,KAAAqZ,EAAAsB,WAAAW,EAAAC,QACA,UAAAjS,UAAA,mCAEAiS,EAAAD,EAAAC,OAEA,IAAAb,EAAArB,EAAAsB,WAAAY,GAEA5Y,EAAAsX,EAAAtX,OAKA,OAJA,oBAAA2Y,EAAA3Y,QAAA4H,EAAA+Q,EAAA3Y,WACAA,EAAA2Y,EAAA3Y,QAGA,CACAuX,eAAA,mBAAAoB,EAAApB,eAAAoB,EAAApB,eAAAD,EAAAC,eACAC,UAAA,qBAAAmB,EAAAnB,UAAAF,EAAAE,YAAAmB,EAAAnB,UACAC,UACAC,gBAAA,mBAAAiB,EAAAjB,gBAAAiB,EAAAjB,gBAAAJ,EAAAI,gBACAC,UAAA,qBAAAgB,EAAAhB,UAAAL,EAAAK,UAAAgB,EAAAhB,UACAC,OAAA,mBAAAe,EAAAf,OAAAe,EAAAf,OAAAN,EAAAM,OACAC,QAAA,oBAAAc,EAAAd,QAAAc,EAAAd,QAAAP,EAAAO,QACAC,iBAAA,mBAAAa,EAAAb,iBAAAa,EAAAb,iBAAAR,EAAAQ,iBACA9X,SACA+X,YACAE,cAAA,oBAAAU,EAAAV,cAAAU,EAAAV,cAAAX,EAAAW,cACAE,UAAA,mBAAAQ,EAAAR,UAAAQ,EAAAR,UAAAb,EAAAa,UACAzJ,KAAA,oBAAAiK,EAAAjK,KAAAiK,EAAAjK,KAAA,KACA0J,mBAAA,mBAAAO,EAAAP,mBAAAO,EAAAP,mBAAAd,EAAAc,qBAIA9M,EAAAjQ,QAAA,SAAAgd,EAAAM,GACA,IAGAF,EACAzY,EAJAoD,EAAAiV,EACAnW,EAAAwW,EAAAC,GAKA,oBAAAzW,EAAAlC,QACAA,EAAAkC,EAAAlC,OACAoD,EAAApD,EAAA,GAAAoD,IACKwE,EAAA1F,EAAAlC,UACLA,EAAAkC,EAAAlC,OACAyY,EAAAzY,GAGA,IAMAqS,EANAnW,EAAA,GAEA,qBAAAkH,GAAA,OAAAA,EACA,SAKAiP,EADAsG,KAAAtG,eAAAsE,EACAgC,EAAAtG,YACKsG,GAAA,YAAAA,EACLA,EAAA5B,QAAA,mBAEA,UAGA,IAAAuB,EAAA3B,EAAAtE,GAEAoG,IACAA,EAAAtd,OAAAe,KAAAkH,IAGAlB,EAAAwM,MACA+J,EAAA/J,KAAAxM,EAAAwM,MAGA,QAAA3F,EAAA,EAAmBA,EAAA0P,EAAAtX,SAAoB4H,EAAA,CACvC,IAAAoC,EAAAsN,EAAA1P,GAEA7G,EAAAiW,WAAA,OAAA/U,EAAA+H,IAGA8L,EAAA/a,EAAAkW,EACAhP,EAAA+H,GACAA,EACAmN,EACApW,EAAAkW,mBACAlW,EAAAiW,UACAjW,EAAA0V,OAAA1V,EAAA2V,QAAA,KACA3V,EAAAlC,OACAkC,EAAAwM,KACAxM,EAAAsV,UACAtV,EAAA+V,cACA/V,EAAA6V,UACA7V,EAAA4V,iBACA5V,EAAAuV,UAIA,IAAAoB,EAAA3c,EAAA+M,KAAA/G,EAAAyV,WACAd,GAAA,IAAA3U,EAAAqV,eAAA,OAYA,OAVArV,EAAAwV,kBACA,eAAAxV,EAAAuV,QAEAZ,GAAA,uBAGAA,GAAA,mBAIAgC,EAAA1X,OAAA,EAAA0V,EAAAgC,EAAA,uCCzQA,IAAAzG,EAAgB5W,EAAQ,QACxB2O,EAAY3O,EAAQ,QACpBkb,EAAclb,EAAQ,QAEtB8P,EAAAjQ,QAAA,CACAqb,UACAvM,QACAiI,gDCRAjX,OAAAC,eAAAC,EAAA,cAA8CC,OAAA,IAC9C,IAAAC,EAAcC,EAAQ,QAEtB,SAAAsd,EAAA5B,GACA,IAAAvZ,EACA,OAAAA,EAAA,IAAA+U,OAAA7T,MAAAlB,EAAApC,EAAAwd,SAAA7B,IAEA7b,EAAAyd,+CCPA3d,OAAAC,eAAAC,EAAA,cAA8CC,OAAA,IAC9C,IAAAC,EAAcC,EAAQ,QACtBmT,EAAgBnT,EAAQ,QAIxBwd,EAAA,SAAA/b,GAEA,SAAA+b,IACA,cAAA/b,KAAA4B,MAAA/C,KAAAgD,YAAAhD,KA8DA,OAhEAP,EAAA+B,UAAA0b,EAAA/b,GAIA9B,OAAAC,eAAA4d,EAAAhd,UAAA,aAIAC,IAAA,WACA,OAAAH,KAAAF,MAAAqd,YAEA7c,YAAA,EACAC,cAAA,IAEAlB,OAAAC,eAAA4d,EAAAhd,UAAA,SAIAC,IAAA,WACA,OAAAH,KAAAF,MAAAsd,OAEA9c,YAAA,EACAC,cAAA,IAKA2c,EAAAhd,UAAAmd,WAAA,WACA,OAAA5d,EAAAkC,UAAA3B,UAAA,oBACA,OAAAP,EAAAmC,YAAA5B,KAAA,SAAA6B,GACA,SAAA7B,KAAAC,QAAA+Z,OAAA5G,SAAAkK,kBAAAtd,YASAkd,EAAAhd,UAAAqd,gBAAA,SAAAlY,GACA,OAAA5F,EAAAkC,UAAA3B,UAAA,oBACA,OAAAP,EAAAmC,YAAA5B,KAAA,SAAA6B,GACA,SAAA7B,KAAAC,QAAA+Z,OAAA5G,SAAAoK,uBAAAxd,KAAAqF,SAOA6X,EAAAhd,UAAAud,eAAA,WACA,OAAAhe,EAAAkC,UAAA3B,UAAA,oBACA,IAAAqT,EAAAqK,EACA,OAAAje,EAAAmC,YAAA5B,KAAA,SAAA6B,GACA,OAAAA,EAAA8D,OACA,gBAAA3F,KAAAC,QAAA+Z,OAAA5G,SAAAuK,sBAAA3d,OACA,OAIA,OAHAqT,EAAAxR,EAAAgE,OACA6X,EAAArK,EAAA8J,WACAnd,KAAAF,MAAAqd,WAAAO,EACA,GAAAA,SAKAR,EAjEA,CAkECrK,EAAAnS,SACDnB,EAAAmB,QAAAwc,qCCzEA7d,OAAAC,eAAAC,EAAA,cAA8CC,OAAA,IAC9C,IAAAC,EAAcC,EAAQ,QACtB+P,EAAgB/P,EAAQ,QACxBkE,EAAclE,EAAQ,QACtBoS,EAAkBpS,EAAQ,QAC1Bke,EAAsBle,EAAQ,QAC9Bme,EAAiBne,EAAQ,QAYzBoe,EAAA,SAAA3c,GAEA,SAAA2c,IACA,cAAA3c,KAAA4B,MAAA/C,KAAAgD,YAAAhD,KA2DA,OA7DAP,EAAA+B,UAAAsc,EAAA3c,GASA2c,EAAA5d,UAAA6d,gBAAA,SAAAC,GACA,OAAAve,EAAAkC,UAAA3B,UAAA,oBACA,IAAAoB,EACA,OAAA3B,EAAAmC,YAAA5B,KAAA,SAAA6B,GACA,OAAAA,EAAA8D,OACA,OAIA,MAHA,kBAAAqY,IACAA,IAAA7Q,KAAA,MAEA,GAAAnN,KAAAC,QAAA6Q,QAAA,CACArH,IAAA,uBACAyH,MAAA,CACA8M,gBAGA,OAEA,OADA5c,EAAAS,EAAAgE,OACA,OAAA+X,EAAAld,QAAAU,EAAA6c,UAAAje,KAAAC,gBAUA6d,EAAA5d,UAAAge,uBAAA,SAAAnG,GACA,OAAAtY,EAAAkC,UAAA3B,UAAA,oBACA,IAAAoB,EACAE,EAAAtB,KACA,OAAAP,EAAAmC,YAAA5B,KAAA,SAAA6B,GACA,OAAAA,EAAA8D,OACA,gBAAA3F,KAAAC,QAAA6Q,QAAA,CACArH,IAAA,QAAAqI,EAAAjR,cAAAkX,GAAA,YAEA,OAEA,OADA3W,EAAAS,EAAAgE,OACA,GAAAzE,EAAA+c,MAAAra,IAAA,SAAAsa,GAA8E,WAAAP,EAAAnd,QAAA0d,EAAA9c,EAAArB,kBAK9ER,EAAAkB,WAAA,CACAiD,EAAAW,OAAA,OACAuZ,EAAA5d,UAAA,wBACAT,EAAAkB,WAAA,CACAiD,EAAAW,OAAA,OACAuZ,EAAA5d,UAAA,+BACA4d,EAAAre,EAAAkB,WAAA,CACAiD,EAAAY,WACAsZ,GACAA,EA9DA,CA+DCrO,EAAA/O,SACDnB,EAAAmB,QAAAod,uCClFAze,OAAAC,eAAAC,EAAA,cAA8CC,OAAA,IAC9C,IAAAC,EAAcC,EAAQ,QACtB2e,EAAoB3e,EAAQ,QAI5B4e,EAAA,SAAAnd,GAEA,SAAAmd,IACA,OAAAnd,EAAAI,KAAAvB,KAAA,4CAAAA,KAEA,OAJAP,EAAA+B,UAAA8c,EAAAnd,GAIAmd,EALA,CAMCD,EAAA3d,SACDnB,EAAAmB,QAAA4d,uCCbAjf,OAAAC,eAAAC,EAAA,cAA8CC,OAAA,IAC9C,IAAAC,EAAcC,EAAQ,QACtBmD,EAAanD,EAAQ,QACrBE,EAAsBF,EAAQ,QAI9B6e,EAAA,WAEA,SAAAA,EAAAze,EAAAC,GACAC,KAAAF,QACAE,KAAAC,QAAAF,EAmCA,OAjCAV,OAAAC,eAAAif,EAAAre,UAAA,QAIAC,IAAA,WACA,WAAA0C,EAAAnC,QAAAV,KAAAF,MAAAgB,KAAAd,KAAAC,UAEAK,YAAA,EACAC,cAAA,IAEAlB,OAAAC,eAAAif,EAAAre,UAAA,oBAIAC,IAAA,WACA,OAAAH,KAAAF,MAAA0e,eAEAle,YAAA,EACAC,cAAA,IAEAlB,OAAAC,eAAAif,EAAAre,UAAA,cAIAC,IAAA,WACA,WAAAuC,KAAA1C,KAAAF,MAAA4E,aAEApE,YAAA,EACAC,cAAA,IAEAd,EAAAkB,WAAA,CACAf,EAAAgB,eACA2d,EAAAre,UAAA,kBACAqe,EAvCA,GAyCAhf,EAAAmB,QAAA6d,uCChDAlf,OAAAC,eAAAC,EAAA,cAA8CC,OAAA,IAC9C,IAAAC,EAAcC,EAAQ,QAGtB,SAAA+e,EAAAC,EAAA/N,EAAAoK,GAEA,SAAA4D,EAAAC,GAEA,cAAAA,GACA,gBACA,SAEA,aACA,UAAAA,EACA,SAEA,gBAAAA,EACA,OAAAA,EAAAC,SAEA,IAAAC,EAAA1Q,KAAAkI,UAAAsI,GACA,UAAAE,EACA,OAAAA,EAIA,QACA,OAAAF,EAAA/W,YAIA,OAAApI,EAAAwd,SAAA,CAAAyB,GAAA/N,EAAA7M,IAAA6a,IAAAxR,KAAA,MAAA4N,EAAA,QAIA,SAAAvW,EAAAua,GACA,gBAAA5d,GAEA,SAAA6d,IACA,IAAA1d,EAAA,OAAAH,KAAA4B,MAAA/C,KAAAgD,YAAAhD,KAEA,OADAsB,EAAA2d,MAAA,IAAAC,IACA5d,EAkDA,OAtDA7B,EAAA+B,UAAAwd,EAAA7d,GAMA6d,EAAA9e,UAAAif,aAAA,SAAAN,GAEA,GADA7e,KAAAof,cACApf,KAAAif,MAAA9W,IAAA0W,GAAA,CACA,IAAAQ,EAAArf,KAAAif,MAAA9e,IAAA0e,GACA,GAAAQ,EACA,OAAAA,EAAA7f,QAKAwf,EAAA9e,UAAAof,SAAA,SAAAT,EAAArf,EAAA+f,GACAvf,KAAAif,MAAA5W,IAAAwW,EAAA,CACArf,QAAAggB,QAAA9c,KAAA+c,MAAA,IAAAF,KAGAP,EAAA9e,UAAAwf,gBAAA,SAAAb,EAAA9D,GACA,IACA4E,EADAre,EAAAtB,KAEA,qBAAA6e,EACAc,EAAAd,EACAc,EAAAC,SAAA,OACAD,GAAA,SAGA,CACA,IAAAjB,EAAAG,EAAAlT,QACAgU,EAAAlB,EAAAC,EAAAG,EAAA9D,GAEAA,EACA/a,KAAAif,MAAA3W,QAAA,SAAAuX,EAAAxQ,GACAA,EAAAyQ,WAAAH,IACAre,EAAA2d,MAAAc,OAAA1Q,KAKArP,KAAAif,MAAAc,OAAAJ,IAGAX,EAAA9e,UAAAkf,YAAA,WACA,IAAA9d,EAAAtB,KACAyf,EAAA/c,KAAA+c,MACAzf,KAAAif,MAAA3W,QAAA,SAAAuX,EAAAxQ,GACAwQ,EAAAL,QAAAC,GACAne,EAAA2d,MAAAc,OAAA1Q,MAIA2P,EAvDA,CAwDKD,GAIL,SAAAxa,EAAAgb,EAAAS,GAIA,YAHA,IAAAT,IAAmCA,EAAAU,UACnC,IAAAD,IAAmCA,GAAA,GAEnC,SAAAE,EAAAxB,EAAAyB,GACA,IAAAC,EAAAD,EAAA3gB,MA4BA,OA1BA2gB,EAAA3gB,MAAA,WAEA,IADA,IAAAmR,EAAA,GACA0P,EAAA,EAA4BA,EAAArd,UAAAqC,OAAuBgb,IACnD1P,EAAA0P,GAAArd,UAAAqd,GAEA,OAAA5gB,EAAAkC,UAAA3B,UAAA,oBACA,IAAA6e,EAAAyB,EAAAjU,EACA,OAAA5M,EAAAmC,YAAA5B,KAAA,SAAA6B,GACA,OAAAA,EAAA8D,OACA,OAGA,OAFAkZ,EAAAJ,EAAAC,EAAA/N,GACA2P,EAAAtgB,KAAAmf,aAAAN,GACAyB,EACA,GAAAA,GAEA,GAAAF,EAAArd,MAAA/C,KAAA2Q,IACA,OAKA,OAJAtE,EAAAxK,EAAAgE,QACA,MAAAwG,GAAA2T,IACAhgB,KAAAsf,SAAAT,EAAAxS,EAAAkT,GAEA,GAAAlT,SAKA8T,GAKA,SAAA7b,EAAAib,GAGA,YAFA,IAAAA,IAAmCA,EAAAU,KAEnC,SAAAC,EAAAxB,EAAAyB,GACA,GAAAA,EAAAhgB,IAAA,CACA,IAAAogB,EAAAJ,EAAAhgB,IAEAggB,EAAAhgB,IAAA,WAEA,IADA,IAAAwQ,EAAA,GACA0P,EAAA,EAAgCA,EAAArd,UAAAqC,OAAuBgb,IACvD1P,EAAA0P,GAAArd,UAAAqd,GAEA,IAAAxB,EAAAJ,EAAAC,EAAA/N,GACA2P,EAAAtgB,KAAAmf,aAAAN,GACA,GAAAyB,EACA,OAAAA,EAEA,IAAAjU,EAAAkU,EAAAxd,MAAA/C,KAAA2Q,GAEA,OADA3Q,KAAAsf,SAAAT,EAAAxS,EAAAkT,GACAlT,GAGA,OAAA8T,GAKA,SAAAK,EAAAC,EAAAC,GAEA,gBAAAR,EAAAxB,EAAAyB,GACA,IAAAC,EAAAD,EAAA3gB,MAqBA,OAnBA2gB,EAAA3gB,MAAA,WAEA,IADA,IAAAmR,EAAA,GACA0P,EAAA,EAA4BA,EAAArd,UAAAqC,OAAuBgb,IACnD1P,EAAA0P,GAAArd,UAAAqd,GAEA,OAAA5gB,EAAAkC,UAAA3B,UAAA,oBACA,IAAAqM,EAAAsU,EACA,OAAAlhB,EAAAmC,YAAA5B,KAAA,SAAA6B,GACA,OAAAA,EAAA8D,OACA,gBAAAya,EAAArd,MAAA/C,KAAA2Q,IACA,OAIA,OAHAtE,EAAAxK,EAAAgE,OACA8a,OAAAla,IAAAia,EAAA/P,EAAAtD,QAAAsD,EAAAtD,MAAA,EAAAqT,GACA1gB,KAAA0f,gBAAAjgB,EAAAwd,SAAA,CAAAwD,GAAAE,IAAA,GACA,GAAAtU,SAKA8T,GAxJA5gB,EAAAkf,iBA6DAlf,EAAAiF,YAsCAjF,EAAAgF,SA2BAhF,EAAA+E,eA6BA/E,EAAAihB,mDC3LAnhB,OAAAC,eAAAC,EAAA,cAA8CC,OAAA,IAC9C,IAAAC,EAAcC,EAAQ,QACtBE,EAAsBF,EAAQ,SAK9B,SAAAkhB,GAIAA,EAAA,WAIAA,EAAA,eAMAA,EAAA,sBAdA,CAeCrhB,EAAAqhB,kBAAArhB,EAAAqhB,gBAAA,KAID,IAAAC,EAAA,WAEA,SAAAA,EAAA/gB,EAAAC,GACAC,KAAAF,QACAE,KAAAC,QAAAF,EA6HA,OA3HAV,OAAAC,eAAAuhB,EAAA3gB,UAAA,MAIAC,IAAA,WACA,OAAAH,KAAAF,MAAAiB,IAEAT,YAAA,EACAC,cAAA,IAEAlB,OAAAC,eAAAuhB,EAAA3gB,UAAA,UAIAC,IAAA,WACA,OAAAH,KAAAF,MAAA0D,SAEAlD,YAAA,EACAC,cAAA,IAEAlB,OAAAC,eAAAuhB,EAAA3gB,UAAA,mBAIAC,IAAA,WACA,OAAAH,KAAAF,MAAA2D,WAEAnD,YAAA,EACAC,cAAA,IAKAsgB,EAAA3gB,UAAAkC,QAAA,WACA,OAAA3C,EAAAkC,UAAA3B,UAAA,oBACA,OAAAP,EAAAmC,YAAA5B,KAAA,SAAA6B,GACA,SAAA7B,KAAAC,QAAA6B,MAAAO,MAAAC,YAAAtC,KAAAF,MAAA0D,eAIAnE,OAAAC,eAAAuhB,EAAA3gB,UAAA,UAIAC,IAAA,WACA,OAAAH,KAAAF,MAAAghB,SAEAxgB,YAAA,EACAC,cAAA,IAKAsgB,EAAA3gB,UAAA6gB,QAAA,WACA,OAAAthB,EAAAkC,UAAA3B,UAAA,oBACA,OAAAP,EAAAmC,YAAA5B,KAAA,SAAA6B,GACA,SAAA7B,KAAAC,QAAA6B,MAAAkf,MAAAC,YAAAjhB,KAAAF,MAAAghB,eAIAzhB,OAAAC,eAAAuhB,EAAA3gB,UAAA,QAIAC,IAAA,WACA,OAAAH,KAAAF,MAAA8J,MAEAtJ,YAAA,EACAC,cAAA,IAEAlB,OAAAC,eAAAuhB,EAAA3gB,UAAA,SAIAC,IAAA,WACA,OAAAH,KAAAF,MAAA8X,OAEAtX,YAAA,EACAC,cAAA,IAEAlB,OAAAC,eAAAuhB,EAAA3gB,UAAA,WAIAC,IAAA,WACA,OAAAH,KAAAF,MAAAohB,cAEA5gB,YAAA,EACAC,cAAA,IAEAlB,OAAAC,eAAAuhB,EAAA3gB,UAAA,aAIAC,IAAA,WACA,WAAAuC,KAAA1C,KAAAF,MAAA0R,aAEAlR,YAAA,EACAC,cAAA,IAEAlB,OAAAC,eAAAuhB,EAAA3gB,UAAA,YAIAC,IAAA,WACA,OAAAH,KAAAF,MAAA2S,UAEAnS,YAAA,EACAC,cAAA,IAEAlB,OAAAC,eAAAuhB,EAAA3gB,UAAA,gBAIAC,IAAA,WACA,OAAAH,KAAAF,MAAAqhB,eAEA7gB,YAAA,EACAC,cAAA,IAEAd,EAAAkB,WAAA,CACAf,EAAAgB,eACAigB,EAAA3gB,UAAA,kBACA2gB,EAjIA,GAmIAthB,EAAAmB,QAAAmgB,uCC7JAxhB,OAAAC,eAAAC,EAAA,cAA8CC,OAAA,IAC9C,IAAAC,EAAcC,EAAQ,QACtB+P,EAAgB/P,EAAQ,QACxB0hB,EAAoB1hB,EAAQ,QAC5BmF,EAAqBnF,EAAQ,QAC7BiQ,EAA8BjQ,EAAQ,QACtCoS,EAAkBpS,EAAQ,QAC1B2hB,EAAmC3hB,EAAQ,QAC3CuB,EAA0BvB,EAAQ,QAClC4hB,EAA2B5hB,EAAQ,QACnC0U,EAA4B1U,EAAQ,QACpC6hB,EAAmB7hB,EAAQ,QAY3B8hB,EAAA,SAAArgB,GAEA,SAAAqgB,IACA,cAAArgB,KAAA4B,MAAA/C,KAAAgD,YAAAhD,KA6MA,OA/MAP,EAAA+B,UAAAggB,EAAArgB,GASAqgB,EAAAthB,UAAAuhB,WAAA,SAAAvd,GAEA,YADA,IAAAA,IAAgCA,EAAA,IAChCzE,EAAAkC,UAAA3B,UAAA,oBACA,IAAAqM,EACA/K,EAAAtB,KACA,OAAAP,EAAAmC,YAAA5B,KAAA,SAAA6B,GACA,OAAAA,EAAA8D,OACA,gBAAA3F,KAAAC,QAAA6Q,QAAA,CACArH,IAAA,UACAG,KAAA/E,EAAAkM,kBAAAC,MACAE,MAAA,CACAwQ,MAAAxd,EAAAwd,MACAC,OAAAzd,EAAAyd,OACAjQ,MAAAxN,EAAAoN,MACAsQ,aAAA1d,EAAA2d,UACAf,QAAA5c,EAAA4d,KACArP,SAAAvO,EAAAuO,SACA7I,KAAA1F,EAAA0F,KACApG,QAAAU,EAAAR,OACAqe,WAAA7d,EAAA8d,aAGA,OAEA,OADA3V,EAAAxK,EAAAgE,OACA,IACAzE,KAAAiL,EAAAjL,KAAA0C,IAAA,SAAA2P,GAA6E,WAAA2N,EAAA1gB,QAAA+S,EAAAnS,EAAArB,WAC7E0R,OAAAtF,EAAAuF,YAAAvF,EAAAuF,WAAAD,eAWA6P,EAAAthB,UAAA+hB,oBAAA,SAAA/d,GACA,IAAA5C,EAAAtB,KAEA,YADA,IAAAkE,IAAgCA,EAAA,IAChC,IAAAyL,EAAAjP,QAAA,CACA+I,IAAA,UACAyH,MAAA,CACA0Q,aAAA1d,EAAA2d,UACAf,QAAA5c,EAAA4d,KACArP,SAAAvO,EAAAuO,SACA7I,KAAA1F,EAAA0F,KACApG,QAAAU,EAAAR,OACAqe,WAAA7d,EAAA8d,WAEShiB,KAAAC,QAAA,SAAAmB,GAAiC,WAAAggB,EAAA1gB,QAAAU,EAAAE,EAAArB,YAO1CuhB,EAAAthB,UAAAgiB,oBAAA,SAAAphB,GACA,OAAArB,EAAAkC,UAAA3B,UAAA,oBACA,IAAAqM,EACA,OAAA5M,EAAAmC,YAAA5B,KAAA,SAAA6B,GACA,OAAAA,EAAA8D,OACA,gBAAA3F,KAAAyhB,WAAA,CAAkEO,SAAAlQ,EAAA9Q,gBAAAF,MAClE,OAEA,OADAuL,EAAAxK,EAAAgE,OACA,GAAAwG,EAAAjL,KAAAiE,OAAAgH,EAAAjL,KAAA,eAUAogB,EAAAthB,UAAAsZ,kBAAA,SAAA1Y,GACA,OAAArB,EAAAkC,UAAA3B,UAAA,oBACA,IAAAqM,EACA,OAAA5M,EAAAmC,YAAA5B,KAAA,SAAA6B,GACA,OAAAA,EAAA8D,OACA,gBAAA3F,KAAAyhB,WAAA,CAAkE/d,OAAAoO,EAAAjR,cAAAC,MAClE,OAEA,OADAuL,EAAAxK,EAAAgE,OACA,GAAAwG,EAAAjL,KAAAiE,OAAAgH,EAAAjL,KAAA,eAUAogB,EAAAthB,UAAAiiB,wBAAA,SAAArhB,GACA,OAAArB,EAAAkC,UAAA3B,UAAA,oBACA,OAAAP,EAAAmC,YAAA5B,KAAA,SAAA6B,GACA,SAAA7B,KAAAoiB,kBAAA,UAAAtQ,EAAAjR,cAAAC,UASA0gB,EAAAthB,UAAAmiB,iCAAA,SAAAvhB,GACA,OAAAd,KAAAsiB,2BAAA,UAAAxQ,EAAAjR,cAAAC,KAOA0gB,EAAAthB,UAAAqiB,yBAAA,SAAAC,GACA,OAAA/iB,EAAAkC,UAAA3B,UAAA,oBACA,OAAAP,EAAAmC,YAAA5B,KAAA,SAAA6B,GACA,SAAA7B,KAAAoiB,kBAAA,WAAAI,SASAhB,EAAAthB,UAAAuiB,kCAAA,SAAAD,GACA,OAAAxiB,KAAAsiB,2BAAA,WAAAE,IAOAhB,EAAAthB,UAAAwiB,mBAAA,WACA,OAAAjjB,EAAAkC,UAAA3B,UAAA,oBACA,IAAAqM,EAAAoO,EACA,OAAAhb,EAAAmC,YAAA5B,KAAA,SAAA6B,GACA,OAAAA,EAAA8D,OACA,OAEA,OADA9D,EAAA6Y,KAAAhS,KAAA,UACA,GAAA1I,KAAAC,QAAA6Q,QAAA,CACArH,IAAA,kBACAuB,OAAA,OACApB,KAAA/E,EAAAkM,kBAAAC,MACAC,MAAA,yBAEA,OAEA,OADA5E,EAAAxK,EAAAgE,OACA,OAAA5E,EAAAP,QAAA2L,EAAAjL,KAAA,GAAApB,KAAAC,UACA,OAEA,GADAwa,EAAA5Y,EAAAgE,OACA4U,aAAArG,EAAA1T,SAAA,MAAA+Z,EAAAkI,WACA,UAAArB,EAAA5gB,QAEA,MAAA+Z,EACA,uBAKA+G,EAAAthB,UAAAkiB,kBAAA,SAAAQ,EAAA7hB,GACA,OAAAtB,EAAAkC,UAAA3B,UAAA,oBACA,IAAAqM,EACAxK,EACA,OAAApC,EAAAmC,YAAA5B,KAAA,SAAA0F,GACA,OAAAA,EAAAC,OACA,gBAAA3F,KAAAC,QAAA6Q,QAAA,CACArH,IAAA,kBACAG,KAAA/E,EAAAkM,kBAAAC,MACAE,OAAArP,EAAA,GACAA,EAAA+gB,GAAA7hB,EACAc,GACAoP,MAAA,yBAEA,OAEA,OADA5E,EAAA3G,EAAAG,OACA,IACAzE,KAAAmgB,EAAAvE,QAAA3Q,EAAAjL,KAAA0C,IAAA0d,EAAAqB,2BAAAlM,KAAA3W,KAAAC,WACA0R,OAAAtF,EAAAuF,YAAAvF,EAAAuF,WAAAD,eAMA6P,EAAAthB,UAAAoiB,2BAAA,SAAAM,EAAA7hB,GACA,IAAAc,EACA,WAAA8N,EAAAjP,QAAA,CACA+I,IAAA,kBACAyH,OAAArP,EAAA,GACAA,EAAA+gB,GAAA7hB,EACAc,GACAoP,MAAA,uBACSjR,KAAAC,QAAAuhB,EAAAqB,2BAAAlM,KAAA3W,KAAAC,WAETuhB,EAAAqB,2BAAA,SAAAzhB,GACA,IAAAE,EAAAtB,KACA,OAAAoB,EAAAW,OAAA+gB,OAAA,SAAAzW,EAAA0W,GAA4D,OAAAtjB,EAAAwd,SAAA5Q,EAAA0W,EAAAC,QAAAlf,IAAA,SAAAmf,GAAsE,WAAA5B,EAAA3gB,QAAAuiB,EAAAF,EAAAG,SAAA5hB,OAAuF,KAEzNkgB,EAhNA,CAiNC/R,EAAA/O,SACDnB,EAAAmB,QAAA8gB,uCCzOAniB,OAAAC,eAAAC,EAAA,cAA8CC,OAAA,IAC9C,IAAAC,EAAcC,EAAQ,QACtBmD,EAAanD,EAAQ,QAMrByjB,EAAA,SAAAhiB,GAEA,SAAAgiB,IACA,cAAAhiB,KAAA4B,MAAA/C,KAAAgD,YAAAhD,KA+GA,OAjHAP,EAAA+B,UAAA2hB,EAAAhiB,GAIA9B,OAAAC,eAAA6jB,EAAAjjB,UAAA,SAIAC,IAAA,WACA,OAAAH,KAAAF,MAAAsd,OAEA9c,YAAA,EACAC,cAAA,IAEAlB,OAAAC,eAAA6jB,EAAAjjB,UAAA,mBAIAC,IAAA,WACA,OAAAH,KAAAF,MAAAsjB,gBAEA9iB,YAAA,EACAC,cAAA,IAEAlB,OAAAC,eAAA6jB,EAAAjjB,UAAA,yBAIAC,IAAA,WACA,OAAAH,KAAAF,MAAA0e,cAAApB,OAEA9c,YAAA,EACAC,cAAA,IAEAlB,OAAAC,eAAA6jB,EAAAjjB,UAAA,wBAIAC,IAAA,WACA,OAAAH,KAAAF,MAAA0e,cAAA9V,MAEApI,YAAA,EACAC,cAAA,IAEAlB,OAAAC,eAAA6jB,EAAAjjB,UAAA,eAIAC,IAAA,WACA,OAAAH,KAAAF,MAAAujB,WAEA/iB,YAAA,EACAC,cAAA,IAEAlB,OAAAC,eAAA6jB,EAAAjjB,UAAA,cAIAC,IAAA,WACA,OAAAH,KAAAF,MAAAwjB,mBAEAhjB,YAAA,EACAC,cAAA,IAQA4iB,EAAAjjB,UAAAga,cAAA,SAAAnC,EAAAyG,GACA,OAAA/e,EAAAkC,UAAA3B,UAAA,oBACA,OAAAP,EAAAmC,YAAA5B,KAAA,SAAA6B,GACA,SAAA7B,KAAAC,QAAA+Z,OAAA3X,MAAA6X,cAAAla,KAAA+X,EAAAyG,SASA2E,EAAAjjB,UAAAka,gBAAA,SAAArC,GACA,OAAAtY,EAAAkC,UAAA3B,UAAA,oBACA,OAAAP,EAAAmC,YAAA5B,KAAA,SAAA6B,GACA,SAAA7B,KAAAC,QAAA+Z,OAAA3X,MAAA+X,gBAAApa,KAAA+X,SASAoL,EAAAjjB,UAAAqjB,UAAA,SAAAC,GACA,OAAA/jB,EAAAkC,UAAA3B,UAAA,oBACA,OAAAP,EAAAmC,YAAA5B,KAAA,SAAA6B,GACA,SAAA7B,KAAAC,QAAA+Z,OAAA3X,MAAAkhB,UAAAvjB,KAAAwjB,SASAL,EAAAjjB,UAAAujB,YAAA,SAAAC,GACA,OAAAjkB,EAAAkC,UAAA3B,UAAA,oBACA,OAAAP,EAAAmC,YAAA5B,KAAA,SAAA6B,GACA,SAAA7B,KAAAC,QAAA+Z,OAAA3X,MAAAohB,YAAAzjB,KAAA0jB,SAIAP,EAlHA,CAmHCtgB,EAAAnC,SACDnB,EAAAmB,QAAAyiB,uCC5HA9jB,OAAAC,eAAAC,EAAA,cAA8CC,OAAA,IAC9C,IAAAC,EAAcC,EAAQ,QACtBE,EAAsBF,EAAQ,QAC9BqU,EAAoBrU,EAAQ,QAC5BmF,EAAqBnF,EAAQ,QAQ7BikB,EAAA,WAYA,SAAAA,EAAA5e,EAAA4Q,EAAAvQ,GACApF,KAAAiF,UAAAF,GAAA,GACA4Q,IACA3V,KAAA4jB,aAAA,IAAA7P,EAAArT,QAAA,CAA2DmjB,aAAAlO,EAAA1E,MAAA7L,IAAA+H,KAAA,QAAAgK,cAAA,KAC3DnX,KAAA8jB,QAAA1e,GA0EA,OA/DAue,EAAAzjB,UAAAiF,eAAA,SAAAC,GACA,OAAA3F,EAAAkC,UAAA3B,UAAA,oBACA,IAAA+jB,EACAziB,EAAAtB,KACA,OAAAP,EAAAmC,YAAA5B,KAAA,SAAA6B,GACA,OAAAA,EAAA8D,OACA,OACA,KAAAP,KAAAC,OAAA,eACA,GAAArF,KAAA8jB,QAAA,YACA,IAAA9jB,KAAA4jB,aACA,UAAAte,MAAA,oFAEA,SAAAT,EAAAnE,QAAAqV,aAAA/V,KAAAiF,UAAAjF,KAAA4jB,aAAAjO,cACA,OAEA,GADAoO,EAAAliB,EAAAgE,QACAke,EAAA/N,MACA,UAAA1Q,MAAA,4DAEAtF,KAAA8jB,QAAAC,EAAA3e,OACAvD,EAAA8D,MAAA,EACA,OAIA,GAHA,kBAAAP,IACAA,IAAAyJ,MAAA,MAEAzJ,EAAA4e,KAAA,SAAA/S,GAA0D,OAAA3P,EAAAwiB,QAAAG,SAAAhT,KAC1D,UAAA3L,MAAA,kDAAAF,EAAA+H,KAAA,mCAEAtL,EAAA8D,MAAA,EACA,gBAAA3F,KAAA4jB,cAAA,YAMAD,EAAAzjB,UAAA4F,eAAA,SAAAC,GACA/F,KAAA4jB,aAAA7d,GAEA1G,OAAAC,eAAAqkB,EAAAzjB,UAAA,YAIAC,IAAA,WACA,OAAAH,KAAAiF,WAEA3E,YAAA,EACAC,cAAA,IAEAlB,OAAAC,eAAAqkB,EAAAzjB,UAAA,iBAIAC,IAAA,WACA,OAAAH,KAAA8jB,SAAA,IAEAxjB,YAAA,EACAC,cAAA,IAEAd,EAAAkB,WAAA,CACAf,EAAAgB,eACA+iB,EAAAzjB,UAAA,oBACAT,EAAAkB,WAAA,CACAf,EAAAgB,eACA+iB,EAAAzjB,UAAA,uBACAyjB,EA1FA,GA4FApkB,EAAAmB,QAAAijB,uCCxGAtkB,OAAAC,eAAAC,EAAA,cAA8CC,OAAA,IAC9C,IAAAC,EAAcC,EAAQ,QACtBE,EAAsBF,EAAQ,QAC9BwkB,EAA6BxkB,EAAQ,QACrCykB,EAAoBzkB,EAAQ,SAQ5B,SAAAwV,GAMAA,EAAA,eAMAA,EAAA,kBAZA,CAaC3V,EAAA2V,sBAAA3V,EAAA2V,oBAAA,KAKD,SAAAG,GAIAA,EAAA,uBAIAA,EAAA,mBARA,CASC9V,EAAA8V,iBAAA9V,EAAA8V,eAAA,KAKD,SAAAG,GAIAA,EAAA,UAIAA,EAAA,cAIAA,EAAA,UAIAA,EAAA,UAIAA,EAAA,UApBA,CAqBCjW,EAAAiW,iBAAAjW,EAAAiW,eAAA,KAID,IAAA4O,EAAA,WAEA,SAAAA,EAAAhjB,EAAArB,GACAC,KAAAC,QAAAF,EACAC,KAAAF,MAAAqkB,EAAAE,QAAAjjB,EAAA,SAAAkjB,GAAoE,OAAAA,EAAAvJ,OAAAtP,gBA4FpE,OAnFA2Y,EAAAlkB,UAAAqkB,wBAAA,SAAA9jB,EAAA+jB,EAAA1H,QACA,IAAAA,IAAgCA,EAAA,IAChCrc,IAAAgL,cACA,IAAAgZ,EAAAzkB,KAAAC,QAAA6U,QAAAE,WACA0P,EAAAjlB,EAAAsQ,SAAA,CAA4C4U,WAAAF,EAAAxP,kBAAA2P,MAAAH,EAAArP,aAAAuC,MAAA8M,EAAAlP,cAAgIuH,GAC5K+H,EAAA7kB,KAAAF,MAAAW,GAAAokB,MACAC,EAAAD,EAAAjS,KAAA,SAAAmS,EAAAC,GAAsD,OAAAA,EAAAC,SAAAF,EAAAE,WAAkC5gB,KAAA,SAAAd,GAAwB,OAAAA,EAAA0hB,UAAAT,IAChH,IAAAM,EACA,UAAAZ,EAAAxjB,QAAA,cAAAD,EAAA,0CAAA+jB,EAAA,SAEA,OACA/a,IAAAqb,EAAAI,OAAAR,EAAAC,YAAAD,EAAAE,OAAAF,EAAA/M,OACAwN,MAAAL,EAAAK,QAMAf,EAAAlkB,UAAAklB,iBAAA,WACA,OAAA/lB,OAAAe,KAAAJ,KAAAF,QAOAskB,EAAAlkB,UAAAmlB,aAAA,SAAAC,GACA,IAIAC,EAJAlZ,EAAA,GACAmZ,EAAAxlB,KAAAolB,mBAEAK,EAAA,IAAAC,OAAA,0CAGA,MAAAH,EAAAE,EAAAE,KAAAL,GAAA,CACA,IAAAM,EAAAL,EAAA,GAAA9Z,cACA,GAAA+Z,EAAAvB,SAAA2B,GAAA,CACA,IAAAC,EAAAC,OAAAP,EAAA,IACAlZ,EAAA3D,KAAA,CACAjI,KAAAmlB,EACAC,SACAE,SAAAR,EAAAS,MACA3gB,OAAAkgB,EAAA,GAAAlgB,OACA4gB,YAAAjmB,KAAAukB,wBAAAqB,EAAAC,MAIA,OAAAxZ,GAQA+X,EAAAlkB,UAAAgmB,sBAAA,SAAAZ,EAAAa,GACA,IAAA1L,EAAA5Y,EACAwK,EAAA,GACA+Z,EAAA,EACA,IACA,QAAA1gB,EAAAjG,EAAA4mB,SAAArmB,KAAAqlB,aAAAC,IAAA/T,EAAA7L,EAAAgG,QAAuF6F,EAAA3F,KAAU2F,EAAA7L,EAAAgG,OAAA,CACjG,IAAA4a,EAAA/U,EAAA/R,MACA4mB,EAAAE,EAAAP,UACA1Z,EAAA3D,KAAA4c,EAAAiB,UAAAH,EAAAE,EAAAP,WAEA1Z,EAAA3D,KAAAyd,EAAAG,IACAF,EAAAE,EAAAP,SAAAO,EAAAjhB,QAGA,MAAAmhB,GAAuB/L,EAAA,CAAQ/Q,MAAA8c,GAC/B,QACA,IACAjV,MAAA3F,OAAA/J,EAAA6D,EAAA+gB,SAAA5kB,EAAAN,KAAAmE,GAEA,QAAqB,GAAA+U,EAAA,MAAAA,EAAA/Q,OAKrB,OAHA0c,EAAAd,EAAAjgB,QACAgH,EAAA3D,KAAA4c,EAAAoB,OAAAN,IAEA/Z,GAEA5M,EAAAkB,WAAA,CACAf,EAAAgB,eACAwjB,EAAAlkB,UAAA,kBACAkkB,EAhGA,GAkGA7kB,EAAAmB,QAAA0jB,uCCvKA/kB,OAAAC,eAAAC,EAAA,cAA8CC,OAAA,IAC9C,IAAAC,EAAcC,EAAQ,QACtB2e,EAAoB3e,EAAQ,QAI5BinB,EAAA,SAAAxlB,GAEA,SAAAwlB,IACA,cAAAxlB,KAAA4B,MAAA/C,KAAAgD,YAAAhD,KAEA,OAJAP,EAAA+B,UAAAmlB,EAAAxlB,GAIAwlB,EALA,CAMCtI,EAAA3d,SACDnB,EAAAmB,QAAAimB,uCCbAtnB,OAAAC,eAAAC,EAAA,cAA8CC,OAAA,IAC9C,IAAAC,EAAcC,EAAQ,QAEtBknB,EAAA,SAAAzlB,GAEA,SAAAylB,IAEA,IADA,IAAAjW,EAAA,GACA0P,EAAA,EAAwBA,EAAArd,UAAAqC,OAAuBgb,IAC/C1P,EAAA0P,GAAArd,UAAAqd,GAEA,IAAA/e,EAAAH,EAAA4B,MAAA/C,KAAAP,EAAAwd,SAAAtM,KAAA3Q,KAIA,OAHAsF,MAAAuhB,mBACAvhB,MAAAuhB,kBAAAvlB,IAAAwlB,aAEAxlB,EASA,OAnBA7B,EAAA+B,UAAAolB,EAAAzlB,GAYA9B,OAAAC,eAAAsnB,EAAA1mB,UAAA,QACAC,IAAA,WACA,OAAAH,KAAA8mB,YAAArmB,MAEAH,YAAA,EACAC,cAAA,IAEAqmB,EApBA,CAqBCthB,OACD/F,EAAAmB,QAAAkmB,uCCzBAvnB,OAAAC,eAAAC,EAAA,cAA8CC,OAAA,IAC9C,IAAAC,EAAcC,EAAQ,QACtBkE,EAAclE,EAAQ,QAItBqnB,EAAA,WAEA,SAAAA,EAAAjnB,GACAE,KAAAF,QA4CA,OArCAinB,EAAA7mB,UAAA8mB,YAAA,SAAAC,GACA,IAAAxM,EAAA5Y,EAAAqlB,EAAAxhB,EACA,IACA,QAAA6L,EAAA9R,EAAA4mB,SAAAhnB,OAAAuJ,OAAA5I,KAAAF,QAAAqnB,EAAA5V,EAAA7F,QAAsFyb,EAAAvb,KAAUub,EAAA5V,EAAA7F,OAAA,CAChG,IAAA0b,EAAAD,EAAA3nB,MACA,IACA,QAAA6nB,GAAAH,OAAA,EAAAznB,EAAA4mB,SAAAe,IAAAE,EAAAD,EAAA3b,QAAuH4b,EAAA1b,KAAoB0b,EAAAD,EAAA3b,OAAA,CAC3I,IAAA3H,EAAAujB,EAAA9nB,MACA,OAAAkmB,OAAA3hB,EAAA8S,MAAArL,KAAAyb,GACA,OAAAljB,EAAAhD,IAIA,MAAAwmB,GAA+BL,EAAA,CAAQxd,MAAA6d,GACvC,QACA,IACAD,MAAA1b,OAAAlG,EAAA2hB,EAAAZ,SAAA/gB,EAAAnE,KAAA8lB,GAEA,QAA6B,GAAAH,EAAA,MAAAA,EAAAxd,SAI7B,MAAA8c,GAAuB/L,EAAA,CAAQ/Q,MAAA8c,GAC/B,QACA,IACAW,MAAAvb,OAAA/J,EAAA0P,EAAAkV,SAAA5kB,EAAAN,KAAAgQ,GAEA,QAAqB,GAAAkJ,EAAA,MAAAA,EAAA/Q,SAIrBjK,EAAAkB,WAAA,CACAiD,EAAAW,OAAA0b,KAAA,IACA8G,EAAA7mB,UAAA,oBACA6mB,EAAAtnB,EAAAkB,WAAA,CACAiD,EAAAY,WACAuiB,GACAA,EA/CA,GAiDAxnB,EAAAmB,QAAAqmB,uCCvDA1nB,OAAAC,eAAAC,EAAA,cAA8CC,OAAA,IAC9C,IAAAC,EAAcC,EAAQ,QACtBE,EAAsBF,EAAQ,QAC9BwkB,EAA6BxkB,EAAQ,QACrCkE,EAAclE,EAAQ,QAItB8nB,EAAA,WAEA,SAAAA,EAAA1nB,EAAAC,GACAC,KAAAF,QACAE,KAAAC,QAAAF,EAsLA,OApLAV,OAAAC,eAAAkoB,EAAAtnB,UAAA,MAIAC,IAAA,WACA,OAAAH,KAAAF,MAAAiB,IAEAT,YAAA,EACAC,cAAA,IAEAlB,OAAAC,eAAAkoB,EAAAtnB,UAAA,UAIAC,IAAA,WACA,OAAAH,KAAAF,MAAA0D,SAEAlD,YAAA,EACAC,cAAA,IAEAlB,OAAAC,eAAAkoB,EAAAtnB,UAAA,mBAIAC,IAAA,WACA,OAAAH,KAAAF,MAAA0D,SAEAlD,YAAA,EACAC,cAAA,IAKAinB,EAAAtnB,UAAAkC,QAAA,WACA,OAAA3C,EAAAkC,UAAA3B,UAAA,oBACA,OAAAP,EAAAmC,YAAA5B,KAAA,SAAA6B,GACA,SAAA7B,KAAAC,QAAA6B,MAAAO,MAAAC,YAAAtC,KAAAF,MAAA0D,eAIAnE,OAAAC,eAAAkoB,EAAAtnB,UAAA,SAIAC,IAAA,WACA,OAAAH,KAAAF,MAAA8X,OAEAtX,YAAA,EACAC,cAAA,IAEAlB,OAAAC,eAAAkoB,EAAAtnB,UAAA,eAIAC,IAAA,WACA,OAAAH,KAAAF,MAAA6E,aAEArE,YAAA,EACAC,cAAA,IAEAlB,OAAAC,eAAAkoB,EAAAtnB,UAAA,gBAIAC,IAAA,WACA,WAAAuC,KAAA1C,KAAAF,MAAA4E,aAEApE,YAAA,EACAC,cAAA,IAEAlB,OAAAC,eAAAkoB,EAAAtnB,UAAA,eAIAC,IAAA,WACA,WAAAuC,KAAA1C,KAAAF,MAAA2nB,eAEAnnB,YAAA,EACAC,cAAA,IAEAlB,OAAAC,eAAAkoB,EAAAtnB,UAAA,OAIAC,IAAA,WACA,OAAAH,KAAAF,MAAA2J,KAEAnJ,YAAA,EACAC,cAAA,IAEAlB,OAAAC,eAAAkoB,EAAAtnB,UAAA,gBAIAC,IAAA,WACA,OAAAH,KAAAF,MAAAqhB,eAEA7gB,YAAA,EACAC,cAAA,IAEAlB,OAAAC,eAAAkoB,EAAAtnB,UAAA,YAIAC,IAAA,WACA,iBAAAH,KAAAF,MAAA4nB,UAEApnB,YAAA,EACAC,cAAA,IAEAlB,OAAAC,eAAAkoB,EAAAtnB,UAAA,SAIAC,IAAA,WACA,OAAAH,KAAAF,MAAAwZ,YAEAhZ,YAAA,EACAC,cAAA,IAEAlB,OAAAC,eAAAkoB,EAAAtnB,UAAA,YAIAC,IAAA,WACA,OAAAH,KAAAF,MAAA2S,UAEAnS,YAAA,EACAC,cAAA,IAEAlB,OAAAC,eAAAkoB,EAAAtnB,UAAA,QAIAC,IAAA,WACA,OAAAH,KAAAF,MAAA8J,MAEAtJ,YAAA,EACAC,cAAA,IAEAlB,OAAAC,eAAAkoB,EAAAtnB,UAAA,YAIAC,IAAA,WACA,OAAAH,KAAAF,MAAA6nB,UAEArnB,YAAA,EACAC,cAAA,IAEAlB,OAAAC,eAAAkoB,EAAAtnB,UAAA,qBAIAC,IAAA,WACA,IAAAiP,EAAApP,KAAAF,MAAA6nB,SAAApC,MAAA,aACA,IAAAnW,EACA,UAAA8U,EAAAxjB,QAAA,oCAAAV,KAAAF,MAAA6nB,UAEA,OAAAvY,EAAAtL,IAAA,SAAA8jB,GACA,IAAAC,EAAAD,EAAArC,MAAA,gBACA,IAAAsC,EACA,UAAA3D,EAAAxjB,QAAA,4CAAAknB,GAEA,IAAA/lB,EAAApC,EAAAqoB,OAAAD,EAAA,GAAAE,EAAAlmB,EAAA,GAAAmmB,EAAAnmB,EAAA,GACA,OAAAomB,SAAAF,EAAA,KAA4CG,EAAA,KAAAC,EAAA,GAAAC,EAAA,GAAuBJ,KACtDlF,OAAA,SAAAiC,EAAAC,GAA0B,OAAAD,EAAAC,KAEvC1kB,YAAA,EACAC,cAAA,IAEAd,EAAAkB,WAAA,CACAf,EAAAgB,eACA4mB,EAAAtnB,UAAA,kBACAT,EAAAkB,WAAA,CACAiD,EAAAU,gBACAkjB,EAAAtnB,UAAA,0BACAsnB,EAAA/nB,EAAAkB,WAAA,CACAiD,EAAAY,WACAgjB,GACAA,EA1LA,GA4LAjoB,EAAAmB,QAAA8mB,uCCpMAnoB,OAAAC,eAAAC,EAAA,cAA8CC,OAAA,IAC9C,IAAAC,EAAcC,EAAQ,QAEtB,SAAA2oB,EAAA/gB,EAAAghB,GAEA,IAAAC,EAAAlpB,OAAAwJ,QAAAvB,GAAAxD,IAAA,SAAAjC,GACA,IAAA6D,EACA6L,EAAA9R,EAAAqoB,OAAAjmB,EAAA,GAAAwN,EAAAkC,EAAA,GAAA/R,EAAA+R,EAAA,GACA,OAAA7L,EAAA,GAAuBA,EAAA2J,GAAAiZ,EAAA9oB,EAAA6P,GAAA3J,IAEvB,OAAArG,OAAAmpB,OAAAzlB,MAAA1D,OAAAI,EAAAwd,SAAA,KAA2DsL,IAI3D,SAAAE,EAAArN,EAAAkN,GACA,OAAAjpB,OAAAmpB,OAAAzlB,MAAA1D,OAAAI,EAAAwd,SAAA,KAA2D7B,EAAAtX,IAAAwkB,KAI3D,SAAAjE,EAAAjJ,EAAAsN,GACA,uBAAAA,EAAA,CACA,IAAAC,EAAAD,EACAA,EAAA,SAAAlpB,GAAmC,OAAAA,EAAAmpB,GAAA9gB,YAEnC,OAAA4gB,EAAArN,EAAA,SAAAyE,GACA,IAAAhe,EACA,OAAAA,EAAA,GAAuBA,EAAA6mB,EAAA7I,MAAAhe,IAKvB,SAAA+mB,EAAAthB,EAAAghB,GACAjpB,OAAAwJ,QAAAvB,GAAAgB,QAAA,SAAAzG,GACA,IAAA6D,EAAAjG,EAAAqoB,OAAAjmB,EAAA,GAAAwN,EAAA3J,EAAA,GAAAlG,EAAAkG,EAAA,GACA,OAAA4iB,EAAA9oB,EAAA6P,KAKA,SAAAwZ,EAAAvhB,GACA,OAAAmhB,EAAAnhB,EAAA,SAAAzF,GACA,IAAA6D,EACA6L,EAAA9R,EAAAqoB,OAAAjmB,EAAA,GAAAwN,EAAAkC,EAAA,GAAAsO,EAAAtO,EAAA,GACA,OAAA7L,EAAA,GAAuBA,EAAA2J,GAAAwQ,EAAAna,IA/BvBnG,EAAA8oB,YAKA9oB,EAAAkpB,kBAYAlpB,EAAA8kB,UAQA9kB,EAAAqpB,qBASArpB,EAAAspB,uDC9CAxpB,OAAAC,eAAAC,EAAA,cAA8CC,OAAA,IAC9C,IAAAC,EAAcC,EAAQ,QACtB2e,EAAoB3e,EAAQ,QAM5BopB,EAAA,SAAA3nB,GAEA,SAAA2nB,EAAAxD,GACA,OAAAnkB,EAAAI,KAAAvB,KAAAslB,EAAA,+EAAAtlB,KAEA,OAJAP,EAAA+B,UAAAsnB,EAAA3nB,GAIA2nB,EALA,CAMCzK,EAAA3d,SACDnB,EAAAmB,QAAAooB,uCCfAzpB,OAAAC,eAAAC,EAAA,cAA8CC,OAAA,IAC9C,IAAAC,EAAcC,EAAQ,QACtBE,EAAsBF,EAAQ,QAC9BqpB,EAAqBrpB,EAAQ,QAI7BspB,EAAA,WAEA,SAAAA,EAAAlpB,EAAAC,GACAC,KAAAF,QACAE,KAAAC,QAAAF,EA8BA,OA5BAV,OAAAC,eAAA0pB,EAAA9oB,UAAA,iBAIAC,IAAA,WACA,OAAAd,OAAAe,KAAAJ,KAAAF,QAEAQ,YAAA,EACAC,cAAA,IAOAyoB,EAAA9oB,UAAA+oB,YAAA,SAAAxoB,GACA,WAAAsoB,EAAAroB,QAAAV,KAAAF,MAAAW,GAAAT,KAAAC,UAGA+oB,EAAA9oB,UAAAgpB,OAAA,SAAAC,GAIA,OAHAA,aAAAH,IACAG,IAAArpB,OAEA,IAAAkpB,EAAAvpB,EAAAsQ,SAAA,GAAoD/P,KAAAF,MAAAqpB,GAAAnpB,KAAAC,UAEpDR,EAAAkB,WAAA,CACAf,EAAAgB,eACAooB,EAAA9oB,UAAA,kBACA8oB,EAlCA,GAoCAzpB,EAAAmB,QAAAsoB,uCC3CA3pB,OAAAC,eAAAC,EAAA,cAA8CC,OAAA,IAC9C,IAAAC,EAAcC,EAAQ,QACtB+P,EAAgB/P,EAAQ,QACxB0pB,EAAU1pB,EAAQ,QAClBiQ,EAA8BjQ,EAAQ,QACtC2pB,EAA0B3pB,EAAQ,QAYlC4pB,EAAA,SAAAnoB,GAEA,SAAAmoB,IACA,cAAAnoB,KAAA4B,MAAA/C,KAAAgD,YAAAhD,KAyFA,OA3FAP,EAAA+B,UAAA8nB,EAAAnoB,GASAmoB,EAAAppB,UAAAqpB,iBAAA,SAAA5P,GACA,OAAAla,EAAAkC,UAAA3B,UAAA,oBACA,IAAAqM,EACA/K,EAAAtB,KACA,OAAAP,EAAAmC,YAAA5B,KAAA,SAAA6B,GACA,OAAAA,EAAA8D,OACA,gBAAA3F,KAAAC,QAAA6Q,QAAA,CACArH,IAAA,gBACAyH,MAAA,CACAhO,eAAAkmB,EAAAvoB,cAAA8Y,OAGA,OAEA,OADAtN,EAAAxK,EAAAgE,OACA,IACAzE,KAAAiL,EAAAjL,KAAA0C,IAAA,SAAA1C,GAAuE,WAAAioB,EAAA3oB,QAAAU,EAAAE,EAAArB,WACvE0R,OAAAtF,EAAAuF,YAAAvF,EAAAuF,WAAAD,eAWA2X,EAAAppB,UAAAspB,0BAAA,SAAA7P,GACA,IAAArY,EAAAtB,KACA,WAAA2P,EAAAjP,QAAA,CACA+I,IAAA,gBACAyH,MAAA,CACAhO,eAAAkmB,EAAAvoB,cAAA8Y,KAES3Z,KAAAC,QAAA,SAAAmB,GAAiC,WAAAioB,EAAA3oB,QAAAU,EAAAE,EAAArB,YAQ1CqpB,EAAAppB,UAAAupB,yBAAA,SAAA9P,EAAAtX,GACA,OAAA5C,EAAAkC,UAAA3B,UAAA,oBACA,IAAAqM,EACA/K,EAAAtB,KACA,OAAAP,EAAAmC,YAAA5B,KAAA,SAAA6B,GACA,OAAAA,EAAA8D,OACA,gBAAA3F,KAAAC,QAAA6Q,QAAA,CACArH,IAAA,gBACAG,KAAAwf,EAAArY,kBAAAC,MACAE,MAAA,CACAhO,eAAAkmB,EAAAvoB,cAAA8Y,GACAnW,QAAAnB,EAAAyB,IAAAslB,EAAAvoB,mBAGA,OAEA,OADAwL,EAAAxK,EAAAgE,OACA,GAAAwG,EAAAjL,KAAA0C,IAAA,SAAA1C,GAA+E,WAAAioB,EAAA3oB,QAAAU,EAAAE,EAAArB,kBAW/EqpB,EAAAppB,UAAAqa,uBAAA,SAAAZ,EAAA7Y,GACA,OAAArB,EAAAkC,UAAA3B,UAAA,oBACA,IAAA0pB,EACA,OAAAjqB,EAAAmC,YAAA5B,KAAA,SAAA6B,GACA,OAAAA,EAAA8D,OACA,gBAAA3F,KAAAypB,yBAAA9P,EAAA,CAAA7Y,KACA,OAEA,OADA4oB,EAAA7nB,EAAAgE,OACA,GAAA6jB,EAAArkB,OAAAqkB,EAAA,eAKAJ,EA5FA,CA6FC7Z,EAAA/O,SACDnB,EAAAmB,QAAA4oB,uCC/GAjqB,OAAAC,eAAAC,EAAA,cAA8CC,OAAA,IAC9C,IAAAC,EAAcC,EAAQ,QACtBE,EAAsBF,EAAQ,QAI9BiqB,EAAA,WAEA,SAAAA,EAAA7pB,EAAAC,GACAC,KAAAF,QACAE,KAAAC,QAAAF,EAmCA,OAjCAV,OAAAC,eAAAqqB,EAAAzpB,UAAA,MAIAC,IAAA,WACA,OAAAH,KAAAF,MAAAiB,IAEAT,YAAA,EACAC,cAAA,IAEAlB,OAAAC,eAAAqqB,EAAAzpB,UAAA,QAIAC,IAAA,WACA,OAAAH,KAAAF,MAAA+W,MAEAvW,YAAA,EACAC,cAAA,IAEAlB,OAAAC,eAAAqqB,EAAAzpB,UAAA,SAIAC,IAAA,WACA,OAAAH,KAAAF,MAAAqE,cAEA7D,YAAA,EACAC,cAAA,IAEAd,EAAAkB,WAAA,CACAf,EAAAgB,eACA+oB,EAAAzpB,UAAA,kBACAypB,EAvCA,GAyCApqB,EAAAmB,QAAAipB,uCC/CAtqB,OAAAC,eAAAC,EAAA,cAA8CC,OAAA,IAC9C,IAAAC,EAAcC,EAAQ,QACtB2e,EAAoB3e,EAAQ,QAM5BkqB,EAAA,SAAAzoB,GAEA,SAAAyoB,EAAAhZ,GACA,OAAAzP,EAAAI,KAAAvB,KAAA,WAAA4Q,EAAA,0CAAA5Q,KAEA,OAJAP,EAAA+B,UAAAooB,EAAAzoB,GAIAyoB,EALA,CAMCvL,EAAA3d,SACDnB,EAAAmB,QAAAkpB,uCCfAvqB,OAAAC,eAAAC,EAAA,cAA8CC,OAAA,IAC9C,IAAAC,EAAcC,EAAQ,QACtB+P,EAAgB/P,EAAQ,QACxBoS,EAAkBpS,EAAQ,QAC1BmF,EAAqBnF,EAAQ,QAC7BmqB,EAAuCnqB,EAAQ,QAC/CoqB,EAAiCpqB,EAAQ,QAYzCqqB,EAAA,SAAA5oB,GAEA,SAAA4oB,IACA,cAAA5oB,KAAA4B,MAAA/C,KAAAgD,YAAAhD,KAuMA,OAzMAP,EAAA+B,UAAAuoB,EAAA5oB,GASA4oB,EAAA7pB,UAAAqpB,iBAAA,WACA,OAAA9pB,EAAAkC,UAAA3B,UAAA,oBACA,IAAAsB,EAAAtB,KACA,OAAAP,EAAAmC,YAAA5B,KAAA,SAAA6B,GACA,aAAAgoB,EAAAnpB,QAAA,CACA+I,IAAA,0BACqBzJ,KAAAC,QAAA,SAAAmB,GAAiC,WAAA0oB,EAAAppB,QAAAU,EAAAE,EAAArB,iBAStD8pB,EAAA7pB,UAAA8pB,eAAA,SAAA5jB,GACA,OAAA3G,EAAAkC,UAAA3B,UAAA,oBACA,IAAAyO,EAAAwb,EAAAC,EAAAroB,EAAAsoB,EAAAC,EAAAnZ,EACA,OAAAxR,EAAAmC,YAAA5B,KAAA,SAAA0F,GACA,OAAAA,EAAAC,OACA,OAEA,OADA8I,EAAArI,EAAAqI,KAAAwb,EAAA7jB,EAAA6jB,YAAAC,EAAA9jB,EAAA8jB,SAAAroB,EAAAuE,EAAA+jB,yBAAA,IAAAtoB,EAAA,KAAAA,EAAAuoB,EAAAhkB,EAAAgkB,OAAAnZ,EAAA7K,EAAA6K,MACA,GAAAjR,KAAAC,QAAA6Q,QAAA,CACArH,IAAA,eACAG,KAAA/E,EAAAkM,kBAAAC,MACAhG,OAAA,OACAiG,QACAyF,SAAA,CACA2T,WAAA5b,EACA6b,YAAAJ,EACAK,eAAAN,EACAO,oBAAAL,EAAAtiB,WACA4iB,aAAAL,MAGA,OAEA,OADA1kB,EAAAG,OACA,UAaAkkB,EAAA7pB,UAAAwqB,2BAAA,SAAA5pB,EAAAsF,GACA,OAAA3G,EAAAkC,UAAA3B,UAAA,oBACA,OAAAP,EAAAmC,YAAA5B,KAAA,SAAA6B,GACA,SAAA7B,KAAA2qB,2BAAA,mBAAA7pB,EAAAsF,SAYA2jB,EAAA7pB,UAAA0qB,yBAAA,SAAA9pB,EAAAsF,GACA,OAAA3G,EAAAkC,UAAA3B,UAAA,oBACA,OAAAP,EAAAmC,YAAA5B,KAAA,SAAA6B,GACA,SAAA7B,KAAA2qB,2BAAA,iBAAA7pB,EAAAsF,SAYA2jB,EAAA7pB,UAAA2qB,+BAAA,SAAA/pB,EAAAsF,GACA,OAAA3G,EAAAkC,UAAA3B,UAAA,oBACA,OAAAP,EAAAmC,YAAA5B,KAAA,SAAA6B,GACA,SAAA7B,KAAA2qB,2BAAA,qBAAA7pB,EAAAsF,SAYA2jB,EAAA7pB,UAAA4qB,6BAAA,SAAAhqB,EAAAsF,GACA,OAAA3G,EAAAkC,UAAA3B,UAAA,oBACA,OAAAP,EAAAmC,YAAA5B,KAAA,SAAA6B,GACA,SAAA7B,KAAA2qB,2BAAA,mBAAA7pB,EAAAsF,SAYA2jB,EAAA7pB,UAAA6qB,yBAAA,SAAAjqB,EAAAsF,GACA,OAAA3G,EAAAkC,UAAA3B,UAAA,oBACA,OAAAP,EAAAmC,YAAA5B,KAAA,SAAA6B,GACA,SAAA7B,KAAAgrB,4BAAA,YAAAlqB,EAAAsF,SAYA2jB,EAAA7pB,UAAA+qB,6BAAA,SAAAnqB,EAAAsF,GACA,OAAA3G,EAAAkC,UAAA3B,UAAA,oBACA,OAAAP,EAAAmC,YAAA5B,KAAA,SAAA6B,GACA,SAAA7B,KAAAgrB,4BAAA,cAAAlqB,EAAAsF,SAaA2jB,EAAA7pB,UAAAgrB,uBAAA,SAAApqB,EAAAsF,EAAA+kB,GAEA,YADA,IAAAA,IAAmCA,GAAA,GACnC1rB,EAAAkC,UAAA3B,UAAA,oBACA,OAAAP,EAAAmC,YAAA5B,KAAA,SAAA6B,GACA,SAAA7B,KAAAorB,0BAAA,YAAAtqB,EAAAsF,EAAA+kB,SAYApB,EAAA7pB,UAAAmrB,2BAAA,SAAAvqB,EAAAsF,GACA,OAAA3G,EAAAkC,UAAA3B,UAAA,oBACA,OAAAP,EAAAmC,YAAA5B,KAAA,SAAA6B,GACA,SAAA7B,KAAAorB,0BAAA,cAAAtqB,EAAAsF,SAIA2jB,EAAA7pB,UAAAyqB,2BAAA,SAAAlc,EAAA6c,EAAAxqB,EAAAsF,GACA,OAAA3G,EAAAkC,UAAA3B,UAAA,oBACA,IAAA0D,EACA,OAAAjE,EAAAmC,YAAA5B,KAAA,SAAA6B,GAEA,OADA6B,EAAAoO,EAAAjR,cAAAC,GACA,GAAAd,KAAAgqB,eAAAvqB,EAAAsQ,SAAA,CAA4EtB,OAAAyb,SAAA,qDAAAoB,EAAA,OAAA5nB,GAA2G0C,UAIvL2jB,EAAA7pB,UAAA8qB,4BAAA,SAAAvc,EAAA3N,EAAAsF,GACA,OAAA3G,EAAAkC,UAAA3B,UAAA,oBACA,IAAA0D,EACA,OAAAjE,EAAAmC,YAAA5B,KAAA,SAAA6B,GAEA,OADA6B,EAAAoO,EAAAjR,cAAAC,GACA,GAAAd,KAAAgqB,eAAAvqB,EAAAsQ,SAAA,CAA4EtB,OAAAyb,SAAA,+CAAAxmB,GAAgF0C,UAI5J2jB,EAAA7pB,UAAAkrB,0BAAA,SAAA3c,EAAA3N,EAAAsF,EAAA+kB,GAEA,YADA,IAAAA,IAAmCA,GAAA,GACnC1rB,EAAAkC,UAAA3B,UAAA,oBACA,IAAA0D,EACA,OAAAjE,EAAAmC,YAAA5B,KAAA,SAAA6B,GAEA,OADA6B,EAAAoO,EAAAjR,cAAAC,GACA,GAAAd,KAAAgqB,eAAAvqB,EAAAsQ,SAAA,CAA4EtB,OAAAyb,SAAA,wCAAAxmB,EAAAuN,MAAAka,EAAA,uBAAA1kB,GAA2HL,UAIvM2jB,EA1MA,CA2MCta,EAAA/O,SACDnB,EAAAmB,QAAAqpB,uCC/NArqB,EAAA6rB,EAAAC,GAAA9rB,EAAA+rB,EAAAD,EAAA,8BAAAhqB,IAAA9B,EAAA+rB,EAAAD,EAAA,6BAAAzb,IAAArQ,EAAA+rB,EAAAD,EAAA,2BAAA3W,IAAAnV,EAAA+rB,EAAAD,EAAA,+BAAA7qB,IAAAjB,EAAA+rB,EAAAD,EAAA,4BAAAE,IAAAhsB,EAAA+rB,EAAAD,EAAA,+BAAAG,IAAAjsB,EAAA+rB,EAAAD,EAAA,8BAAA7pB,IAAAjC,EAAA+rB,EAAAD,EAAA,gCAAA5pB,IAAAlC,EAAA+rB,EAAAD,EAAA,iCAAAI,IAAAlsB,EAAA+rB,EAAAD,EAAA,6BAAAnF,IAAA3mB,EAAA+rB,EAAAD,EAAA,2BAAA1D,IAAApoB,EAAA+rB,EAAAD,EAAA,6BAAAvO,IAAAvd,EAAA+rB,EAAAD,EAAA,mCAAAK,IAAAnsB,EAAA+rB,EAAAD,EAAA,4BAAAM,IAAApsB,EAAA+rB,EAAAD,EAAA,qCAAAO,IAAArsB,EAAA+rB,EAAAD,EAAA,qCAAAQ,IAAAtsB,EAAA+rB,EAAAD,EAAA,kCAAAS,IAAAvsB,EAAA+rB,EAAAD,EAAA,yCAAAU,IAAAxsB,EAAA+rB,EAAAD,EAAA,iCAAAW,IAAAzsB,EAAA+rB,EAAAD,EAAA,oCAAAY;;;;;;;;;;;;;;;AAgBA,IAAAC,EAAA,SAAAZ,EAAAzG,GAIA,OAHAqH,EAAAhtB,OAAAitB,gBACA,CAAUC,UAAA,cAAgB1gB,OAAA,SAAA4f,EAAAzG,GAAsCyG,EAAAc,UAAAvH,IAChE,SAAAyG,EAAAzG,GAAyB,QAAAwH,KAAAxH,IAAA5c,eAAAokB,KAAAf,EAAAe,GAAAxH,EAAAwH,KACzBH,EAAAZ,EAAAzG,IAGO,SAAAxjB,EAAAiqB,EAAAzG,GAEP,SAAAyH,IAAmBzsB,KAAA8mB,YAAA2E,EADnBY,EAAAZ,EAAAzG,GAEAyG,EAAAvrB,UAAA,OAAA8kB,EAAA3lB,OAAAkH,OAAAye,IAAAyH,EAAAvsB,UAAA8kB,EAAA9kB,UAAA,IAAAusB,GAGO,IAAA1c,EAAA,WAQP,OAPAA,EAAA1Q,OAAAmpB,QAAA,SAAAkE,GACA,QAAAtE,EAAAnb,EAAA,EAAA0f,EAAA3pB,UAAAqC,OAAgD4H,EAAA0f,EAAO1f,IAEvD,QAAAuf,KADApE,EAAAplB,UAAAiK,GACAmb,EAAA/oB,OAAAa,UAAAkI,eAAA7G,KAAA6mB,EAAAoE,KAAAE,EAAAF,GAAApE,EAAAoE,IAEA,OAAAE,GAEA3c,EAAAhN,MAAA/C,KAAAgD,YAGO,SAAA6R,EAAAuT,EAAAnhB,GACP,IAAAylB,EAAA,GACA,QAAAF,KAAApE,EAAA/oB,OAAAa,UAAAkI,eAAA7G,KAAA6mB,EAAAoE,IAAAvlB,EAAAW,QAAA4kB,GAAA,IACAE,EAAAF,GAAApE,EAAAoE,IACA,SAAApE,GAAA,oBAAA/oB,OAAAutB,sBACA,KAAA3f,EAAA,MAAAuf,EAAAntB,OAAAutB,sBAAAxE,GAA4Dnb,EAAAuf,EAAAnnB,OAAc4H,IAC1EhG,EAAAW,QAAA4kB,EAAAvf,IAAA,GAAA5N,OAAAa,UAAA2sB,qBAAAtrB,KAAA6mB,EAAAoE,EAAAvf,MACAyf,EAAAF,EAAAvf,IAAAmb,EAAAoE,EAAAvf,KAEA,OAAAyf,EAGO,SAAA/rB,EAAAmsB,EAAA5M,EAAA7Q,EAAA0d,GACP,IAAAtB,EAAAuB,EAAAhqB,UAAAqC,OAAAkmB,EAAAyB,EAAA,EAAA9M,EAAA,OAAA6M,IAAA1tB,OAAA4tB,yBAAA/M,EAAA7Q,GAAA0d,EACA,qBAAAG,SAAA,oBAAAA,QAAAC,SAAA5B,EAAA2B,QAAAC,SAAAL,EAAA5M,EAAA7Q,EAAA0d,QACA,QAAA9f,EAAA6f,EAAAznB,OAAA,EAA4C4H,GAAA,EAAQA,KAAAwe,EAAAqB,EAAA7f,MAAAse,GAAAyB,EAAA,EAAAvB,EAAAF,GAAAyB,EAAA,EAAAvB,EAAAvL,EAAA7Q,EAAAkc,GAAAE,EAAAvL,EAAA7Q,KAAAkc,GACpD,OAAAyB,EAAA,GAAAzB,GAAAlsB,OAAAC,eAAA4gB,EAAA7Q,EAAAkc,KAGO,SAAAG,EAAA0B,EAAAC,GACP,gBAAAnN,EAAA7Q,GAAmCge,EAAAnN,EAAA7Q,EAAA+d,IAG5B,SAAAzB,EAAA2B,EAAAC,GACP,qBAAAL,SAAA,oBAAAA,QAAAM,SAAA,OAAAN,QAAAM,SAAAF,EAAAC,GAGO,SAAA5rB,EAAA6G,EAAAilB,EAAAC,EAAAC,GACP,WAAAD,MAAArnB,UAAA,SAAA8D,EAAAC,GACA,SAAAwjB,EAAApuB,GAAmC,IAAMquB,EAAAF,EAAAjiB,KAAAlM,IAA+B,MAAAyH,GAAYmD,EAAAnD,IACpF,SAAA8G,EAAAvO,GAAkC,IAAMquB,EAAAF,EAAA,SAAAnuB,IAAmC,MAAAyH,GAAYmD,EAAAnD,IACvF,SAAA4mB,EAAAxhB,GAA+BA,EAAAT,KAAAzB,EAAAkC,EAAA7M,OAAA,IAAAkuB,EAAA,SAAAvjB,GAAiEA,EAAAkC,EAAA7M,SAAyBwO,KAAA4f,EAAA7f,GACzH8f,GAAAF,IAAA5qB,MAAAyF,EAAAilB,GAAA,KAAA/hB,UAIO,SAAA9J,EAAA4G,EAAAU,GACP,IAAwG4kB,EAAAC,EAAArB,EAAAsB,EAAxGC,EAAA,CAAatoB,MAAA,EAAAE,KAAA,WAA6B,KAAA6mB,EAAA,SAAAA,EAAA,GAA0B,OAAAA,EAAA,IAAehS,KAAA,GAAAwT,IAAA,IACnF,OAAAF,EAAA,CAAgBtiB,KAAAyiB,EAAA,GAAAC,MAAAD,EAAA,GAAA1H,OAAA0H,EAAA,IAAqD,oBAAArnB,SAAAknB,EAAAlnB,OAAAgC,UAAA,WAAoE,OAAA9I,OAAeguB,EACxJ,SAAAG,EAAAxB,GAAsB,gBAAA0B,GAAsB,OAAAR,EAAA,CAAAlB,EAAA0B,KAC5C,SAAAR,EAAAS,GACA,GAAAR,EAAA,UAAAjjB,UAAA,mCACA,MAAAojB,EAAA,IACA,GAAAH,EAAA,EAAAC,IAAArB,EAAA,EAAA4B,EAAA,GAAAP,EAAA,UAAAO,EAAA,GAAAP,EAAA,YAAArB,EAAAqB,EAAA,YAAArB,EAAAnrB,KAAAwsB,GAAA,GAAAA,EAAAriB,SAAAghB,IAAAnrB,KAAAwsB,EAAAO,EAAA,KAAA1iB,KAAA,OAAA8gB,EAEA,OADAqB,EAAA,EAAArB,IAAA4B,EAAA,GAAAA,EAAA,GAAA5B,EAAAltB,QACA8uB,EAAA,IACA,cAAA5B,EAAA4B,EAAuC,MACvC,OAAkC,OAAlCL,EAAAtoB,QAAkC,CAASnG,MAAA8uB,EAAA,GAAA1iB,MAAA,GAC3C,OAAAqiB,EAAAtoB,QAAkCooB,EAAAO,EAAA,GAAWA,EAAA,IAAU,SACvD,OAAAA,EAAAL,EAAAC,IAAAK,MAAyCN,EAAAvT,KAAA6T,MAAc,SACvD,QACA,GAAA7B,EAAAuB,EAAAvT,OAAAgS,IAAArnB,OAAA,GAAAqnB,IAAArnB,OAAA,UAAAipB,EAAA,QAAAA,EAAA,KAA6GL,EAAA,EAAO,SACpH,OAAAK,EAAA,MAAA5B,GAAA4B,EAAA,GAAA5B,EAAA,IAAA4B,EAAA,GAAA5B,EAAA,KAAgFuB,EAAAtoB,MAAA2oB,EAAA,GAAiB,MACjG,OAAAA,EAAA,IAAAL,EAAAtoB,MAAA+mB,EAAA,IAAwDuB,EAAAtoB,MAAA+mB,EAAA,GAAgBA,EAAA4B,EAAQ,MAChF,GAAA5B,GAAAuB,EAAAtoB,MAAA+mB,EAAA,IAA8CuB,EAAAtoB,MAAA+mB,EAAA,GAAgBuB,EAAAC,IAAAxlB,KAAA4lB,GAAgB,MAC9E5B,EAAA,IAAAuB,EAAAC,IAAAK,MACAN,EAAAvT,KAAA6T,MAAiC,SAEjCD,EAAAplB,EAAA3H,KAAAiH,EAAAylB,GACS,MAAAhnB,GAAYqnB,EAAA,GAAArnB,GAAa8mB,EAAA,EAAS,QAAUD,EAAApB,EAAA,EACrD,KAAA4B,EAAA,SAAAA,EAAA,GAAmC,OAAS9uB,MAAA8uB,EAAA,GAAAA,EAAA,UAAA1iB,MAAA,IAIrC,SAAAggB,EAAAzD,EAAA5oB,GACP,QAAAitB,KAAArE,EAAA5oB,EAAA6I,eAAAokB,KAAAjtB,EAAAitB,GAAArE,EAAAqE,IAGO,SAAAnG,EAAAmI,GACP,IAAArG,EAAA,oBAAArhB,QAAA0nB,EAAA1nB,OAAAgC,UAAAmE,EAAA,EACA,OAAAkb,IAAA5mB,KAAAitB,GACA,CACA9iB,KAAA,WAEA,OADA8iB,GAAAvhB,GAAAuhB,EAAAnpB,SAAAmpB,OAAA,GACA,CAAoBhvB,MAAAgvB,KAAAvhB,KAAArB,MAAA4iB,KAKb,SAAA1G,EAAA0G,EAAA7B,GACP,IAAAxE,EAAA,oBAAArhB,QAAA0nB,EAAA1nB,OAAAgC,UACA,IAAAqf,EAAA,OAAAqG,EACA,IAAAjD,EAAAtkB,EAAAgG,EAAAkb,EAAA5mB,KAAAitB,GAAAC,EAAA,GACA,IACA,gBAAA9B,QAAA,MAAApB,EAAAte,EAAAvB,QAAAE,KAAA6iB,EAAA/lB,KAAA6iB,EAAA/rB,OAEA,MAAAkK,GAAmBzC,EAAA,CAAMyC,SACzB,QACA,IACA6hB,MAAA3f,OAAAuc,EAAAlb,EAAA,YAAAkb,EAAA5mB,KAAA0L,GAEA,QAAiB,GAAAhG,EAAA,MAAAA,EAAAyC,OAEjB,OAAA+kB,EAGO,SAAAxR,IACP,QAAAwR,EAAA,GAAAxhB,EAAA,EAA4BA,EAAAjK,UAAAqC,OAAsB4H,IAClDwhB,IAAA7X,OAAAkR,EAAA9kB,UAAAiK,KACA,OAAAwhB,EAGO,SAAA5C,IACP,QAAAzD,EAAA,EAAAnb,EAAA,EAAAyhB,EAAA1rB,UAAAqC,OAAiD4H,EAAAyhB,EAAQzhB,IAAAmb,GAAAplB,UAAAiK,GAAA5H,OACzD,IAAAkmB,EAAA1f,MAAAuc,GAAAuG,EAAA,MAAA1hB,EAAA,EAAwCA,EAAAyhB,EAAQzhB,IAChD,QAAA8X,EAAA/hB,UAAAiK,GAAA2hB,EAAA,EAAAC,EAAA9J,EAAA1f,OAAwDupB,EAAAC,EAAQD,IAAAD,IAChEpD,EAAAoD,GAAA5J,EAAA6J,GACA,OAAArD,EAGO,SAAAO,EAAAuC,GACP,OAAAruB,gBAAA8rB,GAAA9rB,KAAAquB,IAAAruB,MAAA,IAAA8rB,EAAAuC,GAGO,SAAAtC,EAAAvjB,EAAAilB,EAAAE,GACP,IAAA7mB,OAAAgoB,cAAA,UAAAjkB,UAAA,wCACA,IAAAoC,EAAA+gB,EAAAL,EAAA5qB,MAAAyF,EAAAilB,GAAA,IAAAsB,EAAA,GACA,OAAA9hB,EAAA,GAAiBkhB,EAAA,QAAAA,EAAA,SAAAA,EAAA,UAAAlhB,EAAAnG,OAAAgoB,eAAA,WAAsF,OAAA9uB,MAAeiN,EACtH,SAAAkhB,EAAAxB,GAAsBqB,EAAArB,KAAA1f,EAAA0f,GAAA,SAAA0B,GAAgC,WAAAhoB,QAAA,SAAA0e,EAAAC,GAAqC+J,EAAArmB,KAAA,CAAAikB,EAAA0B,EAAAtJ,EAAAC,IAAA,GAAAgK,EAAArC,EAAA0B,OAC3F,SAAAW,EAAArC,EAAA0B,GAA2B,IAAMR,EAAAG,EAAArB,GAAA0B,IAAiB,MAAApnB,GAAYgoB,EAAAF,EAAA,MAAA9nB,IAC9D,SAAA4mB,EAAAtC,GAAsBA,EAAA/rB,iBAAAssB,EAAAzlB,QAAA8D,QAAAohB,EAAA/rB,MAAA6uB,GAAArgB,KAAAkhB,EAAA9kB,GAAA6kB,EAAAF,EAAA,MAAAxD,GACtB,SAAA2D,EAAA1vB,GAA6BwvB,EAAA,OAAAxvB,GAC7B,SAAA4K,EAAA5K,GAA4BwvB,EAAA,QAAAxvB,GAC5B,SAAAyvB,EAAAnB,EAAAO,GAA2BP,EAAAO,GAAAU,EAAApjB,QAAAojB,EAAA1pB,QAAA2pB,EAAAD,EAAA,MAAAA,EAAA,QAGpB,SAAA/C,EAAAwC,GACP,IAAAvhB,EAAAuf,EACA,OAAAvf,EAAA,GAAiBkhB,EAAA,QAAAA,EAAA,iBAAAlnB,GAA4C,MAAAA,IAAWknB,EAAA,UAAAlhB,EAAAnG,OAAAgC,UAAA,WAAqD,OAAA9I,MAAeiN,EAC5I,SAAAkhB,EAAAxB,EAAAmB,GAAyB7gB,EAAA0f,GAAA6B,EAAA7B,GAAA,SAAA0B,GAA6B,OAAA7B,MAAA,CAAoBhtB,MAAAssB,EAAA0C,EAAA7B,GAAA0B,IAAAziB,KAAA,WAAA+gB,GAAgDmB,IAAAO,MAAkBP,GAGrI,SAAA7B,EAAAuC,GACP,IAAA1nB,OAAAgoB,cAAA,UAAAjkB,UAAA,wCACA,IAAAoC,EAAAkb,EAAAqG,EAAA1nB,OAAAgoB,eACA,OAAA3G,IAAA5mB,KAAAitB,MAAA,oBAAAnI,IAAAmI,KAAA1nB,OAAAgC,YAAAmE,EAAA,GAA2GkhB,EAAA,QAAAA,EAAA,SAAAA,EAAA,UAAAlhB,EAAAnG,OAAAgoB,eAAA,WAAsF,OAAA9uB,MAAeiN,GAChN,SAAAkhB,EAAAxB,GAAsB1f,EAAA0f,GAAA6B,EAAA7B,IAAA,SAAA0B,GAA8B,WAAAhoB,QAAA,SAAA8D,EAAAC,GAAgDikB,EAAAG,EAAA7B,GAAA0B,GAAAY,EAAA9kB,EAAAC,EAAAikB,EAAAziB,KAAAyiB,EAAA7uB,UACpG,SAAAyvB,EAAA9kB,EAAAC,EAAAqhB,EAAA4C,GAA4ChoB,QAAA8D,QAAAkkB,GAAArgB,KAAA,SAAAqgB,GAAsClkB,EAAA,CAAU3K,MAAA6uB,EAAAziB,KAAA6f,KAAwBrhB,IAG7G,SAAA8hB,EAAAiD,EAAAC,GAEP,OADA/vB,OAAAC,eAAgCD,OAAAC,eAAA6vB,EAAA,OAAuC3vB,MAAA4vB,IAAwBD,EAAAC,MAC/FD,EAGO,SAAAhD,EAAAkD,GACP,GAAAA,KAAAC,WAAA,OAAAD,EACA,IAAAhjB,EAAA,GACA,SAAAgjB,EAAA,QAAAV,KAAAU,EAAAhwB,OAAA+I,eAAA7G,KAAA8tB,EAAAV,KAAAtiB,EAAAsiB,GAAAU,EAAAV,IAEA,OADAtiB,EAAA3L,QAAA2uB,EACAhjB,EAGO,SAAA+f,EAAAiD,GACP,OAAAA,KAAAC,WAAAD,EAAA,CAA4C3uB,QAAA2uB,yCCjM5ChwB,OAAAC,eAAAC,EAAA,cAA8CC,OAAA,IAC9C,IAUA+vB,EAVA9vB,EAAcC,EAAQ,QACtB+P,EAAgB/P,EAAQ,QACxB8vB,EAAkB9vB,EAAQ,QAC1B+vB,EAA4B/vB,EAAQ,QACpCoS,EAAkBpS,EAAQ,QAC1BgwB,EAAoBhwB,EAAQ,QAC5BmF,EAAqBnF,EAAQ,QAC7BmqB,EAAuCnqB,EAAQ,QAC/CwkB,EAA6BxkB,EAAQ,SAGrC,SAAA6vB,GACAA,EAAA,WACAA,EAAA,kBAFA,CAGCA,EAAAhwB,EAAAgwB,iBAAAhwB,EAAAgwB,eAAA,KAYD,IAAAI,EAAA,SAAAxuB,GAEA,SAAAwuB,IACA,cAAAxuB,KAAA4B,MAAA/C,KAAAgD,YAAAhD,KAiMA,OAnMAP,EAAA+B,UAAAmuB,EAAAxuB,GASAwuB,EAAAzvB,UAAA0vB,cAAA,SAAAC,GACA,OAAApwB,EAAAkC,UAAA3B,UAAA,oBACA,OAAAP,EAAAmC,YAAA5B,KAAA,SAAA6B,GACA,SAAA7B,KAAA8vB,UAAAP,EAAAQ,GAAAF,EAAA/rB,IAAAgO,EAAAjR,sBASA8uB,EAAAzvB,UAAA8vB,gBAAA,SAAAC,GACA,OAAAxwB,EAAAkC,UAAA3B,UAAA,oBACA,OAAAP,EAAAmC,YAAA5B,KAAA,SAAA6B,GACA,SAAA7B,KAAA8vB,UAAAP,EAAAW,MAAAD,EAAAnsB,IAAAgO,EAAA9Q,wBASA2uB,EAAAzvB,UAAAoC,YAAA,SAAAoB,GACA,OAAAjE,EAAAkC,UAAA3B,UAAA,oBACA,IAAAqC,EACA,OAAA5C,EAAAmC,YAAA5B,KAAA,SAAA6B,GACA,OAAAA,EAAA8D,OACA,gBAAA3F,KAAA8vB,UAAAP,EAAAQ,GAAAje,EAAAjR,cAAA6C,KACA,OAEA,OADArB,EAAAR,EAAAgE,OACA,GAAAxD,EAAAgD,OAAAhD,EAAA,eAUAstB,EAAAzvB,UAAAiwB,cAAA,SAAAnO,GACA,OAAAviB,EAAAkC,UAAA3B,UAAA,oBACA,IAAAqC,EACA,OAAA5C,EAAAmC,YAAA5B,KAAA,SAAA6B,GACA,OAAAA,EAAA8D,OACA,gBAAA3F,KAAA8vB,UAAAP,EAAAW,MAAApe,EAAA9Q,gBAAAghB,KACA,OAEA,OADA3f,EAAAR,EAAAgE,OACA,GAAAxD,EAAAgD,OAAAhD,EAAA,eAUAstB,EAAAzvB,UAAA+Z,MAAA,SAAAkR,GAEA,YADA,IAAAA,IAAmCA,GAAA,GACnC1rB,EAAAkC,UAAA3B,UAAA,oBACA,IAAAqM,EACA,OAAA5M,EAAAmC,YAAA5B,KAAA,SAAA6B,GACA,OAAAA,EAAA8D,OACA,gBAAA3F,KAAAC,QAAA6Q,QAAA,CACAlH,KAAA/E,EAAAkM,kBAAAC,MACAvH,IAAA,QACAwH,MAAAka,EAAA,wBAEA,OAEA,GADA9e,EAAAxK,EAAAgE,QACAwG,EAAAjL,OAAAiL,EAAAjL,KAAAiE,OACA,UAAA6e,EAAAxjB,QAAA,oCAEA,aAAA+uB,EAAA/uB,QAAA2L,EAAAjL,KAAA,GAAApB,KAAAC,gBAUA0vB,EAAAzvB,UAAAkwB,WAAA,SAAAhvB,GACA,OAAA3B,EAAAkC,UAAA3B,UAAA,oBACA,IAAAqM,EACA,OAAA5M,EAAAmC,YAAA5B,KAAA,SAAA6B,GACA,OAAAA,EAAA8D,OACA,gBAAA3F,KAAAC,QAAA6Q,QAAA,CACAlH,KAAA/E,EAAAkM,kBAAAC,MACAvH,IAAA,QACAuB,OAAA,MACAiG,MAAA,YACAC,MAAA,CACAvM,YAAAvD,EAAAuD,gBAGA,OAEA,OADA0H,EAAAxK,EAAAgE,OACA,OAAA4pB,EAAA/uB,QAAA2L,EAAAjL,KAAA,GAAApB,KAAAC,gBAUA0vB,EAAAzvB,UAAAuZ,WAAA,SAAAvV,GACA,OAAAzE,EAAAkC,UAAA3B,UAAA,oBACA,IAAAkR,EAAA7E,EACA/K,EAAAtB,KACA,OAAAP,EAAAmC,YAAA5B,KAAA,SAAA6B,GACA,OAAAA,EAAA8D,OACA,OAEA,OADAuL,EAAAye,EAAAU,kBAAAnsB,GACA,GAAAlE,KAAAC,QAAA6Q,QAAA,CACArH,IAAA,gBACAG,KAAA/E,EAAAkM,kBAAAC,MACAE,WAEA,OAEA,OADA7E,EAAAxK,EAAAgE,OACA,IACAzE,KAAAiL,EAAAjL,KAAA0C,IAAA,SAAA1C,GAAuE,WAAAsuB,EAAAhvB,QAAAU,EAAAE,EAAArB,WACvE0R,OAAAtF,EAAAuF,WAAAD,OACA2e,MAAAjkB,EAAAikB,cAWAX,EAAAzvB,UAAAqwB,oBAAA,SAAArsB,GACA,IAAA5C,EAAAtB,KACAkR,EAAAye,EAAAU,kBAAAnsB,GACA,WAAA2lB,EAAAnpB,QAAA,CACA+I,IAAA,gBACAyH,SACSlR,KAAAC,QAAA,SAAAmB,GAAiC,WAAAsuB,EAAAhvB,QAAAU,EAAAE,EAAArB,YAE1C0vB,EAAAU,kBAAA,SAAAnsB,GACA,IAAAgN,EAAA,GACAsf,GAAA,EASA,GARAtsB,EAAApD,OACAoQ,EAAAhP,QAAA4P,EAAAjR,cAAAqD,EAAApD,MACA0vB,GAAA,GAEAtsB,EAAA0V,eACA1I,EAAA3O,MAAAuP,EAAAjR,cAAAqD,EAAA0V,cACA4W,GAAA,IAEAA,EACA,UAAA3lB,UAAA,wDAEA,OAAAqG,GAEAye,EAAAzvB,UAAA4vB,UAAA,SAAAW,EAAA7R,GACA,OAAAnf,EAAAkC,UAAA3B,UAAA,oBACA,IAAAkR,EAAA7E,EACAxK,EACAP,EAAAtB,KACA,OAAAP,EAAAmC,YAAA5B,KAAA,SAAA0F,GACA,OAAAA,EAAAC,OACA,OAEA,OADA9D,EAAA,GAAwCA,EAAA4uB,GAAA7R,EAAxC1N,EAAwCrP,EACxC,GAAA7B,KAAAC,QAAA6Q,QAAA,CACAlH,KAAA/E,EAAAkM,kBAAAC,MACAvH,IAAA,QACAyH,WAEA,OAEA,OADA7E,EAAA3G,EAAAG,OACA,GAAAwG,EAAAjL,KAAA0C,IAAA,SAAA4sB,GAAmF,WAAAlB,EAAA9uB,QAAAgwB,EAAApvB,EAAArB,kBAKnF0vB,EApMA,CAqMClgB,EAAA/O,SACDnB,EAAAmB,QAAAivB,uCChOA,IAAAhV,EAAYjb,EAAQ,QAEpByI,EAAA9I,OAAAa,UAAAkI,eAEAoT,EAAA,CACAE,WAAA,EACAiV,iBAAA,EACAC,WAAA,GACAjV,QAAA,QACAC,iBAAA,EACAZ,OAAA,EACA6V,QAAAlW,EAAAzM,OACA2N,UAAA,IACAiV,MAAA,EACAC,mBAAA,EACAC,0BAAA,EACAC,eAAA,IACAC,aAAA,EACAC,cAAA,EACA7U,oBAAA,GAGA0U,EAAA,SAAAI,GACA,OAAAA,EAAAriB,QAAA,YAAgC,SAAAsiB,EAAAC,GAChC,OAAA/lB,OAAA2B,aAAA+a,SAAAqJ,EAAA,QASAC,EAAA,sBAGA3V,EAAA,iBAEA4V,EAAA,SAAAJ,EAAAhrB,GACA,IAKA6G,EALA3F,EAAA,GACAmqB,EAAArrB,EAAA2qB,kBAAAK,EAAAriB,QAAA,UAAAqiB,EACA9f,EAAAlL,EAAA6qB,iBAAAhR,SAAAxZ,EAAAL,EAAA6qB,eACA7hB,EAAAqiB,EAAA5iB,MAAAzI,EAAAyV,UAAAvK,GACAogB,GAAA,EAGA/V,EAAAvV,EAAAuV,QACA,GAAAvV,EAAAwV,gBACA,IAAA3O,EAAA,EAAmBA,EAAAmC,EAAA/J,SAAkB4H,EACrC,IAAAmC,EAAAnC,GAAArF,QAAA,WACAwH,EAAAnC,KAAA2O,EACAD,EAAA,QACiBvM,EAAAnC,KAAAskB,IACjB5V,EAAA,cAEA+V,EAAAzkB,EACAA,EAAAmC,EAAA/J,QAKA,IAAA4H,EAAA,EAAeA,EAAAmC,EAAA/J,SAAkB4H,EACjC,GAAAA,IAAAykB,EAAA,CAGA,IAKAriB,EAAAwQ,EALA+H,EAAAxY,EAAAnC,GAEA0kB,EAAA/J,EAAAhgB,QAAA,MACAgqB,GAAA,IAAAD,EAAA/J,EAAAhgB,QAAA,KAAA+pB,EAAA,GAGA,IAAAC,GACAviB,EAAAjJ,EAAAyqB,QAAAjJ,EAAApM,EAAAqV,QAAAlV,GACAkE,EAAAzZ,EAAAkW,mBAAA,UAEAjN,EAAAjJ,EAAAyqB,QAAAjJ,EAAAva,MAAA,EAAAukB,GAAApW,EAAAqV,QAAAlV,GACAkE,EAAAzZ,EAAAyqB,QAAAjJ,EAAAva,MAAAukB,EAAA,GAAApW,EAAAqV,QAAAlV,IAGAkE,GAAAzZ,EAAA4qB,0BAAA,eAAArV,IACAkE,EAAAmR,EAAAnR,IAGAA,GAAAzZ,EAAA4U,OAAA6E,EAAAjY,QAAA,UACAiY,IAAAhR,MAAA,MAGA1G,EAAA5G,KAAA+F,EAAA+H,GACA/H,EAAA+H,GAAAsL,EAAAkX,QAAAvqB,EAAA+H,GAAAwQ,GAEAvY,EAAA+H,GAAAwQ,EAIA,OAAAvY,GAGAwqB,EAAA,SAAAC,EAAAlS,EAAAzZ,GAGA,IAFA,IAAA4rB,EAAAnS,EAEA5S,EAAA8kB,EAAA1sB,OAAA,EAAkC4H,GAAA,IAAQA,EAAA,CAC1C,IAAA3F,EACA2qB,EAAAF,EAAA9kB,GAEA,UAAAglB,GAAA7rB,EAAA8qB,YACA5pB,EAAA,GAAAsP,OAAAob,OACS,CACT1qB,EAAAlB,EAAA+qB,aAAA9xB,OAAAkH,OAAA,SACA,IAAA2rB,EAAA,MAAAD,EAAAE,OAAA,UAAAF,EAAAE,OAAAF,EAAA5sB,OAAA,GAAA4sB,EAAA5kB,MAAA,MAAA4kB,EACAjM,EAAAiC,SAAAiK,EAAA,IACA9rB,EAAA8qB,aAAA,KAAAgB,GAGAE,MAAApM,IACAiM,IAAAC,GACA3mB,OAAAya,KAAAkM,GACAlM,GAAA,GACA5f,EAAA8qB,aAAAlL,GAAA5f,EAAAwqB,YAEAtpB,EAAA,GACAA,EAAA0e,GAAAgM,GAEA1qB,EAAA4qB,GAAAF,EAXA1qB,EAAA,CAAuB+qB,EAAAL,GAevBA,EAAA1qB,EAGA,OAAA0qB,GAGAM,EAAA,SAAAC,EAAA1S,EAAAzZ,GACA,GAAAmsB,EAAA,CAKA,IAAAljB,EAAAjJ,EAAAsV,UAAA6W,EAAAxjB,QAAA,sBAAAwjB,EAIAzX,EAAA,eACA0X,EAAA,gBAIAC,EAAA3X,EAAA6K,KAAAtW,GACAqjB,EAAAD,EAAApjB,EAAAhC,MAAA,EAAAolB,EAAAzM,OAAA3W,EAIAjP,EAAA,GACA,GAAAsyB,EAAA,CAEA,IAAAtsB,EAAA+qB,cAAAhpB,EAAA5G,KAAAlC,OAAAa,UAAAwyB,KACAtsB,EAAAuqB,gBACA,OAIAvwB,EAAAsI,KAAAgqB,GAKA,IAAAzlB,EAAA,EACA,cAAAwlB,EAAAD,EAAA7M,KAAAtW,KAAApC,EAAA7G,EAAA0qB,MAAA,CAEA,GADA7jB,GAAA,GACA7G,EAAA+qB,cAAAhpB,EAAA5G,KAAAlC,OAAAa,UAAAuyB,EAAA,GAAAplB,MAAA,SACAjH,EAAAuqB,gBACA,OAGAvwB,EAAAsI,KAAA+pB,EAAA,IASA,OAJAA,GACAryB,EAAAsI,KAAA,IAAA2G,EAAAhC,MAAAolB,EAAAzM,OAAA,KAGA8L,EAAA1xB,EAAAyf,EAAAzZ,KAGAusB,EAAA,SAAA9V,GACA,IAAAA,EACA,OAAArB,EAGA,UAAAqB,EAAAgU,cAAApqB,IAAAoW,EAAAgU,SAAA,oBAAAhU,EAAAgU,QACA,UAAAhmB,UAAA,iCAGA,wBAAAgS,EAAAlB,SAAA,UAAAkB,EAAAlB,SAAA,eAAAkB,EAAAlB,QACA,UAAArW,MAAA,qEAEA,IAAAqW,EAAA,qBAAAkB,EAAAlB,QAAAH,EAAAG,QAAAkB,EAAAlB,QAEA,OACAD,UAAA,qBAAAmB,EAAAnB,UAAAF,EAAAE,YAAAmB,EAAAnB,UACAiV,gBAAA,mBAAA9T,EAAA8T,gBAAA9T,EAAA8T,gBAAAnV,EAAAmV,gBACAC,WAAA,kBAAA/T,EAAA+T,WAAA/T,EAAA+T,WAAApV,EAAAoV,WACAjV,UACAC,gBAAA,mBAAAiB,EAAAjB,gBAAAiB,EAAAjB,gBAAAJ,EAAAI,gBACAZ,MAAA,mBAAA6B,EAAA7B,MAAA6B,EAAA7B,MAAAQ,EAAAR,MACA6V,QAAA,oBAAAhU,EAAAgU,QAAAhU,EAAAgU,QAAArV,EAAAqV,QACAhV,UAAA,kBAAAgB,EAAAhB,WAAAlB,EAAAiY,SAAA/V,EAAAhB,WAAAgB,EAAAhB,UAAAL,EAAAK,UACAiV,MAAA,kBAAAjU,EAAAiU,MAAAjU,EAAAiU,MAAAtV,EAAAsV,MACAC,mBAAA,IAAAlU,EAAAkU,kBACAC,yBAAA,mBAAAnU,EAAAmU,yBAAAnU,EAAAmU,yBAAAxV,EAAAwV,yBACAC,eAAA,kBAAApU,EAAAoU,eAAApU,EAAAoU,eAAAzV,EAAAyV,eACAC,aAAA,IAAArU,EAAAqU,YACAC,aAAA,mBAAAtU,EAAAsU,aAAAtU,EAAAsU,aAAA3V,EAAA2V,aACA7U,mBAAA,mBAAAO,EAAAP,mBAAAO,EAAAP,mBAAAd,EAAAc,qBAIA9M,EAAAjQ,QAAA,SAAA6xB,EAAAvU,GACA,IAAAzW,EAAAusB,EAAA9V,GAEA,QAAAuU,GAAA,OAAAA,GAAA,qBAAAA,EACA,OAAAhrB,EAAA+qB,aAAA9xB,OAAAkH,OAAA,SASA,IANA,IAAAssB,EAAA,kBAAAzB,EAAAI,EAAAJ,EAAAhrB,GAAAgrB,EACA9pB,EAAAlB,EAAA+qB,aAAA9xB,OAAAkH,OAAA,SAIAnG,EAAAf,OAAAe,KAAAyyB,GACA5lB,EAAA,EAAmBA,EAAA7M,EAAAiF,SAAiB4H,EAAA,CACpC,IAAAoC,EAAAjP,EAAA6M,GACA6lB,EAAAR,EAAAjjB,EAAAwjB,EAAAxjB,GAAAjJ,GACAkB,EAAAqT,EAAAoY,MAAAzrB,EAAAwrB,EAAA1sB,GAGA,OAAAuU,EAAAqY,QAAA1rB,yCC/OAjI,OAAAC,eAAAC,EAAA,cAA8CC,OAAA,IAC9C,IAAAC,EAAcC,EAAQ,QACtBkE,EAAclE,EAAQ,QACtB+P,EAAgB/P,EAAQ,QACxBmT,EAAgBnT,EAAQ,QACxBoS,EAAkBpS,EAAQ,QAC1BuzB,EAA4BvzB,EAAQ,QACpCmZ,EAAmCnZ,EAAQ,QAC3CwzB,EAA0BxzB,EAAQ,QAClCmD,EAAanD,EAAQ,QACrByzB,EAAsBzzB,EAAQ,QAC9B0U,EAA4B1U,EAAQ,QAYpC0zB,EAAA,SAAAjyB,GAEA,SAAAiyB,IACA,cAAAjyB,KAAA4B,MAAA/C,KAAAgD,YAAAhD,KAsTA,OAxTAP,EAAA+B,UAAA4xB,EAAAjyB,GAOAiyB,EAAAlzB,UAAAmzB,aAAA,WACA,OAAA5zB,EAAAkC,UAAA3B,UAAA,oBACA,IAAA6B,EACA,OAAApC,EAAAmC,YAAA5B,KAAA,SAAA0F,GACA,OAAAA,EAAAC,OACA,OAEA,OADA9D,EAAAqxB,EAAAxyB,QAAAiW,KACA,GAAA3W,KAAAC,QAAA6Q,QAAA,CAAmErH,IAAA,UAAAwH,MAAA,kBACnE,oBAAApP,EAAAkB,MAAAmwB,EAAAxyB,QAAA,QAAAgF,EAAAG,OAAA7F,KAAAC,kBAUAmzB,EAAAlzB,UAAAozB,WAAA,SAAAxyB,GACA,OAAArB,EAAAkC,UAAA3B,UAAA,oBACA,IAAA6B,EACA,OAAApC,EAAAmC,YAAA5B,KAAA,SAAA0F,GACA,OAAAA,EAAAC,OACA,OAEA,OADA9D,EAAAgR,EAAAnS,QAAAiW,KACA,GAAA3W,KAAAC,QAAA6Q,QAAA,CAAmErH,IAAA,YAAAqI,EAAAjR,cAAAC,MACnE,oBAAAe,EAAAkB,MAAA8P,EAAAnS,QAAA,QAAAgF,EAAAG,OAAA7F,KAAAC,kBAWAmzB,EAAAlzB,UAAAqzB,cAAA,SAAAxb,EAAA3W,GACA,OAAA3B,EAAAkC,UAAA3B,UAAA,oBACA,IAAA4Q,EACA,OAAAnR,EAAAmC,YAAA5B,KAAA,SAAA6B,GACA,OAAAA,EAAA8D,OACA,OAEA,OADAiL,EAAAkB,EAAAjR,cAAAkX,GACA,GAAA/X,KAAAC,QAAA6Q,QAAA,CACArH,IAAA,YAAAmH,EACA5F,OAAA,MACA0L,SAAA,CAA2CqB,QAAA3W,GAC3C6P,MAAA,oBAEA,OAEA,OADApP,EAAAgE,OACA,UAUAutB,EAAAlzB,UAAAod,kBAAA,SAAAvF,GACA,OAAAtY,EAAAkC,UAAA3B,UAAA,oBACA,IAAA4Q,EAAAxP,EACAE,EAAAtB,KACA,OAAAP,EAAAmC,YAAA5B,KAAA,SAAA6B,GACA,OAAAA,EAAA8D,OACA,OAEA,OADAiL,EAAAkB,EAAAjR,cAAAkX,GACA,GAAA/X,KAAAC,QAAA6Q,QAAA,CACArH,IAAA,YAAAmH,EAAA,WACAK,MAAA,kBAEA,OAEA,OADA7P,EAAAS,EAAAgE,OACA,GAAAzE,EAAAiB,MAAAyB,IAAA,SAAA4sB,GAAkF,WAAA7tB,EAAAnC,QAAAgwB,EAAApvB,EAAArB,kBAalFmzB,EAAAlzB,UAAAszB,oBAAA,SAAAzb,EAAA7E,EAAA5B,EAAAmiB,GAEA,YADA,IAAAniB,IAA+BA,EAAA,IAC/B7R,EAAAkC,UAAA3B,UAAA,oBACA,IAAA4Q,EAAAM,EAAA9P,EACAE,EAAAtB,KACA,OAAAP,EAAAmC,YAAA5B,KAAA,SAAA6B,GACA,OAAAA,EAAA8D,OACA,OASA,OARAiL,EAAAkB,EAAAjR,cAAAkX,GACA7G,EAAA,CAAiCI,QAAAzJ,YACjCqL,IACAhC,EAAAiC,SAAAD,EAAA,GAAA5B,GAAAzJ,YAEA4rB,IACAviB,EAAAoa,UAAAmI,GAEA,GAAAzzB,KAAAC,QAAA6Q,QAAA,CACArH,IAAA,YAAAmH,EAAA,WACAM,WAEA,OAEA,OADA9P,EAAAS,EAAAgE,OACA,GAAAzE,EAAAyY,QAAA/V,IAAA,SAAAgW,GAAkF,WAAAqZ,EAAAzyB,QAAAoZ,EAAAxY,EAAArB,kBAalFmzB,EAAAlzB,UAAAwzB,wBAAA,SAAA3b,EAAA7E,EAAA5B,EAAAmiB,GAEA,YADA,IAAAniB,IAA+BA,EAAA,IAC/B7R,EAAAkC,UAAA3B,UAAA,oBACA,IAAAoB,EACAE,EAAAtB,KACA,OAAAP,EAAAmC,YAAA5B,KAAA,SAAA6B,GACA,OAAAA,EAAA8D,OACA,gBAAA3F,KAAA2zB,yBAAA5b,EAAA7E,EAAA5B,EAAAmiB,IACA,OAEA,OADAryB,EAAAS,EAAAgE,OACA,GAAAzE,EAAAkZ,cAAAxW,IAAA,SAAA8vB,GAAqF,WAAAX,EAAAvyB,QAAAkzB,EAAAtyB,EAAArB,kBAUrFmzB,EAAAlzB,UAAA2zB,4BAAA,SAAA9b,GACA,OAAAtY,EAAAkC,UAAA3B,UAAA,oBACA,IAAAoB,EACA,OAAA3B,EAAAmC,YAAA5B,KAAA,SAAA6B,GACA,OAAAA,EAAA8D,OACA,gBAAA3F,KAAA2zB,yBAAA5b,EAAA,MACA,OAEA,OADA3W,EAAAS,EAAAgE,OACA,GAAAzE,EAAA0yB,cAgBAV,EAAAlzB,UAAA6zB,6BAAA,SAAAhc,EAAAic,GACA,OAAAv0B,EAAAkC,UAAA3B,UAAA,oBACA,IAAA4Q,EAAAlN,EAAA7B,EAAA4Y,EACA,OAAAhb,EAAAmC,YAAA5B,KAAA,SAAA0F,GACA,OAAAA,EAAAC,OACA,OACAiL,EAAAkB,EAAAjR,cAAAkX,GACArU,EAAAoO,EAAAjR,cAAAmzB,GACAtuB,EAAAC,MAAA,EACA,OAGA,OAFAD,EAAAgV,KAAAhS,KAAA,UACA7G,EAAAoxB,EAAAvyB,QAAAiW,KACA,GAAA3W,KAAAC,QAAA6Q,QAAA,CACArH,IAAA,YAAAmH,EAAA,kBAAAlN,EACAuN,MAAA,gCAEA,oBAAApP,EAAAkB,MAAAkwB,EAAAvyB,QAAA,QAAAgF,EAAAG,OACA7F,KAAAC,YACA,OAEA,GADAwa,EAAA/U,EAAAG,OACA4U,aAAArG,EAAA1T,QAAA,CACA,SAAA+Z,EAAAkI,WACA,eAEA,SAAAlI,EAAAkI,WACA,UAAA9J,EAAAnY,QAAAkQ,GAGA,MAAA6J,EACA,uBAWA2Y,EAAAlzB,UAAAsd,uBAAA,SAAAzF,EAAA1S,GACA,OAAA5F,EAAAkC,UAAA3B,UAAA,oBACA,IAAA4Q,EACA,OAAAnR,EAAAmC,YAAA5B,KAAA,SAAA6B,GAEA,OADA+O,EAAAkB,EAAAjR,cAAAkX,GACA,GAAA/X,KAAAC,QAAA6Q,QAAA,CACArH,IAAA,YAAAmH,EAAA,cACA5F,OAAA,OACA0L,SAAA,CAAmCrR,UACnC4L,MAAA,6BAUAmiB,EAAAlzB,UAAAyd,sBAAA,SAAA5F,GACA,OAAAtY,EAAAkC,UAAA3B,UAAA,oBACA,IAAA4Q,EACA,OAAAnR,EAAAmC,YAAA5B,KAAA,SAAA6B,GAEA,OADA+O,EAAAkB,EAAAjR,cAAAkX,GACA,GAAA/X,KAAAC,QAAA6Q,QAAA,CACArH,IAAA,YAAAmH,EAAA,cACA5F,OAAA,SACAiG,MAAA,yBAKAmiB,EAAAlzB,UAAAyzB,yBAAA,SAAA5b,EAAA7E,EAAA5B,EAAAmiB,GAEA,YADA,IAAAniB,IAA+BA,EAAA,IAC/B7R,EAAAkC,UAAA3B,UAAA,oBACA,IAAA4Q,EAAAM,EAAAgW,EACA,OAAAznB,EAAAmC,YAAA5B,KAAA,SAAA6B,GACA,OAAAA,EAAA8D,OACA,OACAiL,EAAAkB,EAAAjR,cAAAkX,GACA7G,EAAA,CAAiCI,QAAAzJ,YACjCqL,IACAhC,EAAAiC,SAAAD,EAAA,GAAA5B,GAAAzJ,YAEA4rB,IACAviB,EAAAoa,UAAAmI,GAEA5xB,EAAA8D,MAAA,EACA,OAEA,OADA9D,EAAA6Y,KAAAhS,KAAA,UACA,GAAA1I,KAAAC,QAAA6Q,QAAA,CACArH,IAAA,YAAAmH,EAAA,iBACAM,QACAD,MAAA,2BAEA,gBAAApP,EAAAgE,QACA,OAEA,GADAqhB,EAAArlB,EAAAgE,OACAqhB,aAAA9S,EAAA1T,SAAA,MAAAwmB,EAAAvE,WACA,UAAA9J,EAAAnY,QAAAkQ,GAEA,MAAAsW,EACA,uBAKAznB,EAAAkB,WAAA,CACAiD,EAAAW,OAAA,OACA6uB,EAAAlzB,UAAA,qBACAT,EAAAkB,WAAA,CACAiD,EAAAW,OAAA,OACA6uB,EAAAlzB,UAAA,mBACAT,EAAAkB,WAAA,CACAiD,EAAA4c,YAAA,iBACA4S,EAAAlzB,UAAA,sBACAT,EAAAkB,WAAA,CACAiD,EAAAW,OAAA,OACA6uB,EAAAlzB,UAAA,0BACAT,EAAAkB,WAAA,CACAiD,EAAAW,OAAA,KACA6uB,EAAAlzB,UAAA,4BACAT,EAAAkB,WAAA,CACAiD,EAAAW,OAAA,KACA6uB,EAAAlzB,UAAA,gCACAT,EAAAkB,WAAA,CACAiD,EAAAW,OAAA,KACA6uB,EAAAlzB,UAAA,oCACAT,EAAAkB,WAAA,CACAiD,EAAAW,OAAA,OACA6uB,EAAAlzB,UAAA,qCACAT,EAAAkB,WAAA,CACAiD,EAAA4c,YAAA,iBACA4S,EAAAlzB,UAAA,8BACAkzB,EAAA3zB,EAAAkB,WAAA,CACAiD,EAAAY,WACA4uB,GACAA,EAzTA,CA0TC3jB,EAAA/O,SACDnB,EAAAmB,QAAA0yB,qCClVA/zB,OAAAC,eAAAC,EAAA,cAA8CC,OAAA,IAC9C,IAAAC,EAAcC,EAAQ,QACtB8vB,EAAkB9vB,EAAQ,QAI1Bu0B,EAAA,SAAA9yB,GAEA,SAAA8yB,IACA,cAAA9yB,KAAA4B,MAAA/C,KAAAgD,YAAAhD,KAwBA,OA1BAP,EAAA+B,UAAAyyB,EAAA9yB,GAIA9B,OAAAC,eAAA20B,EAAA/zB,UAAA,SAIAC,IAAA,WACA,OAAAH,KAAAF,MAAAsd,OAEA9c,YAAA,EACAC,cAAA,IAOA0zB,EAAA/zB,UAAAg0B,eAAA,SAAAvvB,GACA,OAAAlF,EAAAkC,UAAA3B,UAAA,oBACA,OAAAP,EAAAmC,YAAA5B,KAAA,SAAA6B,GACA,SAAA7B,KAAAC,QAAA6B,MAAAO,MAAA+tB,WAAA,CAA2EzrB,sBAI3EsvB,EA3BA,CA4BCzE,EAAA9uB,SACDnB,EAAAmB,QAAAuzB,qCCnCA50B,OAAAC,eAAAC,EAAA,cAA8CC,OAAA,IAC9C,IAAAC,EAAcC,EAAQ,QACtB+P,EAAgB/P,EAAQ,QACxBkE,EAAclE,EAAQ,QACtBy0B,EAAqBz0B,EAAQ,QAC7B00B,EAAqB10B,EAAQ,QAC7B20B,EAAqB30B,EAAQ,QAC7B40B,EAAuB50B,EAAQ,QAC/B60B,EAA6B70B,EAAQ,QACrC80B,EAAqB90B,EAAQ,QAC7B+0B,EAAsB/0B,EAAQ,QAC9Bg1B,EAAyBh1B,EAAQ,QAMjCi1B,EAAA,SAAAxzB,GAEA,SAAAwzB,IACA,cAAAxzB,KAAA4B,MAAA/C,KAAAgD,YAAAhD,KA6GA,OA/GAP,EAAA+B,UAAAmzB,EAAAxzB,GAIA9B,OAAAC,eAAAq1B,EAAAz0B,UAAA,QAIAC,IAAA,WACA,WAAAg0B,EAAAzzB,QAAAV,KAAAC,UAEAK,YAAA,EACAC,cAAA,IAEAlB,OAAAC,eAAAq1B,EAAAz0B,UAAA,SAIAC,IAAA,WACA,WAAAi0B,EAAA1zB,QAAAV,KAAAC,UAEAK,YAAA,EACAC,cAAA,IAEAlB,OAAAC,eAAAq1B,EAAAz0B,UAAA,SAIAC,IAAA,WACA,WAAAk0B,EAAA3zB,QAAAV,KAAAC,UAEAK,YAAA,EACAC,cAAA,IAEAlB,OAAAC,eAAAq1B,EAAAz0B,UAAA,WAIAC,IAAA,WACA,WAAAm0B,EAAA5zB,QAAAV,KAAAC,UAEAK,YAAA,EACAC,cAAA,IAEAlB,OAAAC,eAAAq1B,EAAAz0B,UAAA,iBAIAC,IAAA,WACA,WAAAo0B,EAAA7zB,QAAAV,KAAAC,UAEAK,YAAA,EACAC,cAAA,IAEAlB,OAAAC,eAAAq1B,EAAAz0B,UAAA,SAIAC,IAAA,WACA,WAAAq0B,EAAA9zB,QAAAV,KAAAC,UAEAK,YAAA,EACAC,cAAA,IAEAlB,OAAAC,eAAAq1B,EAAAz0B,UAAA,YAIAC,IAAA,WACA,WAAAu0B,EAAAh0B,QAAAV,KAAAC,UAEAK,YAAA,EACAC,cAAA,IAEAlB,OAAAC,eAAAq1B,EAAAz0B,UAAA,UAIAC,IAAA,WACA,WAAAs0B,EAAA/zB,QAAAV,KAAAC,UAEAK,YAAA,EACAC,cAAA,IAEAd,EAAAkB,WAAA,CACAiD,EAAAU,gBACAqwB,EAAAz0B,UAAA,aACAT,EAAAkB,WAAA,CACAiD,EAAAU,gBACAqwB,EAAAz0B,UAAA,cACAT,EAAAkB,WAAA,CACAiD,EAAAU,gBACAqwB,EAAAz0B,UAAA,cACAT,EAAAkB,WAAA,CACAiD,EAAAU,gBACAqwB,EAAAz0B,UAAA,gBACAT,EAAAkB,WAAA,CACAiD,EAAAU,gBACAqwB,EAAAz0B,UAAA,sBACAT,EAAAkB,WAAA,CACAiD,EAAAU,gBACAqwB,EAAAz0B,UAAA,cACAT,EAAAkB,WAAA,CACAiD,EAAAU,gBACAqwB,EAAAz0B,UAAA,iBACAT,EAAAkB,WAAA,CACAiD,EAAAU,gBACAqwB,EAAAz0B,UAAA,eACAy0B,EAAAl1B,EAAAkB,WAAA,CACAiD,EAAAY,WACAmwB,GACAA,EAhHA,CAiHCllB,EAAA/O,SACDnB,EAAAmB,QAAAi0B,qCCnIAt1B,OAAAC,eAAAC,EAAA,cAA8CC,OAAA,IAC9C,IAAAC,EAAcC,EAAQ,QACtBkE,EAAclE,EAAQ,QACtB+P,EAAgB/P,EAAQ,QACxBk1B,EAAqBl1B,EAAQ,QAC7BoS,EAAkBpS,EAAQ,QAC1Bm1B,EAAqBn1B,EAAQ,QAC7BmF,EAAqBnF,EAAQ,QAY7Bo1B,EAAA,SAAA3zB,GAEA,SAAA2zB,IACA,cAAA3zB,KAAA4B,MAAA/C,KAAAgD,YAAAhD,KAyDA,OA3DAP,EAAA+B,UAAAszB,EAAA3zB,GAWA2zB,EAAA50B,UAAA60B,YAAA,SAAAhd,GACA,OAAAtY,EAAAkC,UAAA3B,UAAA,oBACA,IAAAg1B,EAAA5zB,EACA,OAAA3B,EAAAmC,YAAA5B,KAAA,SAAA6B,GACA,OAAAA,EAAA8D,OACA,OAEA,OADAqvB,EAAAljB,EAAA9Q,gBAAA+W,GACA,GAAA/X,KAAAC,QAAA6Q,QAAA,CACArH,IAAA,oCAAAurB,EAAA,YACAprB,KAAA/E,EAAAkM,kBAAAuG,UAEA,OAEA,OADAlW,EAAAS,EAAAgE,OACA,OAAA+uB,EAAAl0B,QAAAU,UAUA0zB,EAAA50B,UAAA+0B,UAAA,SAAAld,GACA,OAAAtY,EAAAkC,UAAA3B,UAAA,oBACA,IAAA4Q,EAAAxP,EACAE,EAAAtB,KACA,OAAAP,EAAAmC,YAAA5B,KAAA,SAAA6B,GACA,OAAAA,EAAA8D,OACA,OAEA,OADAiL,EAAAkB,EAAAjR,cAAAkX,GACA,GAAA/X,KAAAC,QAAA6Q,QAAA,CAAmErH,IAAA,YAAAmH,EAAA,aACnE,OAEA,OADAxP,EAAAS,EAAAgE,OACA,GAAAzE,EAAA8zB,OAAApxB,IAAA,SAAAqxB,GAAgF,WAAAN,EAAAn0B,QAAAy0B,EAAA7zB,EAAArB,kBAKhFR,EAAAkB,WAAA,CACAiD,EAAAW,OAAA,KACAuwB,EAAA50B,UAAA,oBACAT,EAAAkB,WAAA,CACAiD,EAAAW,OAAA,KACAuwB,EAAA50B,UAAA,kBACA40B,EAAAr1B,EAAAkB,WAAA,CACAiD,EAAAY,WACAswB,GACAA,EA5DA,CA6DCrlB,EAAA/O,SACDnB,EAAAmB,QAAAo0B,qCCjFAz1B,OAAAC,eAAAC,EAAA,cAA8CC,OAAA,IAC9C,IAAAC,EAAcC,EAAQ,QAEtBE,EAAsBF,EAAQ,QAC9B01B,EAAA,WAEA,SAAAA,EAAAt1B,EAAAC,GACAC,KAAAF,QACAE,KAAAC,QAAAF,EAqFA,OAnFAV,OAAAC,eAAA81B,EAAAl1B,UAAA,MAIAC,IAAA,WACA,OAAAH,KAAAF,MAAAuY,KAEA/X,YAAA,EACAC,cAAA,IAEAlB,OAAAC,eAAA81B,EAAAl1B,UAAA,WAIAC,IAAA,WACA,OAAAH,KAAAF,MAAAu1B,UAEA/0B,YAAA,EACAC,cAAA,IAKA60B,EAAAl1B,UAAAo1B,SAAA,WACA,OAAA71B,EAAAkC,UAAA3B,UAAA,oBACA,OAAAP,EAAAmC,YAAA5B,KAAA,SAAA6B,GACA,SAAA7B,KAAAC,QAAA+Z,OAAA3X,MAAAD,QAAApC,KAAAF,MAAAu1B,gBAIAh2B,OAAAC,eAAA81B,EAAAl1B,UAAA,QAIAC,IAAA,WACA,OAAAH,KAAAF,MAAAW,MAEAH,YAAA,EACAC,cAAA,IAEAlB,OAAAC,eAAA81B,EAAAl1B,UAAA,SAIAC,IAAA,WACA,OAAAH,KAAAF,MAAAy1B,OAEAj1B,YAAA,EACAC,cAAA,IAEAlB,OAAAC,eAAA81B,EAAAl1B,UAAA,iBAIAC,IAAA,WACA,OAAAH,KAAAF,MAAA01B,gBAEAl1B,YAAA,EACAC,cAAA,IAEAlB,OAAAC,eAAA81B,EAAAl1B,UAAA,WAIAC,IAAA,WACA,OAAAH,KAAAF,MAAA21B,sBAEAn1B,YAAA,EACAC,cAAA,IAEAlB,OAAAC,eAAA81B,EAAAl1B,UAAA,WAIAC,IAAA,WACA,oBAAAH,KAAAF,MAAAu1B,SAAA,IAAAr1B,KAAAF,MAAAuY,KAEA/X,YAAA,EACAC,cAAA,IAEAd,EAAAkB,WAAA,CACAf,EAAAgB,eACAw0B,EAAAl1B,UAAA,kBACAk1B,EAzFA,GA2FA71B,EAAAmB,QAAA00B,qCC/FA/1B,OAAAC,eAAAC,EAAA,cAA8CC,OAAA,IAC9C,IAAAC,EAAcC,EAAQ,QACtBE,EAAsBF,EAAQ,QAI9Bg2B,EAAA,WAEA,SAAAA,EAAA51B,EAAAC,GACAC,KAAAF,QACAE,KAAAC,QAAAF,EA6CA,OA3CAV,OAAAC,eAAAo2B,EAAAx1B,UAAA,MAIAC,IAAA,WACA,OAAAH,KAAAF,MAAAuY,KAEA/X,YAAA,EACAC,cAAA,IAEAlB,OAAAC,eAAAo2B,EAAAx1B,UAAA,WAIAC,IAAA,WACA,OAAAH,KAAAF,MAAA61B,UAEAr1B,YAAA,EACAC,cAAA,IAEAlB,OAAAC,eAAAo2B,EAAAx1B,UAAA,eAIAC,IAAA,WACA,OAAAH,KAAAF,MAAA81B,eAEAt1B,YAAA,EACAC,cAAA,IAEAlB,OAAAC,eAAAo2B,EAAAx1B,UAAA,aAIAC,IAAA,WACA,WAAAuC,KAAA1C,KAAAF,MAAA4E,aAEApE,YAAA,EACAC,cAAA,IAEAd,EAAAkB,WAAA,CACAf,EAAAgB,eACA80B,EAAAx1B,UAAA,kBACAw1B,EAjDA,GAmDAn2B,EAAAmB,QAAAg1B,qCCzDAr2B,OAAAC,eAAAC,EAAA,cAA8CC,OAAA,IAC9C,IAAAC,EAAcC,EAAQ,QACtBm2B,EAA2Bn2B,EAAQ,QAInCo2B,EAAA,SAAA30B,GAGA,SAAA20B,EAAA10B,EAAArB,GACA,IAAAuB,EAAAH,EAAAI,KAAAvB,KAAAoB,EAAAiX,IAAAtY,IAAAC,KAEA,OADAsB,EAAAxB,MAAAsB,EACAE,EAmNA,OAxNA7B,EAAA+B,UAAAs0B,EAAA30B,GASA20B,EAAA51B,UAAAozB,WAAA,WACA,OAAA7zB,EAAAkC,UAAA3B,UAAA,oBACA,OAAAP,EAAAmC,YAAA5B,KAAA,SAAA6B,GACA,SAAA7B,WAOA81B,EAAA51B,UAAA61B,OAAA,SAAA30B,GACA,OAAA3B,EAAAkC,UAAA3B,UAAA,oBACA,OAAAP,EAAAmC,YAAA5B,KAAA,SAAA6B,GACA,SAAA7B,KAAAC,QAAA+Z,OAAA5G,SAAAmgB,cAAAvzB,KAAAoB,SAIA/B,OAAAC,eAAAw2B,EAAA51B,UAAA,QAIAC,IAAA,WACA,OAAAH,KAAAF,MAAAW,MAEAH,YAAA,EACAC,cAAA,IAEAlB,OAAAC,eAAAw2B,EAAA51B,UAAA,eAIAC,IAAA,WACA,OAAAH,KAAAF,MAAAoZ,cAEA5Y,YAAA,EACAC,cAAA,IAEAlB,OAAAC,eAAAw2B,EAAA51B,UAAA,uBAIAC,IAAA,WACA,OAAAH,KAAAF,MAAAk2B,sBAEA11B,YAAA,EACAC,cAAA,IAEAlB,OAAAC,eAAAw2B,EAAA51B,UAAA,mBAIAC,IAAA,WACA,OAAAH,KAAAF,MAAAqZ,kBAEA7Y,YAAA,EACAC,cAAA,IAEAlB,OAAAC,eAAAw2B,EAAA51B,UAAA,gBAIAC,IAAA,WACA,WAAAuC,KAAA1C,KAAAF,MAAA4E,aAEApE,YAAA,EACAC,cAAA,IAEAlB,OAAAC,eAAAw2B,EAAA51B,UAAA,eAIAC,IAAA,WACA,OAAAH,KAAAF,MAAA6E,aAEArE,YAAA,EACAC,cAAA,IAEAlB,OAAAC,eAAAw2B,EAAA51B,UAAA,aAIAC,IAAA,WACA,OAAAH,KAAAF,MAAAm2B,WAEA31B,YAAA,EACAC,cAAA,IAEAlB,OAAAC,eAAAw2B,EAAA51B,UAAA,QAIAC,IAAA,WACA,OAAAH,KAAAF,MAAAgiB,MAEAxhB,YAAA,EACAC,cAAA,IAEAlB,OAAAC,eAAAw2B,EAAA51B,UAAA,YAIAC,IAAA,WACA,OAAAH,KAAAF,MAAA2S,UAEAnS,YAAA,EACAC,cAAA,IAEAlB,OAAAC,eAAAw2B,EAAA51B,UAAA,QAIAC,IAAA,WACA,OAAAH,KAAAF,MAAAo2B,MAEA51B,YAAA,EACAC,cAAA,IAEAlB,OAAAC,eAAAw2B,EAAA51B,UAAA,YAIAC,IAAA,WACA,OAAAH,KAAAF,MAAAq2B,QAEA71B,YAAA,EACAC,cAAA,IAEAlB,OAAAC,eAAAw2B,EAAA51B,UAAA,aAIAC,IAAA,WACA,OAAAH,KAAAF,MAAAs2B,SAEA91B,YAAA,EACAC,cAAA,IAEAlB,OAAAC,eAAAw2B,EAAA51B,UAAA,iBAIAC,IAAA,WACA,OAAAH,KAAAF,MAAAu2B,gBAEA/1B,YAAA,EACAC,cAAA,IAEAlB,OAAAC,eAAAw2B,EAAA51B,UAAA,gCAIAC,IAAA,WACA,OAAAH,KAAAF,MAAAw2B,iCAEAh2B,YAAA,EACAC,cAAA,IAEAlB,OAAAC,eAAAw2B,EAAA51B,UAAA,UAIAC,IAAA,WACA,OAAAH,KAAAF,MAAAwJ,QAEAhJ,YAAA,EACAC,cAAA,IAEAlB,OAAAC,eAAAw2B,EAAA51B,UAAA,cAIAC,IAAA,WACA,WAAAuC,KAAA1C,KAAAF,MAAAy2B,aAEAj2B,YAAA,EACAC,cAAA,IAEAlB,OAAAC,eAAAw2B,EAAA51B,UAAA,OAIAC,IAAA,WACA,OAAAH,KAAAF,MAAA2J,KAEAnJ,YAAA,EACAC,cAAA,IAEAlB,OAAAC,eAAAw2B,EAAA51B,UAAA,eAIAC,IAAA,WACA,OAAAH,KAAAF,MAAA02B,cAEAl2B,YAAA,EACAC,cAAA,IAEAlB,OAAAC,eAAAw2B,EAAA51B,UAAA,SAIAC,IAAA,WACA,OAAAH,KAAAF,MAAA22B,OAEAn2B,YAAA,EACAC,cAAA,IAEAu1B,EAzNA,CA0NCD,EAAAn1B,SACDnB,EAAAmB,QAAAo1B,qCCjOAz2B,OAAAC,eAAAC,EAAA,cAA8CC,OAAA,IAC9C,IAAAC,EAAcC,EAAQ,QACtB+P,EAAgB/P,EAAQ,QACxBkE,EAAclE,EAAQ,QACtBg3B,EAAgBh3B,EAAQ,QACxBi3B,EAAmBj3B,EAAQ,QAC3Bk3B,EAAgBl3B,EAAQ,QACxBm3B,EAAkBn3B,EAAQ,QAC1Bo3B,EAAkBp3B,EAAQ,QAC1Bq3B,EAAgBr3B,EAAQ,QAMxBs3B,EAAA,SAAA71B,GAEA,SAAA61B,IACA,cAAA71B,KAAA4B,MAAA/C,KAAAgD,YAAAhD,KAmFA,OArFAP,EAAA+B,UAAAw1B,EAAA71B,GAIA9B,OAAAC,eAAA03B,EAAA92B,UAAA,QAIAC,IAAA,WACA,WAAAu2B,EAAAh2B,QAAAV,KAAAC,UAEAK,YAAA,EACAC,cAAA,IAEAlB,OAAAC,eAAA03B,EAAA92B,UAAA,YAIAC,IAAA,WACA,WAAAw2B,EAAAj2B,QAAAV,KAAAC,UAEAK,YAAA,EACAC,cAAA,IAEAlB,OAAAC,eAAA03B,EAAA92B,UAAA,QAIAC,IAAA,WACA,WAAAy2B,EAAAl2B,QAAAV,KAAAC,UAEAK,YAAA,EACAC,cAAA,IAEAlB,OAAAC,eAAA03B,EAAA92B,UAAA,UAIAC,IAAA,WACA,WAAA02B,EAAAn2B,QAAAV,KAAAC,UAEAK,YAAA,EACAC,cAAA,IAEAlB,OAAAC,eAAA03B,EAAA92B,UAAA,WAIAC,IAAA,WACA,WAAA22B,EAAAp2B,QAAAV,KAAAC,UAEAK,YAAA,EACAC,cAAA,IAEAlB,OAAAC,eAAA03B,EAAA92B,UAAA,SAIAC,IAAA,WACA,WAAA42B,EAAAr2B,QAAAV,KAAAC,UAEAK,YAAA,EACAC,cAAA,IAEAd,EAAAkB,WAAA,CACAiD,EAAAU,gBACA0yB,EAAA92B,UAAA,aACAT,EAAAkB,WAAA,CACAiD,EAAAU,gBACA0yB,EAAA92B,UAAA,iBACAT,EAAAkB,WAAA,CACAiD,EAAAU,gBACA0yB,EAAA92B,UAAA,aACAT,EAAAkB,WAAA,CACAiD,EAAAU,gBACA0yB,EAAA92B,UAAA,eACAT,EAAAkB,WAAA,CACAiD,EAAAU,gBACA0yB,EAAA92B,UAAA,gBACAT,EAAAkB,WAAA,CACAiD,EAAAU,gBACA0yB,EAAA92B,UAAA,cACA82B,EAAAv3B,EAAAkB,WAAA,CACAiD,EAAAY,WACAwyB,GACAA,EAtFA,CAuFCvnB,EAAA/O,SACDnB,EAAAmB,QAAAs2B,qCCtGA,IAAAjoB,EAAAxD,OAAArL,UAAA6O,QACAkoB,EAAA,OAEAznB,EAAAjQ,QAAA,CACAmB,QAAA,UACAwb,WAAA,CACAgb,QAAA,SAAA13B,GACA,OAAAuP,EAAAxN,KAAA/B,EAAAy3B,EAAA,MAEAE,QAAA,SAAA33B,GACA,OAAAA,IAGA03B,QAAA,UACAC,QAAA,8CCfA93B,OAAAC,eAAAC,EAAA,cAA8CC,OAAA,IAC9C,IAAAC,EAAcC,EAAQ,QACtBE,EAAsBF,EAAQ,QAC9BmZ,EAAmCnZ,EAAQ,QAO3C03B,EAAA,WAEA,SAAAA,EAAAr2B,EAAAhB,GACAC,KAAAF,MAAA,CAAsBuY,IAAAtX,GACtBf,KAAAC,QAAAF,EAmHA,OAjHAV,OAAAC,eAAA83B,EAAAl3B,UAAA,YAEAC,IAAA,WACA,OAAAH,KAAAF,MAAAuY,KAEA/X,YAAA,EACAC,cAAA,IAEAlB,OAAAC,eAAA83B,EAAAl3B,UAAA,MAIAC,IAAA,WACA,OAAAH,KAAAF,MAAAuY,KAEA/X,YAAA,EACAC,cAAA,IAKA62B,EAAAl3B,UAAA4X,cAAA,WACA,OAAArY,EAAAkC,UAAA3B,UAAA,oBACA,OAAAP,EAAAmC,YAAA5B,KAAA,SAAA6B,GACA,SAAA7B,KAAAC,QAAA+Z,OAAAwK,KAAA1M,cAAA9X,YAOAo3B,EAAAl3B,UAAAozB,WAAA,WACA,OAAA7zB,EAAAkC,UAAA3B,UAAA,oBACA,OAAAP,EAAAmC,YAAA5B,KAAA,SAAA6B,GACA,SAAA7B,KAAAC,QAAA+Z,OAAA5G,SAAAkgB,WAAAtzB,YAOAo3B,EAAAl3B,UAAAqZ,UAAA,WACA,OAAA9Z,EAAAkC,UAAA3B,UAAA,oBACA,OAAAP,EAAAmC,YAAA5B,KAAA,SAAA6B,GACA,SAAA7B,KAAAC,QAAA+Z,OAAAxG,QAAA6jB,mBAAAr3B,YAOAo3B,EAAAl3B,UAAAo3B,aAAA,WACA,OAAA73B,EAAAkC,UAAA3B,UAAA,oBACA,OAAAP,EAAAmC,YAAA5B,KAAA,SAAA6B,GACA,SAAA7B,KAAAC,QAAA+Z,OAAA5G,SAAAogB,oBAAAxzB,YAOAo3B,EAAAl3B,UAAAqpB,iBAAA,WACA,OAAA9pB,EAAAkC,UAAA3B,UAAA,oBACA,OAAAP,EAAAmC,YAAA5B,KAAA,SAAA6B,GACA,SAAA7B,KAAAC,QAAA+Z,OAAA5G,SAAAsgB,wBAAA1zB,YAcAo3B,EAAAl3B,UAAAq3B,kBAAA,SAAAz2B,GACA,OAAArB,EAAAkC,UAAA3B,UAAA,oBACA,OAAAP,EAAAmC,YAAA5B,KAAA,SAAA6B,GACA,SAAA7B,KAAAC,QAAA+Z,OAAA5G,SAAA2gB,6BAAA/zB,KAAAc,SASAs2B,EAAAl3B,UAAAs3B,cAAA,SAAA12B,GACA,OAAArB,EAAAkC,UAAA3B,UAAA,oBACA,IAAAya,EACA,OAAAhb,EAAAmC,YAAA5B,KAAA,SAAA6B,GACA,OAAAA,EAAA8D,OACA,OAEA,OADA9D,EAAA6Y,KAAAhS,KAAA,UACA,GAAA1I,KAAAu3B,kBAAAz2B,IACA,uBAAAe,EAAAgE,QACA,OAEA,GADA4U,EAAA5Y,EAAAgE,OACA4U,aAAA5B,EAAAnY,QACA,aAEA,MAAA+Z,EACA,uBAKAhb,EAAAkB,WAAA,CACAf,EAAAgB,eACAw2B,EAAAl3B,UAAA,kBACAk3B,EAvHA,GAyHA73B,EAAAmB,QAAA02B,qCCnIA/3B,OAAAC,eAAAC,EAAA,cAA8CC,OAAA,IAI9C,IAAAi4B,EAAA,WAEA,SAAAA,EAAA33B,EAAA43B,GACA13B,KAAAF,QACAE,KAAA23B,gBAAAD,GAAA,IAAAh1B,KA0DA,OAxDArD,OAAAC,eAAAm4B,EAAAv3B,UAAA,eAIAC,IAAA,WACA,OAAAH,KAAAF,MAAA+jB,cAEAvjB,YAAA,EACAC,cAAA,IAEAlB,OAAAC,eAAAm4B,EAAAv3B,UAAA,gBAIAC,IAAA,WACA,OAAAH,KAAAF,MAAAqX,eAEA7W,YAAA,EACAC,cAAA,IAEAlB,OAAAC,eAAAm4B,EAAAv3B,UAAA,cAOAC,IAAA,WACA,OAAAH,KAAAF,MAAA83B,WAGA,IAAAl1B,KAAA1C,KAAA23B,gBAAAE,UAAA,IAAA73B,KAAAF,MAAA83B,YAFA,MAIAt3B,YAAA,EACAC,cAAA,IAEAlB,OAAAC,eAAAm4B,EAAAv3B,UAAA,aACAC,IAAA,WACA,QAAAH,KAAAF,MAAA83B,YAGAl1B,KAAA+c,MAAAzf,KAAA23B,gBAAAE,UAAA,IAAA73B,KAAAF,MAAA83B,YAEAt3B,YAAA,EACAC,cAAA,IAEAlB,OAAAC,eAAAm4B,EAAAv3B,UAAA,SAIAC,IAAA,WACA,OAAAH,KAAAF,MAAAmR,MAAApC,MAAA,MAEAvO,YAAA,EACAC,cAAA,IAEAk3B,EA9DA,GAgEAl4B,EAAAmB,QAAA+2B,qCCpEAp4B,OAAAC,eAAAC,EAAA,cAA8CC,OAAA,IAC9C,IAAAqF,EAAqBnF,EAAQ,QAC7BH,EAAAwR,kBAAAlM,EAAAkM,kBACAxR,EAAAmB,QAAAmE,EAAAnE,QACA,IAAAyT,EAAoBzU,EAAQ,QAC5BH,EAAAonB,YAAAxS,EAAAzT,QACA,IAAAwjB,EAA6BxkB,EAAQ,QACrCH,EAAAupB,qBAAA5E,EAAAxjB,QACA,IAAA0T,EAA4B1U,EAAQ,QACpCH,EAAAu4B,oBAAA1jB,EAAA1T,QACA,IAAAmY,EAAmCnZ,EAAQ,QAC3CH,EAAAqqB,2BAAA/Q,EAAAnY,QACA,IAAA4gB,EAA2B5hB,EAAQ,QACnCH,EAAA+e,mBAAAgD,EAAA5gB,QACA,IAAAsT,EAA2BtU,EAAQ,QACnCH,EAAAokB,mBAAA3P,EAAAtT,QACA,IAAAuT,EAAgCvU,EAAQ,QACxCH,EAAAw4B,wBAAA9jB,EAAAvT,QACA,IAAAqT,EAAoBrU,EAAQ,QAC5BH,EAAAk4B,YAAA1jB,EAAArT,QACA,IAAAmT,EAAkBnU,EAAQ,QAC1BH,EAAAy4B,UAAAnkB,EAAAnT,QACA,IAAAkC,EAAqBlD,EAAQ,QAC7BH,EAAAm2B,aAAA9yB,EAAAlC,QACA,IAAAoT,EAAsBpU,EAAQ,QAC9BH,EAAA6kB,cAAAtQ,EAAApT,QACAnB,EAAA2V,oBAAApB,EAAAoB,oBACA3V,EAAA8V,eAAAvB,EAAAuB,eACA9V,EAAAiW,eAAA1B,EAAA0B,eACA,IAAA3C,EAAgBnT,EAAQ,QACxBH,EAAAu2B,QAAAjjB,EAAAnS,QACA,IAAAyyB,EAAsBzzB,EAAQ,QAC9BH,EAAAgf,cAAA4U,EAAAzyB,QACA,IAAAm1B,EAA2Bn2B,EAAQ,QACnCH,EAAA63B,mBAAAvB,EAAAn1B,QACA,IAAAuyB,EAA4BvzB,EAAQ,QACpCH,EAAAuD,oBAAAmwB,EAAAvyB,QACA,IAAAu3B,EAAqBv4B,EAAQ,QAC7BH,EAAAwnB,aAAAkR,EAAAv3B,QACA,IAAAwyB,EAA0BxzB,EAAQ,QAClCH,EAAA2d,kBAAAgW,EAAAxyB,QACA,IAAAoS,EAAepT,EAAQ,QACvBH,EAAA24B,OAAAplB,EAAApS,QACAnB,EAAA44B,WAAArlB,EAAAqlB,WACA,IAAAtD,EAAqBn1B,EAAQ,QAC7BH,EAAA6Y,aAAAyc,EAAAn0B,QACA,IAAAk0B,EAAqBl1B,EAAQ,QAC7BH,EAAA64B,aAAAxD,EAAAl0B,QACA,IAAA23B,EAAuB34B,EAAQ,QAC/BH,EAAA4jB,eAAAkV,EAAA33B,QACA,IAAAmC,EAAanD,EAAQ,QACrBH,EAAA+4B,KAAAz1B,EAAAnC,QACA,IAAA63B,EAAkB74B,EAAQ,QAC1BH,EAAAi5B,UAAAD,EAAA73B,QACA,IAAA+3B,EAAmB/4B,EAAQ,QAC3BH,EAAAm5B,WAAAD,EAAA/3B,QACA,IAAAi4B,EAAyBj5B,EAAQ,QACjCH,EAAAq5B,iBAAAD,EAAAj4B,QACA,IAAAiP,EAA8BjQ,EAAQ,QACtCH,EAAAs5B,sBAAAlpB,EAAAjP,QACA,IAAAo4B,EAA6Bp5B,EAAQ,QACrCH,EAAAw5B,qBAAAD,EAAAp4B,QACA,IAAAs4B,EAAkCt5B,EAAQ,QAC1CH,EAAA05B,0BAAAD,EAAAt4B,QACA,IAAAgP,EAAkBhQ,EAAQ,QAC1BH,EAAA25B,UAAAxpB,EAAAhP,QACA,IAAAy4B,EAAkBz5B,EAAQ,QAC1BH,EAAAmU,UAAAylB,EAAAz4B,QACA,IAAA0gB,EAAoB1hB,EAAQ,QAC5BH,EAAAshB,YAAAO,EAAA1gB,QACAnB,EAAAqhB,gBAAAQ,EAAAR,gBACA,IAAA8O,EAAoBhwB,EAAQ,QAC5BH,EAAA0C,YAAAytB,EAAAhvB,QACA,IAAA+uB,EAA4B/vB,EAAQ,QACpCH,EAAA00B,oBAAAxE,EAAA/uB,QACA,IAAA8uB,EAAkB9vB,EAAQ,QAC1BH,EAAAyZ,UAAAwW,EAAA9uB,QACAnB,EAAAuZ,qBAAA0W,EAAA1W,qBACAvZ,EAAAwZ,cAAAyW,EAAAzW,cACA,IAAAlH,EAAmBnS,EAAQ,QAC3BH,EAAAioB,WAAA3V,EAAAnR,QACA,IAAA04B,EAAsB15B,EAAQ,QAC9BH,EAAAypB,cAAAoQ,EAAA14B,QACA,IAAAqoB,EAAqBrpB,EAAQ,QAC7BH,EAAAM,aAAAkpB,EAAAroB,QACA,IAAAf,EAAyBD,EAAQ,QACjCH,EAAAgY,iBAAA5X,EAAAe,QACA,IAAAoR,EAAkBpS,EAAQ,QAC1BH,EAAAsB,cAAAiR,EAAAjR,cACAtB,EAAAyB,gBAAA8Q,EAAA9Q,mDCzFA3B,OAAAC,eAAAC,EAAA,cAA8CC,OAAA,IAC9C,IAAAC,EAAcC,EAAQ,QACtB+P,EAAgB/P,EAAQ,QACxBkE,EAAclE,EAAQ,QACtB05B,EAAsB15B,EAAQ,QAC9BmF,EAAqBnF,EAAQ,QAC7BoS,EAAkBpS,EAAQ,QAY1B25B,EAAA,SAAAl4B,GAEA,SAAAk4B,IACA,cAAAl4B,KAAA4B,MAAA/C,KAAAgD,YAAAhD,KA0DA,OA5DAP,EAAA+B,UAAA63B,EAAAl4B,GAOAk4B,EAAAn5B,UAAAo5B,gBAAA,WACA,OAAA75B,EAAAkC,UAAA3B,UAAA,oBACA,IAAAoB,EACA,OAAA3B,EAAAmC,YAAA5B,KAAA,SAAA6B,GACA,OAAAA,EAAA8D,OACA,gBAAA3F,KAAAC,QAAA6Q,QAAA,CACArH,IAAA,oDACAG,KAAA/E,EAAAkM,kBAAAuG,UAEA,OAEA,OADAlW,EAAAS,EAAAgE,OACA,OAAAuzB,EAAA14B,QAAAU,EAAAm4B,WAAAv5B,KAAAC,gBAWAo5B,EAAAn5B,UAAAs5B,iBAAA,SAAAzhB,EAAA0hB,GAEA,YADA,IAAAA,IAAuCA,GAAA,GACvCh6B,EAAAkC,UAAA3B,UAAA,oBACA,IAAAoB,EAAAs4B,EAAA73B,EAAA6D,EACA,OAAAjG,EAAAmC,YAAA5B,KAAA,SAAAuR,GACA,OAAAA,EAAA5L,OACA,gBAAA3F,KAAAC,QAAA6Q,QAAA,CACArH,IAAA,+CAAAqI,EAAAjR,cAAAkX,GAAA,WACAnO,KAAA/E,EAAAkM,kBAAAuG,UAEA,OAGA,OAFAlW,EAAAmQ,EAAA1L,OACA6zB,EAAA,IAAAN,EAAA14B,QAAAU,EAAAm4B,WAAAv5B,KAAAC,SACAw5B,GACA/zB,GAAA7D,EAAA63B,GAAAxQ,OACA,GAAAlpB,KAAAs5B,oBAFA,MAGA,gBAAA5zB,EAAA3C,MAAAlB,EAAA,CAAA0P,EAAA1L,UACA,gBAAA6zB,SAKAj6B,EAAAkB,WAAA,CACAiD,EAAAW,OAAA,OACA80B,EAAAn5B,UAAA,wBACAT,EAAAkB,WAAA,CACAiD,EAAAW,OAAA,OACA80B,EAAAn5B,UAAA,yBACAm5B,EAAA55B,EAAAkB,WAAA,CACAiD,EAAAY,WACA60B,GACAA,EA7DA,CA8DC5pB,EAAA/O,SACDnB,EAAAmB,QAAA24B,qCCjFAh6B,OAAAC,eAAAC,EAAA,cAA8CC,OAAA,IAC9C,IAAAC,EAAcC,EAAQ,QACtBkD,EAAqBlD,EAAQ,QAC7BmT,EAAgBnT,EAAQ,QAIxBk5B,EAAA,SAAAz3B,GAEA,SAAAy3B,IACA,cAAAz3B,KAAA4B,MAAA/C,KAAAgD,YAAAhD,KAYA,OAdAP,EAAA+B,UAAAo3B,EAAAz3B,GAIA9B,OAAAC,eAAAs5B,EAAA14B,UAAA,WAIAC,IAAA,WACA,WAAA0S,EAAAnS,QAAAV,KAAAF,MAAAiY,QAAA/X,KAAAC,UAEAK,YAAA,EACAC,cAAA,IAEAq4B,EAfA,CAgBCh2B,EAAAlC,SACDnB,EAAAmB,QAAAk4B,qCCxBAv5B,OAAAC,eAAAC,EAAA,cAA8CC,OAAA,IAC9C,IAAAC,EAAcC,EAAQ,QACtBE,EAAsBF,EAAQ,QAC9BmT,EAAgBnT,EAAQ,SAKxB,SAAAy4B,GAIAA,EAAA,eAIAA,EAAA,uBAIAA,EAAA,iBAIAA,EAAA,cAhBA,CAiBC54B,EAAA44B,aAAA54B,EAAA44B,WAAA,KAID,IAAAD,EAAA,WAEA,SAAAA,EAAAp4B,EAAAC,GACAC,KAAAF,QACAE,KAAAC,QAAAF,EAiHA,OA/GAV,OAAAC,eAAA44B,EAAAh4B,UAAA,MAIAC,IAAA,WACA,OAAAH,KAAAF,MAAAuY,KAEA/X,YAAA,EACAC,cAAA,IAEAlB,OAAAC,eAAA44B,EAAAh4B,UAAA,QAIAC,IAAA,WACA,OAAAH,KAAAF,MAAAgiB,MAEAxhB,YAAA,EACAC,cAAA,IAEAlB,OAAAC,eAAA44B,EAAAh4B,UAAA,WAIAC,IAAA,WACA,OAAAH,KAAAF,MAAA65B,SAEAr5B,YAAA,EACAC,cAAA,IAEAlB,OAAAC,eAAA44B,EAAAh4B,UAAA,eAIAC,IAAA,WACA,OAAAH,KAAAF,MAAA85B,cAEAt5B,YAAA,EACAC,cAAA,IAEAlB,OAAAC,eAAA44B,EAAAh4B,UAAA,cAIAC,IAAA,WACA,OAAAH,KAAAF,MAAA+5B,aAEAv5B,YAAA,EACAC,cAAA,IAEAlB,OAAAC,eAAA44B,EAAAh4B,UAAA,SAIAC,IAAA,WACA,OAAAH,KAAAF,MAAAg6B,OAEAx5B,YAAA,EACAC,cAAA,IAEAlB,OAAAC,eAAA44B,EAAAh4B,UAAA,aAIAC,IAAA,WACA,WAAAuC,KAAA1C,KAAAF,MAAA4E,aAEApE,YAAA,EACAC,cAAA,IAEAlB,OAAAC,eAAA44B,EAAAh4B,UAAA,cAIAC,IAAA,WACA,OAAAH,KAAAF,MAAAi6B,aAEAz5B,YAAA,EACAC,cAAA,IAEAlB,OAAAC,eAAA44B,EAAAh4B,UAAA,QAIAC,IAAA,WACA,OAAAH,KAAAF,MAAAk6B,aAEA15B,YAAA,EACAC,cAAA,IAOA23B,EAAAh4B,UAAA+5B,cAAA,SAAAC,GACA,OAAAl6B,KAAAF,MAAAq6B,QAAAD,IAEA76B,OAAAC,eAAA44B,EAAAh4B,UAAA,WAIAC,IAAA,WACA,WAAA0S,EAAAnS,QAAAV,KAAAF,MAAAiY,QAAA/X,KAAAC,UAEAK,YAAA,EACAC,cAAA,IAEAd,EAAAkB,WAAA,CACAf,EAAAgB,eACAs3B,EAAAh4B,UAAA,kBACAg4B,EArHA,GAuHA34B,EAAAmB,QAAAw3B,qCCjJA,SAAAt3B,EAAAsf,EAAA7Q,GAGAhQ,OAAAC,eAAA4gB,EAAA7Q,EAAA,CACAlP,IAAA,aAIAkI,IAAA,SAAAwX,GAEAxgB,OAAAC,eAAAU,KAAAqP,EAAA,CACA7P,MAAAqgB,EACAnZ,UAAA,EACApG,YAAA,KAGAA,YAAA,IAnBAjB,OAAAC,eAAAC,EAAA,cAA8CC,OAAA,IAsB9CD,EAAAqB,mDCtBAvB,OAAAC,eAAAC,EAAA,cAA8CC,OAAA,IAI9C,IAAAw4B,EAAA,WAEA,SAAAA,EAAAl4B,GACAE,KAAAF,QACAE,KAAA23B,gBAAA,IAAAj1B,KAmEA,OAjEArD,OAAAC,eAAA04B,EAAA93B,UAAA,YAIAC,IAAA,WACA,OAAAH,KAAAF,MAAAkW,MAAAhW,KAAAF,MAAAkX,UAAA,MAEA1W,YAAA,EACAC,cAAA,IAEAlB,OAAAC,eAAA04B,EAAA93B,UAAA,UAIAC,IAAA,WACA,OAAAH,KAAAF,MAAAkW,MAAAhW,KAAAF,MAAA0D,QAAA,MAEAlD,YAAA,EACAC,cAAA,IAEAlB,OAAAC,eAAA04B,EAAA93B,UAAA,YAIAC,IAAA,WACA,OAAAH,KAAAF,MAAAkW,MAAAhW,KAAAF,MAAA2D,UAAA,MAEAnD,YAAA,EACAC,cAAA,IAEAlB,OAAAC,eAAA04B,EAAA93B,UAAA,UAIAC,IAAA,WACA,OAAAH,KAAAF,MAAAkW,MAAAhW,KAAAF,MAAAs6B,cAAAh1B,OAAA,IAEA9E,YAAA,EACAC,cAAA,IAEAlB,OAAAC,eAAA04B,EAAA93B,UAAA,SAIAC,IAAA,WACA,OAAAH,KAAAF,MAAAkW,OAEA1V,YAAA,EACAC,cAAA,IAEAlB,OAAAC,eAAA04B,EAAA93B,UAAA,cAMAC,IAAA,WACA,OAAAH,KAAAF,MAAAkW,OAAAhW,KAAAF,MAAA83B,WAGA,IAAAl1B,KAAA1C,KAAA23B,gBAAAE,UAAA,IAAA73B,KAAAF,MAAA83B,YAFA,MAIAt3B,YAAA,EACAC,cAAA,IAEAy3B,EAvEA,GAyEAz4B,EAAAmB,QAAAs3B,qCC7EA34B,OAAAC,eAAAC,EAAA,cAA8CC,OAAA,IAC9C,IAAAC,EAAcC,EAAQ,QACtB+P,EAAgB/P,EAAQ,QACxBmF,EAAqBnF,EAAQ,QAC7Bo5B,EAA6Bp5B,EAAQ,QAYrC26B,EAAA,SAAAl5B,GAEA,SAAAk5B,IACA,cAAAl5B,KAAA4B,MAAA/C,KAAAgD,YAAAhD,KAiCA,OAnCAP,EAAA+B,UAAA64B,EAAAl5B,GASAk5B,EAAAn6B,UAAAo6B,eAAA,SAAA3pB,GAEA,YADA,IAAAA,IAAgCA,EAAA,IAChClR,EAAAkC,UAAA3B,UAAA,oBACA,IAAA6B,EAAA04B,EAAA70B,EAAAgN,EAAAtB,EAAAopB,EAAAnuB,EACA,OAAA5M,EAAAmC,YAAA5B,KAAA,SAAAuR,GACA,OAAAA,EAAA5L,OACA,OAEA,OADA9D,EAAA8O,EAAA4pB,aAAA,IAAA14B,EAAA,GAAAA,EAAA6D,EAAAiL,EAAA+B,cAAA,IAAAhN,EAAA,MAAAA,EAAA0L,EAAAT,EAAAS,UAAAopB,EAAA7pB,EAAA6pB,cACA,GAAAx6B,KAAAC,QAAA6Q,QAAA,CACAlH,KAAA/E,EAAAkM,kBAAAC,MACAvH,IAAA,mBACAwH,MAAA,YACAC,MAAA,CACAqpB,QAAA1yB,WACA6K,SACAlB,WAAAJ,IAAAmK,mBAAA9U,EACAjD,QAAAg3B,MAGA,OAEA,OADAnuB,EAAAkF,EAAA1L,OACA,OAAAizB,EAAAp4B,QAAA2L,EAAArM,KAAAC,gBAKAo6B,EApCA,CAqCC5qB,EAAA/O,SACDnB,EAAAmB,QAAA25B,qCCtDAh7B,OAAAC,eAAAC,EAAA,cAA8CC,OAAA,IAC9C,IAAAC,EAAcC,EAAQ,QACtBE,EAAsBF,EAAQ,QAI9Bu5B,EAAA,WAEA,SAAAA,EAAAn5B,EAAAC,GACAC,KAAAF,QACAE,KAAAC,QAAAF,EAuDA,OArDAV,OAAAC,eAAA25B,EAAA/4B,UAAA,UAIAC,IAAA,WACA,OAAAH,KAAAF,MAAA0D,SAEAlD,YAAA,EACAC,cAAA,IAEAlB,OAAAC,eAAA25B,EAAA/4B,UAAA,mBAIAC,IAAA,WACA,OAAAH,KAAAF,MAAA2D,WAEAnD,YAAA,EACAC,cAAA,IAEAlB,OAAAC,eAAA25B,EAAA/4B,UAAA,QAIAC,IAAA,WACA,OAAAH,KAAAF,MAAA26B,MAEAn6B,YAAA,EACAC,cAAA,IAEAlB,OAAAC,eAAA25B,EAAA/4B,UAAA,UAIAC,IAAA,WACA,OAAAH,KAAAF,MAAA46B,OAEAp6B,YAAA,EACAC,cAAA,IAKA04B,EAAA/4B,UAAAkC,QAAA,WACA,OAAA3C,EAAAkC,UAAA3B,UAAA,oBACA,OAAAP,EAAAmC,YAAA5B,KAAA,SAAA6B,GACA,SAAA7B,KAAAC,QAAA6B,MAAAO,MAAAC,YAAAtC,KAAAF,MAAA0D,eAIA/D,EAAAkB,WAAA,CACAf,EAAAgB,eACAq4B,EAAA/4B,UAAA,kBACA+4B,EA3DA,GA6DA15B,EAAAmB,QAAAu4B,qCClEA,IAAA9wB,EAAA9I,OAAAa,UAAAkI,eACA0D,EAAAD,MAAAC,QAEA6uB,EAAA,WAEA,IADA,IAAAC,EAAA,GACA3tB,EAAA,EAAmBA,EAAA,MAASA,EAC5B2tB,EAAAlyB,KAAA,MAAAuE,EAAA,WAAAA,EAAApF,SAAA,KAAA2G,eAGA,OAAAosB,EANA,GASAC,EAAA,SAAAC,GACA,MAAAA,EAAAz1B,OAAA,GACA,IAAA01B,EAAAD,EAAAvM,MACAjnB,EAAAyzB,EAAAzzB,IAAAyzB,EAAAC,MAEA,GAAAlvB,EAAAxE,GAAA,CAGA,IAFA,IAAA2zB,EAAA,GAEArM,EAAA,EAA2BA,EAAAtnB,EAAAjC,SAAgBupB,EAC3C,qBAAAtnB,EAAAsnB,IACAqM,EAAAvyB,KAAApB,EAAAsnB,IAIAmM,EAAAzzB,IAAAyzB,EAAAC,MAAAC,KAKAC,EAAA,SAAAC,EAAA/0B,GAEA,IADA,IAAAkB,EAAAlB,KAAA+qB,aAAA9xB,OAAAkH,OAAA,SACA0G,EAAA,EAAmBA,EAAAkuB,EAAA91B,SAAmB4H,EACtC,qBAAAkuB,EAAAluB,KACA3F,EAAA2F,GAAAkuB,EAAAluB,IAIA,OAAA3F,GAGAyrB,EAAA,SAAAA,EAAA7S,EAAAib,EAAA/0B,GACA,IAAA+0B,EACA,OAAAjb,EAGA,qBAAAib,EAAA,CACA,GAAArvB,EAAAoU,GACAA,EAAAxX,KAAAyyB,OACS,KAAAjb,GAAA,kBAAAA,EAKT,OAAAA,EAAAib,IAJA/0B,MAAA+qB,cAAA/qB,EAAAuqB,mBAAAxoB,EAAA5G,KAAAlC,OAAAa,UAAAi7B,MACAjb,EAAAib,IAAA,GAMA,OAAAjb,EAGA,IAAAA,GAAA,kBAAAA,EACA,OAAAA,GAAAtJ,OAAAukB,GAGA,IAAAC,EAAAlb,EAKA,OAJApU,EAAAoU,KAAApU,EAAAqvB,KACAC,EAAAF,EAAAhb,EAAA9Z,IAGA0F,EAAAoU,IAAApU,EAAAqvB,IACAA,EAAA7yB,QAAA,SAAAyyB,EAAA9tB,GACA,GAAA9E,EAAA5G,KAAA2e,EAAAjT,GAAA,CACA,IAAAouB,EAAAnb,EAAAjT,GACAouB,GAAA,kBAAAA,GAAAN,GAAA,kBAAAA,EACA7a,EAAAjT,GAAA8lB,EAAAsI,EAAAN,EAAA30B,GAEA8Z,EAAAxX,KAAAqyB,QAGA7a,EAAAjT,GAAA8tB,IAGA7a,GAGA7gB,OAAAe,KAAA+6B,GAAArY,OAAA,SAAAwY,EAAAjsB,GACA,IAAA7P,EAAA27B,EAAA9rB,GAOA,OALAlH,EAAA5G,KAAA+5B,EAAAjsB,GACAisB,EAAAjsB,GAAA0jB,EAAAuI,EAAAjsB,GAAA7P,EAAA4G,GAEAk1B,EAAAjsB,GAAA7P,EAEA87B,GACKF,IAGL5S,EAAA,SAAAtI,EAAAib,GACA,OAAA97B,OAAAe,KAAA+6B,GAAArY,OAAA,SAAAwY,EAAAjsB,GAEA,OADAisB,EAAAjsB,GAAA8rB,EAAA9rB,GACAisB,GACKpb,IAGLhS,EAAA,SAAAkjB,EAAAP,EAAAlV,GACA,IAAA4f,EAAAnK,EAAAriB,QAAA,WACA,kBAAA4M,EAEA,OAAA4f,EAAAxsB,QAAA,iBAAmDysB,UAGnD,IACA,OAAAxsB,mBAAAusB,GACK,MAAAt0B,GACL,OAAAs0B,IAIAzf,EAAA,SAAAsV,EAAAqK,EAAA9f,GAGA,OAAAyV,EAAA/rB,OACA,OAAA+rB,EAGA,IAAAsK,EAAA,kBAAAtK,IAAA7lB,OAAA6lB,GAEA,kBAAAzV,EACA,OAAAggB,OAAAD,GAAA3sB,QAAA,kBAAoD,SAAAsiB,GACpD,eAAApJ,SAAAoJ,EAAAhkB,MAAA,eAKA,IADA,IAAAuuB,EAAA,GACA3uB,EAAA,EAAmBA,EAAAyuB,EAAAr2B,SAAmB4H,EAAA,CACtC,IAAA+f,EAAA0O,EAAAG,WAAA5uB,GAGA,KAAA+f,GACA,KAAAA,GACA,KAAAA,GACA,MAAAA,GACAA,GAAA,IAAAA,GAAA,IACAA,GAAA,IAAAA,GAAA,IACAA,GAAA,IAAAA,GAAA,IAEA4O,GAAAF,EAAAvJ,OAAAllB,GAIA+f,EAAA,IACA4O,GAAAjB,EAAA3N,GAIAA,EAAA,KACA4O,GAAAjB,EAAA,IAAA3N,GAAA,GAAA2N,EAAA,OAAA3N,GAIAA,EAAA,OAAAA,GAAA,MACA4O,GAAAjB,EAAA,IAAA3N,GAAA,IAAA2N,EAAA,IAAA3N,GAAA,MAAA2N,EAAA,OAAA3N,IAIA/f,GAAA,EACA+f,EAAA,aAAAA,IAAA,QAAA0O,EAAAG,WAAA5uB,IACA2uB,GAAAjB,EAAA,IAAA3N,GAAA,IACA2N,EAAA,IAAA3N,GAAA,OACA2N,EAAA,IAAA3N,GAAA,MACA2N,EAAA,OAAA3N,IAGA,OAAA4O,GAGA5I,EAAA,SAAAxzB,GAIA,IAHA,IAAAs7B,EAAA,EAAkBxzB,IAAA,CAAOknB,EAAAhvB,GAAWw7B,KAAA,MACpCc,EAAA,GAEA7uB,EAAA,EAAmBA,EAAA6tB,EAAAz1B,SAAkB4H,EAKrC,IAJA,IAAA8tB,EAAAD,EAAA7tB,GACA3F,EAAAyzB,EAAAzzB,IAAAyzB,EAAAC,MAEA56B,EAAAf,OAAAe,KAAAkH,GACAsnB,EAAA,EAAuBA,EAAAxuB,EAAAiF,SAAiBupB,EAAA,CACxC,IAAAvf,EAAAjP,EAAAwuB,GACA/O,EAAAvY,EAAA+H,GACA,kBAAAwQ,GAAA,OAAAA,IAAA,IAAAic,EAAAl0B,QAAAiY,KACAib,EAAApyB,KAAA,CAA4BpB,MAAA0zB,KAAA3rB,IAC5BysB,EAAApzB,KAAAmX,IAOA,OAFAgb,EAAAC,GAEAt7B,GAGAozB,EAAA,SAAAtrB,GACA,0BAAAjI,OAAAa,UAAA2H,SAAAtG,KAAA+F,IAGAmV,EAAA,SAAAnV,GACA,SAAAA,GAAA,kBAAAA,OAIAA,EAAAwf,aAAAxf,EAAAwf,YAAArK,UAAAnV,EAAAwf,YAAArK,SAAAnV,KAGAuqB,EAAA,SAAA9M,EAAAC,GACA,SAAApO,OAAAmO,EAAAC,IAGAxV,EAAAjQ,QAAA,CACA27B,gBACA1S,SACAqJ,UACAmB,UACA9kB,SACA4N,SACAW,WACAmW,WACAG,4CCnOA1zB,OAAAC,eAAAC,EAAA,cAA8CC,OAAA,IAC9C,IAAAC,EAAcC,EAAQ,QACtBmT,EAAgBnT,EAAQ,QACxBE,EAAsBF,EAAQ,QAI9Bg5B,EAAA,WAEA,SAAAA,EAAA54B,EAAAC,GACAC,KAAAF,QACAE,KAAAC,QAAAF,EAmCA,OAjCAV,OAAAC,eAAAo5B,EAAAx4B,UAAA,cAIAC,IAAA,WACA,WAAAuC,KAAA1C,KAAAF,MAAA4E,aAEApE,YAAA,EACAC,cAAA,IAEAlB,OAAAC,eAAAo5B,EAAAx4B,UAAA,oBAIAC,IAAA,WACA,OAAAH,KAAAF,MAAA0e,eAEAle,YAAA,EACAC,cAAA,IAEAlB,OAAAC,eAAAo5B,EAAAx4B,UAAA,WAIAC,IAAA,WACA,WAAA0S,EAAAnS,QAAAV,KAAAF,MAAAiY,QAAA/X,KAAAC,UAEAK,YAAA,EACAC,cAAA,IAEAd,EAAAkB,WAAA,CACAf,EAAAgB,eACA83B,EAAAx4B,UAAA,kBACAw4B,EAvCA,GAyCAn5B,EAAAmB,QAAAg4B,qCChDAr5B,OAAAC,eAAAC,EAAA,cAA8CC,OAAA,IAC9C,IAAAC,EAAcC,EAAQ,QACtB+P,EAAgB/P,EAAQ,QACxBmF,EAAqBnF,EAAQ,QAC7By5B,EAAkBz5B,EAAQ,QAC1BiQ,EAA8BjQ,EAAQ,QAYtCq8B,EAAA,SAAA56B,GAEA,SAAA46B,IACA,cAAA56B,KAAA4B,MAAA/C,KAAAgD,YAAAhD,KA2HA,OA7HAP,EAAA+B,UAAAu6B,EAAA56B,GASA46B,EAAA77B,UAAA87B,cAAA,SAAA/rB,GACA,OAAAxQ,EAAAkC,UAAA3B,UAAA,oBACA,OAAAP,EAAAmC,YAAA5B,KAAA,SAAA6B,GACA,SAAA7B,KAAAi8B,UAAA,KAAAhsB,SASA8rB,EAAA77B,UAAAg8B,gBAAA,SAAA1W,GACA,OAAA/lB,EAAAkC,UAAA3B,UAAA,oBACA,OAAAP,EAAAmC,YAAA5B,KAAA,SAAA6B,GACA,SAAA7B,KAAAi8B,UAAA,OAAAzW,SASAuW,EAAA77B,UAAA+gB,YAAA,SAAAlgB,GACA,OAAAtB,EAAAkC,UAAA3B,UAAA,oBACA,IAAAghB,EACA,OAAAvhB,EAAAmC,YAAA5B,KAAA,SAAA6B,GACA,OAAAA,EAAA8D,OACA,gBAAA3F,KAAAi8B,UAAA,KAAAl7B,IACA,OAEA,OADAigB,EAAAnf,EAAAgE,OACA,GAAAmb,EAAA3b,OAAA2b,EAAA,eAUA+a,EAAA77B,UAAAi8B,cAAA,SAAA17B,GACA,OAAAhB,EAAAkC,UAAA3B,UAAA,oBACA,IAAAghB,EACA,OAAAvhB,EAAAmC,YAAA5B,KAAA,SAAA6B,GACA,OAAAA,EAAA8D,OACA,gBAAA3F,KAAAi8B,UAAA,OAAAx7B,IACA,OAEA,OADAugB,EAAAnf,EAAAgE,OACA,GAAAmb,EAAA3b,OAAA2b,EAAA,eAQA+a,EAAA77B,UAAAk8B,YAAA,SAAAxqB,GAEA,YADA,IAAAA,IAAoCA,EAAA,IACpCnS,EAAAkC,UAAA3B,UAAA,oBACA,IAAA0hB,EAAAC,EAAArQ,EAAAjF,EACA/K,EAAAtB,KACA,OAAAP,EAAAmC,YAAA5B,KAAA,SAAA6B,GACA,OAAAA,EAAA8D,OACA,OAEA,OADA+b,EAAA9P,EAAA8P,MAAAC,EAAA/P,EAAA+P,OAAArQ,EAAAM,EAAAN,MACA,GAAAtR,KAAAC,QAAA6Q,QAAA,CACAlH,KAAA/E,EAAAkM,kBAAAC,MACAvH,IAAA,YACAyH,MAAA,CACAwQ,QACAC,SACAjQ,MAAAJ,MAGA,OAEA,OADAjF,EAAAxK,EAAAgE,OACA,IACAzE,KAAAiL,EAAAjL,KAAA0C,IAAA,SAAA1C,GAAuE,WAAA+3B,EAAAz4B,QAAAU,EAAAE,EAAArB,WACvE0R,OAAAtF,EAAAuF,YAAAvF,EAAAuF,WAAAD,eASAoqB,EAAA77B,UAAAm8B,qBAAA,WACA,IAAA/6B,EAAAtB,KACA,WAAA2P,EAAAjP,QAAA,CACA+I,IAAA,aACSzJ,KAAAC,QAAA,SAAAmB,GAAiC,WAAA+3B,EAAAz4B,QAAAU,EAAAE,EAAArB,YAE1C87B,EAAA77B,UAAA+7B,UAAA,SAAAjsB,EAAAuC,GACA,OAAA9S,EAAAkC,UAAA3B,UAAA,oBACA,IAAAqM,EACAxK,EACAP,EAAAtB,KACA,OAAAP,EAAAmC,YAAA5B,KAAA,SAAA0F,GACA,OAAAA,EAAAC,OACA,gBAAA3F,KAAAC,QAAA6Q,QAAA,CACAlH,KAAA/E,EAAAkM,kBAAAC,MACAvH,IAAA,QACAyH,OAAArP,EAAA,GACAA,EAAAmO,GAAAuC,EACA1Q,MAEA,OAEA,OADAwK,EAAA3G,EAAAG,OACA,GAAAwG,EAAAjL,KAAA0C,IAAA,SAAAub,GAAgF,WAAA8Z,EAAAz4B,QAAA2e,EAAA/d,EAAArB,kBAKhF87B,EA9HA,CA+HCtsB,EAAA/O,SACDnB,EAAAmB,QAAAq7B,qCCjJA18B,OAAAC,eAAAC,EAAA,cAA8CC,OAAA,IAC9C,IAAAC,EAAcC,EAAQ,QACtBE,EAAsBF,EAAQ,QAE9B48B,EAAA,WACA,SAAAA,EAAAv8B,GACAC,KAAAC,QAAAF,EAKA,OAHAN,EAAAkB,WAAA,CACAf,EAAAgB,eACA07B,EAAAp8B,UAAA,kBACAo8B,EAPA,GASA/8B,EAAAmB,QAAA47B,qCCbAj9B,OAAAC,eAAAC,EAAA,cAA8CC,OAAA,IAC9C,IAAAC,EAAcC,EAAQ,QACtBiQ,EAA8BjQ,EAAQ,QAItC68B,EAAA,SAAAp7B,GAEA,SAAAo7B,IACA,cAAAp7B,KAAA4B,MAAA/C,KAAAgD,YAAAhD,KAwBA,OA1BAP,EAAA+B,UAAA+6B,EAAAp7B,GAOAo7B,EAAAr8B,UAAAs8B,cAAA,WACA,OAAA/8B,EAAAkC,UAAA3B,UAAA,oBACA,IAAAoB,EAAAS,EACA,OAAApC,EAAAmC,YAAA5B,KAAA,SAAA0F,GACA,OAAAA,EAAAC,OACA,OAEA,OADA9D,EAAA7B,KAAAy8B,aACA56B,EAAA,MACA,GAAA7B,KAAA08B,WAAA,CAA8DxrB,MAAA,CAASQ,MAAA,IAAAgQ,WAAAjb,MACvE,OACA5E,EAAA6D,EAAAG,OACAH,EAAAC,MAAA,EACA,OAEA,OADAvE,EAAAS,EACA,GAAAT,EAAAkvB,aAKAiM,EA3BA,CA4BC5sB,EAAAjP,SACDnB,EAAAmB,QAAA67B,qCCnCAl9B,OAAAC,eAAAC,EAAA,cAA8CC,OAAA,IAC9C,IAAAC,EAAcC,EAAQ,QACtBkE,EAAclE,EAAQ,QACtB+P,EAAgB/P,EAAQ,QACxB24B,EAAuB34B,EAAQ,QAC/BmD,EAAanD,EAAQ,QACrBykB,EAAoBzkB,EAAQ,QAC5BoS,EAAkBpS,EAAQ,QAC1Bu4B,EAAqBv4B,EAAQ,QAC7Bi5B,EAAyBj5B,EAAQ,QACjCmZ,EAAmCnZ,EAAQ,QAC3C+4B,EAAmB/4B,EAAQ,QAC3B64B,EAAkB74B,EAAQ,QAC1BwkB,EAA6BxkB,EAAQ,QACrC0U,EAA4B1U,EAAQ,QAYpCi9B,EAAA,SAAAx7B,GAEA,SAAAw7B,IACA,IAAAr7B,EAAA,OAAAH,KAAA4B,MAAA/C,KAAAgD,YAAAhD,KAEA,OADAsB,EAAAs7B,iBAAA,IAAA1d,IACA5d,EAyaA,OA7aA7B,EAAA+B,UAAAm7B,EAAAx7B,GASAw7B,EAAAz8B,UAAA+Z,MAAA,WACA,OAAAxa,EAAAkC,UAAA3B,UAAA,oBACA,IAAA6B,EACA,OAAApC,EAAAmC,YAAA5B,KAAA,SAAA0F,GACA,OAAAA,EAAAC,OACA,OAEA,OADA9D,EAAAw2B,EAAA33B,QAAAiW,KACA,GAAA3W,KAAAC,QAAA6Q,QAAA,CAAmErH,IAAA,OAAAwH,MAAA,eACnE,oBAAApP,EAAAkB,MAAAs1B,EAAA33B,QAAA,QAAAgF,EAAAG,OAAA7F,KAAAC,kBAUA08B,EAAAz8B,UAAAkC,QAAA,SAAAsB,GACA,OAAAjE,EAAAkC,UAAA3B,UAAA,oBACA,IAAA0wB,EACA,OAAAjxB,EAAAmC,YAAA5B,KAAA,SAAA6B,GACA,OAAAA,EAAA8D,OACA,gBAAA3F,KAAAC,QAAA6Q,QAAA,CAAuErH,IAAA,SAAAqI,EAAAjR,cAAA6C,MACvE,OAEA,GADAgtB,EAAA7uB,EAAAgE,QACA6qB,EACA,UAAAxM,EAAAxjB,QAAA,oCAEA,aAAAmC,EAAAnC,QAAAgwB,EAAA1wB,KAAAC,gBAUA08B,EAAAz8B,UAAAiwB,cAAA,SAAAnO,GACA,OAAAviB,EAAAkC,UAAA3B,UAAA,oBACA,IAAAqC,EAAAvB,EACA,OAAArB,EAAAmC,YAAA5B,KAAA,SAAA6B,GACA,OAAAA,EAAA8D,OACA,OAGA,OADA3F,KAAA68B,kBACA78B,KAAA48B,iBAAAz0B,IAAA6Z,GACA,GAAAhiB,KAAA48B,iBAAAz8B,IAAA6hB,GAAAxiB,OAEA,GAAAQ,KAAAC,QAAA6Q,QAAA,CAAmErH,IAAA,QAAAyH,MAAA,CAAuB+H,MAAA+I,MAC1F,OAEA,OADA3f,EAAAR,EAAAgE,OAAAxD,MACA,IAAAA,EAAAgD,OACA,UAEAvE,EAAA,IAAA+B,EAAAnC,QAAA2B,EAAA,GAAArC,KAAAC,SACAD,KAAA48B,iBAAAv0B,IAAA2Z,EAAA,CACAxiB,MAAAsB,EACA0e,QAAA9c,KAAA+c,MAAA,OAEA,GAAA3e,UAUA67B,EAAAz8B,UAAA8vB,gBAAA,SAAAC,GACA,OAAAxwB,EAAAkC,UAAA3B,UAAA,oBACA,IAAA88B,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA96B,EACAf,EAAAtB,KACA,OAAAP,EAAAmC,YAAA5B,KAAA,SAAA6B,GACA,OAAAA,EAAA8D,OACA,OAUA,OATA3F,KAAA68B,kBACA5M,IAAAnsB,IAAA,SAAArD,GAAmE,OAAAA,EAAAgL,gBACnEqxB,EAAAjxB,MAAAuxB,KAAAp9B,KAAA48B,iBAAA/zB,WAAA3E,OAAA,SAAArC,GACA,IAAA6D,EAAAjG,EAAAqoB,OAAAjmB,EAAA,GAAAwN,EAAA3J,EAAA,GACA,OAAAuqB,EAAAhM,SAAA5U,KAEA0tB,EAAA5Y,EAAA0E,gBAAAiU,GACAE,EAAA7Y,EAAAkE,UAAA0U,EAAA,SAAA1d,GAA8F,OAAAA,EAAA7f,QAC9Fy9B,EAAAhN,EAAA/rB,OAAA,SAAAzD,GAAoE,QAAAA,KAAAu8B,KACpEC,EAAA53B,OAGA,GAAArF,KAAAC,QAAA6Q,QAAA,CAAmErH,IAAA,QAAAyH,MAAA,CAAuB+H,MAAAgkB,EAAA9vB,KAAA,SAF1F,GAAA6vB,GAGA,OAQA,OAPAE,EAAAr7B,EAAAgE,OACAs3B,EAAAD,EAAA76B,MAAAyB,IAAA,SAAA1C,GAAwE,WAAAyB,EAAAnC,QAAAU,EAAAE,EAAArB,WACxEk9B,EAAA70B,QAAA,SAAAxH,GAA0D,OAAAQ,EAAAs7B,iBAAAv0B,IAAAvH,EAAAL,KAAA,CAC1DjB,MAAAsB,EACA0e,QAAA9c,KAAA+c,MAAA,SAEApd,EAAA8hB,EAAAE,QAAA8Y,EAAA,QACA,GAAA19B,EAAAsQ,SAAA,GAAiEitB,EAAA36B,UAUjEs6B,EAAAz8B,UAAAm9B,cAAA,SAAAv8B,GACA,OAAArB,EAAAkC,UAAA3B,UAAA,oBACA,IAAA0D,EAAAtC,EACA,OAAA3B,EAAAmC,YAAA5B,KAAA,SAAA6B,GACA,OAAAA,EAAA8D,OACA,OAEA,OADAjC,EAAAoO,EAAAjR,cAAAC,GACA,GAAAd,KAAAC,QAAA6Q,QAAA,CAAmErH,IAAA,SAAA/F,EAAA,UAAAuN,MAAA,wBACnE,OAEA,OADA7P,EAAAS,EAAAgE,OACA,OAAAoyB,EAAAv3B,QAAAU,EAAAk8B,sBAWAX,EAAAz8B,UAAAq9B,oBAAA,SAAAz8B,EAAA08B,GACA,OAAA/9B,EAAAkC,UAAA3B,UAAA,oBACA,IAAA0D,EAAAkN,EAAA/O,EAAA4Y,EACA,OAAAhb,EAAAmC,YAAA5B,KAAA,SAAA0F,GACA,OAAAA,EAAAC,OACA,OACAjC,EAAAoO,EAAAjR,cAAAC,GACA8P,EAAAkB,EAAAjR,cAAA28B,GACA93B,EAAAC,MAAA,EACA,OAGA,OAFAD,EAAAgV,KAAAhS,KAAA,UACA7G,EAAA82B,EAAAj4B,QAAAiW,KACA,GAAA3W,KAAAC,QAAA6Q,QAAA,CACArH,IAAA,SAAA/F,EAAA,kBAAAkN,EACAK,MAAA,wBAEA,oBAAApP,EAAAkB,MAAA41B,EAAAj4B,QAAA,QAAAgF,EAAAG,OACA7F,KAAAC,YACA,OAEA,GADAwa,EAAA/U,EAAAG,OACA4U,aAAArG,EAAA1T,QAAA,CACA,SAAA+Z,EAAAkI,WACA,eAEA,SAAAlI,EAAAkI,WACA,UAAA9J,EAAAnY,QAAAkQ,GAGA,MAAA6J,EACA,uBAcAkiB,EAAAz8B,UAAAu9B,oBAAA,SAAA38B,EAAAoS,EAAA5B,EAAAqB,EAAA8gB,GAEA,YADA,IAAAniB,IAA+BA,EAAA,IAC/B7R,EAAAkC,UAAA3B,UAAA,oBACA,IAAA0D,EAAAwN,EAAA9P,EACAE,EAAAtB,KACA,OAAAP,EAAAmC,YAAA5B,KAAA,SAAA6B,GACA,OAAAA,EAAA8D,OACA,OAaA,OAZAjC,EAAAoO,EAAAjR,cAAAC,GACAoQ,EAAA,GACAgC,IACAhC,EAAAiC,SAAAD,EAAA,GAAA5B,GAAAzJ,YAEAqJ,EAAAI,QAAAzJ,WACA8K,IACAzB,EAAAwsB,OAAA/qB,GAEA8gB,IACAviB,EAAAoa,UAAAmI,GAEA,GAAAzzB,KAAAC,QAAA6Q,QAAA,CACArH,IAAA,SAAA/F,EAAA,oBAAAwN,WAEA,OAEA,OADA9P,EAAAS,EAAAgE,OACA,GAAAzE,EAAAyY,QAAA/V,IAAA,SAAAgW,GAAkF,WAAA2e,EAAA/3B,QAAAoZ,EAAAxY,EAAArB,kBAWlF08B,EAAAz8B,UAAAy9B,mBAAA,SAAA78B,EAAAiX,GACA,OAAAtY,EAAAkC,UAAA3B,UAAA,oBACA,IAAA0D,EAAAkN,EAAAxP,EAAA8lB,EACA,OAAAznB,EAAAmC,YAAA5B,KAAA,SAAA6B,GACA,OAAAA,EAAA8D,OACA,OACAjC,EAAAoO,EAAAjR,cAAAC,GACA8P,EAAAkB,EAAAjR,cAAAkX,GACAlW,EAAA8D,MAAA,EACA,OAEA,OADA9D,EAAA6Y,KAAAhS,KAAA,UACA,GAAA1I,KAAAC,QAAA6Q,QAAA,CAAmErH,IAAA,SAAA/F,EAAA,qBAAAkN,KACnE,OAEA,OADAxP,EAAAS,EAAAgE,OACA,OAAA4yB,EAAA/3B,QAAAU,EAAApB,KAAAC,UACA,OAEA,GADAinB,EAAArlB,EAAAgE,OACAqhB,aAAA9S,EAAA1T,SACA,MAAAwmB,EAAAvE,WACA,eAGA,MAAAuE,EACA,uBAYAyV,EAAAz8B,UAAAga,cAAA,SAAApZ,EAAAiX,EAAAyG,GACA,OAAA/e,EAAAkC,UAAA3B,UAAA,oBACA,IAAA0D,EAAAkN,EAAAxP,EACA,OAAA3B,EAAAmC,YAAA5B,KAAA,SAAA6B,GACA,OAAAA,EAAA8D,OACA,OAGA,OAFAjC,EAAAoO,EAAAjR,cAAAC,GACA8P,EAAAkB,EAAAjR,cAAAkX,GACA,GAAA/X,KAAAC,QAAA6Q,QAAA,CACArH,IAAA,SAAA/F,EAAA,qBAAAkN,EACA5F,OAAA,MACAiG,MAAA,oBACA/H,KAAA,CAAuCsV,cAAAof,QAAApf,GAAA3W,eAEvC,OAEA,OADAzG,EAAAS,EAAAgE,OACA,OAAA4yB,EAAA/3B,QAAAU,EAAApB,KAAAC,gBAWA08B,EAAAz8B,UAAAka,gBAAA,SAAAtZ,EAAAiX,GACA,OAAAtY,EAAAkC,UAAA3B,UAAA,oBACA,IAAA0D,EAAAkN,EACA,OAAAnR,EAAAmC,YAAA5B,KAAA,SAAA6B,GACA,OAAAA,EAAA8D,OACA,OAGA,OAFAjC,EAAAoO,EAAAjR,cAAAC,GACA8P,EAAAkB,EAAAjR,cAAAkX,GACA,GAAA/X,KAAAC,QAAA6Q,QAAA,CACArH,IAAA,SAAA/F,EAAA,qBAAAkN,EACAK,MAAA,oBACAjG,OAAA,YAEA,OAEA,OADAnJ,EAAAgE,OACA,UAYA82B,EAAAz8B,UAAA29B,gBAAA,SAAA/8B,EAAAoS,EAAA5B,GAEA,YADA,IAAAA,IAA+BA,EAAA,IAC/B7R,EAAAkC,UAAA3B,UAAA,oBACA,IAAA0D,EAAAwN,EAAA9P,EACAE,EAAAtB,KACA,OAAAP,EAAAmC,YAAA5B,KAAA,SAAA6B,GACA,OAAAA,EAAA8D,OACA,OAMA,OALAjC,EAAAoO,EAAAjR,cAAAC,GACAoQ,EAAA,CAAiCI,QAAAzJ,YACjCqL,IACAhC,EAAAiC,SAAAD,EAAA,GAAA5B,GAAAzJ,YAEA,GAAA7H,KAAAC,QAAA6Q,QAAA,CACArH,IAAA,SAAA/F,EAAA,UAAAwN,QAAAD,MAAA,sBAEA,OAEA,OADA7P,EAAAS,EAAAgE,OACA,GAAAzE,EAAA08B,OAAAh6B,IAAA,SAAAi6B,GAAgF,WAAAxF,EAAA73B,QAAAq9B,EAAAz8B,EAAArB,kBAWhF08B,EAAAz8B,UAAAqjB,UAAA,SAAAziB,EAAA0iB,GACA,OAAA/jB,EAAAkC,UAAA3B,UAAA,oBACA,IAAA0D,EAAAs6B,EAAA58B,EACA,OAAA3B,EAAAmC,YAAA5B,KAAA,SAAA6B,GACA,OAAAA,EAAA8D,OACA,OAGA,OAFAjC,EAAAoO,EAAAjR,cAAAC,GACAk9B,EAAAlsB,EAAAjR,cAAA2iB,GACA,GAAAxjB,KAAAC,QAAA6Q,QAAA,CACArH,IAAA,SAAA/F,EAAA,WAAAs6B,EACAhzB,OAAA,MACAiG,MAAA,sBAEA,OAEA,OADA7P,EAAAS,EAAAgE,OACA,OAAA0yB,EAAA73B,QAAAU,EAAApB,KAAAC,gBAWA08B,EAAAz8B,UAAAujB,YAAA,SAAA3iB,EAAA4iB,GACA,OAAAjkB,EAAAkC,UAAA3B,UAAA,oBACA,IAAA0D,EAAAu6B,EACA,OAAAx+B,EAAAmC,YAAA5B,KAAA,SAAA6B,GACA,OAAAA,EAAA8D,OACA,OAGA,OAFAjC,EAAAoO,EAAAjR,cAAAC,GACAm9B,EAAAnsB,EAAAjR,cAAA6iB,GACA,GAAA1jB,KAAAC,QAAA6Q,QAAA,CACArH,IAAA,SAAA/F,EAAA,WAAAu6B,EACAjzB,OAAA,SACAiG,MAAA,sBAEA,OAEA,OADApP,EAAAgE,OACA,UAKA82B,EAAAz8B,UAAA28B,gBAAA,WACA,IAAAv7B,EAAAtB,KACAyf,EAAA/c,KAAA+c,MACAzf,KAAA48B,iBAAAt0B,QAAA,SAAAuX,EAAAxQ,GACAwQ,EAAAL,QAAAC,GACAne,EAAAs7B,iBAAA7c,OAAA1Q,MAIA5P,EAAAkB,WAAA,CACAiD,EAAAW,OAAA,OACAo4B,EAAAz8B,UAAA,cACAT,EAAAkB,WAAA,CACAiD,EAAAW,OAAA,OACAo4B,EAAAz8B,UAAA,gBACAT,EAAAkB,WAAA,CACAiD,EAAAW,OAAA,OACAo4B,EAAAz8B,UAAA,sBACAT,EAAAkB,WAAA,CACAiD,EAAAW,OAAA,OACAo4B,EAAAz8B,UAAA,4BACAT,EAAAkB,WAAA,CACAiD,EAAAW,OAAA,MACAo4B,EAAAz8B,UAAA,4BACAT,EAAAkB,WAAA,CACAiD,EAAAW,OAAA,MACAo4B,EAAAz8B,UAAA,2BACAT,EAAAkB,WAAA,CACAiD,EAAA4c,YAAA,yBACA5c,EAAA4c,YAAA,yBACAmc,EAAAz8B,UAAA,sBACAT,EAAAkB,WAAA,CACAiD,EAAA4c,YAAA,yBACA5c,EAAA4c,YAAA,yBACAmc,EAAAz8B,UAAA,wBACAT,EAAAkB,WAAA,CACAiD,EAAAW,OAAA,OACAo4B,EAAAz8B,UAAA,wBACAT,EAAAkB,WAAA,CACAiD,EAAA4c,YAAA,sBACAmc,EAAAz8B,UAAA,kBACAT,EAAAkB,WAAA,CACAiD,EAAA4c,YAAA,sBACAmc,EAAAz8B,UAAA,oBACAy8B,EAAAl9B,EAAAkB,WAAA,CACAiD,EAAAY,WACAm4B,GACAA,EA9aA,CA+aCltB,EAAA/O,SACDnB,EAAAmB,QAAAi8B,qCC1cAt9B,OAAAC,eAAAC,EAAA,cAA8CC,OAAA,IAC9C,IAAAC,EAAcC,EAAQ,QACtBkE,EAAclE,EAAQ,QACtB6hB,EAAmB7hB,EAAQ,QAI3B04B,EAAA,WAEA,SAAAA,EAAAt4B,GACAE,KAAAF,QAkCA,OAhCAT,OAAAC,eAAA84B,EAAAl4B,UAAA,eAIAC,IAAA,WACA,OAAAohB,EAAAvE,QAAA3d,OAAAuJ,OAAA5I,KAAAF,MAAAo+B,YAEA59B,YAAA,EACAC,cAAA,IAEAlB,OAAAC,eAAA84B,EAAAl4B,UAAA,yBAIAC,IAAA,WACA,WAAA+e,IAAAqC,EAAAvE,QAAA3d,OAAAwJ,QAAA7I,KAAAF,MAAAo+B,UAAAp6B,IAAA,SAAAjC,GACA,IAAA6D,EAAAjG,EAAAqoB,OAAAjmB,EAAA,GAAAyH,EAAA5D,EAAA,GAAA8f,EAAA9f,EAAA,GACA,OAAA8f,EAAA1hB,IAAA,SAAArD,GAAkD,OAAAA,EAAA6I,UAGlDhJ,YAAA,EACAC,cAAA,IAEAd,EAAAkB,WAAA,CACAiD,EAAAU,gBACA8zB,EAAAl4B,UAAA,oBACAT,EAAAkB,WAAA,CACAiD,EAAAU,gBACA8zB,EAAAl4B,UAAA,8BACAk4B,EAAA34B,EAAAkB,WAAA,CACAiD,EAAAY,WACA4zB,GACAA,EArCA,GAuCA74B,EAAAmB,QAAA03B,qCC9CA/4B,OAAAC,eAAAC,EAAA,cAA8CC,OAAA,IAC9C,IAAAC,EAAcC,EAAQ,QACtBE,EAAsBF,EAAQ,QAC9BmF,EAAqBnF,EAAQ,QAK7Bq4B,EAAA,WAWA,SAAAA,EAAAoG,EAAAvoB,GACA5V,KAAAkF,cAAA0Q,EAAA5Q,aACAhF,KAAAo+B,cAAAxoB,EAAAM,aACAlW,KAAAq+B,eAAAF,EACAn+B,KAAAs+B,eAAA1oB,EAAA2oB,OACAv+B,KAAAw+B,WAAA5oB,EAAA6oB,UA+GA,OAnGA1G,EAAA73B,UAAAiF,eAAA,SAAAC,GACA,OAAA3F,EAAAkC,UAAA3B,UAAA,oBACA,IAAA0+B,EAAA5oB,EAAA2J,EAAAkf,EACAr9B,EAAAtB,KACA,OAAAP,EAAAmC,YAAA5B,KAAA,SAAA6B,GACA,OAAAA,EAAA8D,OACA,OAIA,MAHA,kBAAAP,IACAA,IAAAyJ,MAAA,MAEA,GAAA7O,KAAAq+B,eAAAl5B,kBACA,OAEA,OADAu5B,EAAA78B,EAAAgE,OACA64B,GAAAt5B,KAAA4e,KAAA,SAAA/S,GAAkF,OAAA3P,EAAAs9B,cAAA3a,SAAAhT,KAClF,GAAAjR,KAAAq+B,eAAAl5B,eAAAC,IADiI,MAEjI,OAGA,GAFA0Q,EAAAjU,EAAAgE,OAEAiQ,IAAA4oB,EACA,SAAA5oB,GAEAjU,EAAA8D,MAAA,EACA,OAEA,GAAA+4B,EACA,GAAA1+B,KAAAs+B,gBAEA,GADA7e,EAAA,IAAA/c,KACA+c,EAAAzf,KAAAs+B,eACA,SAAAI,QAGA,IAAAA,EAAAl5B,UACA,SAAAk5B,GAGA,SAAA1+B,KAAAyF,WACA,OAEA,OADAk5B,EAAA98B,EAAAgE,OACA64B,EACA,GAAAC,GAGA,GAAA3+B,KAAAq+B,eAAAl5B,eAAAC,UAQA2yB,EAAA73B,UAAAuF,QAAA,WACA,OAAAhG,EAAAkC,UAAA3B,UAAA,oBACA,IAAA6V,EACA,OAAApW,EAAAmC,YAAA5B,KAAA,SAAA6B,GACA,OAAAA,EAAA8D,OACA,gBAAAd,EAAAnE,QAAAuV,mBAAAjW,KAAA+E,SAAA/E,KAAAkF,cAAAlF,KAAAo+B,gBACA,OAQA,OAPAvoB,EAAAhU,EAAAgE,OACA7F,KAAA8F,eAAA+P,GACA7V,KAAAo+B,cAAAvoB,EAAAK,aACAlW,KAAAs+B,oBAAA73B,EACAzG,KAAAw+B,YACAx+B,KAAAw+B,WAAA3oB,GAEA,GAAAA,SAMAkiB,EAAA73B,UAAA4F,eAAA,SAAAC,GACA/F,KAAAq+B,eAAAv4B,eAAAC,IAEA1G,OAAAC,eAAAy4B,EAAA73B,UAAA,YAIAC,IAAA,WACA,OAAAH,KAAAq+B,eAAAt5B,UAEAzE,YAAA,EACAC,cAAA,IAEAlB,OAAAC,eAAAy4B,EAAA73B,UAAA,iBAIAC,IAAA,WACA,OAAAH,KAAAq+B,eAAAO,eAEAt+B,YAAA,EACAC,cAAA,IAEAd,EAAAkB,WAAA,CACAf,EAAAgB,eACAm3B,EAAA73B,UAAA,wBACAT,EAAAkB,WAAA,CACAf,EAAAgB,eACAm3B,EAAA73B,UAAA,wBACA63B,EA/HA,GAiIAx4B,EAAAmB,QAAAq3B,qCCzIA14B,OAAAC,eAAAC,EAAA,cAA8CC,OAAA,IAC9C,IAAAC,EAAcC,EAAQ,QACtBoS,EAAkBpS,EAAQ,QAC1BkE,EAAclE,EAAQ,QACtB+P,EAAgB/P,EAAQ,QACxBoT,EAAepT,EAAQ,QAYvBm/B,EAAA,SAAA19B,GAEA,SAAA09B,IACA,cAAA19B,KAAA4B,MAAA/C,KAAAgD,YAAAhD,KAiIA,OAnIAP,EAAA+B,UAAAq9B,EAAA19B,GASA09B,EAAA3+B,UAAAm3B,mBAAA,SAAAtf,GACA,OAAAtY,EAAAkC,UAAA3B,UAAA,oBACA,IAAA4Q,EAAAxP,EACA,OAAA3B,EAAAmC,YAAA5B,KAAA,SAAA6B,GACA,OAAAA,EAAA8D,OACA,OAEA,OADAiL,EAAAkB,EAAAjR,cAAAkX,GACA,GAAA/X,KAAAC,QAAA6Q,QAAA,CAAmErH,IAAA,WAAAmH,KACnE,OAEA,OADAxP,EAAAS,EAAAgE,OACA,GAAAzE,EAAA09B,OAAA,IAAAhsB,EAAApS,QAAAU,EAAA09B,OAAA9+B,KAAAC,SAAA,YAeA4+B,EAAA3+B,UAAAuhB,WAAA,SAAArO,EAAA0O,EAAAid,EAAAn1B,EAAAsJ,EAAA5B,GAEA,YADA,IAAAA,IAA+BA,EAAA,IAC/B7R,EAAAkC,UAAA3B,UAAA,oBACA,IAAAkR,EAAA9P,EACAE,EAAAtB,KACA,OAAAP,EAAAmC,YAAA5B,KAAA,SAAA6B,GACA,OAAAA,EAAA8D,OACA,OAiBA,OAhBAuL,EAAA,CAAiCI,QAAAzJ,YACjCuL,IACAlC,EAAA6G,QAAA,kBAAA3E,MAAAjG,KAAA,MAEA2U,IACA5Q,EAAA4Q,QAEAid,IACA7tB,EAAA8kB,qBAAA+I,GAEAn1B,IACAsH,EAAA8oB,YAAApwB,GAEAsJ,IACAhC,EAAAiC,SAAAD,EAAA,GAAA5B,GAAAzJ,YAEA,GAAA7H,KAAAC,QAAA6Q,QAAA,CAAmErH,IAAA,UAAAyH,WACnE,OAEA,OADA9P,EAAAS,EAAAgE,OACA,GAAAzE,EAAAoS,QAAA1P,IAAA,SAAA2P,GAAsF,WAAAX,EAAApS,QAAA+S,EAAAnS,EAAArB,kBAWtF4+B,EAAA3+B,UAAA8+B,cAAA,SAAA9rB,EAAA5B,GACA,OAAA7R,EAAAkC,UAAA3B,UAAA,oBACA,OAAAP,EAAAmC,YAAA5B,KAAA,SAAA6B,GACA,SAAA7B,KAAAyhB,gBAAAhb,gBAAAqM,EAAAqlB,WAAA8G,IAAA/rB,EAAA5B,SAUAutB,EAAA3+B,UAAAg/B,kBAAA,SAAAhsB,EAAA5B,GACA,OAAA7R,EAAAkC,UAAA3B,UAAA,oBACA,OAAAP,EAAAmC,YAAA5B,KAAA,SAAA6B,GACA,SAAA7B,KAAAyhB,gBAAAhb,gBAAAqM,EAAAqlB,WAAAgH,KAAAjsB,EAAA5B,SAWAutB,EAAA3+B,UAAAk/B,mBAAA,SAAAx1B,EAAAsJ,EAAA5B,GAEA,YADA,IAAAA,IAA+BA,EAAA,IAC/B7R,EAAAkC,UAAA3B,UAAA,oBACA,IAAAkR,EAAA9P,EACAE,EAAAtB,KACA,OAAAP,EAAAmC,YAAA5B,KAAA,SAAA6B,GACA,OAAAA,EAAA8D,OACA,OAQA,OAPAuL,EAAA,CAAiCI,QAAAzJ,YACjC+B,IACAsH,EAAAtH,QAEAsJ,IACAhC,EAAAiC,SAAAD,EAAA,GAAA5B,GAAAzJ,YAEA,GAAA7H,KAAAC,QAAA6Q,QAAA,CAAmErH,IAAA,mBAAAyH,QAAAD,MAAA,eACnE,OAEA,OADA7P,EAAAS,EAAAgE,OACA,GAAAzE,EAAAoS,QAAA1P,IAAA,SAAA2P,GAAsF,WAAAX,EAAApS,QAAA+S,EAAAnS,EAAArB,kBAKtFR,EAAAkB,WAAA,CACAiD,EAAAW,OAAA,KACAs6B,EAAA3+B,UAAA,2BACAT,EAAAkB,WAAA,CACAiD,EAAAW,OAAA,KACAs6B,EAAA3+B,UAAA,2BACA2+B,EAAAp/B,EAAAkB,WAAA,CACAiD,EAAAY,WACAq6B,GACAA,EApIA,CAqICpvB,EAAA/O,SACDnB,EAAAmB,QAAAm+B,qCCvJAx/B,OAAAC,eAAAC,EAAA,cAA8CC,OAAA,IAC9C,IAAAC,EAAcC,EAAQ,QACtBE,EAAsBF,EAAQ,QAC9Bm2B,EAA2Bn2B,EAAQ,QACnCmZ,EAAmCnZ,EAAQ,QAI3C44B,EAAA,WAEA,SAAAA,EAAAx4B,EAAAC,GACAC,KAAAF,QACAE,KAAAC,QAAAF,EA4PA,OA1PAV,OAAAC,eAAAg5B,EAAAp4B,UAAA,YAEAC,IAAA,WACA,OAAAH,KAAAF,MAAAuY,KAEA/X,YAAA,EACAC,cAAA,IAEAlB,OAAAC,eAAAg5B,EAAAp4B,UAAA,MAIAC,IAAA,WACA,OAAAH,KAAAF,MAAAuY,KAEA/X,YAAA,EACAC,cAAA,IAEAlB,OAAAC,eAAAg5B,EAAAp4B,UAAA,OAIAC,IAAA,WACA,OAAAH,KAAAF,MAAAu/B,KAEA/+B,YAAA,EACAC,cAAA,IAEAlB,OAAAC,eAAAg5B,EAAAp4B,UAAA,gBAIAC,IAAA,WACA,WAAAuC,KAAA1C,KAAAF,MAAA4E,aAEApE,YAAA,EACAC,cAAA,IAEAlB,OAAAC,eAAAg5B,EAAAp4B,UAAA,cAIAC,IAAA,WACA,WAAAuC,KAAA1C,KAAAF,MAAAy2B,aAEAj2B,YAAA,EACAC,cAAA,IAEAlB,OAAAC,eAAAg5B,EAAAp4B,UAAA,QAIAC,IAAA,WACA,OAAAH,KAAAF,MAAAW,MAEAH,YAAA,EACAC,cAAA,IAEAlB,OAAAC,eAAAg5B,EAAAp4B,UAAA,eAIAC,IAAA,WACA,OAAAH,KAAAF,MAAAoZ,cAEA5Y,YAAA,EACAC,cAAA,IAEAlB,OAAAC,eAAAg5B,EAAAp4B,UAAA,WAIAC,IAAA,WACA,OAAAH,KAAAF,MAAAo2B,MAEA51B,YAAA,EACAC,cAAA,IAEAlB,OAAAC,eAAAg5B,EAAAp4B,UAAA,QAIAC,IAAA,WACA,OAAAH,KAAAF,MAAA8J,MAEAtJ,YAAA,EACAC,cAAA,IAKA+3B,EAAAp4B,UAAAozB,WAAA,WACA,OAAA7zB,EAAAkC,UAAA3B,UAAA,oBACA,OAAAP,EAAAmC,YAAA5B,KAAA,SAAA6B,GACA,SAAA7B,KAAAC,QAAA+Z,OAAA5G,SAAAkgB,WAAAtzB,YAOAs4B,EAAAp4B,UAAAo/B,sBAAA,WACA,WAAAzJ,EAAAn1B,QAAAV,KAAAF,MAAAuY,IAAArY,KAAAC,UAKAq4B,EAAAp4B,UAAAqZ,UAAA,WACA,OAAA9Z,EAAAkC,UAAA3B,UAAA,oBACA,OAAAP,EAAAmC,YAAA5B,KAAA,SAAA6B,GACA,SAAA7B,KAAAs/B,wBAAA/lB,kBAcA+e,EAAAp4B,UAAAma,kBAAA,SAAAtC,GACA,OAAAtY,EAAAkC,UAAA3B,UAAA,oBACA,OAAAP,EAAAmC,YAAA5B,KAAA,SAAA6B,GACA,SAAA7B,KAAAC,QAAA+Z,OAAA3X,MAAAk7B,oBAAAv9B,KAAA+X,SASAugB,EAAAp4B,UAAAsa,eAAA,SAAAzC,GACA,OAAAtY,EAAAkC,UAAA3B,UAAA,oBACA,IAAAya,EACA,OAAAhb,EAAAmC,YAAA5B,KAAA,SAAA6B,GACA,OAAAA,EAAA8D,OACA,OAEA,OADA9D,EAAA6Y,KAAAhS,KAAA,UACA,GAAA1I,KAAAqa,kBAAAtC,IACA,uBAAAlW,EAAAgE,QACA,OAEA,GADA4U,EAAA5Y,EAAAgE,OACA4U,aAAA5B,EAAAnY,QACA,aAEA,MAAA+Z,EACA,uBAaA6d,EAAAp4B,UAAAuZ,WAAA,SAAAvG,EAAA5B,EAAAqB,EAAA8gB,GACA,OAAAh0B,EAAAkC,UAAA3B,UAAA,oBACA,OAAAP,EAAAmC,YAAA5B,KAAA,SAAA6B,GACA,SAAA7B,KAAAC,QAAA+Z,OAAA3X,MAAAo7B,oBAAAz9B,KAAAkT,EAAA5B,EAAAqB,EAAA8gB,SASA6E,EAAAp4B,UAAAwZ,YAAA,SAAA3B,GACA,OAAAtY,EAAAkC,UAAA3B,UAAA,oBACA,OAAAP,EAAAmC,YAAA5B,KAAA,SAAA6B,GACA,SAAA7B,KAAAC,QAAA+Z,OAAA3X,MAAAs7B,mBAAA39B,KAAA+X,SASAugB,EAAAp4B,UAAA2Z,QAAA,SAAA9B,GACA,OAAAtY,EAAAkC,UAAA3B,UAAA,oBACA,IAAAknB,EACA,OAAAznB,EAAAmC,YAAA5B,KAAA,SAAA6B,GACA,OAAAA,EAAA8D,OACA,OAEA,OADA9D,EAAA6Y,KAAAhS,KAAA,UACA,GAAA1I,KAAA0Z,YAAA3B,IACA,uBAAAlW,EAAAgE,QACA,OAEA,MADAqhB,EAAArlB,EAAAgE,OACAqhB,EACA,uBAQAoR,EAAAp4B,UAAA4Z,OAAA,WACA,OAAAra,EAAAkC,UAAA3B,UAAA,oBACA,IAAA+Z,EACA,OAAAta,EAAAmC,YAAA5B,KAAA,SAAA6B,GACA,OAAAA,EAAA8D,OACA,gBAAA3F,KAAAC,QAAA+Z,OAAA3X,MAAA4X,SACA,OAEA,OADAF,EAAAlY,EAAAgE,OACA,GAAAkU,EAAAG,cAAAla,aAQAs4B,EAAAp4B,UAAAia,SAAA,WACA,OAAA1a,EAAAkC,UAAA3B,UAAA,oBACA,IAAA+Z,EACA,OAAAta,EAAAmC,YAAA5B,KAAA,SAAA6B,GACA,OAAAA,EAAA8D,OACA,gBAAA3F,KAAAC,QAAA+Z,OAAA3X,MAAA4X,SACA,OAEA,OADAF,EAAAlY,EAAAgE,OACA,GAAAkU,EAAAK,gBAAApa,aAQAs4B,EAAAp4B,UAAAq/B,UAAA,WACA,OAAA9/B,EAAAkC,UAAA3B,UAAA,oBACA,OAAAP,EAAAmC,YAAA5B,KAAA,SAAA6B,GACA,SAAA7B,KAAAC,QAAA+Z,OAAA3X,MAAAg7B,cAAAr9B,YAIAP,EAAAkB,WAAA,CACAf,EAAAgB,eACA03B,EAAAp4B,UAAA,kBACAo4B,EAhQA,GAkQA/4B,EAAAmB,QAAA43B,qCC1QAj5B,OAAAC,eAAAC,EAAA,cAA8CC,OAAA,IAC9C,IAAAC,EAAcC,EAAQ,QACtBmF,EAAqBnF,EAAQ,QAC7BE,EAAsBF,EAAQ,QAa9Bm5B,EAAA,WAEA,SAAAA,EAAA2G,EAAAz/B,EAAA0/B,GACAz/B,KAAAw/B,eACAx/B,KAAAy/B,UACAz/B,KAAAC,QAAAF,EA6GA,OA3GAV,OAAAC,eAAAu5B,EAAA34B,UAAA,WAMAC,IAAA,WACA,OAAAH,KAAAy8B,aAAAz8B,KAAAy8B,aAAAr7B,UAAAqF,GAEAnG,YAAA,EACAC,cAAA,IAKAs4B,EAAA34B,UAAAw/B,QAAA,WACA,OAAAjgC,EAAAkC,UAAA3B,UAAA,oBACA,IAAAqM,EACA,OAAA5M,EAAAmC,YAAA5B,KAAA,SAAA6B,GACA,OAAAA,EAAA8D,OACA,gBAAA3F,KAAA08B,cACA,OAEA,OADArwB,EAAAxK,EAAAgE,OACAwG,EAAAjL,KAAAiE,OAGA,GAAArF,KAAA2/B,eAAAtzB,IAFA,aAcAwsB,EAAA34B,UAAA0/B,OAAA,WACA,OAAAngC,EAAAkC,UAAA3B,UAAA,oBACA,IAAAqM,EAAAjL,EACA,OAAA3B,EAAAmC,YAAA5B,KAAA,SAAA6B,GACA,OAAAA,EAAA8D,OACA,OACA3F,KAAA6/B,QACAxzB,EAAA,GACAxK,EAAA8D,MAAA,EACA,gBAAA3F,KAAA0/B,WACA,OAEA,GADAt+B,EAAAS,EAAAgE,QACAzE,EAAAiE,OACA,YAEAgH,EAAA3D,KAAA3F,MAAAsJ,EAAA5M,EAAAwd,SAAA7b,IACAS,EAAA8D,MAAA,EACA,OACA,GAAA3F,KAAA8/B,eAAA,YACAj+B,EAAA8D,MAAA,EACA,OAEA,OADA3F,KAAA6/B,QACA,GAAAxzB,SAKAhN,OAAAC,eAAAu5B,EAAA34B,UAAA,iBAMAC,IAAA,WACA,OAAAH,KAAA8/B,gBAEAx/B,YAAA,EACAC,cAAA,IAOAs4B,EAAA34B,UAAA2/B,MAAA,WACA7/B,KAAA8/B,oBAAAr5B,GAGAoyB,EAAA34B,UAAAw8B,WAAA,SAAAqD,GAEA,YADA,IAAAA,IAA2CA,EAAA,IAC3CtgC,EAAAkC,UAAA3B,UAAA,oBACA,OAAAP,EAAAmC,YAAA5B,KAAA,SAAA6B,GACA,SAAA7B,KAAAC,QAAA6Q,QAAArR,EAAAsQ,SAAA,CAA6EnG,KAAA/E,EAAAkM,kBAAAC,OAA+ChR,KAAAw/B,aAAAO,EAAA,CAAyC7uB,MAAAzR,EAAAsQ,SAAA,GAA2B/P,KAAAw/B,aAAAtuB,MAAA,CAA4BwQ,MAAA1hB,KAAA8/B,eAAApuB,MAAA,OAA2CquB,EAAA7uB,gBAKvQ2nB,EAAA34B,UAAAy/B,eAAA,SAAAtzB,GACA,IAAA/K,EAAAtB,KAGA,OAFAA,KAAA8/B,eAAAzzB,EAAAuF,WAAAvF,EAAAuF,WAAAD,YAAAlL,EACAzG,KAAAy8B,aAAApwB,EACAA,EAAAjL,KAAA0hB,OAAA,SAAAwY,EAAA0E,GACA,IAAAzX,EAAAjnB,EAAAm+B,QAAAO,GACA,OAAAn0B,MAAAC,QAAAyc,GAAA9oB,EAAAwd,SAAAqe,EAAA/S,GAAA9oB,EAAAwd,SAAAqe,EAAA,CAAA/S,KACS,KAET9oB,EAAAkB,WAAA,CACAf,EAAAgB,eACAi4B,EAAA34B,UAAA,kBACA24B,EAlHA,GAoHAt5B,EAAAmB,QAAAm4B,EACA,oBAAA/xB,QAAA,kBAAAA,OAAAgoB,eACAzvB,OAAAC,eAAAu5B,EAAA34B,UAAA4G,OAAAgoB,cAAA,CACAtvB,MAAA,WACA,OAAAC,EAAAssB,iBAAA/rB,KAAAgD,UAAA,WACA,IAAA5B,EACA,OAAA3B,EAAAmC,YAAA5B,KAAA,SAAA6B,GACA,OAAAA,EAAA8D,OACA,OACA3F,KAAA6/B,QACAh+B,EAAA8D,MAAA,EACA,OAEA,SAAAlG,EAAAqsB,QAAA9rB,KAAA0/B,YACA,OAEA,OADAt+B,EAAAS,EAAAgE,OACAzE,EAAAiE,OAGA,GAAA5F,EAAA4mB,SAAA5mB,EAAAusB,iBAAAvsB,EAAAwsB,cAAA7qB,EAAA0F,OAAAgC,gBAFA,MAGA,gBAAArJ,EAAAqsB,QAAA/oB,WAAA,GAAAlB,EAAAgE,UACA,OAEA,OADAhE,EAAAgE,OACA,MACA,4DC5JAxG,OAAAC,eAAAC,EAAA,cAA8CC,OAAA,IAC9C,IAAAC,EAAcC,EAAQ,QACtBE,EAAsBF,EAAQ,QAI9BugC,EAAA,WAEA,SAAAA,EAAAngC,EAAAC,GACAC,KAAAF,QACAE,KAAAC,QAAAF,EAmCA,OAjCAV,OAAAC,eAAA2gC,EAAA//B,UAAA,YAIAC,IAAA,WACA,OAAAH,KAAAF,MAAAy1B,OAEAj1B,YAAA,EACAC,cAAA,IAEAlB,OAAAC,eAAA2gC,EAAA//B,UAAA,eAIAC,IAAA,WACA,OAAAH,KAAAF,MAAAyI,UAEAjI,YAAA,EACAC,cAAA,IAEAlB,OAAAC,eAAA2gC,EAAA//B,UAAA,cAIAC,IAAA,WACA,WAAAuC,KAAA1C,KAAAF,MAAAogC,aAEA5/B,YAAA,EACAC,cAAA,IAEAd,EAAAkB,WAAA,CACAf,EAAAgB,eACAq/B,EAAA//B,UAAA,kBACA+/B,EAvCA,GAyCA1gC,EAAAmB,QAAAu/B,qCC/CA5gC,OAAAC,eAAAC,EAAA,cAA8CC,OAAA,IAC9C,IAAAC,EAAcC,EAAQ,QACtB2e,EAAoB3e,EAAQ,QAI5Bo4B,EAAA,SAAA32B,GAIA,SAAA22B,EAAAnV,EAAApZ,EAAAL,GACA,IAAA5H,EAAAH,EAAAI,KAAAvB,KAAA,gCAAA2iB,EAAA,KAAApZ,EAAA,cAAA6E,KAAAkI,UAAApN,EAAA,UAAAlJ,KAGA,OAFAsB,EAAA6+B,YAAAxd,EACArhB,EAAA8+B,MAAAl3B,EACA5H,EAgBA,OAvBA7B,EAAA+B,UAAAs2B,EAAA32B,GASA9B,OAAAC,eAAAw4B,EAAA53B,UAAA,cACAC,IAAA,WACA,OAAAH,KAAAmgC,aAEA7/B,YAAA,EACAC,cAAA,IAEAlB,OAAAC,eAAAw4B,EAAA53B,UAAA,QACAC,IAAA,WACA,OAAAH,KAAAogC,OAEA9/B,YAAA,EACAC,cAAA,IAEAu3B,EAxBA,CAyBCzZ,EAAA3d,SACDnB,EAAAmB,QAAAo3B,qCChCAz4B,OAAAC,eAAAC,EAAA,cAA8CC,OAAA,IAC9C,IAAAC,EAAcC,EAAQ,QACtBE,EAAsBF,EAAQ,QAC9Bs5B,EAAkCt5B,EAAQ,QAC1CkE,EAAclE,EAAQ,QAItBq5B,EAAA,WAEA,SAAAA,EAAAj5B,EAAAC,GACAC,KAAAF,QACAE,KAAAC,QAAAF,EAgCA,OA9BAV,OAAAC,eAAAy5B,EAAA74B,UAAA,WAIAC,IAAA,WACA,IAAAmB,EAAAtB,KACA,OAAAA,KAAAF,MAAAsB,KAAA0C,IAAA,SAAAub,GAAyD,WAAA2Z,EAAAt4B,QAAA2e,EAAA/d,EAAArB,YAEzDK,YAAA,EACAC,cAAA,IAEAlB,OAAAC,eAAAy5B,EAAA74B,UAAA,cAIAC,IAAA,WACA,OAAAH,KAAAF,MAAAwwB,OAEAhwB,YAAA,EACAC,cAAA,IAEAd,EAAAkB,WAAA,CACAf,EAAAgB,eACAm4B,EAAA74B,UAAA,kBACAT,EAAAkB,WAAA,CACAiD,EAAAU,gBACAy0B,EAAA74B,UAAA,gBACA64B,EAAAt5B,EAAAkB,WAAA,CACAiD,EAAAY,WACAu0B,GACAA,EApCA,GAsCAx5B,EAAAmB,QAAAq4B,qCC9CA15B,OAAAC,eAAAC,EAAA,cAA8CC,OAAA,IAC9C,IAAAC,EAAcC,EAAQ,QACtBE,EAAsBF,EAAQ,QAC9BmD,EAAanD,EAAQ,QAIrB84B,EAAA,WAEA,SAAAA,EAAA14B,EAAAC,GACAC,KAAAF,QACAE,KAAAC,QAAAF,EAeA,OAbAV,OAAAC,eAAAk5B,EAAAt4B,UAAA,eAIAC,IAAA,WACA,WAAA0C,EAAAnC,QAAAV,KAAAF,MAAAgB,KAAAd,KAAAC,UAEAK,YAAA,EACAC,cAAA,IAEAd,EAAAkB,WAAA,CACAf,EAAAgB,eACA43B,EAAAt4B,UAAA,kBACAs4B,EAnBA,GAqBAj5B,EAAAmB,QAAA83B,qCC5BAn5B,OAAAC,eAAAC,EAAA,cAA8CC,OAAA,IAC9C,IAAAC,EAAcC,EAAQ,QACtBE,EAAsBF,EAAQ,QAC9Bw5B,EAAA,WAEA,SAAAA,EAAAp5B,EAAAC,GACAC,KAAAF,QACAE,KAAAC,QAAAF,EAyLA,OAvLAV,OAAAC,eAAA45B,EAAAh5B,UAAA,MAIAC,IAAA,WACA,OAAAH,KAAAF,MAAAiB,IAEAT,YAAA,EACAC,cAAA,IAEAlB,OAAAC,eAAA45B,EAAAh5B,UAAA,OAIAC,IAAA,WACA,OAAAH,KAAAF,MAAA2J,KAEAnJ,YAAA,EACAC,cAAA,IAEAlB,OAAAC,eAAA45B,EAAAh5B,UAAA,YAIAC,IAAA,WACA,OAAAH,KAAAF,MAAAugC,WAEA//B,YAAA,EACAC,cAAA,IAEAlB,OAAAC,eAAA45B,EAAAh5B,UAAA,iBAIAC,IAAA,WACA,OAAAH,KAAAF,MAAAoD,gBAEA5C,YAAA,EACAC,cAAA,IAEAlB,OAAAC,eAAA45B,EAAAh5B,UAAA,0BAIAC,IAAA,WACA,OAAAH,KAAAF,MAAAqD,kBAEA7C,YAAA,EACAC,cAAA,IAKA24B,EAAAh5B,UAAAkD,eAAA,WACA,OAAA3D,EAAAkC,UAAA3B,UAAA,oBACA,OAAAP,EAAAmC,YAAA5B,KAAA,SAAA6B,GACA,SAAA7B,KAAAC,QAAA6B,MAAAO,MAAAC,YAAAtC,KAAAF,MAAAoD,sBAIA7D,OAAAC,eAAA45B,EAAAh5B,UAAA,aAIAC,IAAA,WACA,OAAAH,KAAAF,MAAAwgC,YAEAhgC,YAAA,EACAC,cAAA,IAEAlB,OAAAC,eAAA45B,EAAAh5B,UAAA,sBAIAC,IAAA,WACA,OAAAH,KAAAF,MAAAygC,cAEAjgC,YAAA,EACAC,cAAA,IAKA24B,EAAAh5B,UAAAsgC,WAAA,WACA,OAAA/gC,EAAAkC,UAAA3B,UAAA,oBACA,OAAAP,EAAAmC,YAAA5B,KAAA,SAAA6B,GACA,SAAA7B,KAAAC,QAAA6B,MAAAO,MAAAC,YAAAtC,KAAAF,MAAAwgC,kBAIAjhC,OAAAC,eAAA45B,EAAAh5B,UAAA,WAIAC,IAAA,WACA,OAAAH,KAAAF,MAAAojB,UAEA5iB,YAAA,EACAC,cAAA,IAKA24B,EAAAh5B,UAAAwB,SAAA,WACA,OAAAjC,EAAAkC,UAAA3B,UAAA,oBACA,OAAAP,EAAAmC,YAAA5B,KAAA,SAAA6B,GACA,SAAA7B,KAAAC,QAAA6B,MAAAC,OAAAC,aAAAhC,KAAAF,MAAAojB,gBAIA7jB,OAAAC,eAAA45B,EAAAh5B,UAAA,UAIAC,IAAA,WACA,OAAAH,KAAAF,MAAAghB,SAEAxgB,YAAA,EACAC,cAAA,IAKA24B,EAAAh5B,UAAA6gB,QAAA,WACA,OAAAthB,EAAAkC,UAAA3B,UAAA,oBACA,OAAAP,EAAAmC,YAAA5B,KAAA,SAAA6B,GACA,SAAA7B,KAAAC,QAAA6B,MAAAkf,MAAAC,YAAAjhB,KAAAF,MAAAghB,eAIAzhB,OAAAC,eAAA45B,EAAAh5B,UAAA,YAIAC,IAAA,WACA,OAAAH,KAAAF,MAAA2S,UAEAnS,YAAA,EACAC,cAAA,IAEAlB,OAAAC,eAAA45B,EAAAh5B,UAAA,SAIAC,IAAA,WACA,OAAAH,KAAAF,MAAA8X,OAEAtX,YAAA,EACAC,cAAA,IAEAlB,OAAAC,eAAA45B,EAAAh5B,UAAA,SAIAC,IAAA,WACA,OAAAH,KAAAF,MAAAwZ,YAEAhZ,YAAA,EACAC,cAAA,IAEAlB,OAAAC,eAAA45B,EAAAh5B,UAAA,gBAIAC,IAAA,WACA,WAAAuC,KAAA1C,KAAAF,MAAA4E,aAEApE,YAAA,EACAC,cAAA,IAEAlB,OAAAC,eAAA45B,EAAAh5B,UAAA,gBAIAC,IAAA,WACA,OAAAH,KAAAF,MAAAqhB,eAEA7gB,YAAA,EACAC,cAAA,IAEAd,EAAAkB,WAAA,CACAf,EAAAgB,eACAs4B,EAAAh5B,UAAA,kBACAg5B,EA7LA,GA+LA35B,EAAAmB,QAAAw4B","file":"js/home~unitetv.48616bf7.js","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar ChatBadgeVersion_1 = require(\"./ChatBadgeVersion\");\nvar NonEnumerable_1 = require(\"../../Toolkit/Decorators/NonEnumerable\");\n/**\n * A set of badges.\n */\nvar ChatBadgeSet = /** @class */ (function () {\n    /** @private */\n    function ChatBadgeSet(_data, client) {\n        this._data = _data;\n        this._client = client;\n    }\n    Object.defineProperty(ChatBadgeSet.prototype, \"versionNames\", {\n        /**\n         * Names of all versions of the badge set.\n         */\n        get: function () {\n            return Object.keys(this._data.versions);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Gets a specific version of a badge by name.\n     *\n     * @param name The name of the version.\n     */\n    ChatBadgeSet.prototype.getVersion = function (name) {\n        return new ChatBadgeVersion_1.default(this._data.versions[name], this._client);\n    };\n    tslib_1.__decorate([\n        NonEnumerable_1.NonEnumerable\n    ], ChatBadgeSet.prototype, \"_client\", void 0);\n    return ChatBadgeSet;\n}());\nexports.default = ChatBadgeSet;\n//# sourceMappingURL=ChatBadgeSet.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Extracts the user ID from an argument that is possibly an object containing that ID.\n *\n * @param user The user ID or object.\n */\nfunction extractUserId(user) {\n    return typeof user === 'string' ? user : user.id;\n}\nexports.extractUserId = extractUserId;\n/**\n * Extracts the user name from an argument that is possibly an object containing that name.\n *\n * @param user The user name or object.\n */\nfunction extractUserName(user) {\n    return typeof user === 'string' ? user : user.name;\n}\nexports.extractUserName = extractUserName;\n//# sourceMappingURL=UserTools.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar HelixStreamMarker_1 = require(\"./HelixStreamMarker\");\nvar HelixStreamMarkerWithVideo = /** @class */ (function (_super) {\n    tslib_1.__extends(HelixStreamMarkerWithVideo, _super);\n    /** @private */\n    function HelixStreamMarkerWithVideo(data, _videoId, client) {\n        var _this = _super.call(this, data, client) || this;\n        _this._videoId = _videoId;\n        return _this;\n    }\n    Object.defineProperty(HelixStreamMarkerWithVideo.prototype, \"url\", {\n        /**\n         * The URL of the video, which will start playing at the position of the stream marker.\n         */\n        get: function () {\n            return this._data.URL;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(HelixStreamMarkerWithVideo.prototype, \"videoId\", {\n        /**\n         * The ID of the video.\n         */\n        get: function () {\n            return this._videoId;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Retrieves the video data of the video the marker was set in.\n     */\n    HelixStreamMarkerWithVideo.prototype.getVideo = function () {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            return tslib_1.__generator(this, function (_a) {\n                return [2 /*return*/, this._client.helix.videos.getVideoById(this._videoId)];\n            });\n        });\n    };\n    return HelixStreamMarkerWithVideo;\n}(HelixStreamMarker_1.default));\nexports.default = HelixStreamMarkerWithVideo;\n//# sourceMappingURL=HelixStreamMarkerWithVideo.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar NonEnumerable_1 = require(\"../../../Toolkit/Decorators/NonEnumerable\");\n/**\n * A relation of a user following a broadcaster.\n */\nvar HelixFollow = /** @class */ (function () {\n    /** @private */\n    function HelixFollow(/** @private */ _data, client) {\n        this._data = _data;\n        this._client = client;\n    }\n    Object.defineProperty(HelixFollow.prototype, \"userId\", {\n        /**\n         * The user ID of the following user.\n         */\n        get: function () {\n            return this._data.from_id;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(HelixFollow.prototype, \"userDisplayName\", {\n        /**\n         * The display name of the following user.\n         */\n        get: function () {\n            return this._data.from_name;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Retrieves the data of the following user.\n     */\n    HelixFollow.prototype.getUser = function () {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            return tslib_1.__generator(this, function (_a) {\n                return [2 /*return*/, this._client.helix.users.getUserById(this._data.from_id)];\n            });\n        });\n    };\n    Object.defineProperty(HelixFollow.prototype, \"followedUserId\", {\n        /**\n         * The user ID of the followed broadcaster.\n         */\n        get: function () {\n            return this._data.to_id;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(HelixFollow.prototype, \"followedUserDisplayName\", {\n        /**\n         * The display name of the followed user.\n         */\n        get: function () {\n            return this._data.to_name;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Retrieves the data of the followed broadcaster.\n     */\n    HelixFollow.prototype.getFollowedUser = function () {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            return tslib_1.__generator(this, function (_a) {\n                return [2 /*return*/, this._client.helix.users.getUserById(this._data.to_id)];\n            });\n        });\n    };\n    Object.defineProperty(HelixFollow.prototype, \"followDate\", {\n        /**\n         * The date when the user followed the broadcaster.\n         */\n        get: function () {\n            return new Date(this._data.followed_at);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    tslib_1.__decorate([\n        NonEnumerable_1.NonEnumerable\n    ], HelixFollow.prototype, \"_client\", void 0);\n    return HelixFollow;\n}());\nexports.default = HelixFollow;\n//# sourceMappingURL=HelixFollow.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar Subscription_1 = require(\"../Subscription\");\nvar User_1 = require(\"../User/User\");\n/**\n * A relation of a user subscribing to a previously given channel.\n */\nvar ChannelSubscription = /** @class */ (function (_super) {\n    tslib_1.__extends(ChannelSubscription, _super);\n    function ChannelSubscription() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Object.defineProperty(ChannelSubscription.prototype, \"user\", {\n        /**\n         * The user subscribing to the given channel.\n         */\n        get: function () {\n            return new User_1.default(this._data.user, this._client);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return ChannelSubscription;\n}(Subscription_1.default));\nexports.default = ChannelSubscription;\n//# sourceMappingURL=ChannelSubscription.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar NonEnumerable_1 = require(\"../../../Toolkit/Decorators/NonEnumerable\");\n/**\n * A (paid) subscription of a user to a broadcaster.\n */\nvar HelixSubscription = /** @class */ (function () {\n    /** @private */\n    function HelixSubscription(_data, client) {\n        this._data = _data;\n        this._client = client;\n    }\n    Object.defineProperty(HelixSubscription.prototype, \"broadcasterId\", {\n        /**\n         * The user ID of the broadcaster.\n         */\n        get: function () {\n            return this._data.broadcaster_id;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(HelixSubscription.prototype, \"broadcasterDisplayName\", {\n        /**\n         * The display name of the broadcaster.\n         */\n        get: function () {\n            return this._data.broadcaster_name;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Retrieves more data about the broadcaster.\n     */\n    HelixSubscription.prototype.getBroadcaster = function () {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            return tslib_1.__generator(this, function (_a) {\n                return [2 /*return*/, this._client.helix.users.getUserById(this.broadcasterId)];\n            });\n        });\n    };\n    Object.defineProperty(HelixSubscription.prototype, \"isGift\", {\n        /**\n         * Whether the subscription has been gifted by another user.\n         */\n        get: function () {\n            return this._data.is_gift;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(HelixSubscription.prototype, \"tier\", {\n        /**\n         * The tier of the subscription.\n         */\n        get: function () {\n            return this._data.tier;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(HelixSubscription.prototype, \"userId\", {\n        /**\n         * The user ID of the subscribed user.\n         */\n        get: function () {\n            return this._data.user_id;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(HelixSubscription.prototype, \"userDisplayName\", {\n        /**\n         * The display name of the subscribed user.\n         */\n        get: function () {\n            return this._data.user_name;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Retrieves more data about the subscribed user.\n     */\n    HelixSubscription.prototype.getUser = function () {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            return tslib_1.__generator(this, function (_a) {\n                return [2 /*return*/, this._client.helix.users.getUserById(this.userId)];\n            });\n        });\n    };\n    tslib_1.__decorate([\n        NonEnumerable_1.NonEnumerable\n    ], HelixSubscription.prototype, \"_client\", void 0);\n    return HelixSubscription;\n}());\nexports.default = HelixSubscription;\n//# sourceMappingURL=HelixSubscription.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar NonEnumerable_1 = require(\"../../../Toolkit/Decorators/NonEnumerable\");\nvar ChatEmote_1 = require(\"./ChatEmote\");\nvar Cache_1 = require(\"../../../Toolkit/Decorators/Cache\");\n/**\n * A list of emotes.\n */\nvar ChatEmoteList = /** @class */ (function () {\n    /** @private */\n    function ChatEmoteList(_data, client) {\n        this._data = _data;\n        this._client = client;\n    }\n    Object.defineProperty(ChatEmoteList.prototype, \"emotes\", {\n        /**\n         * A list of all emotes in the list.\n         */\n        get: function () {\n            var _this = this;\n            return this._data.map(function (emote) { return new ChatEmote_1.default(emote, _this._client); });\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Gets all emotes from the list that are from a given emote set.\n     *\n     * @param setId\n     */\n    ChatEmoteList.prototype.getAllFromSet = function (setId) {\n        var _this = this;\n        return this._data.filter(function (emote) { return emote.emoticon_set === setId; }).map(function (emote) { return new ChatEmote_1.default(emote, _this._client); });\n    };\n    /**\n     * Finds a single emote by its ID.\n     *\n     * @param id\n     */\n    ChatEmoteList.prototype.getById = function (id) {\n        var data = this._data.find(function (emote) { return emote.id === id; });\n        return data ? new ChatEmote_1.default(data, this._client) : null;\n    };\n    tslib_1.__decorate([\n        NonEnumerable_1.NonEnumerable\n    ], ChatEmoteList.prototype, \"_client\", void 0);\n    tslib_1.__decorate([\n        Cache_1.CachedGetter()\n    ], ChatEmoteList.prototype, \"emotes\", null);\n    tslib_1.__decorate([\n        Cache_1.Cached()\n    ], ChatEmoteList.prototype, \"getAllFromSet\", null);\n    tslib_1.__decorate([\n        Cache_1.Cached()\n    ], ChatEmoteList.prototype, \"getById\", null);\n    ChatEmoteList = tslib_1.__decorate([\n        Cache_1.Cacheable\n    ], ChatEmoteList);\n    return ChatEmoteList;\n}());\nexports.default = ChatEmoteList;\n//# sourceMappingURL=ChatEmoteList.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar NonEnumerable_1 = require(\"../../../Toolkit/Decorators/NonEnumerable\");\nvar HelixStreamMarker = /** @class */ (function () {\n    /** @private */\n    function HelixStreamMarker(/** @private */ _data, client) {\n        this._data = _data;\n        this._client = client;\n    }\n    Object.defineProperty(HelixStreamMarker.prototype, \"id\", {\n        /**\n         * The ID of the marker.\n         */\n        get: function () {\n            return this._data.id;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(HelixStreamMarker.prototype, \"creationDate\", {\n        /**\n         * The date and time when the marker was created.\n         */\n        get: function () {\n            return new Date(this._data.created_at);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(HelixStreamMarker.prototype, \"description\", {\n        /**\n         * The description of the marker.\n         */\n        get: function () {\n            return this._data.description;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(HelixStreamMarker.prototype, \"positionInSeconds\", {\n        /**\n         * The position in the stream when the marker was created, in seconds.\n         */\n        get: function () {\n            return this._data.position_seconds;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    tslib_1.__decorate([\n        NonEnumerable_1.NonEnumerable\n    ], HelixStreamMarker.prototype, \"_client\", void 0);\n    return HelixStreamMarker;\n}());\nexports.default = HelixStreamMarker;\n//# sourceMappingURL=HelixStreamMarker.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar NonEnumerable_1 = require(\"../Toolkit/Decorators/NonEnumerable\");\nvar TwitchClient_1 = require(\"../TwitchClient\");\n/**\n * An auth provider that retrieve tokens using client credentials.\n */\nvar ClientCredentialsAuthProvider = /** @class */ (function () {\n    /**\n     * Creates a new auth provider to receive an application token with using the client ID and secret.\n     *\n     * You don't usually have to create this manually. You should use `TwitchClient.withClientCredentials` instead.\n     *\n     * @param clientId The client ID of your application.\n     * @param clientSecret The client secret of your application.\n     *\n     * You need to obtain one using one of the [Twitch OAuth flows](https://dev.twitch.tv/docs/authentication/getting-tokens-oauth/).\n     */\n    function ClientCredentialsAuthProvider(clientId, clientSecret) {\n        this._clientId = clientId;\n        this._clientSecret = clientSecret;\n    }\n    /**\n     * Retrieves an access token.\n     *\n     * If any scopes are provided, this throws. The client credentials flow does not support scopes.\n     *\n     * @param scopes The requested scopes.\n     */\n    ClientCredentialsAuthProvider.prototype.getAccessToken = function (scopes) {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            return tslib_1.__generator(this, function (_a) {\n                if (scopes && scopes.length > 0) {\n                    throw new Error('The client credentials flow does not support scopes');\n                }\n                if (!this._token || this._token.isExpired) {\n                    return [2 /*return*/, this.refresh()];\n                }\n                return [2 /*return*/, this._token];\n            });\n        });\n    };\n    /**\n     * Retrieves a new app access token.\n     */\n    ClientCredentialsAuthProvider.prototype.refresh = function () {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            var _a;\n            return tslib_1.__generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0:\n                        _a = this;\n                        return [4 /*yield*/, TwitchClient_1.default.getAppAccessToken(this._clientId, this._clientSecret)];\n                    case 1: return [2 /*return*/, _a._token = _b.sent()];\n                }\n            });\n        });\n    };\n    /** @private */\n    ClientCredentialsAuthProvider.prototype.setAccessToken = function (token) {\n        this._token = token;\n    };\n    Object.defineProperty(ClientCredentialsAuthProvider.prototype, \"clientId\", {\n        /**\n         * The client ID.\n         */\n        get: function () {\n            return this._clientId;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ClientCredentialsAuthProvider.prototype, \"currentScopes\", {\n        /**\n         * The scopes that are currently available using the access token.\n         */\n        get: function () {\n            return [];\n        },\n        enumerable: true,\n        configurable: true\n    });\n    tslib_1.__decorate([\n        NonEnumerable_1.NonEnumerable\n    ], ClientCredentialsAuthProvider.prototype, \"_clientId\", void 0);\n    tslib_1.__decorate([\n        NonEnumerable_1.NonEnumerable\n    ], ClientCredentialsAuthProvider.prototype, \"_clientSecret\", void 0);\n    tslib_1.__decorate([\n        NonEnumerable_1.NonEnumerable\n    ], ClientCredentialsAuthProvider.prototype, \"_token\", void 0);\n    return ClientCredentialsAuthProvider;\n}());\nexports.default = ClientCredentialsAuthProvider;\n//# sourceMappingURL=ClientCredentialsAuthProvider.js.map","(function (self) {\n  'use strict';\n\n  function fetchPonyfill(options) {\n    var Promise = options && options.Promise || self.Promise;\n    var XMLHttpRequest = options && options.XMLHttpRequest || self.XMLHttpRequest;\n    var global = self;\n\n    return (function () {\n      var self = Object.create(global, {\n        fetch: {\n          value: undefined,\n          writable: true\n        }\n      });\n\n      (function(self) {\n        'use strict';\n\n        if (self.fetch) {\n          return\n        }\n\n        var support = {\n          searchParams: 'URLSearchParams' in self,\n          iterable: 'Symbol' in self && 'iterator' in Symbol,\n          blob: 'FileReader' in self && 'Blob' in self && (function() {\n            try {\n              new Blob()\n              return true\n            } catch(e) {\n              return false\n            }\n          })(),\n          formData: 'FormData' in self,\n          arrayBuffer: 'ArrayBuffer' in self\n        }\n\n        if (support.arrayBuffer) {\n          var viewClasses = [\n            '[object Int8Array]',\n            '[object Uint8Array]',\n            '[object Uint8ClampedArray]',\n            '[object Int16Array]',\n            '[object Uint16Array]',\n            '[object Int32Array]',\n            '[object Uint32Array]',\n            '[object Float32Array]',\n            '[object Float64Array]'\n          ]\n\n          var isDataView = function(obj) {\n            return obj && DataView.prototype.isPrototypeOf(obj)\n          }\n\n          var isArrayBufferView = ArrayBuffer.isView || function(obj) {\n            return obj && viewClasses.indexOf(Object.prototype.toString.call(obj)) > -1\n          }\n        }\n\n        function normalizeName(name) {\n          if (typeof name !== 'string') {\n            name = String(name)\n          }\n          if (/[^a-z0-9\\-#$%&'*+.\\^_`|~]/i.test(name)) {\n            throw new TypeError('Invalid character in header field name')\n          }\n          return name.toLowerCase()\n        }\n\n        function normalizeValue(value) {\n          if (typeof value !== 'string') {\n            value = String(value)\n          }\n          return value\n        }\n\n        // Build a destructive iterator for the value list\n        function iteratorFor(items) {\n          var iterator = {\n            next: function() {\n              var value = items.shift()\n              return {done: value === undefined, value: value}\n            }\n          }\n\n          if (support.iterable) {\n            iterator[Symbol.iterator] = function() {\n              return iterator\n            }\n          }\n\n          return iterator\n        }\n\n        function Headers(headers) {\n          this.map = {}\n\n          if (headers instanceof Headers) {\n            headers.forEach(function(value, name) {\n              this.append(name, value)\n            }, this)\n          } else if (Array.isArray(headers)) {\n            headers.forEach(function(header) {\n              this.append(header[0], header[1])\n            }, this)\n          } else if (headers) {\n            Object.getOwnPropertyNames(headers).forEach(function(name) {\n              this.append(name, headers[name])\n            }, this)\n          }\n        }\n\n        Headers.prototype.append = function(name, value) {\n          name = normalizeName(name)\n          value = normalizeValue(value)\n          var oldValue = this.map[name]\n          this.map[name] = oldValue ? oldValue+','+value : value\n        }\n\n        Headers.prototype['delete'] = function(name) {\n          delete this.map[normalizeName(name)]\n        }\n\n        Headers.prototype.get = function(name) {\n          name = normalizeName(name)\n          return this.has(name) ? this.map[name] : null\n        }\n\n        Headers.prototype.has = function(name) {\n          return this.map.hasOwnProperty(normalizeName(name))\n        }\n\n        Headers.prototype.set = function(name, value) {\n          this.map[normalizeName(name)] = normalizeValue(value)\n        }\n\n        Headers.prototype.forEach = function(callback, thisArg) {\n          for (var name in this.map) {\n            if (this.map.hasOwnProperty(name)) {\n              callback.call(thisArg, this.map[name], name, this)\n            }\n          }\n        }\n\n        Headers.prototype.keys = function() {\n          var items = []\n          this.forEach(function(value, name) { items.push(name) })\n          return iteratorFor(items)\n        }\n\n        Headers.prototype.values = function() {\n          var items = []\n          this.forEach(function(value) { items.push(value) })\n          return iteratorFor(items)\n        }\n\n        Headers.prototype.entries = function() {\n          var items = []\n          this.forEach(function(value, name) { items.push([name, value]) })\n          return iteratorFor(items)\n        }\n\n        if (support.iterable) {\n          Headers.prototype[Symbol.iterator] = Headers.prototype.entries\n        }\n\n        function consumed(body) {\n          if (body.bodyUsed) {\n            return Promise.reject(new TypeError('Already read'))\n          }\n          body.bodyUsed = true\n        }\n\n        function fileReaderReady(reader) {\n          return new Promise(function(resolve, reject) {\n            reader.onload = function() {\n              resolve(reader.result)\n            }\n            reader.onerror = function() {\n              reject(reader.error)\n            }\n          })\n        }\n\n        function readBlobAsArrayBuffer(blob) {\n          var reader = new FileReader()\n          var promise = fileReaderReady(reader)\n          reader.readAsArrayBuffer(blob)\n          return promise\n        }\n\n        function readBlobAsText(blob) {\n          var reader = new FileReader()\n          var promise = fileReaderReady(reader)\n          reader.readAsText(blob)\n          return promise\n        }\n\n        function readArrayBufferAsText(buf) {\n          var view = new Uint8Array(buf)\n          var chars = new Array(view.length)\n\n          for (var i = 0; i < view.length; i++) {\n            chars[i] = String.fromCharCode(view[i])\n          }\n          return chars.join('')\n        }\n\n        function bufferClone(buf) {\n          if (buf.slice) {\n            return buf.slice(0)\n          } else {\n            var view = new Uint8Array(buf.byteLength)\n            view.set(new Uint8Array(buf))\n            return view.buffer\n          }\n        }\n\n        function Body() {\n          this.bodyUsed = false\n\n          this._initBody = function(body) {\n            this._bodyInit = body\n            if (!body) {\n              this._bodyText = ''\n            } else if (typeof body === 'string') {\n              this._bodyText = body\n            } else if (support.blob && Blob.prototype.isPrototypeOf(body)) {\n              this._bodyBlob = body\n            } else if (support.formData && FormData.prototype.isPrototypeOf(body)) {\n              this._bodyFormData = body\n            } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n              this._bodyText = body.toString()\n            } else if (support.arrayBuffer && support.blob && isDataView(body)) {\n              this._bodyArrayBuffer = bufferClone(body.buffer)\n              // IE 10-11 can't handle a DataView body.\n              this._bodyInit = new Blob([this._bodyArrayBuffer])\n            } else if (support.arrayBuffer && (ArrayBuffer.prototype.isPrototypeOf(body) || isArrayBufferView(body))) {\n              this._bodyArrayBuffer = bufferClone(body)\n            } else {\n              throw new Error('unsupported BodyInit type')\n            }\n\n            if (!this.headers.get('content-type')) {\n              if (typeof body === 'string') {\n                this.headers.set('content-type', 'text/plain;charset=UTF-8')\n              } else if (this._bodyBlob && this._bodyBlob.type) {\n                this.headers.set('content-type', this._bodyBlob.type)\n              } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n                this.headers.set('content-type', 'application/x-www-form-urlencoded;charset=UTF-8')\n              }\n            }\n          }\n\n          if (support.blob) {\n            this.blob = function() {\n              var rejected = consumed(this)\n              if (rejected) {\n                return rejected\n              }\n\n              if (this._bodyBlob) {\n                return Promise.resolve(this._bodyBlob)\n              } else if (this._bodyArrayBuffer) {\n                return Promise.resolve(new Blob([this._bodyArrayBuffer]))\n              } else if (this._bodyFormData) {\n                throw new Error('could not read FormData body as blob')\n              } else {\n                return Promise.resolve(new Blob([this._bodyText]))\n              }\n            }\n\n            this.arrayBuffer = function() {\n              if (this._bodyArrayBuffer) {\n                return consumed(this) || Promise.resolve(this._bodyArrayBuffer)\n              } else {\n                return this.blob().then(readBlobAsArrayBuffer)\n              }\n            }\n          }\n\n          this.text = function() {\n            var rejected = consumed(this)\n            if (rejected) {\n              return rejected\n            }\n\n            if (this._bodyBlob) {\n              return readBlobAsText(this._bodyBlob)\n            } else if (this._bodyArrayBuffer) {\n              return Promise.resolve(readArrayBufferAsText(this._bodyArrayBuffer))\n            } else if (this._bodyFormData) {\n              throw new Error('could not read FormData body as text')\n            } else {\n              return Promise.resolve(this._bodyText)\n            }\n          }\n\n          if (support.formData) {\n            this.formData = function() {\n              return this.text().then(decode)\n            }\n          }\n\n          this.json = function() {\n            return this.text().then(JSON.parse)\n          }\n\n          return this\n        }\n\n        // HTTP methods whose capitalization should be normalized\n        var methods = ['DELETE', 'GET', 'HEAD', 'OPTIONS', 'POST', 'PUT']\n\n        function normalizeMethod(method) {\n          var upcased = method.toUpperCase()\n          return (methods.indexOf(upcased) > -1) ? upcased : method\n        }\n\n        function Request(input, options) {\n          options = options || {}\n          var body = options.body\n\n          if (input instanceof Request) {\n            if (input.bodyUsed) {\n              throw new TypeError('Already read')\n            }\n            this.url = input.url\n            this.credentials = input.credentials\n            if (!options.headers) {\n              this.headers = new Headers(input.headers)\n            }\n            this.method = input.method\n            this.mode = input.mode\n            if (!body && input._bodyInit != null) {\n              body = input._bodyInit\n              input.bodyUsed = true\n            }\n          } else {\n            this.url = String(input)\n          }\n\n          this.credentials = options.credentials || this.credentials || 'omit'\n          if (options.headers || !this.headers) {\n            this.headers = new Headers(options.headers)\n          }\n          this.method = normalizeMethod(options.method || this.method || 'GET')\n          this.mode = options.mode || this.mode || null\n          this.referrer = null\n\n          if ((this.method === 'GET' || this.method === 'HEAD') && body) {\n            throw new TypeError('Body not allowed for GET or HEAD requests')\n          }\n          this._initBody(body)\n        }\n\n        Request.prototype.clone = function() {\n          return new Request(this, { body: this._bodyInit })\n        }\n\n        function decode(body) {\n          var form = new FormData()\n          body.trim().split('&').forEach(function(bytes) {\n            if (bytes) {\n              var split = bytes.split('=')\n              var name = split.shift().replace(/\\+/g, ' ')\n              var value = split.join('=').replace(/\\+/g, ' ')\n              form.append(decodeURIComponent(name), decodeURIComponent(value))\n            }\n          })\n          return form\n        }\n\n        function parseHeaders(rawHeaders) {\n          var headers = new Headers()\n          // Replace instances of \\r\\n and \\n followed by at least one space or horizontal tab with a space\n          // https://tools.ietf.org/html/rfc7230#section-3.2\n          var preProcessedHeaders = rawHeaders.replace(/\\r?\\n[\\t ]+/g, ' ')\n          preProcessedHeaders.split(/\\r?\\n/).forEach(function(line) {\n            var parts = line.split(':')\n            var key = parts.shift().trim()\n            if (key) {\n              var value = parts.join(':').trim()\n              headers.append(key, value)\n            }\n          })\n          return headers\n        }\n\n        Body.call(Request.prototype)\n\n        function Response(bodyInit, options) {\n          if (!options) {\n            options = {}\n          }\n\n          this.type = 'default'\n          this.status = options.status === undefined ? 200 : options.status\n          this.ok = this.status >= 200 && this.status < 300\n          this.statusText = 'statusText' in options ? options.statusText : 'OK'\n          this.headers = new Headers(options.headers)\n          this.url = options.url || ''\n          this._initBody(bodyInit)\n        }\n\n        Body.call(Response.prototype)\n\n        Response.prototype.clone = function() {\n          return new Response(this._bodyInit, {\n            status: this.status,\n            statusText: this.statusText,\n            headers: new Headers(this.headers),\n            url: this.url\n          })\n        }\n\n        Response.error = function() {\n          var response = new Response(null, {status: 0, statusText: ''})\n          response.type = 'error'\n          return response\n        }\n\n        var redirectStatuses = [301, 302, 303, 307, 308]\n\n        Response.redirect = function(url, status) {\n          if (redirectStatuses.indexOf(status) === -1) {\n            throw new RangeError('Invalid status code')\n          }\n\n          return new Response(null, {status: status, headers: {location: url}})\n        }\n\n        self.Headers = Headers\n        self.Request = Request\n        self.Response = Response\n\n        self.fetch = function(input, init) {\n          return new Promise(function(resolve, reject) {\n            var request = new Request(input, init)\n            var xhr = new XMLHttpRequest()\n\n            xhr.onload = function() {\n              var options = {\n                status: xhr.status,\n                statusText: xhr.statusText,\n                headers: parseHeaders(xhr.getAllResponseHeaders() || '')\n              }\n              options.url = 'responseURL' in xhr ? xhr.responseURL : options.headers.get('X-Request-URL')\n              var body = 'response' in xhr ? xhr.response : xhr.responseText\n              resolve(new Response(body, options))\n            }\n\n            xhr.onerror = function() {\n              reject(new TypeError('Network request failed'))\n            }\n\n            xhr.ontimeout = function() {\n              reject(new TypeError('Network request failed'))\n            }\n\n            xhr.open(request.method, request.url, true)\n\n            if (request.credentials === 'include') {\n              xhr.withCredentials = true\n            } else if (request.credentials === 'omit') {\n              xhr.withCredentials = false\n            }\n\n            if ('responseType' in xhr && support.blob) {\n              xhr.responseType = 'blob'\n            }\n\n            request.headers.forEach(function(value, name) {\n              xhr.setRequestHeader(name, value)\n            })\n\n            xhr.send(typeof request._bodyInit === 'undefined' ? null : request._bodyInit)\n          })\n        }\n        self.fetch.polyfill = true\n      })(typeof self !== 'undefined' ? self : this);\n\n\n      return {\n        fetch: self.fetch,\n        Headers: self.Headers,\n        Request: self.Request,\n        Response: self.Response\n      };\n    }());\n  }\n\n  if (typeof define === 'function' && define.amd) {\n    define(function () {\n      return fetchPonyfill;\n    });\n  } else if (typeof exports === 'object') {\n    module.exports = fetchPonyfill;\n  } else {\n    self.fetchPonyfill = fetchPonyfill;\n  }\n}(typeof self !== 'undefined' ? self : typeof global !== 'undefined' ? global : this));\n\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar BaseAPI_1 = require(\"../../BaseAPI\");\nvar TwitchClient_1 = require(\"../../../TwitchClient\");\nvar HelixClip_1 = require(\"./HelixClip\");\nvar HelixPaginatedRequest_1 = require(\"../HelixPaginatedRequest\");\n/**\n * The Helix API methods that deal with clips.\n *\n * Can be accessed using `client.helix.clips` on a {@TwitchClient} instance.\n *\n * ## Example\n * ```ts\n * const client = await TwitchClient.withCredentials(clientId, accessToken);\n * const clipId = await client.helix.clips.createClip({ channelId: '125328655' });\n * ```\n */\nvar HelixClipAPI = /** @class */ (function (_super) {\n    tslib_1.__extends(HelixClipAPI, _super);\n    function HelixClipAPI() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * Retrieves the latest clips for the specified broadcaster.\n     *\n     * @param userId The broadcaster's user ID.\n     * @param filter\n     *\n     * @expandParams\n     */\n    HelixClipAPI.prototype.getClipsForBroadcaster = function (userId, filter) {\n        if (filter === void 0) { filter = {}; }\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            return tslib_1.__generator(this, function (_a) {\n                return [2 /*return*/, this._getClips(tslib_1.__assign({}, filter, { filterType: 'broadcaster_id', ids: userId }))];\n            });\n        });\n    };\n    /**\n     * Creates a paginator for the latest clips for the specified broadcaster.\n     *\n     * @param userId The broadcaster's user ID.\n     * @param filter\n     *\n     * @expandParams\n     */\n    HelixClipAPI.prototype.getClipsForBroadcasterPaginated = function (userId, filter) {\n        if (filter === void 0) { filter = {}; }\n        return this._getClipsPaginated(tslib_1.__assign({}, filter, { filterType: 'broadcaster_id', ids: userId }));\n    };\n    /**\n     * Retrieves the latest clips for the specified game.\n     *\n     * @param gameId The game ID.\n     * @param filter\n     *\n     * @expandParams\n     */\n    HelixClipAPI.prototype.getClipsForGame = function (gameId, filter) {\n        if (filter === void 0) { filter = {}; }\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            return tslib_1.__generator(this, function (_a) {\n                return [2 /*return*/, this._getClips(tslib_1.__assign({}, filter, { filterType: 'game_id', ids: gameId }))];\n            });\n        });\n    };\n    /**\n     * Creates a paginator for the latest clips for the specified game.\n     *\n     * @param gameId The game ID.\n     * @param filter\n     *\n     * @expandParams\n     */\n    HelixClipAPI.prototype.getClipsForGamePaginated = function (gameId, filter) {\n        if (filter === void 0) { filter = {}; }\n        return this._getClipsPaginated(tslib_1.__assign({}, filter, { filterType: 'game_id', ids: gameId }));\n    };\n    /**\n     * Retrieves the clips identified by the given IDs.\n     *\n     * @param ids The clip IDs.\n     */\n    HelixClipAPI.prototype.getClipsByIds = function (ids) {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            var result;\n            return tslib_1.__generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this._getClips({\n                            filterType: 'id',\n                            ids: ids\n                        })];\n                    case 1:\n                        result = _a.sent();\n                        return [2 /*return*/, result.data];\n                }\n            });\n        });\n    };\n    /**\n     * Retrieves the clip identified by the given ID.\n     *\n     * @param id The clip ID.\n     */\n    HelixClipAPI.prototype.getClipById = function (id) {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            var clips;\n            return tslib_1.__generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this.getClipsByIds([id])];\n                    case 1:\n                        clips = _a.sent();\n                        return [2 /*return*/, clips.length ? clips[0] : null];\n                }\n            });\n        });\n    };\n    /**\n     * Creates a clip of a running stream.\n     *\n     * Returns the ID of the clip.\n     *\n     * @expandParams\n     */\n    HelixClipAPI.prototype.createClip = function (params) {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            var channelId, _a, createAfterDelay, result;\n            return tslib_1.__generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0:\n                        channelId = params.channelId, _a = params.createAfterDelay, createAfterDelay = _a === void 0 ? false : _a;\n                        return [4 /*yield*/, this._client.callAPI({\n                                type: TwitchClient_1.TwitchAPICallType.Helix,\n                                url: 'clips',\n                                method: 'POST',\n                                scope: 'clips:edit',\n                                query: {\n                                    broadcaster_id: channelId,\n                                    has_delay: createAfterDelay.toString()\n                                }\n                            })];\n                    case 1:\n                        result = _b.sent();\n                        return [2 /*return*/, result.data[0].id];\n                }\n            });\n        });\n    };\n    HelixClipAPI.prototype._getClips = function (params) {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            var filterType, ids, startDate, endDate, _a, limit, result;\n            var _b;\n            var _this = this;\n            return tslib_1.__generator(this, function (_c) {\n                switch (_c.label) {\n                    case 0:\n                        filterType = params.filterType, ids = params.ids, startDate = params.startDate, endDate = params.endDate, _a = params.limit, limit = _a === void 0 ? 20 : _a;\n                        return [4 /*yield*/, this._client.callAPI({\n                                type: TwitchClient_1.TwitchAPICallType.Helix,\n                                url: 'clips',\n                                query: (_b = {},\n                                    _b[filterType] = ids,\n                                    _b.started_at = startDate,\n                                    _b.ended_at = endDate,\n                                    _b.first = limit.toString(),\n                                    _b)\n                            })];\n                    case 1:\n                        result = _c.sent();\n                        return [2 /*return*/, {\n                                data: result.data.map(function (data) { return new HelixClip_1.default(data, _this._client); }),\n                                cursor: result.pagination && result.pagination.cursor\n                            }];\n                }\n            });\n        });\n    };\n    HelixClipAPI.prototype._getClipsPaginated = function (params) {\n        var _a;\n        var _this = this;\n        var filterType = params.filterType, ids = params.ids, startDate = params.startDate, endDate = params.endDate;\n        return new HelixPaginatedRequest_1.default({\n            url: 'clips',\n            query: (_a = {},\n                _a[filterType] = ids,\n                _a.started_at = startDate,\n                _a.ended_at = endDate,\n                _a)\n        }, this._client, function (data) { return new HelixClip_1.default(data, _this._client); });\n    };\n    return HelixClipAPI;\n}(BaseAPI_1.default));\nexports.default = HelixClipAPI;\n//# sourceMappingURL=HelixClipAPI.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar BaseAPI_1 = require(\"../../BaseAPI\");\nvar TwitchClient_1 = require(\"../../../TwitchClient\");\nvar HelixVideo_1 = require(\"./HelixVideo\");\nvar UserTools_1 = require(\"../../../Toolkit/UserTools\");\nvar HelixPaginatedRequest_1 = require(\"../HelixPaginatedRequest\");\n/**\n * The Helix API methods that deal with videos.\n *\n * Can be accessed using `client.helix.videos` on a {@TwitchClient} instance.\n *\n * ## Example\n * ```ts\n * const client = await TwitchClient.withCredentials(clientId, accessToken);\n * const videos = await client.helix.videos.getVideosByUser('125328655');\n * ```\n */\nvar HelixVideoAPI = /** @class */ (function (_super) {\n    tslib_1.__extends(HelixVideoAPI, _super);\n    function HelixVideoAPI() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * Retrieves the video data for the given list of video IDs.\n     *\n     * @param ids The video IDs you want to look up.\n     */\n    HelixVideoAPI.prototype.getVideosByIds = function (ids) {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            var result;\n            return tslib_1.__generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this._getVideos('id', ids)];\n                    case 1:\n                        result = _a.sent();\n                        return [2 /*return*/, result.data];\n                }\n            });\n        });\n    };\n    /**\n     * Retrieves the video data for the given video ID.\n     *\n     * @param id The video ID you want to look up.\n     */\n    HelixVideoAPI.prototype.getVideoById = function (id) {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            var videos;\n            return tslib_1.__generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this.getVideosByIds(id)];\n                    case 1:\n                        videos = _a.sent();\n                        return [2 /*return*/, videos.length ? videos[0] : null];\n                }\n            });\n        });\n    };\n    /**\n     * Retrieves the videos of the given user.\n     *\n     * @param user The user you want to retrieve videos from.\n     * @param filter Additional filters for the result set.\n     */\n    HelixVideoAPI.prototype.getVideosByUser = function (user, filter) {\n        if (filter === void 0) { filter = {}; }\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            var userId;\n            return tslib_1.__generator(this, function (_a) {\n                userId = UserTools_1.extractUserId(user);\n                return [2 /*return*/, this._getVideos('user_id', userId, filter)];\n            });\n        });\n    };\n    /**\n     * Creates a paginator for videos of the given user.\n     *\n     * @param user The user you want to retrieve videos from.\n     * @param filter Additional filters for the result set.\n     */\n    HelixVideoAPI.prototype.getVideosByUserPaginated = function (user, filter) {\n        if (filter === void 0) { filter = {}; }\n        var userId = UserTools_1.extractUserId(user);\n        return this._getVideosPaginated('user_id', userId, filter);\n    };\n    /**\n     * Retrieves the videos of the given game.\n     *\n     * @param gameId The game you want to retrieve videos from.\n     * @param filter Additional filters for the result set.\n     */\n    HelixVideoAPI.prototype.getVideosByGame = function (gameId, filter) {\n        if (filter === void 0) { filter = {}; }\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            return tslib_1.__generator(this, function (_a) {\n                return [2 /*return*/, this._getVideos('game_id', gameId, filter)];\n            });\n        });\n    };\n    /**\n     * Creates a paginator for videos of the given game.\n     *\n     * @param gameId The game you want to retrieve videos from.\n     * @param filter Additional filters for the result set.\n     */\n    HelixVideoAPI.prototype.getVideosByGamePaginated = function (gameId, filter) {\n        if (filter === void 0) { filter = {}; }\n        return this._getVideosPaginated('game_id', gameId, filter);\n    };\n    HelixVideoAPI.prototype._getVideos = function (filterType, filterValues, filter) {\n        if (filter === void 0) { filter = {}; }\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            var result;\n            var _this = this;\n            return tslib_1.__generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this._client.callAPI({\n                            url: 'videos',\n                            type: TwitchClient_1.TwitchAPICallType.Helix,\n                            query: HelixVideoAPI._makeVideosQuery(filterType, filterValues, filter)\n                        })];\n                    case 1:\n                        result = _a.sent();\n                        return [2 /*return*/, {\n                                data: result.data.map(function (data) { return new HelixVideo_1.default(data, _this._client); }),\n                                cursor: result.pagination && result.pagination.cursor\n                            }];\n                }\n            });\n        });\n    };\n    HelixVideoAPI.prototype._getVideosPaginated = function (filterType, filterValues, filter) {\n        var _this = this;\n        if (filter === void 0) { filter = {}; }\n        return new HelixPaginatedRequest_1.default({\n            url: 'videos',\n            query: HelixVideoAPI._makeVideosQuery(filterType, filterValues, filter)\n        }, this._client, function (data) { return new HelixVideo_1.default(data, _this._client); });\n    };\n    HelixVideoAPI._makeVideosQuery = function (filterType, filterValues, filter) {\n        var _a;\n        if (filter === void 0) { filter = {}; }\n        var language = filter.language, period = filter.period, orderBy = filter.orderBy, type = filter.type;\n        return _a = {},\n            _a[filterType] = filterValues,\n            _a.language = language,\n            _a.period = period,\n            _a.sort = orderBy,\n            _a.type = type,\n            _a;\n    };\n    return HelixVideoAPI;\n}(BaseAPI_1.default));\nexports.default = HelixVideoAPI;\n//# sourceMappingURL=HelixVideoAPI.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar Cache_1 = require(\"../../../Toolkit/Decorators/Cache\");\nvar BaseAPI_1 = require(\"../../BaseAPI\");\nvar Channel_1 = require(\"../Channel/Channel\");\nvar Stream_1 = require(\"../Stream/Stream\");\n/**\n * The API methods that deal with searching.\n *\n * Can be accessed using `client.kraken.search` on a {@TwitchClient} instance.\n *\n * ## Example\n * ```ts\n * const client = await TwitchClient.withCredentials(clientId, accessToken);\n * const channel = await client.kraken.search.searchStreams('Hearthstone');\n * ```\n */\nvar SearchAPI = /** @class */ (function (_super) {\n    tslib_1.__extends(SearchAPI, _super);\n    function SearchAPI() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * Retrieves a list of channels that match the given search term.\n     *\n     * @param term The term you want to search for.\n     * @param page The result page you want to retrieve.\n     * @param limit The number of results you want to retrieve.\n     */\n    SearchAPI.prototype.searchChannels = function (term, page, limit) {\n        if (limit === void 0) { limit = 25; }\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            var query, data;\n            var _this = this;\n            return tslib_1.__generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        query = { query: term, limit: limit.toString() };\n                        if (page) {\n                            query.offset = ((page - 1) * limit).toString();\n                        }\n                        return [4 /*yield*/, this._client.callAPI({ url: 'search/channels', query: query })];\n                    case 1:\n                        data = _a.sent();\n                        return [2 /*return*/, data.channels.map(function (channelData) { return new Channel_1.default(channelData, _this._client); })];\n                }\n            });\n        });\n    };\n    /**\n     * Retrieves a list of streams that match the given search term.\n     *\n     * @param term The term you want to search for.\n     * @param page The result page you want to retrieve.\n     * @param limit The number of results you want to retrieve.\n     * @param hls Whether you want only HLS or only non-HLS (RTMP) streams. If not set, finds both types of streams.\n     */\n    SearchAPI.prototype.searchStreams = function (term, page, limit, hls) {\n        if (limit === void 0) { limit = 25; }\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            var query, data;\n            var _this = this;\n            return tslib_1.__generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        query = { query: term, limit: limit.toString() };\n                        if (page) {\n                            query.offset = ((page - 1) * limit).toString();\n                        }\n                        if (hls !== undefined) {\n                            query.hls = hls.toString();\n                        }\n                        return [4 /*yield*/, this._client.callAPI({ url: 'search/streams', query: query })];\n                    case 1:\n                        data = _a.sent();\n                        return [2 /*return*/, data.streams.map(function (streamData) { return new Stream_1.default(streamData, _this._client); })];\n                }\n            });\n        });\n    };\n    tslib_1.__decorate([\n        Cache_1.Cached(300)\n    ], SearchAPI.prototype, \"searchChannels\", null);\n    tslib_1.__decorate([\n        Cache_1.Cached(300)\n    ], SearchAPI.prototype, \"searchStreams\", null);\n    SearchAPI = tslib_1.__decorate([\n        Cache_1.Cacheable\n    ], SearchAPI);\n    return SearchAPI;\n}(BaseAPI_1.default));\nexports.default = SearchAPI;\n//# sourceMappingURL=SearchAPI.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar NonEnumerable_1 = require(\"../../../Toolkit/Decorators/NonEnumerable\");\n/**\n * A game as displayed on Twitch.\n */\nvar HelixGame = /** @class */ (function () {\n    /** @private */\n    function HelixGame(_data, client) {\n        this._data = _data;\n        this._client = client;\n    }\n    Object.defineProperty(HelixGame.prototype, \"id\", {\n        /**\n         * The ID of the game.\n         */\n        get: function () {\n            return this._data.id;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(HelixGame.prototype, \"name\", {\n        /**\n         * The name of the game.\n         */\n        get: function () {\n            return this._data.name;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(HelixGame.prototype, \"boxArtUrl\", {\n        /**\n         * The URL of the box art of the game.\n         */\n        get: function () {\n            return this._data.box_art_url;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    tslib_1.__decorate([\n        NonEnumerable_1.NonEnumerable\n    ], HelixGame.prototype, \"_client\", void 0);\n    return HelixGame;\n}());\nexports.default = HelixGame;\n//# sourceMappingURL=HelixGame.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar qs = require(\"qs\");\nvar Cache_1 = require(\"./Toolkit/Decorators/Cache\");\nvar TokenInfo_1 = require(\"./API/TokenInfo\");\nvar CheermoteList_1 = require(\"./API/Kraken/Bits/CheermoteList\");\nvar AccessToken_1 = require(\"./API/AccessToken\");\nvar StaticAuthProvider_1 = require(\"./Auth/StaticAuthProvider\");\nvar RefreshableAuthProvider_1 = require(\"./Auth/RefreshableAuthProvider\");\nvar ClientCredentialsAuthProvider_1 = require(\"./Auth/ClientCredentialsAuthProvider\");\nvar ConfigError_1 = require(\"./Errors/ConfigError\");\nvar HTTPStatusCodeError_1 = require(\"./Errors/HTTPStatusCodeError\");\nvar KrakenAPIGroup_1 = require(\"./API/Kraken/KrakenAPIGroup\");\nvar HelixAPIGroup_1 = require(\"./API/Helix/HelixAPIGroup\");\nvar BadgesAPI_1 = require(\"./API/Badges/BadgesAPI\");\nvar UnsupportedAPI_1 = require(\"./API/Unsupported/UnsupportedAPI\");\nvar fetchPonyfill = require(\"fetch-ponyfill\");\nvar _a = fetchPonyfill(), fetch = _a.fetch, Headers = _a.Headers;\n/**\n * The endpoint to call, i.e. /kraken, /helix or a custom (potentially unsupported) endpoint.\n */\nvar TwitchAPICallType;\n(function (TwitchAPICallType) {\n    /**\n     * Call a Kraken API endpoint.\n     */\n    TwitchAPICallType[TwitchAPICallType[\"Kraken\"] = 0] = \"Kraken\";\n    /**\n     * Call a Helix API endpoint.\n     */\n    TwitchAPICallType[TwitchAPICallType[\"Helix\"] = 1] = \"Helix\";\n    /**\n     * Call a custom (potentially unsupported) endpoint.\n     */\n    TwitchAPICallType[TwitchAPICallType[\"Custom\"] = 2] = \"Custom\";\n})(TwitchAPICallType = exports.TwitchAPICallType || (exports.TwitchAPICallType = {}));\n/**\n * The main entry point of this library. Manages API calls and the use of access tokens in these.\n */\nvar TwitchClient = /** @class */ (function () {\n    /**\n     * Creates a new Twitch client instance.\n     *\n     * @param config Configuration for the client instance.\n     */\n    function TwitchClient(config) {\n        var authProvider = config.authProvider, restConfig = tslib_1.__rest(config, [\"authProvider\"]);\n        if (!authProvider) {\n            throw new ConfigError_1.default('No auth provider given');\n        }\n        this._config = tslib_1.__assign({ preAuth: false, cheermotes: {\n                defaultBackground: CheermoteList_1.CheermoteBackground.dark,\n                defaultState: CheermoteList_1.CheermoteState.animated,\n                defaultScale: CheermoteList_1.CheermoteScale.x1\n            }, authProvider: authProvider }, restConfig);\n        if (this._config.preAuth) {\n            // tslint:disable-next-line:no-floating-promises\n            authProvider.getAccessToken(this._config.initialScopes);\n        }\n    }\n    TwitchClient_1 = TwitchClient;\n    /**\n     * Creates a new instance with fixed credentials.\n     *\n     * @param clientId The client ID of your application.\n     * @param accessToken The access token to call the API with.\n     *\n     * You need to obtain one using one of the [Twitch OAuth flows](https://dev.twitch.tv/docs/authentication/getting-tokens-oauth/).\n     * @param scopes The scopes your supplied token has.\n     *\n     * If this argument is given, the scopes need to be correct, or weird things might happen. If it's not (i.e. it's `undefined`), we fetch the correct scopes for you.\n     *\n     * If you can't exactly say which scopes your token has, don't use this parameter/set it to `undefined`.\n     * @param refreshConfig Configuration to automatically refresh expired tokens.\n     * @param config Additional configuration to pass to the constructor.\n     *\n     * Note that if you provide a custom `authProvider`, this method will overwrite it. In this case, you should use the constructor directly.\n     */\n    TwitchClient.withCredentials = function (clientId, accessToken, scopes, refreshConfig, config) {\n        if (config === void 0) { config = {}; }\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            var tokenData, newToken, authProvider;\n            return tslib_1.__generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        if (!(!scopes && accessToken)) return [3 /*break*/, 6];\n                        return [4 /*yield*/, this.getTokenInfo(clientId, accessToken)];\n                    case 1:\n                        tokenData = _a.sent();\n                        if (!!tokenData.valid) return [3 /*break*/, 5];\n                        if (!refreshConfig) return [3 /*break*/, 4];\n                        return [4 /*yield*/, this.refreshAccessToken(clientId, refreshConfig.clientSecret, refreshConfig.refreshToken)];\n                    case 2:\n                        newToken = _a.sent();\n                        accessToken = newToken.accessToken;\n                        return [4 /*yield*/, this.getTokenInfo(clientId, accessToken)];\n                    case 3:\n                        tokenData = _a.sent();\n                        _a.label = 4;\n                    case 4:\n                        if (!tokenData.valid) {\n                            throw new ConfigError_1.default('Supplied an invalid access token to retrieve scopes with');\n                        }\n                        _a.label = 5;\n                    case 5:\n                        scopes = tokenData.scopes;\n                        _a.label = 6;\n                    case 6:\n                        authProvider = refreshConfig\n                            ? new RefreshableAuthProvider_1.default(new StaticAuthProvider_1.default(clientId, accessToken, scopes), refreshConfig)\n                            : new StaticAuthProvider_1.default(clientId, accessToken, scopes);\n                        return [2 /*return*/, new this(tslib_1.__assign({}, config, { authProvider: authProvider }))];\n                }\n            });\n        });\n    };\n    /**\n     * Creates a new instance with client credentials.\n     *\n     * @param clientId The client ID of your application.\n     * @param clientSecret The client secret of your application.\n     * @param config Additional configuration to pass to the constructor.\n     *\n     * Note that if you provide a custom `authProvider`, this method will overwrite it. In this case, you should use the constructor directly.\n     */\n    TwitchClient.withClientCredentials = function (clientId, clientSecret, config) {\n        if (config === void 0) { config = {}; }\n        var authProvider = clientSecret\n            ? new ClientCredentialsAuthProvider_1.default(clientId, clientSecret)\n            : new StaticAuthProvider_1.default(clientId);\n        return new this(tslib_1.__assign({}, config, { authProvider: authProvider }));\n    };\n    /**\n     * Makes a call to the Twitch API using given credetials.\n     *\n     * @param options The configuration of the call.\n     * @param clientId The client ID of your application.\n     * @param accessToken The access token to call the API with.\n     *\n     * You need to obtain one using one of the [Twitch OAuth flows](https://dev.twitch.tv/docs/authentication/getting-tokens-oauth/).\n     */\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    TwitchClient.callAPI = function (options, clientId, accessToken) {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            var url, params, headers, body, requestOptions, response, _a, _b, text;\n            return tslib_1.__generator(this, function (_c) {\n                switch (_c.label) {\n                    case 0:\n                        url = this._getUrl(options.url, options.type);\n                        params = qs.stringify(options.query, { arrayFormat: 'repeat' });\n                        headers = new Headers({\n                            Accept: \"application/vnd.twitchtv.v\" + (options.version || 5) + \"+json\"\n                        });\n                        if (options.body) {\n                            body = qs.stringify(options.body);\n                            headers.append('Content-Type', 'application/x-www-form-urlencoded');\n                        }\n                        else if (options.jsonBody) {\n                            body = JSON.stringify(options.jsonBody);\n                            headers.append('Content-Type', 'application/json');\n                        }\n                        if (clientId) {\n                            headers.append('Client-ID', clientId);\n                        }\n                        if (accessToken) {\n                            headers.append('Authorization', (options.type === TwitchAPICallType.Helix ? 'Bearer' : 'OAuth') + \" \" + accessToken);\n                        }\n                        requestOptions = {\n                            method: options.method || 'GET',\n                            headers: headers,\n                            body: body\n                        };\n                        return [4 /*yield*/, fetch(params ? url + \"?\" + params : url, requestOptions)];\n                    case 1:\n                        response = _c.sent();\n                        if (!!response.ok) return [3 /*break*/, 3];\n                        _a = HTTPStatusCodeError_1.default.bind;\n                        _b = [void 0, response.status, response.statusText];\n                        return [4 /*yield*/, response.json()];\n                    case 2: throw new (_a.apply(HTTPStatusCodeError_1.default, _b.concat([_c.sent()])))();\n                    case 3:\n                        if (response.status === 204) {\n                            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                            return [2 /*return*/, undefined]; // oof\n                        }\n                        return [4 /*yield*/, response.text()];\n                    case 4:\n                        text = _c.sent();\n                        if (!text) {\n                            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                            return [2 /*return*/, undefined]; // mega oof - twitch doesn't return a response when it should\n                        }\n                        return [2 /*return*/, JSON.parse(text)];\n                }\n            });\n        });\n    };\n    /**\n     * Retrieves an access token with your client credentials and an authorization code.\n     *\n     * @param clientId The client ID of your application.\n     * @param clientSecret The client secret of your application.\n     * @param code The authorization code.\n     * @param redirectUri The redirect URI. This serves no real purpose here, but must still match with the redirect URI you configured in the Twitch Developer dashboard.\n     */\n    TwitchClient.getAccessToken = function (clientId, clientSecret, code, redirectUri) {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            var _a;\n            return tslib_1.__generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0:\n                        _a = AccessToken_1.default.bind;\n                        return [4 /*yield*/, this.callAPI({\n                                url: 'oauth2/token',\n                                method: 'POST',\n                                query: {\n                                    grant_type: 'authorization_code',\n                                    client_id: clientId,\n                                    client_secret: clientSecret,\n                                    code: code,\n                                    redirect_uri: redirectUri\n                                }\n                            })];\n                    case 1: return [2 /*return*/, new (_a.apply(AccessToken_1.default, [void 0, _b.sent()]))()];\n                }\n            });\n        });\n    };\n    /**\n     * Retrieves an app access token with your client credentials.\n     *\n     * @param clientId The client ID of your application.\n     * @param clientSecret The client secret of your application.\n     * @param clientSecret\n     */\n    TwitchClient.getAppAccessToken = function (clientId, clientSecret) {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            var _a;\n            return tslib_1.__generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0:\n                        _a = AccessToken_1.default.bind;\n                        return [4 /*yield*/, this.callAPI({\n                                url: 'oauth2/token',\n                                method: 'POST',\n                                query: {\n                                    grant_type: 'client_credentials',\n                                    client_id: clientId,\n                                    client_secret: clientSecret\n                                }\n                            })];\n                    case 1: return [2 /*return*/, new (_a.apply(AccessToken_1.default, [void 0, _b.sent()]))()];\n                }\n            });\n        });\n    };\n    /**\n     * Refreshes an expired access token with your client credentials and the refresh token that was given by the initial authentication.\n     *\n     * @param clientId The client ID of your application.\n     * @param clientSecret The client secret of your application.\n     * @param refreshToken The refresh token.\n     */\n    TwitchClient.refreshAccessToken = function (clientId, clientSecret, refreshToken) {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            var _a;\n            return tslib_1.__generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0:\n                        _a = AccessToken_1.default.bind;\n                        return [4 /*yield*/, this.callAPI({\n                                url: 'oauth2/token',\n                                method: 'POST',\n                                query: {\n                                    grant_type: 'refresh_token',\n                                    client_id: clientId,\n                                    client_secret: clientSecret,\n                                    refresh_token: refreshToken\n                                }\n                            })];\n                    case 1: return [2 /*return*/, new (_a.apply(AccessToken_1.default, [void 0, _b.sent()]))()];\n                }\n            });\n        });\n    };\n    /**\n     * Retrieves information about an access token.\n     *\n     * @param clientId The client ID of your application.\n     * @param accessToken The access token to get the information of.\n     *\n     * You need to obtain one using one of the [Twitch OAuth flows](https://dev.twitch.tv/docs/authentication/getting-tokens-oauth/).\n     */\n    TwitchClient.getTokenInfo = function (clientId, accessToken) {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            var data;\n            return tslib_1.__generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this.callAPI({ url: '/' }, clientId, accessToken)];\n                    case 1:\n                        data = _a.sent();\n                        return [2 /*return*/, new TokenInfo_1.default(data.token)];\n                }\n            });\n        });\n    };\n    /**\n     * Retrieves information about your access token.\n     */\n    TwitchClient.prototype.getTokenInfo = function () {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            var data;\n            return tslib_1.__generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this.callAPI({ url: '/' })];\n                    case 1:\n                        data = _a.sent();\n                        return [2 /*return*/, new TokenInfo_1.default(data.token)];\n                }\n            });\n        });\n    };\n    /**\n     * Retrieves an access token for the authentication provider.\n     *\n     * @param scopes The scopes to request.\n     */\n    TwitchClient.prototype.getAccessToken = function (scopes) {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            return tslib_1.__generator(this, function (_a) {\n                return [2 /*return*/, this._config.authProvider.getAccessToken(scopes)];\n            });\n        });\n    };\n    /**\n     * Makes a call to the Twitch API using your access token.\n     *\n     * @param options The configuration of the call.\n     */\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    TwitchClient.prototype.callAPI = function (options) {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            var authProvider, accessToken;\n            return tslib_1.__generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        authProvider = this._config.authProvider;\n                        return [4 /*yield*/, authProvider.getAccessToken(options.scope ? [options.scope] : undefined)];\n                    case 1:\n                        accessToken = _a.sent();\n                        if (!accessToken) {\n                            return [2 /*return*/, TwitchClient_1.callAPI(options, authProvider.clientId)];\n                        }\n                        if (!(accessToken.isExpired && authProvider.refresh)) return [3 /*break*/, 3];\n                        return [4 /*yield*/, authProvider.refresh()];\n                    case 2:\n                        accessToken = _a.sent();\n                        _a.label = 3;\n                    case 3: return [2 /*return*/, TwitchClient_1.callAPI(options, authProvider.clientId, accessToken.accessToken)];\n                }\n            });\n        });\n    };\n    Object.defineProperty(TwitchClient.prototype, \"kraken\", {\n        /**\n         * A group of Kraken API methods.\n         */\n        get: function () {\n            return new KrakenAPIGroup_1.default(this);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(TwitchClient.prototype, \"helix\", {\n        /**\n         * A group of Helix API methods.\n         */\n        get: function () {\n            return new HelixAPIGroup_1.default(this);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(TwitchClient.prototype, \"badges\", {\n        /**\n         * The API methods that deal with badges.\n         */\n        get: function () {\n            return new BadgesAPI_1.default(this);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(TwitchClient.prototype, \"unsupported\", {\n        /**\n         * Various API methods that are not officially supported by Twitch.\n         */\n        get: function () {\n            return new UnsupportedAPI_1.default(this);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    TwitchClient._getUrl = function (url, type) {\n        type = type === undefined ? TwitchAPICallType.Kraken : type;\n        switch (type) {\n            case TwitchAPICallType.Kraken:\n            case TwitchAPICallType.Helix:\n                var typeName = type === TwitchAPICallType.Kraken ? 'kraken' : 'helix';\n                return \"https://api.twitch.tv/\" + typeName + \"/\" + url.replace(/^\\//, '');\n            case TwitchAPICallType.Custom:\n                return url;\n            default:\n                return url; // wat\n        }\n    };\n    var TwitchClient_1;\n    tslib_1.__decorate([\n        Cache_1.CachedGetter()\n    ], TwitchClient.prototype, \"kraken\", null);\n    tslib_1.__decorate([\n        Cache_1.CachedGetter()\n    ], TwitchClient.prototype, \"helix\", null);\n    tslib_1.__decorate([\n        Cache_1.CachedGetter()\n    ], TwitchClient.prototype, \"badges\", null);\n    tslib_1.__decorate([\n        Cache_1.CachedGetter()\n    ], TwitchClient.prototype, \"unsupported\", null);\n    TwitchClient = TwitchClient_1 = tslib_1.__decorate([\n        Cache_1.Cacheable\n    ], TwitchClient);\n    return TwitchClient;\n}());\nexports.default = TwitchClient;\n//# sourceMappingURL=TwitchClient.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar NonEnumerable_1 = require(\"../../Toolkit/Decorators/NonEnumerable\");\n/**\n * A version of a badge.\n */\nvar ChatBadgeVersion = /** @class */ (function () {\n    /** @private */\n    function ChatBadgeVersion(_data, client) {\n        this._data = _data;\n        this._client = client;\n    }\n    Object.defineProperty(ChatBadgeVersion.prototype, \"clickAction\", {\n        /**\n         * The action to execute when the badge is clicked.\n         */\n        get: function () {\n            return this._data.click_action;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ChatBadgeVersion.prototype, \"clickUrl\", {\n        /**\n         * The URL to visit when the badge is clicked.\n         *\n         * Only applies if clickAction === 'visit_url'.\n         */\n        get: function () {\n            return this._data.click_url;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ChatBadgeVersion.prototype, \"description\", {\n        /**\n         * The description of the badge.\n         */\n        get: function () {\n            return this._data.description;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Gets an image URL for the given scale.\n     *\n     * @param scale The scale of the badge image.\n     */\n    ChatBadgeVersion.prototype.getImageUrl = function (scale) {\n        return this._data[\"image_url_\" + scale + \"x\"];\n    };\n    Object.defineProperty(ChatBadgeVersion.prototype, \"title\", {\n        /**\n         * The title of the badge.\n         */\n        get: function () {\n            return this._data.title;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    tslib_1.__decorate([\n        NonEnumerable_1.NonEnumerable\n    ], ChatBadgeVersion.prototype, \"_client\", void 0);\n    return ChatBadgeVersion;\n}());\nexports.default = ChatBadgeVersion;\n//# sourceMappingURL=ChatBadgeVersion.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar UserTools_1 = require(\"../../../Toolkit/UserTools\");\nvar Cache_1 = require(\"../../../Toolkit/Decorators/Cache\");\nvar CheermoteList_1 = require(\"./CheermoteList\");\nvar BaseAPI_1 = require(\"../../BaseAPI\");\n/**\n * The API methods that deal with Bits/Cheermotes.\n *\n * Can be accessed using `client.kraken.bits` on a {@TwitchClient} instance.\n *\n * ## Example\n * ```ts\n * const client = await TwitchClient.withCredentials(clientId, accessToken);\n * const cheermotes = await client.kraken.bits.getCheermotes();\n * ```\n */\nvar BitsAPI = /** @class */ (function (_super) {\n    tslib_1.__extends(BitsAPI, _super);\n    function BitsAPI() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * Retrieves global and channel cheermotes.\n     *\n     * @param channel The channel you want to retrieve the available cheermotes for.\n     * If not given, this method retrieves a list of globally available cheermotes.\n     * @param includeSponsored Whether to include sponsored cheermotes in the list.\n     */\n    BitsAPI.prototype.getCheermotes = function (channel, includeSponsored) {\n        if (includeSponsored === void 0) { includeSponsored = true; }\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            var query, data;\n            return tslib_1.__generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        query = {};\n                        if (channel) {\n                            query.channel_id = UserTools_1.extractUserId(channel);\n                        }\n                        if (includeSponsored) {\n                            query.include_sponsored = 'true';\n                        }\n                        return [4 /*yield*/, this._client.callAPI({ url: 'bits/actions', query: query })];\n                    case 1:\n                        data = _a.sent();\n                        return [2 /*return*/, new CheermoteList_1.default(data.actions, this._client)];\n                }\n            });\n        });\n    };\n    tslib_1.__decorate([\n        Cache_1.Cached(3600)\n    ], BitsAPI.prototype, \"getCheermotes\", null);\n    BitsAPI = tslib_1.__decorate([\n        Cache_1.Cacheable\n    ], BitsAPI);\n    return BitsAPI;\n}(BaseAPI_1.default));\nexports.default = BitsAPI;\n//# sourceMappingURL=BitsAPI.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar Channel_1 = require(\"../Kraken/Channel/Channel\");\nvar NonEnumerable_1 = require(\"../../Toolkit/Decorators/NonEnumerable\");\n/**\n * An event held on a Twitch channel.\n */\nvar ChannelEvent = /** @class */ (function () {\n    /** @private */\n    function ChannelEvent(_data, client) {\n        this._data = _data;\n        this._client = client;\n    }\n    Object.defineProperty(ChannelEvent.prototype, \"id\", {\n        /**\n         * The ID of the event.\n         */\n        get: function () {\n            return this._data._id;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ChannelEvent.prototype, \"startDate\", {\n        /**\n         * The time when the event starts.\n         */\n        get: function () {\n            return new Date(this._data.start_time);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ChannelEvent.prototype, \"endDate\", {\n        /**\n         * The time when the event ends.\n         */\n        get: function () {\n            return new Date(this._data.end_time);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ChannelEvent.prototype, \"timeZoneId\", {\n        /**\n         * The ID of the timezone that the start and end times of the event are local to.\n         */\n        get: function () {\n            return this._data.time_zone_id;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ChannelEvent.prototype, \"title\", {\n        /**\n         * The title of the event.\n         */\n        get: function () {\n            return this._data.title;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ChannelEvent.prototype, \"description\", {\n        /**\n         * The description of the event.\n         */\n        get: function () {\n            return this._data.description;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ChannelEvent.prototype, \"language\", {\n        /**\n         * The language of the event.\n         */\n        get: function () {\n            return this._data.language;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ChannelEvent.prototype, \"channel\", {\n        /**\n         * The channel where the event is held.\n         */\n        get: function () {\n            return new Channel_1.default(this._data.channel, this._client);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Generates a URL to the cover image of the event with the given dimensions.\n     *\n     * @param width The width of the image.\n     * @param height The height of the image.\n     */\n    ChannelEvent.prototype.buildCoverImageUrl = function (width, height) {\n        return this._data.cover_image_url\n            .replace('{width}', width.toString())\n            .replace('{height}', height.toString());\n    };\n    tslib_1.__decorate([\n        NonEnumerable_1.NonEnumerable\n    ], ChannelEvent.prototype, \"_client\", void 0);\n    return ChannelEvent;\n}());\nexports.default = ChannelEvent;\n//# sourceMappingURL=ChannelEvent.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar NonEnumerable_1 = require(\"../../../Toolkit/Decorators/NonEnumerable\");\nvar NoSubscriptionProgramError_1 = require(\"../../../Errors/NoSubscriptionProgramError\");\n/**\n * The type of a broadcaster.\n */\nvar HelixBroadcasterType;\n(function (HelixBroadcasterType) {\n    /**\n     * A Twitch Partner.\n     */\n    HelixBroadcasterType[\"Partner\"] = \"partner\";\n    /**\n     * A Twitch Affiliate.\n     */\n    HelixBroadcasterType[\"Affiliate\"] = \"affiliate\";\n    /**\n     * A user that's neither a partner nor an affiliate.\n     */\n    HelixBroadcasterType[\"None\"] = \"\";\n})(HelixBroadcasterType = exports.HelixBroadcasterType || (exports.HelixBroadcasterType = {}));\n/**\n * The type of a user.\n */\nvar HelixUserType;\n(function (HelixUserType) {\n    /**\n     * A Twitch staff member.\n     */\n    HelixUserType[\"Staff\"] = \"staff\";\n    /**\n     * A Twitch administrator.\n     */\n    HelixUserType[\"Admin\"] = \"admin\";\n    /**\n     * A global moderator.\n     */\n    HelixUserType[\"GlobalMod\"] = \"global_mod\";\n    /**\n     * A user with no special permissions across Twitch.\n     */\n    HelixUserType[\"None\"] = \"\";\n})(HelixUserType = exports.HelixUserType || (exports.HelixUserType = {}));\n/**\n * A Twitch user.\n */\nvar HelixUser = /** @class */ (function () {\n    /** @private */\n    function HelixUser(/** @private */ _data, client) {\n        this._data = _data;\n        this._client = client;\n    }\n    Object.defineProperty(HelixUser.prototype, \"cacheKey\", {\n        /** @private */\n        get: function () {\n            return this._data.id;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(HelixUser.prototype, \"id\", {\n        /**\n         * The ID of the user.\n         */\n        get: function () {\n            return this._data.id;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(HelixUser.prototype, \"name\", {\n        /**\n         * The user name of the user.\n         */\n        get: function () {\n            return this._data.login;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(HelixUser.prototype, \"displayName\", {\n        /**\n         * The display name of the user.\n         */\n        get: function () {\n            return this._data.display_name;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(HelixUser.prototype, \"description\", {\n        /**\n         * The description of the user.\n         */\n        get: function () {\n            return this._data.description;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(HelixUser.prototype, \"type\", {\n        /**\n         * The type of the user.\n         */\n        get: function () {\n            return this._data.type;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(HelixUser.prototype, \"broadcasterType\", {\n        /**\n         * The type of the user.\n         */\n        get: function () {\n            return this._data.broadcaster_type;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(HelixUser.prototype, \"profilePictureUrl\", {\n        /**\n         * The URL to the profile picture of the user.\n         */\n        get: function () {\n            return this._data.profile_image_url;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(HelixUser.prototype, \"offlinePlaceholderUrl\", {\n        /**\n         * The URL to the offline video placeholder of the user.\n         */\n        get: function () {\n            return this._data.offline_image_url;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(HelixUser.prototype, \"views\", {\n        /**\n         * The total number of views of the user's channel.\n         */\n        get: function () {\n            return this._data.view_count;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Retrieves the channel's stream data.\n     */\n    HelixUser.prototype.getStream = function () {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            return tslib_1.__generator(this, function (_a) {\n                return [2 /*return*/, this._client.helix.streams.getStreamByUserId(this)];\n            });\n        });\n    };\n    /**\n     * Retrieves a list of broadcasters the user follows.\n     */\n    HelixUser.prototype.getFollows = function () {\n        return this._client.helix.users.getFollows({ user: this });\n    };\n    /**\n     * Retrieves the follow data of the user to the given broadcaster.\n     *\n     * @param broadcaster The broadcaster to check the follow to.\n     */\n    HelixUser.prototype.getFollowTo = function (broadcaster) {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            var params, result;\n            return tslib_1.__generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        params = {\n                            user: this.id,\n                            followedUser: broadcaster\n                        };\n                        return [4 /*yield*/, this._client.helix.users.getFollows(params)];\n                    case 1:\n                        result = (_a.sent()).data;\n                        return [2 /*return*/, result.length ? result[0] : null];\n                }\n            });\n        });\n    };\n    /**\n     * Checks whether the user is following the given broadcaster.\n     *\n     * @param broadcaster The broadcaster to check the user's follow to.\n     */\n    HelixUser.prototype.follows = function (broadcaster) {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            return tslib_1.__generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this.getFollowTo(broadcaster)];\n                    case 1: return [2 /*return*/, (_a.sent()) !== null];\n                }\n            });\n        });\n    };\n    /**\n     * Follows the broadcaster.\n     */\n    HelixUser.prototype.follow = function () {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            var currentUser;\n            return tslib_1.__generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this._client.kraken.users.getMe()];\n                    case 1:\n                        currentUser = _a.sent();\n                        return [2 /*return*/, currentUser.followChannel(this)];\n                }\n            });\n        });\n    };\n    /**\n     * Unfollows the broadcaster.\n     */\n    HelixUser.prototype.unfollow = function () {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            var currentUser;\n            return tslib_1.__generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this._client.kraken.users.getMe()];\n                    case 1:\n                        currentUser = _a.sent();\n                        return [2 /*return*/, currentUser.unfollowChannel(this)];\n                }\n            });\n        });\n    };\n    /**\n     * Retrieves the subscription data for the user to the given broadcaster, or `null` if the user is not subscribed.\n     *\n     * @param broadcaster The broadcaster you want to get the subscription data for.\n     */\n    HelixUser.prototype.getSubscriptionTo = function (broadcaster) {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            return tslib_1.__generator(this, function (_a) {\n                return [2 /*return*/, this._client.helix.subscriptions.getSubscriptionForUser(broadcaster, this)];\n            });\n        });\n    };\n    /**\n     * Checks whether the user is subscribed to the given broadcaster.\n     *\n     * @param broadcaster The broadcaster you want to check the subscription for.\n     */\n    HelixUser.prototype.isSubscribedTo = function (broadcaster) {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            var e_1;\n            return tslib_1.__generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        _a.trys.push([0, 2, , 3]);\n                        return [4 /*yield*/, this.getSubscriptionTo(broadcaster)];\n                    case 1: return [2 /*return*/, (_a.sent()) !== null];\n                    case 2:\n                        e_1 = _a.sent();\n                        if (e_1 instanceof NoSubscriptionProgramError_1.default) {\n                            return [2 /*return*/, false];\n                        }\n                        throw e_1;\n                    case 3: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    tslib_1.__decorate([\n        NonEnumerable_1.NonEnumerable\n    ], HelixUser.prototype, \"_client\", void 0);\n    return HelixUser;\n}());\nexports.default = HelixUser;\n//# sourceMappingURL=HelixUser.js.map","'use strict';\n\nvar utils = require('./utils');\nvar formats = require('./formats');\nvar has = Object.prototype.hasOwnProperty;\n\nvar arrayPrefixGenerators = {\n    brackets: function brackets(prefix) { // eslint-disable-line func-name-matching\n        return prefix + '[]';\n    },\n    comma: 'comma',\n    indices: function indices(prefix, key) { // eslint-disable-line func-name-matching\n        return prefix + '[' + key + ']';\n    },\n    repeat: function repeat(prefix) { // eslint-disable-line func-name-matching\n        return prefix;\n    }\n};\n\nvar isArray = Array.isArray;\nvar push = Array.prototype.push;\nvar pushToArray = function (arr, valueOrArray) {\n    push.apply(arr, isArray(valueOrArray) ? valueOrArray : [valueOrArray]);\n};\n\nvar toISO = Date.prototype.toISOString;\n\nvar defaults = {\n    addQueryPrefix: false,\n    allowDots: false,\n    charset: 'utf-8',\n    charsetSentinel: false,\n    delimiter: '&',\n    encode: true,\n    encoder: utils.encode,\n    encodeValuesOnly: false,\n    formatter: formats.formatters[formats['default']],\n    // deprecated\n    indices: false,\n    serializeDate: function serializeDate(date) { // eslint-disable-line func-name-matching\n        return toISO.call(date);\n    },\n    skipNulls: false,\n    strictNullHandling: false\n};\n\nvar stringify = function stringify( // eslint-disable-line func-name-matching\n    object,\n    prefix,\n    generateArrayPrefix,\n    strictNullHandling,\n    skipNulls,\n    encoder,\n    filter,\n    sort,\n    allowDots,\n    serializeDate,\n    formatter,\n    encodeValuesOnly,\n    charset\n) {\n    var obj = object;\n    if (typeof filter === 'function') {\n        obj = filter(prefix, obj);\n    } else if (obj instanceof Date) {\n        obj = serializeDate(obj);\n    } else if (generateArrayPrefix === 'comma' && isArray(obj)) {\n        obj = obj.join(',');\n    }\n\n    if (obj === null) {\n        if (strictNullHandling) {\n            return encoder && !encodeValuesOnly ? encoder(prefix, defaults.encoder, charset) : prefix;\n        }\n\n        obj = '';\n    }\n\n    if (typeof obj === 'string' || typeof obj === 'number' || typeof obj === 'boolean' || utils.isBuffer(obj)) {\n        if (encoder) {\n            var keyValue = encodeValuesOnly ? prefix : encoder(prefix, defaults.encoder, charset);\n            return [formatter(keyValue) + '=' + formatter(encoder(obj, defaults.encoder, charset))];\n        }\n        return [formatter(prefix) + '=' + formatter(String(obj))];\n    }\n\n    var values = [];\n\n    if (typeof obj === 'undefined') {\n        return values;\n    }\n\n    var objKeys;\n    if (isArray(filter)) {\n        objKeys = filter;\n    } else {\n        var keys = Object.keys(obj);\n        objKeys = sort ? keys.sort(sort) : keys;\n    }\n\n    for (var i = 0; i < objKeys.length; ++i) {\n        var key = objKeys[i];\n\n        if (skipNulls && obj[key] === null) {\n            continue;\n        }\n\n        if (isArray(obj)) {\n            pushToArray(values, stringify(\n                obj[key],\n                typeof generateArrayPrefix === 'function' ? generateArrayPrefix(prefix, key) : prefix,\n                generateArrayPrefix,\n                strictNullHandling,\n                skipNulls,\n                encoder,\n                filter,\n                sort,\n                allowDots,\n                serializeDate,\n                formatter,\n                encodeValuesOnly,\n                charset\n            ));\n        } else {\n            pushToArray(values, stringify(\n                obj[key],\n                prefix + (allowDots ? '.' + key : '[' + key + ']'),\n                generateArrayPrefix,\n                strictNullHandling,\n                skipNulls,\n                encoder,\n                filter,\n                sort,\n                allowDots,\n                serializeDate,\n                formatter,\n                encodeValuesOnly,\n                charset\n            ));\n        }\n    }\n\n    return values;\n};\n\nvar normalizeStringifyOptions = function normalizeStringifyOptions(opts) {\n    if (!opts) {\n        return defaults;\n    }\n\n    if (opts.encoder !== null && opts.encoder !== undefined && typeof opts.encoder !== 'function') {\n        throw new TypeError('Encoder has to be a function.');\n    }\n\n    var charset = opts.charset || defaults.charset;\n    if (typeof opts.charset !== 'undefined' && opts.charset !== 'utf-8' && opts.charset !== 'iso-8859-1') {\n        throw new TypeError('The charset option must be either utf-8, iso-8859-1, or undefined');\n    }\n\n    var format = formats['default'];\n    if (typeof opts.format !== 'undefined') {\n        if (!has.call(formats.formatters, opts.format)) {\n            throw new TypeError('Unknown format option provided.');\n        }\n        format = opts.format;\n    }\n    var formatter = formats.formatters[format];\n\n    var filter = defaults.filter;\n    if (typeof opts.filter === 'function' || isArray(opts.filter)) {\n        filter = opts.filter;\n    }\n\n    return {\n        addQueryPrefix: typeof opts.addQueryPrefix === 'boolean' ? opts.addQueryPrefix : defaults.addQueryPrefix,\n        allowDots: typeof opts.allowDots === 'undefined' ? defaults.allowDots : !!opts.allowDots,\n        charset: charset,\n        charsetSentinel: typeof opts.charsetSentinel === 'boolean' ? opts.charsetSentinel : defaults.charsetSentinel,\n        delimiter: typeof opts.delimiter === 'undefined' ? defaults.delimiter : opts.delimiter,\n        encode: typeof opts.encode === 'boolean' ? opts.encode : defaults.encode,\n        encoder: typeof opts.encoder === 'function' ? opts.encoder : defaults.encoder,\n        encodeValuesOnly: typeof opts.encodeValuesOnly === 'boolean' ? opts.encodeValuesOnly : defaults.encodeValuesOnly,\n        filter: filter,\n        formatter: formatter,\n        serializeDate: typeof opts.serializeDate === 'function' ? opts.serializeDate : defaults.serializeDate,\n        skipNulls: typeof opts.skipNulls === 'boolean' ? opts.skipNulls : defaults.skipNulls,\n        sort: typeof opts.sort === 'function' ? opts.sort : null,\n        strictNullHandling: typeof opts.strictNullHandling === 'boolean' ? opts.strictNullHandling : defaults.strictNullHandling\n    };\n};\n\nmodule.exports = function (object, opts) {\n    var obj = object;\n    var options = normalizeStringifyOptions(opts);\n\n    var objKeys;\n    var filter;\n\n    if (typeof options.filter === 'function') {\n        filter = options.filter;\n        obj = filter('', obj);\n    } else if (isArray(options.filter)) {\n        filter = options.filter;\n        objKeys = filter;\n    }\n\n    var keys = [];\n\n    if (typeof obj !== 'object' || obj === null) {\n        return '';\n    }\n\n    var arrayFormat;\n    if (opts && opts.arrayFormat in arrayPrefixGenerators) {\n        arrayFormat = opts.arrayFormat;\n    } else if (opts && 'indices' in opts) {\n        arrayFormat = opts.indices ? 'indices' : 'repeat';\n    } else {\n        arrayFormat = 'indices';\n    }\n\n    var generateArrayPrefix = arrayPrefixGenerators[arrayFormat];\n\n    if (!objKeys) {\n        objKeys = Object.keys(obj);\n    }\n\n    if (options.sort) {\n        objKeys.sort(options.sort);\n    }\n\n    for (var i = 0; i < objKeys.length; ++i) {\n        var key = objKeys[i];\n\n        if (options.skipNulls && obj[key] === null) {\n            continue;\n        }\n        pushToArray(keys, stringify(\n            obj[key],\n            key,\n            generateArrayPrefix,\n            options.strictNullHandling,\n            options.skipNulls,\n            options.encode ? options.encoder : null,\n            options.filter,\n            options.sort,\n            options.allowDots,\n            options.serializeDate,\n            options.formatter,\n            options.encodeValuesOnly,\n            options.charset\n        ));\n    }\n\n    var joined = keys.join(options.delimiter);\n    var prefix = options.addQueryPrefix === true ? '?' : '';\n\n    if (options.charsetSentinel) {\n        if (options.charset === 'iso-8859-1') {\n            // encodeURIComponent('&#10003;'), the \"numeric entity\" representation of a checkmark\n            prefix += 'utf8=%26%2310003%3B&';\n        } else {\n            // encodeURIComponent('✓')\n            prefix += 'utf8=%E2%9C%93&';\n        }\n    }\n\n    return joined.length > 0 ? prefix + joined : '';\n};\n","'use strict';\n\nvar stringify = require('./stringify');\nvar parse = require('./parse');\nvar formats = require('./formats');\n\nmodule.exports = {\n    formats: formats,\n    parse: parse,\n    stringify: stringify\n};\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\n/** @private */\nfunction flatten(arr) {\n    var _a;\n    return (_a = []).concat.apply(_a, tslib_1.__spread(arr));\n}\nexports.flatten = flatten;\n//# sourceMappingURL=ArrayTools.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar Channel_1 = require(\"./Channel\");\n/**\n * A channel you have extended privileges for, i.e. the channel of the currently authenticated user.\n */\nvar PrivilegedChannel = /** @class */ (function (_super) {\n    tslib_1.__extends(PrivilegedChannel, _super);\n    function PrivilegedChannel() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Object.defineProperty(PrivilegedChannel.prototype, \"streamKey\", {\n        /**\n         * The channel's stream key.\n         */\n        get: function () {\n            return this._data.stream_key;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PrivilegedChannel.prototype, \"email\", {\n        /**\n         * The channel's email address.\n         */\n        get: function () {\n            return this._data.email;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Retrieves the list of editors of the channel.\n     */\n    PrivilegedChannel.prototype.getEditors = function () {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            return tslib_1.__generator(this, function (_a) {\n                return [2 /*return*/, this._client.kraken.channels.getChannelEditors(this)];\n            });\n        });\n    };\n    /**\n     * Starts a commercial in the channel.\n     *\n     * @param length The length of the commercial.\n     */\n    PrivilegedChannel.prototype.startCommercial = function (length) {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            return tslib_1.__generator(this, function (_a) {\n                return [2 /*return*/, this._client.kraken.channels.startChannelCommercial(this, length)];\n            });\n        });\n    };\n    /**\n     * Resets the given channel's stream key.\n     */\n    PrivilegedChannel.prototype.resetStreamKey = function () {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            var channelData, streamKey;\n            return tslib_1.__generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this._client.kraken.channels.resetChannelStreamKey(this)];\n                    case 1:\n                        channelData = _a.sent();\n                        streamKey = channelData.stream_key;\n                        this._data.stream_key = streamKey;\n                        return [2 /*return*/, streamKey];\n                }\n            });\n        });\n    };\n    return PrivilegedChannel;\n}(Channel_1.default));\nexports.default = PrivilegedChannel;\n//# sourceMappingURL=PrivilegedChannel.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar BaseAPI_1 = require(\"../../BaseAPI\");\nvar Cache_1 = require(\"../../../Toolkit/Decorators/Cache\");\nvar UserTools_1 = require(\"../../../Toolkit/UserTools\");\nvar ChatEmoteList_1 = require(\"./ChatEmoteList\");\nvar ChatRoom_1 = require(\"./ChatRoom\");\n/**\n * The API methods that deal with chat and chatrooms.\n *\n * Can be accessed using `client.kraken.chat` on a {@TwitchClient} instance.\n *\n * ## Example\n * ```ts\n * const client = await TwitchClient.withCredentials(clientId, accessToken);\n * const channel = await client.kraken.chat.getBadges('125328655');\n * ```\n */\nvar ChatAPI = /** @class */ (function (_super) {\n    tslib_1.__extends(ChatAPI, _super);\n    function ChatAPI() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * Retrieves a list of emotes for a given list of enote set IDs.\n     *\n     * @param emotesets The list of emote set IDs, either as array of strings or as a comma separated string.\n     */\n    ChatAPI.prototype.getEmotesBySets = function (emotesets) {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            var data;\n            return tslib_1.__generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        if (typeof emotesets !== 'string') {\n                            emotesets = emotesets.join(',');\n                        }\n                        return [4 /*yield*/, this._client.callAPI({\n                                url: 'chat/emoticon_images',\n                                query: {\n                                    emotesets: emotesets\n                                }\n                            })];\n                    case 1:\n                        data = _a.sent();\n                        return [2 /*return*/, new ChatEmoteList_1.default(data.emoticons, this._client)];\n                }\n            });\n        });\n    };\n    /**\n     * Retrieves a list of chat rooms for a given channel.\n     *\n     * @param channel The channel to retrieve the chat rooms of.\n     */\n    ChatAPI.prototype.getChatRoomsForChannel = function (channel) {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            var data;\n            var _this = this;\n            return tslib_1.__generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this._client.callAPI({\n                            url: \"chat/\" + UserTools_1.extractUserId(channel) + \"/rooms\"\n                        })];\n                    case 1:\n                        data = _a.sent();\n                        return [2 /*return*/, data.rooms.map(function (room) { return new ChatRoom_1.default(room, _this._client); })];\n                }\n            });\n        });\n    };\n    tslib_1.__decorate([\n        Cache_1.Cached(3600)\n    ], ChatAPI.prototype, \"getEmotesBySets\", null);\n    tslib_1.__decorate([\n        Cache_1.Cached(3600)\n    ], ChatAPI.prototype, \"getChatRoomsForChannel\", null);\n    ChatAPI = tslib_1.__decorate([\n        Cache_1.Cacheable\n    ], ChatAPI);\n    return ChatAPI;\n}(BaseAPI_1.default));\nexports.default = ChatAPI;\n//# sourceMappingURL=ChatAPI.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar CustomError_1 = require(\"./CustomError\");\n/**\n * Thrown whenever you try something that requires your own stream to be live.\n */\nvar StreamNotLiveError = /** @class */ (function (_super) {\n    tslib_1.__extends(StreamNotLiveError, _super);\n    function StreamNotLiveError() {\n        return _super.call(this, 'Your stream needs to be live to do this') || this;\n    }\n    return StreamNotLiveError;\n}(CustomError_1.default));\nexports.default = StreamNotLiveError;\n//# sourceMappingURL=StreamNotLiveError.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar User_1 = require(\"../User/User\");\nvar NonEnumerable_1 = require(\"../../../Toolkit/Decorators/NonEnumerable\");\n/**\n * A relation of a user following a previously given channel.\n */\nvar ChannelFollow = /** @class */ (function () {\n    /** @private */\n    function ChannelFollow(_data, client) {\n        this._data = _data;\n        this._client = client;\n    }\n    Object.defineProperty(ChannelFollow.prototype, \"user\", {\n        /**\n         * The user following the given channel.\n         */\n        get: function () {\n            return new User_1.default(this._data.user, this._client);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ChannelFollow.prototype, \"hasNotifications\", {\n        /**\n         * Whether the user has notifications enabled for the channel.\n         */\n        get: function () {\n            return this._data.notifications;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ChannelFollow.prototype, \"followDate\", {\n        /**\n         * The date when the user followed.\n         */\n        get: function () {\n            return new Date(this._data.created_at);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    tslib_1.__decorate([\n        NonEnumerable_1.NonEnumerable\n    ], ChannelFollow.prototype, \"_client\", void 0);\n    return ChannelFollow;\n}());\nexports.default = ChannelFollow;\n//# sourceMappingURL=ChannelFollow.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\n/** @private */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction createCacheKey(propName, params, prefix) {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    function createSingleCacheKey(param) {\n        // noinspection FallThroughInSwitchStatementJS\n        switch (typeof param) {\n            case 'undefined': {\n                return '';\n            }\n            case 'object': {\n                if (param === null) {\n                    return '';\n                }\n                if ('cacheKey' in param) {\n                    return param.cacheKey;\n                }\n                var objKey = JSON.stringify(param);\n                if (objKey !== '{}') {\n                    return objKey;\n                }\n            }\n            // fallthrough\n            default: {\n                return param.toString();\n            }\n        }\n    }\n    return tslib_1.__spread([propName], params.map(createSingleCacheKey)).join('/') + (prefix ? '/' : '');\n}\nexports.createCacheKey = createCacheKey;\n/** @private */\nfunction Cacheable(cls) {\n    return /** @class */ (function (_super) {\n        tslib_1.__extends(class_1, _super);\n        function class_1() {\n            var _this = _super !== null && _super.apply(this, arguments) || this;\n            _this.cache = new Map;\n            return _this;\n        }\n        class_1.prototype.getFromCache = function (cacheKey) {\n            this._cleanCache();\n            if (this.cache.has(cacheKey)) {\n                var entry = this.cache.get(cacheKey);\n                if (entry) {\n                    return entry.value;\n                }\n            }\n            return undefined;\n        };\n        class_1.prototype.setCache = function (cacheKey, value, timeInSeconds) {\n            this.cache.set(cacheKey, {\n                value: value, expires: Date.now() + (timeInSeconds * 1000)\n            });\n        };\n        class_1.prototype.removeFromCache = function (cacheKey, prefix) {\n            var _this = this;\n            var internalCacheKey;\n            if (typeof cacheKey === 'string') {\n                internalCacheKey = cacheKey;\n                if (!internalCacheKey.endsWith('/')) {\n                    internalCacheKey += '/';\n                }\n            }\n            else {\n                var propName = cacheKey.shift();\n                internalCacheKey = createCacheKey(propName, cacheKey, prefix);\n            }\n            if (prefix) {\n                this.cache.forEach(function (val, key) {\n                    if (key.startsWith(internalCacheKey)) {\n                        _this.cache.delete(key);\n                    }\n                });\n            }\n            else {\n                this.cache.delete(internalCacheKey);\n            }\n        };\n        class_1.prototype._cleanCache = function () {\n            var _this = this;\n            var now = Date.now();\n            this.cache.forEach(function (val, key) {\n                if (val.expires < now) {\n                    _this.cache.delete(key);\n                }\n            });\n        };\n        return class_1;\n    }(cls));\n}\nexports.Cacheable = Cacheable;\n/** @private */\nfunction Cached(timeInSeconds, cacheFailures) {\n    if (timeInSeconds === void 0) { timeInSeconds = Infinity; }\n    if (cacheFailures === void 0) { cacheFailures = false; }\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    return function (target, propName, descriptor) {\n        var origFn = descriptor.value;\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        descriptor.value = function () {\n            var params = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                params[_i] = arguments[_i];\n            }\n            return tslib_1.__awaiter(this, void 0, void 0, function () {\n                var cacheKey, cachedValue, result;\n                return tslib_1.__generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0:\n                            cacheKey = createCacheKey(propName, params);\n                            cachedValue = this.getFromCache(cacheKey);\n                            if (cachedValue) {\n                                return [2 /*return*/, cachedValue];\n                            }\n                            return [4 /*yield*/, origFn.apply(this, params)];\n                        case 1:\n                            result = _a.sent();\n                            if (result != null || cacheFailures) {\n                                this.setCache(cacheKey, result, timeInSeconds);\n                            }\n                            return [2 /*return*/, result];\n                    }\n                });\n            });\n        };\n        return descriptor;\n    };\n}\nexports.Cached = Cached;\n/** @private */\nfunction CachedGetter(timeInSeconds) {\n    if (timeInSeconds === void 0) { timeInSeconds = Infinity; }\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    return function (target, propName, descriptor) {\n        if (descriptor.get) {\n            var origFn_1 = descriptor.get;\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            descriptor.get = function () {\n                var params = [];\n                for (var _i = 0; _i < arguments.length; _i++) {\n                    params[_i] = arguments[_i];\n                }\n                var cacheKey = createCacheKey(propName, params);\n                var cachedValue = this.getFromCache(cacheKey);\n                if (cachedValue) {\n                    return cachedValue;\n                }\n                var result = origFn_1.apply(this, params);\n                this.setCache(cacheKey, result, timeInSeconds);\n                return result;\n            };\n        }\n        return descriptor;\n    };\n}\nexports.CachedGetter = CachedGetter;\n/** @private */\nfunction ClearsCache(cacheName, numberOfArguments) {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    return function (target, propName, descriptor) {\n        var origFn = descriptor.value;\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        descriptor.value = function () {\n            var params = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                params[_i] = arguments[_i];\n            }\n            return tslib_1.__awaiter(this, void 0, void 0, function () {\n                var result, args;\n                return tslib_1.__generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4 /*yield*/, origFn.apply(this, params)];\n                        case 1:\n                            result = _a.sent();\n                            args = numberOfArguments === undefined ? params.slice() : params.slice(0, numberOfArguments);\n                            this.removeFromCache(tslib_1.__spread([cacheName], args), true);\n                            return [2 /*return*/, result];\n                    }\n                });\n            });\n        };\n        return descriptor;\n    };\n}\nexports.ClearsCache = ClearsCache;\n//# sourceMappingURL=Cache.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar NonEnumerable_1 = require(\"../../../Toolkit/Decorators/NonEnumerable\");\n/**\n * The type of a stream.\n */\nvar HelixStreamType;\n(function (HelixStreamType) {\n    /**\n     * Returned by Twitch in case of an error.\n     */\n    HelixStreamType[\"None\"] = \"\";\n    /**\n     * A live stream.\n     */\n    HelixStreamType[\"Live\"] = \"live\";\n    /**\n     * A vodcast.\n     *\n     * Currently not supported by Twitch - but one can only hope and leave it in here.\n     */\n    HelixStreamType[\"Vodcast\"] = \"vodcast\";\n})(HelixStreamType = exports.HelixStreamType || (exports.HelixStreamType = {}));\n/**\n * A Twitch stream.\n */\nvar HelixStream = /** @class */ (function () {\n    /** @private */\n    function HelixStream(_data, client) {\n        this._data = _data;\n        this._client = client;\n    }\n    Object.defineProperty(HelixStream.prototype, \"id\", {\n        /**\n         * The stream ID.\n         */\n        get: function () {\n            return this._data.id;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(HelixStream.prototype, \"userId\", {\n        /**\n         * The user ID.\n         */\n        get: function () {\n            return this._data.user_id;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(HelixStream.prototype, \"userDisplayName\", {\n        /**\n         * The user's display name.\n         */\n        get: function () {\n            return this._data.user_name;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Retrieves information about the user broadcasting the stream.\n     */\n    HelixStream.prototype.getUser = function () {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            return tslib_1.__generator(this, function (_a) {\n                return [2 /*return*/, this._client.helix.users.getUserById(this._data.user_id)];\n            });\n        });\n    };\n    Object.defineProperty(HelixStream.prototype, \"gameId\", {\n        /**\n         * The game ID.\n         */\n        get: function () {\n            return this._data.game_id;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Retrieves information about the game that is being played on this stream.\n     */\n    HelixStream.prototype.getGame = function () {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            return tslib_1.__generator(this, function (_a) {\n                return [2 /*return*/, this._client.helix.games.getGameById(this._data.game_id)];\n            });\n        });\n    };\n    Object.defineProperty(HelixStream.prototype, \"type\", {\n        /**\n         * The type of the stream.\n         */\n        get: function () {\n            return this._data.type;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(HelixStream.prototype, \"title\", {\n        /**\n         * The title of the stream.\n         */\n        get: function () {\n            return this._data.title;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(HelixStream.prototype, \"viewers\", {\n        /**\n         * The number of viewers the stream currently has.\n         */\n        get: function () {\n            return this._data.viewer_count;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(HelixStream.prototype, \"startDate\", {\n        /**\n         * The time when the stream started.\n         */\n        get: function () {\n            return new Date(this._data.started_at);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(HelixStream.prototype, \"language\", {\n        /**\n         * The language of the stream.\n         */\n        get: function () {\n            return this._data.language;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(HelixStream.prototype, \"thumbnailUrl\", {\n        /**\n         * The URL of the thumbnail of the stream.\n         */\n        get: function () {\n            return this._data.thumbnail_url;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    tslib_1.__decorate([\n        NonEnumerable_1.NonEnumerable\n    ], HelixStream.prototype, \"_client\", void 0);\n    return HelixStream;\n}());\nexports.default = HelixStream;\n//# sourceMappingURL=HelixStream.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar BaseAPI_1 = require(\"../../BaseAPI\");\nvar HelixStream_1 = require(\"./HelixStream\");\nvar TwitchClient_1 = require(\"../../../TwitchClient\");\nvar HelixPaginatedRequest_1 = require(\"../HelixPaginatedRequest\");\nvar UserTools_1 = require(\"../../../Toolkit/UserTools\");\nvar HelixStreamMarkerWithVideo_1 = require(\"./HelixStreamMarkerWithVideo\");\nvar HelixStreamMarker_1 = require(\"./HelixStreamMarker\");\nvar StreamNotLiveError_1 = require(\"../../../Errors/StreamNotLiveError\");\nvar HTTPStatusCodeError_1 = require(\"../../../Errors/HTTPStatusCodeError\");\nvar ArrayTools_1 = require(\"../../../Toolkit/ArrayTools\");\n/**\n * The Helix API methods that deal with streams.\n *\n * Can be accessed using `client.helix.streams` on a {@TwitchClient} instance.\n *\n * ## Example\n * ```ts\n * const client = await TwitchClient.withCredentials(clientId, accessToken);\n * const stream = await client.helix.streams.getStreamByUserId('125328655');\n * ```\n */\nvar HelixStreamAPI = /** @class */ (function (_super) {\n    tslib_1.__extends(HelixStreamAPI, _super);\n    function HelixStreamAPI() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * Retrieves a list of streams.\n     *\n     * @expandParams\n     */\n    HelixStreamAPI.prototype.getStreams = function (filter) {\n        if (filter === void 0) { filter = {}; }\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            var result;\n            var _this = this;\n            return tslib_1.__generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this._client.callAPI({\n                            url: 'streams',\n                            type: TwitchClient_1.TwitchAPICallType.Helix,\n                            query: {\n                                after: filter.after,\n                                before: filter.before,\n                                first: filter.limit,\n                                community_id: filter.community,\n                                game_id: filter.game,\n                                language: filter.language,\n                                type: filter.type,\n                                user_id: filter.userId,\n                                user_login: filter.userName\n                            }\n                        })];\n                    case 1:\n                        result = _a.sent();\n                        return [2 /*return*/, {\n                                data: result.data.map(function (streamData) { return new HelixStream_1.default(streamData, _this._client); }),\n                                cursor: result.pagination && result.pagination.cursor\n                            }];\n                }\n            });\n        });\n    };\n    /**\n     * Creates a paginator for streams.\n     *\n     * @expandParams\n     */\n    HelixStreamAPI.prototype.getStreamsPaginated = function (filter) {\n        var _this = this;\n        if (filter === void 0) { filter = {}; }\n        return new HelixPaginatedRequest_1.default({\n            url: 'streams',\n            query: {\n                community_id: filter.community,\n                game_id: filter.game,\n                language: filter.language,\n                type: filter.type,\n                user_id: filter.userId,\n                user_login: filter.userName\n            }\n        }, this._client, function (data) { return new HelixStream_1.default(data, _this._client); });\n    };\n    /**\n     * Retrieves the current stream for the given user name.\n     *\n     * @param user The user name to retrieve the stream for.\n     */\n    HelixStreamAPI.prototype.getStreamByUserName = function (user) {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            var result;\n            return tslib_1.__generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this.getStreams({ userName: UserTools_1.extractUserName(user) })];\n                    case 1:\n                        result = _a.sent();\n                        return [2 /*return*/, result.data.length ? result.data[0] : null];\n                }\n            });\n        });\n    };\n    /**\n     * Retrieves the current stream for the given user ID.\n     *\n     * @param user The user ID to retrieve the stream for.\n     */\n    HelixStreamAPI.prototype.getStreamByUserId = function (user) {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            var result;\n            return tslib_1.__generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this.getStreams({ userId: UserTools_1.extractUserId(user) })];\n                    case 1:\n                        result = _a.sent();\n                        return [2 /*return*/, result.data.length ? result.data[0] : null];\n                }\n            });\n        });\n    };\n    /**\n     * Retrieves a list of all stream markers for an user.\n     *\n     * @param user The user to list the stream markers for.\n     */\n    HelixStreamAPI.prototype.getStreamMarkersForUser = function (user) {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            return tslib_1.__generator(this, function (_a) {\n                return [2 /*return*/, this._getStreamMarkers('user_id', UserTools_1.extractUserId(user))];\n            });\n        });\n    };\n    /**\n     * Creates a paginator for all stream markers for an user.\n     *\n     * @param user The user to list the stream markers for.\n     */\n    HelixStreamAPI.prototype.getStreamMarkersForUserPaginated = function (user) {\n        return this._getStreamMarkersPaginated('user_id', UserTools_1.extractUserId(user));\n    };\n    /**\n     * Retrieves a list of all stream markers for a video.\n     *\n     * @param videoId The video to list the stream markers for.\n     */\n    HelixStreamAPI.prototype.getStreamMarkersForVideo = function (videoId) {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            return tslib_1.__generator(this, function (_a) {\n                return [2 /*return*/, this._getStreamMarkers('video_id', videoId)];\n            });\n        });\n    };\n    /**\n     * Creates a paginator for all stream markers for a video.\n     *\n     * @param videoId The video to list the stream markers for.\n     */\n    HelixStreamAPI.prototype.getStreamMarkersForVideoPaginated = function (videoId) {\n        return this._getStreamMarkersPaginated('video_id', videoId);\n    };\n    /**\n     * Creates a new stream marker.\n     *\n     * Only works while your stream is live.\n     */\n    HelixStreamAPI.prototype.createStreamMarker = function () {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            var result, e_1;\n            return tslib_1.__generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        _a.trys.push([0, 2, , 3]);\n                        return [4 /*yield*/, this._client.callAPI({\n                                url: 'streams/markers',\n                                method: 'POST',\n                                type: TwitchClient_1.TwitchAPICallType.Helix,\n                                scope: 'user:edit:broadcast'\n                            })];\n                    case 1:\n                        result = _a.sent();\n                        return [2 /*return*/, new HelixStreamMarker_1.default(result.data[0], this._client)];\n                    case 2:\n                        e_1 = _a.sent();\n                        if ((e_1 instanceof HTTPStatusCodeError_1.default) && e_1.statusCode === 404) {\n                            throw new StreamNotLiveError_1.default();\n                        }\n                        throw e_1;\n                    case 3: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    HelixStreamAPI.prototype._getStreamMarkers = function (queryType, id) {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            var result;\n            var _a;\n            return tslib_1.__generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0: return [4 /*yield*/, this._client.callAPI({\n                            url: 'streams/markers',\n                            type: TwitchClient_1.TwitchAPICallType.Helix,\n                            query: (_a = {},\n                                _a[queryType] = id,\n                                _a),\n                            scope: 'user:read:broadcast'\n                        })];\n                    case 1:\n                        result = _b.sent();\n                        return [2 /*return*/, {\n                                data: ArrayTools_1.flatten(result.data.map(HelixStreamAPI._mapGetStreamMarkersResult.bind(this._client))),\n                                cursor: result.pagination && result.pagination.cursor\n                            }];\n                }\n            });\n        });\n    };\n    HelixStreamAPI.prototype._getStreamMarkersPaginated = function (queryType, id) {\n        var _a;\n        return new HelixPaginatedRequest_1.default({\n            url: 'streams/markers',\n            query: (_a = {},\n                _a[queryType] = id,\n                _a),\n            scope: 'user:read:broadcast'\n        }, this._client, HelixStreamAPI._mapGetStreamMarkersResult.bind(this._client));\n    };\n    HelixStreamAPI._mapGetStreamMarkersResult = function (data) {\n        var _this = this;\n        return data.videos.reduce(function (result, video) { return tslib_1.__spread(result, video.markers.map(function (marker) { return new HelixStreamMarkerWithVideo_1.default(marker, video.video_id, _this); })); }, []);\n    };\n    return HelixStreamAPI;\n}(BaseAPI_1.default));\nexports.default = HelixStreamAPI;\n//# sourceMappingURL=HelixStreamAPI.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar User_1 = require(\"./User\");\n/**\n * A user you have extended privileges for, i.e. the currently authenticated user.\n *\n * @inheritDoc\n */\nvar PrivilegedUser = /** @class */ (function (_super) {\n    tslib_1.__extends(PrivilegedUser, _super);\n    function PrivilegedUser() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Object.defineProperty(PrivilegedUser.prototype, \"email\", {\n        /**\n         * The user's email address.\n         */\n        get: function () {\n            return this._data.email;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PrivilegedUser.prototype, \"isEmailVerified\", {\n        /**\n         * Whether the user's email address is verified.\n         */\n        get: function () {\n            return this._data.email_verified;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PrivilegedUser.prototype, \"hasEmailNotifications\", {\n        /**\n         * Whether the user has email notifications enabled.\n         */\n        get: function () {\n            return this._data.notifications.email;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PrivilegedUser.prototype, \"hasPushNotifications\", {\n        /**\n         * Whether the user has push notifications enabled.\n         */\n        get: function () {\n            return this._data.notifications.push;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PrivilegedUser.prototype, \"isPartnered\", {\n        /**\n         * Whether the user is partnered.\n         */\n        get: function () {\n            return this._data.partnered;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PrivilegedUser.prototype, \"hasTwitter\", {\n        /**\n         * Whether the user has a Twitter account connected.\n         */\n        get: function () {\n            return this._data.twitter_connected;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Follows a channel.\n     *\n     * @param channel The channel to follow.\n     * @param notifications Whether the user will receive notifications.\n     */\n    PrivilegedUser.prototype.followChannel = function (channel, notifications) {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            return tslib_1.__generator(this, function (_a) {\n                return [2 /*return*/, this._client.kraken.users.followChannel(this, channel, notifications)];\n            });\n        });\n    };\n    /**\n     * Unfollows a channel.\n     *\n     * @param channel The channel to unfollow.\n     */\n    PrivilegedUser.prototype.unfollowChannel = function (channel) {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            return tslib_1.__generator(this, function (_a) {\n                return [2 /*return*/, this._client.kraken.users.unfollowChannel(this, channel)];\n            });\n        });\n    };\n    /**\n     * Blocks a user.\n     *\n     * @param userToBlock The user to block.\n     */\n    PrivilegedUser.prototype.blockUser = function (userToBlock) {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            return tslib_1.__generator(this, function (_a) {\n                return [2 /*return*/, this._client.kraken.users.blockUser(this, userToBlock)];\n            });\n        });\n    };\n    /**\n     * Unblocks a user.\n     *\n     * @param userToUnblock The user to unblock.\n     */\n    PrivilegedUser.prototype.unblockUser = function (userToUnblock) {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            return tslib_1.__generator(this, function (_a) {\n                return [2 /*return*/, this._client.kraken.users.unblockUser(this, userToUnblock)];\n            });\n        });\n    };\n    return PrivilegedUser;\n}(User_1.default));\nexports.default = PrivilegedUser;\n//# sourceMappingURL=PrivilegedUser.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar NonEnumerable_1 = require(\"../Toolkit/Decorators/NonEnumerable\");\nvar AccessToken_1 = require(\"../API/AccessToken\");\nvar TwitchClient_1 = require(\"../TwitchClient\");\n/**\n * An auth provider that always returns the same initially given credentials.\n *\n * You are advised to roll your own auth provider that can handle scope upgrades,\n * or to plan ahead and supply only access tokens that account for all scopes\n * you will ever need (not recommended).\n */\nvar StaticAuthProvider = /** @class */ (function () {\n    /**\n     * Creates a new auth provider with static credentials.\n     *\n     * You don't usually have to create this manually. You should use `TwitchClient.withCredentials` instead.\n     *\n     * @param clientId The client ID.\n     * @param accessToken The access token to provide.\n     *\n     * You need to obtain one using one of the [Twitch OAuth flows](https://dev.twitch.tv/docs/authentication/getting-tokens-oauth/).\n     * @param scopes The scopes this token has.\n     */\n    function StaticAuthProvider(clientId, accessToken, scopes) {\n        this._clientId = clientId || '';\n        if (accessToken) {\n            this._accessToken = new AccessToken_1.default({ access_token: accessToken, scope: scopes ? scopes.join(' ') : '', refresh_token: '' });\n            this._scopes = scopes;\n        }\n    }\n    /**\n     * Retrieves an access token.\n     *\n     * If the current access token does not have the requested scopes, this method throws.\n     * This makes supplying an access token with the correct scopes from the beginning necessary.\n     *\n     * @param scopes The requested scopes.\n     */\n    StaticAuthProvider.prototype.getAccessToken = function (scopes) {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            var tokenInfo;\n            var _this = this;\n            return tslib_1.__generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        if (!(scopes && scopes.length > 0)) return [3 /*break*/, 3];\n                        if (!!this._scopes) return [3 /*break*/, 2];\n                        if (!this._accessToken) {\n                            throw new Error('Auth provider has not been initialized with a token yet and is requesting scopes');\n                        }\n                        return [4 /*yield*/, TwitchClient_1.default.getTokenInfo(this._clientId, this._accessToken.accessToken)];\n                    case 1:\n                        tokenInfo = _a.sent();\n                        if (!tokenInfo.valid) {\n                            throw new Error('Auth provider has been initialized with an invalid token');\n                        }\n                        this._scopes = tokenInfo.scopes;\n                        _a.label = 2;\n                    case 2:\n                        if (typeof scopes === 'string') {\n                            scopes = scopes.split(' ');\n                        }\n                        if (scopes.some(function (scope) { return !_this._scopes.includes(scope); })) {\n                            throw new Error(\"This token does not have the requested scopes (\" + scopes.join(', ') + \") and can not be upgraded\");\n                        }\n                        _a.label = 3;\n                    case 3: return [2 /*return*/, this._accessToken || null];\n                }\n            });\n        });\n    };\n    /** @private */\n    StaticAuthProvider.prototype.setAccessToken = function (token) {\n        this._accessToken = token;\n    };\n    Object.defineProperty(StaticAuthProvider.prototype, \"clientId\", {\n        /**\n         * The client ID.\n         */\n        get: function () {\n            return this._clientId;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(StaticAuthProvider.prototype, \"currentScopes\", {\n        /**\n         * The scopes that are currently available using the access token.\n         */\n        get: function () {\n            return this._scopes || [];\n        },\n        enumerable: true,\n        configurable: true\n    });\n    tslib_1.__decorate([\n        NonEnumerable_1.NonEnumerable\n    ], StaticAuthProvider.prototype, \"_clientId\", void 0);\n    tslib_1.__decorate([\n        NonEnumerable_1.NonEnumerable\n    ], StaticAuthProvider.prototype, \"_accessToken\", void 0);\n    return StaticAuthProvider;\n}());\nexports.default = StaticAuthProvider;\n//# sourceMappingURL=StaticAuthProvider.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar NonEnumerable_1 = require(\"../../../Toolkit/Decorators/NonEnumerable\");\nvar HellFreezesOverError_1 = require(\"../../../Errors/HellFreezesOverError\");\nvar ObjectTools_1 = require(\"../../../Toolkit/ObjectTools\");\n/**\n * The type of background a cheermote is supposed to appear on.\n *\n * We will supply a fitting graphic that does not show any artifacts\n * on the given type of background.\n */\nvar CheermoteBackground;\n(function (CheermoteBackground) {\n    /**\n     * A dark background.\n     *\n     * Cheermotes might show artifacts on bright backgrounds.\n     */\n    CheermoteBackground[\"dark\"] = \"dark\";\n    /**\n     * A bright background.\n     *\n     * Cheermotes might show artifacts on dark backgrounds.\n     */\n    CheermoteBackground[\"light\"] = \"light\";\n})(CheermoteBackground = exports.CheermoteBackground || (exports.CheermoteBackground = {}));\n/**\n * The state of a cheermote, i.e. whether it's animated or not.\n */\nvar CheermoteState;\n(function (CheermoteState) {\n    /**\n     * The cheermote should be animated.\n     */\n    CheermoteState[\"animated\"] = \"animated\";\n    /**\n     * The cheermote should not be animated.\n     */\n    CheermoteState[\"static\"] = \"static\";\n})(CheermoteState = exports.CheermoteState || (exports.CheermoteState = {}));\n/**\n * The scale of the cheermote, which usually relates to the pixel density of the device in use.\n */\nvar CheermoteScale;\n(function (CheermoteScale) {\n    /**\n     * The cheermote should not be scaled.\n     */\n    CheermoteScale[\"x1\"] = \"1\";\n    /**\n     * The cheermote should be scaled 1.5x.\n     */\n    CheermoteScale[\"x1_5\"] = \"1.5\";\n    /**\n     * The cheermote should be scaled 2x.\n     */\n    CheermoteScale[\"x2\"] = \"2\";\n    /**\n     * The cheermote should be scaled 3x.\n     */\n    CheermoteScale[\"x3\"] = \"3\";\n    /**\n     * The cheermote should be scaled 4x.\n     */\n    CheermoteScale[\"x4\"] = \"4\";\n})(CheermoteScale = exports.CheermoteScale || (exports.CheermoteScale = {}));\n/**\n * A list of cheermotes you can use globally or in a specific channel, depending on how you fetched the list.\n */\nvar CheermoteList = /** @class */ (function () {\n    /** @private */\n    function CheermoteList(data, client) {\n        this._client = client;\n        this._data = ObjectTools_1.indexBy(data, function (action) { return action.prefix.toLowerCase(); });\n    }\n    /**\n     * Gets the URL and color needed to properly represent a cheer of the given amount of bits with the given prefix.\n     *\n     * @param name The name/prefix of the cheermote.\n     * @param bits The amount of bits cheered.\n     * @param format The format of the cheermote you want to request.\n     */\n    CheermoteList.prototype.getCheermoteDisplayInfo = function (name, bits, format) {\n        if (format === void 0) { format = {}; }\n        name = name.toLowerCase();\n        var cheermoteDefaults = this._client._config.cheermotes;\n        var fullOptions = tslib_1.__assign({ background: cheermoteDefaults.defaultBackground, state: cheermoteDefaults.defaultState, scale: cheermoteDefaults.defaultScale }, format);\n        var tiers = this._data[name].tiers;\n        var correctTier = tiers.sort(function (a, b) { return b.min_bits - a.min_bits; }).find(function (tier) { return tier.min_bits <= bits; });\n        if (!correctTier) {\n            throw new HellFreezesOverError_1.default(\"Cheermote \\\"\" + name + \"\\\" does not have an applicable tier for \" + bits + \" bits\");\n        }\n        return {\n            url: correctTier.images[fullOptions.background][fullOptions.state][fullOptions.scale],\n            color: correctTier.color\n        };\n    };\n    /**\n     * Gets all possible cheermote names.\n     */\n    CheermoteList.prototype.getPossibleNames = function () {\n        return Object.keys(this._data);\n    };\n    /**\n     * Parses all the cheermotes out of a message.\n     *\n     * @param message The message.\n     */\n    CheermoteList.prototype.parseMessage = function (message) {\n        var result = [];\n        var names = this.getPossibleNames();\n        // TODO fix this regex so it works in firefox, which does not support lookbehind\n        var re = new RegExp('(?<=^|\\\\s)([a-z]+)(\\\\d+)(?=\\\\s|$)', 'gi');\n        var match;\n        // eslint-disable-next-line no-cond-assign\n        while (match = re.exec(message)) {\n            var name_1 = match[1].toLowerCase();\n            if (names.includes(name_1)) {\n                var amount = Number(match[2]);\n                result.push({\n                    name: name_1,\n                    amount: amount,\n                    position: match.index,\n                    length: match[0].length,\n                    displayInfo: this.getCheermoteDisplayInfo(name_1, amount)\n                });\n            }\n        }\n        return result;\n    };\n    /**\n     * Transforms all the cheermotes in a message and returns an array of all the message parts.\n     *\n     * @param message The message.\n     * @param transformer A function that transforms a message part into an arbitrary structure.\n     */\n    CheermoteList.prototype.transformCheerMessage = function (message, transformer) {\n        var e_1, _a;\n        var result = [];\n        var currentPosition = 0;\n        try {\n            for (var _b = tslib_1.__values(this.parseMessage(message)), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var foundCheermote = _c.value;\n                if (currentPosition < foundCheermote.position) {\n                    result.push(message.substring(currentPosition, foundCheermote.position));\n                }\n                result.push(transformer(foundCheermote));\n                currentPosition = foundCheermote.position + foundCheermote.length;\n            }\n        }\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n            }\n            finally { if (e_1) throw e_1.error; }\n        }\n        if (currentPosition < message.length) {\n            result.push(message.substr(currentPosition));\n        }\n        return result;\n    };\n    tslib_1.__decorate([\n        NonEnumerable_1.NonEnumerable\n    ], CheermoteList.prototype, \"_client\", void 0);\n    return CheermoteList;\n}());\nexports.default = CheermoteList;\n//# sourceMappingURL=CheermoteList.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar CustomError_1 = require(\"./CustomError\");\n/**\n * Thrown whenever you try using invalid values in the client configuration.\n */\nvar ConfigError = /** @class */ (function (_super) {\n    tslib_1.__extends(ConfigError, _super);\n    function ConfigError() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    return ConfigError;\n}(CustomError_1.default));\nexports.default = ConfigError;\n//# sourceMappingURL=ConfigError.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\n/** @private */\nvar CustomError = /** @class */ (function (_super) {\n    tslib_1.__extends(CustomError, _super);\n    function CustomError() {\n        var params = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            params[_i] = arguments[_i];\n        }\n        var _this = _super.apply(this, tslib_1.__spread(params)) || this;\n        if (Error.captureStackTrace) {\n            Error.captureStackTrace(_this, _this.constructor);\n        }\n        return _this;\n    }\n    Object.defineProperty(CustomError.prototype, \"name\", {\n        get: function () {\n            return this.constructor.name;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return CustomError;\n}(Error));\nexports.default = CustomError;\n//# sourceMappingURL=CustomError.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar Cache_1 = require(\"../../../Toolkit/Decorators/Cache\");\n/**\n * A list of emotes, grouped into emote sets, that a user can use.\n */\nvar EmoteSetList = /** @class */ (function () {\n    /** @private */\n    function EmoteSetList(_data) {\n        this._data = _data;\n    }\n    /**\n     * Finds the emote ID for the given emote code.\n     *\n     * @param emoteCode The emote code to check for.\n     */\n    EmoteSetList.prototype.findEmoteId = function (emoteCode) {\n        var e_1, _a, e_2, _b;\n        try {\n            for (var _c = tslib_1.__values(Object.values(this._data)), _d = _c.next(); !_d.done; _d = _c.next()) {\n                var emoteSet = _d.value;\n                try {\n                    for (var emoteSet_1 = (e_2 = void 0, tslib_1.__values(emoteSet)), emoteSet_1_1 = emoteSet_1.next(); !emoteSet_1_1.done; emoteSet_1_1 = emoteSet_1.next()) {\n                        var emote = emoteSet_1_1.value;\n                        if ((new RegExp(emote.code)).test(emoteCode)) {\n                            return emote.id;\n                        }\n                    }\n                }\n                catch (e_2_1) { e_2 = { error: e_2_1 }; }\n                finally {\n                    try {\n                        if (emoteSet_1_1 && !emoteSet_1_1.done && (_b = emoteSet_1.return)) _b.call(emoteSet_1);\n                    }\n                    finally { if (e_2) throw e_2.error; }\n                }\n            }\n        }\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n        finally {\n            try {\n                if (_d && !_d.done && (_a = _c.return)) _a.call(_c);\n            }\n            finally { if (e_1) throw e_1.error; }\n        }\n        return undefined;\n    };\n    tslib_1.__decorate([\n        Cache_1.Cached(Infinity, true)\n    ], EmoteSetList.prototype, \"findEmoteId\", null);\n    EmoteSetList = tslib_1.__decorate([\n        Cache_1.Cacheable\n    ], EmoteSetList);\n    return EmoteSetList;\n}());\nexports.default = EmoteSetList;\n//# sourceMappingURL=EmoteSetList.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar NonEnumerable_1 = require(\"../../../Toolkit/Decorators/NonEnumerable\");\nvar HellFreezesOverError_1 = require(\"../../../Errors/HellFreezesOverError\");\nvar Cache_1 = require(\"../../../Toolkit/Decorators/Cache\");\n/**\n * A video on Twitch.\n */\nvar HelixVideo = /** @class */ (function () {\n    /** @private */\n    function HelixVideo(_data, client) {\n        this._data = _data;\n        this._client = client;\n    }\n    Object.defineProperty(HelixVideo.prototype, \"id\", {\n        /**\n         * The ID of the video.\n         */\n        get: function () {\n            return this._data.id;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(HelixVideo.prototype, \"userId\", {\n        /**\n         * The ID of the user who created the video.\n         */\n        get: function () {\n            return this._data.user_id;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(HelixVideo.prototype, \"userDisplayName\", {\n        /**\n         * The display name of the user who created the video.\n         */\n        get: function () {\n            return this._data.user_id;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Retrieves information about the user who created the video.\n     */\n    HelixVideo.prototype.getUser = function () {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            return tslib_1.__generator(this, function (_a) {\n                return [2 /*return*/, this._client.helix.users.getUserById(this._data.user_id)];\n            });\n        });\n    };\n    Object.defineProperty(HelixVideo.prototype, \"title\", {\n        /**\n         * The title of the video.\n         */\n        get: function () {\n            return this._data.title;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(HelixVideo.prototype, \"description\", {\n        /**\n         * The description of the video.\n         */\n        get: function () {\n            return this._data.description;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(HelixVideo.prototype, \"creationDate\", {\n        /**\n         * The date when the video was created.\n         */\n        get: function () {\n            return new Date(this._data.created_at);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(HelixVideo.prototype, \"publishDate\", {\n        /**\n         * The date when the video was published.\n         */\n        get: function () {\n            return new Date(this._data.published_at);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(HelixVideo.prototype, \"url\", {\n        /**\n         * The URL of the video.\n         */\n        get: function () {\n            return this._data.url;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(HelixVideo.prototype, \"thumbnailUrl\", {\n        /**\n         * The URL of the thumbnail of the video.\n         */\n        get: function () {\n            return this._data.thumbnail_url;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(HelixVideo.prototype, \"isPublic\", {\n        /**\n         * Whether the video is public or not.\n         */\n        get: function () {\n            return this._data.viewable === 'public';\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(HelixVideo.prototype, \"views\", {\n        /**\n         * The number of views of the video.\n         */\n        get: function () {\n            return this._data.view_count;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(HelixVideo.prototype, \"language\", {\n        /**\n         * The language of the video.\n         */\n        get: function () {\n            return this._data.language;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(HelixVideo.prototype, \"type\", {\n        /**\n         * The type of the video.\n         */\n        get: function () {\n            return this._data.type;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(HelixVideo.prototype, \"duration\", {\n        /**\n         * The duration of the video, as formatted by Twitch.\n         */\n        get: function () {\n            return this._data.duration;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(HelixVideo.prototype, \"durationInSeconds\", {\n        /**\n         * The duration of the video, in seconds.\n         */\n        get: function () {\n            var parts = this._data.duration.match(/\\d+[hms]/g);\n            if (!parts) {\n                throw new HellFreezesOverError_1.default(\"Could not parse duration string: \" + this._data.duration);\n            }\n            return parts.map(function (part) {\n                var partialMatch = part.match(/(\\d+)([hms])/);\n                if (!partialMatch) {\n                    throw new HellFreezesOverError_1.default(\"Could not parse partial duration string: \" + part);\n                }\n                var _a = tslib_1.__read(partialMatch, 3), num = _a[1], unit = _a[2];\n                return parseInt(num, 10) * { h: 3600, m: 60, s: 1 }[unit];\n            }).reduce(function (a, b) { return a + b; });\n        },\n        enumerable: true,\n        configurable: true\n    });\n    tslib_1.__decorate([\n        NonEnumerable_1.NonEnumerable\n    ], HelixVideo.prototype, \"_client\", void 0);\n    tslib_1.__decorate([\n        Cache_1.CachedGetter()\n    ], HelixVideo.prototype, \"durationInSeconds\", null);\n    HelixVideo = tslib_1.__decorate([\n        Cache_1.Cacheable\n    ], HelixVideo);\n    return HelixVideo;\n}());\nexports.default = HelixVideo;\n//# sourceMappingURL=HelixVideo.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\n/** @private */\nfunction mapObject(obj, fn) {\n    // eslint-disable-next-line @typescript-eslint/no-object-literal-type-assertion\n    var mapped = Object.entries(obj).map(function (_a) {\n        var _b;\n        var _c = tslib_1.__read(_a, 2), key = _c[0], value = _c[1];\n        return (_b = {}, _b[key] = fn(value, key), _b);\n    });\n    return Object.assign.apply(Object, tslib_1.__spread([{}], mapped));\n}\nexports.mapObject = mapObject;\n/** @private */\nfunction objectFromArray(arr, fn) {\n    return Object.assign.apply(Object, tslib_1.__spread([{}], arr.map(fn)));\n}\nexports.objectFromArray = objectFromArray;\n/** @private */\nfunction indexBy(arr, keyFn) {\n    if (typeof keyFn !== 'function') {\n        var key_1 = keyFn;\n        keyFn = (function (value) { return value[key_1].toString(); });\n    }\n    return objectFromArray(arr, function (val) {\n        var _a;\n        return (_a = {}, _a[keyFn(val)] = val, _a);\n    });\n}\nexports.indexBy = indexBy;\n/** @private */\nfunction forEachObjectEntry(obj, fn) {\n    Object.entries(obj).forEach(function (_a) {\n        var _b = tslib_1.__read(_a, 2), key = _b[0], value = _b[1];\n        return fn(value, key);\n    });\n}\nexports.forEachObjectEntry = forEachObjectEntry;\n/** @private */\nfunction entriesToObject(obj) {\n    return objectFromArray(obj, function (_a) {\n        var _b;\n        var _c = tslib_1.__read(_a, 2), key = _c[0], val = _c[1];\n        return (_b = {}, _b[key] = val, _b);\n    });\n}\nexports.entriesToObject = entriesToObject;\n//# sourceMappingURL=ObjectTools.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar CustomError_1 = require(\"./CustomError\");\n/**\n * These are the kind of errors that should never happen.\n *\n * If you see one thrown, please file a bug in the GitHub issue tracker.\n */\nvar HellFreezesOverError = /** @class */ (function (_super) {\n    tslib_1.__extends(HellFreezesOverError, _super);\n    function HellFreezesOverError(message) {\n        return _super.call(this, message + \" - this should never happen, please file a bug in the GitHub issue tracker\") || this;\n    }\n    return HellFreezesOverError;\n}(CustomError_1.default));\nexports.default = HellFreezesOverError;\n//# sourceMappingURL=HellFreezesOverError.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar NonEnumerable_1 = require(\"../../Toolkit/Decorators/NonEnumerable\");\nvar ChatBadgeSet_1 = require(\"./ChatBadgeSet\");\n/**\n * A list of badge sets.\n */\nvar ChatBadgeList = /** @class */ (function () {\n    /** @private */\n    function ChatBadgeList(_data, client) {\n        this._data = _data;\n        this._client = client;\n    }\n    Object.defineProperty(ChatBadgeList.prototype, \"badgeSetNames\", {\n        /**\n         * Names of all badge sets in the list.\n         */\n        get: function () {\n            return Object.keys(this._data);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Gets a specific badge set by name.\n     *\n     * @param name The name of the badge set.\n     */\n    ChatBadgeList.prototype.getBadgeSet = function (name) {\n        return new ChatBadgeSet_1.default(this._data[name], this._client);\n    };\n    /** @private */\n    ChatBadgeList.prototype._merge = function (additionalData) {\n        if (additionalData instanceof ChatBadgeList) {\n            additionalData = additionalData._data;\n        }\n        return new ChatBadgeList(tslib_1.__assign({}, this._data, additionalData), this._client);\n    };\n    tslib_1.__decorate([\n        NonEnumerable_1.NonEnumerable\n    ], ChatBadgeList.prototype, \"_client\", void 0);\n    return ChatBadgeList;\n}());\nexports.default = ChatBadgeList;\n//# sourceMappingURL=ChatBadgeList.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar BaseAPI_1 = require(\"../../BaseAPI\");\nvar __1 = require(\"../../..\");\nvar HelixPaginatedRequest_1 = require(\"../HelixPaginatedRequest\");\nvar HelixSubscription_1 = require(\"./HelixSubscription\");\n/**\n * The Helix API methods that deal with subscriptions.\n *\n * Can be accessed using `client.helix.subscriptions` on a {@TwitchClient} instance.\n *\n * ## Example\n * ```ts\n * const client = await TwitchClient.withCredentials(clientId, accessToken);\n * const subscriptions = await client.helix.subscriptions.getSubscriptionsForUsers('61369223', '125328655');\n * ```\n */\nvar HelixSubscriptionAPI = /** @class */ (function (_super) {\n    tslib_1.__extends(HelixSubscriptionAPI, _super);\n    function HelixSubscriptionAPI() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * Retrieves a list of all subscriptions to a given broadcaster.\n     *\n     * @param broadcaster The broadcaster to list subscriptions to.\n     */\n    HelixSubscriptionAPI.prototype.getSubscriptions = function (broadcaster) {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            var result;\n            var _this = this;\n            return tslib_1.__generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this._client.callAPI({\n                            url: 'subscriptions',\n                            query: {\n                                broadcaster_id: __1.extractUserId(broadcaster)\n                            }\n                        })];\n                    case 1:\n                        result = _a.sent();\n                        return [2 /*return*/, {\n                                data: result.data.map(function (data) { return new HelixSubscription_1.default(data, _this._client); }),\n                                cursor: result.pagination && result.pagination.cursor\n                            }];\n                }\n            });\n        });\n    };\n    /**\n     * Creates a paginator for all subscriptions to a given broadcaster.\n     *\n     * @param broadcaster The broadcaster to list subscriptions to.\n     */\n    HelixSubscriptionAPI.prototype.getSubscriptionsPaginated = function (broadcaster) {\n        var _this = this;\n        return new HelixPaginatedRequest_1.default({\n            url: 'subscriptions',\n            query: {\n                broadcaster_id: __1.extractUserId(broadcaster)\n            }\n        }, this._client, function (data) { return new HelixSubscription_1.default(data, _this._client); });\n    };\n    /**\n     * Retrieves the subset of the given user list that is subscribed to the given broadcaster.\n     *\n     * @param broadcaster The broadcaster to find subscriptions to.\n     * @param users The users that should be checked for subscriptions.\n     */\n    HelixSubscriptionAPI.prototype.getSubscriptionsForUsers = function (broadcaster, users) {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            var result;\n            var _this = this;\n            return tslib_1.__generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this._client.callAPI({\n                            url: 'subscriptions',\n                            type: __1.TwitchAPICallType.Helix,\n                            query: {\n                                broadcaster_id: __1.extractUserId(broadcaster),\n                                user_id: users.map(__1.extractUserId)\n                            }\n                        })];\n                    case 1:\n                        result = _a.sent();\n                        return [2 /*return*/, result.data.map(function (data) { return new HelixSubscription_1.default(data, _this._client); })];\n                }\n            });\n        });\n    };\n    /**\n     * Retrieves the subscription data for a given user to a given broadcaster.\n     *\n     * @param broadcaster The broadcaster to check.\n     * @param user The user to check.\n     */\n    HelixSubscriptionAPI.prototype.getSubscriptionForUser = function (broadcaster, user) {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            var list;\n            return tslib_1.__generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this.getSubscriptionsForUsers(broadcaster, [user])];\n                    case 1:\n                        list = _a.sent();\n                        return [2 /*return*/, list.length ? list[0] : null];\n                }\n            });\n        });\n    };\n    return HelixSubscriptionAPI;\n}(BaseAPI_1.default));\nexports.default = HelixSubscriptionAPI;\n//# sourceMappingURL=HelixSubscriptionAPI.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar NonEnumerable_1 = require(\"../../../Toolkit/Decorators/NonEnumerable\");\n/**\n * A chat emote.\n */\nvar ChatEmote = /** @class */ (function () {\n    /** @private */\n    function ChatEmote(_data, client) {\n        this._data = _data;\n        this._client = client;\n    }\n    Object.defineProperty(ChatEmote.prototype, \"id\", {\n        /**\n         * The emote ID.\n         */\n        get: function () {\n            return this._data.id;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ChatEmote.prototype, \"code\", {\n        /**\n         * The emote code, i.e. how you write it in chat.\n         */\n        get: function () {\n            return this._data.code;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ChatEmote.prototype, \"setId\", {\n        /**\n         * The ID of the emote set.\n         */\n        get: function () {\n            return this._data.emoticon_set;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    tslib_1.__decorate([\n        NonEnumerable_1.NonEnumerable\n    ], ChatEmote.prototype, \"_client\", void 0);\n    return ChatEmote;\n}());\nexports.default = ChatEmote;\n//# sourceMappingURL=ChatEmote.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar CustomError_1 = require(\"./CustomError\");\n/**\n * Thrown whenever you try accessing a subscription-related resource\n * (for example {@ChannelAPI#getChannelSubscriptions})\n * and the given channel does not have a subscription program.\n */\nvar NoSubscriptionProgramError = /** @class */ (function (_super) {\n    tslib_1.__extends(NoSubscriptionProgramError, _super);\n    function NoSubscriptionProgramError(channelId) {\n        return _super.call(this, \"Channel \" + channelId + \" does not have a subscription program\") || this;\n    }\n    return NoSubscriptionProgramError;\n}(CustomError_1.default));\nexports.default = NoSubscriptionProgramError;\n//# sourceMappingURL=NoSubscriptionProgramError.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar BaseAPI_1 = require(\"../../BaseAPI\");\nvar UserTools_1 = require(\"../../../Toolkit/UserTools\");\nvar TwitchClient_1 = require(\"../../../TwitchClient\");\nvar HelixPaginatedRequestWithTotal_1 = require(\"../HelixPaginatedRequestWithTotal\");\nvar HelixWebHookSubscription_1 = require(\"./HelixWebHookSubscription\");\n/**\n * The API methods that deal with WebHooks.\n *\n * Can be accessed using `client.helix.webHooks` on a {@TwitchClient} instance.\n *\n * ## Example\n * ```ts\n * const client = await TwitchClient.withCredentials(clientId, accessToken);\n * const accepted = await client.helix.webHooks.subscribeHook('https://api.twitch.tv/helix/streams?user_id=125328655', 'https://example.com');\n * ```\n */\nvar HelixWebHooksAPI = /** @class */ (function (_super) {\n    tslib_1.__extends(HelixWebHooksAPI, _super);\n    function HelixWebHooksAPI() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * Retrieves the current WebHook subscriptions for the current client.\n     *\n     * Requires an app access token to work; does not work with user tokens.\n     */\n    HelixWebHooksAPI.prototype.getSubscriptions = function () {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            var _this = this;\n            return tslib_1.__generator(this, function (_a) {\n                return [2 /*return*/, new HelixPaginatedRequestWithTotal_1.default({\n                        url: 'webhooks/subscriptions'\n                    }, this._client, function (data) { return new HelixWebHookSubscription_1.default(data, _this._client); })];\n            });\n        });\n    };\n    /**\n     * Sends an arbitrary request to subscribe to or unsubscribe from an event.\n     *\n     * @expandParams\n     */\n    HelixWebHooksAPI.prototype.sendHubRequest = function (options) {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            var mode, callbackUrl, topicUrl, _a, validityInSeconds, secret, scope;\n            return tslib_1.__generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0:\n                        mode = options.mode, callbackUrl = options.callbackUrl, topicUrl = options.topicUrl, _a = options.validityInSeconds, validityInSeconds = _a === void 0 ? 3600 : _a, secret = options.secret, scope = options.scope;\n                        return [4 /*yield*/, this._client.callAPI({\n                                url: 'webhooks/hub',\n                                type: TwitchClient_1.TwitchAPICallType.Helix,\n                                method: 'POST',\n                                scope: scope,\n                                jsonBody: {\n                                    'hub.mode': mode,\n                                    'hub.topic': topicUrl,\n                                    'hub.callback': callbackUrl,\n                                    'hub.lease_seconds': validityInSeconds.toString(),\n                                    'hub.secret': secret\n                                }\n                            })];\n                    case 1:\n                        _b.sent();\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Subscribes to events representing a user following other users.\n     *\n     * @expandParams\n     *\n     * @param user The user for which to get notifications about the users they will follow.\n     * @param options\n     */\n    HelixWebHooksAPI.prototype.subscribeToUserFollowsFrom = function (user, options) {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            return tslib_1.__generator(this, function (_a) {\n                return [2 /*return*/, this._sendUserFollowsHubRequest('subscribe', 'from', user, options)];\n            });\n        });\n    };\n    /**\n     * Subscribes to events representing a user being followed by other users.\n     *\n     * @expandParams\n     *\n     * @param user The user for which to get notifications about the users they will be followed by.\n     * @param options\n     */\n    HelixWebHooksAPI.prototype.subscribeToUserFollowsTo = function (user, options) {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            return tslib_1.__generator(this, function (_a) {\n                return [2 /*return*/, this._sendUserFollowsHubRequest('subscribe', 'to', user, options)];\n            });\n        });\n    };\n    /**\n     * Unsubscribes from events representing a user following other users.\n     *\n     * @expandParams\n     *\n     * @param user The user for which to not get any more notifications about the users they will follow.\n     * @param options\n     */\n    HelixWebHooksAPI.prototype.unsubscribeFromUserFollowsFrom = function (user, options) {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            return tslib_1.__generator(this, function (_a) {\n                return [2 /*return*/, this._sendUserFollowsHubRequest('unsubscribe', 'from', user, options)];\n            });\n        });\n    };\n    /**\n     * Unsubscribes from events representing a user being followed by other users.\n     *\n     * @expandParams\n     *\n     * @param user The user for which to not get any more notifications about the users they will be followed by.\n     * @param options\n     */\n    HelixWebHooksAPI.prototype.unsubscribeFromUserFollowsTo = function (user, options) {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            return tslib_1.__generator(this, function (_a) {\n                return [2 /*return*/, this._sendUserFollowsHubRequest('unsubscribe', 'to', user, options)];\n            });\n        });\n    };\n    /**\n     * Subscribes to events representing a stream changing, e.g. going live, offline or changing its title.\n     *\n     * @expandParams\n     *\n     * @param user The user for which to get notifications about their streams changing.\n     * @param options\n     */\n    HelixWebHooksAPI.prototype.subscribeToStreamChanges = function (user, options) {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            return tslib_1.__generator(this, function (_a) {\n                return [2 /*return*/, this._sendStreamChangeHubRequest('subscribe', user, options)];\n            });\n        });\n    };\n    /**\n     * Unsubscribes from events representing a stream changing, e.g. going live, offline or changing its title.\n     *\n     * @expandParams\n     *\n     * @param user The user for which not to get any more notifications about their streams changing.\n     * @param options\n     */\n    HelixWebHooksAPI.prototype.unsubscribeFromStreamChanges = function (user, options) {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            return tslib_1.__generator(this, function (_a) {\n                return [2 /*return*/, this._sendStreamChangeHubRequest('unsubscribe', user, options)];\n            });\n        });\n    };\n    /**\n     * Subscribes to events representing a user changing a public setting or their email address.\n     *\n     * @expandParams\n     *\n     * @param user The user for which to get notifications about changing a setting.\n     * @param options\n     * @param withEmail Whether to subscribe to email address changes. This adds the necessary scope to read the email address to the request.\n     */\n    HelixWebHooksAPI.prototype.subscribeToUserChanges = function (user, options, withEmail) {\n        if (withEmail === void 0) { withEmail = false; }\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            return tslib_1.__generator(this, function (_a) {\n                return [2 /*return*/, this._sendUserChangeHubRequest('subscribe', user, options, withEmail)];\n            });\n        });\n    };\n    /**\n     * Unsubscribes from events representing a user changing a public setting or their email address.\n     *\n     * @expandParams\n     *\n     * @param user The user for which not to get any more notifications about changing a setting.\n     * @param options\n     */\n    HelixWebHooksAPI.prototype.unsubscribeFromUserChanges = function (user, options) {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            return tslib_1.__generator(this, function (_a) {\n                return [2 /*return*/, this._sendUserChangeHubRequest('unsubscribe', user, options)];\n            });\n        });\n    };\n    HelixWebHooksAPI.prototype._sendUserFollowsHubRequest = function (mode, direction, user, options) {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            var userId;\n            return tslib_1.__generator(this, function (_a) {\n                userId = UserTools_1.extractUserId(user);\n                return [2 /*return*/, this.sendHubRequest(tslib_1.__assign({ mode: mode, topicUrl: \"https://api.twitch.tv/helix/users/follows?first=1&\" + direction + \"_id=\" + userId }, options))];\n            });\n        });\n    };\n    HelixWebHooksAPI.prototype._sendStreamChangeHubRequest = function (mode, user, options) {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            var userId;\n            return tslib_1.__generator(this, function (_a) {\n                userId = UserTools_1.extractUserId(user);\n                return [2 /*return*/, this.sendHubRequest(tslib_1.__assign({ mode: mode, topicUrl: \"https://api.twitch.tv/helix/streams?user_id=\" + userId }, options))];\n            });\n        });\n    };\n    HelixWebHooksAPI.prototype._sendUserChangeHubRequest = function (mode, user, options, withEmail) {\n        if (withEmail === void 0) { withEmail = false; }\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            var userId;\n            return tslib_1.__generator(this, function (_a) {\n                userId = UserTools_1.extractUserId(user);\n                return [2 /*return*/, this.sendHubRequest(tslib_1.__assign({ mode: mode, topicUrl: \"https://api.twitch.tv/helix/users?id=\" + userId, scope: withEmail ? 'user:read:email' : undefined }, options))];\n            });\n        });\n    };\n    return HelixWebHooksAPI;\n}(BaseAPI_1.default));\nexports.default = HelixWebHooksAPI;\n//# sourceMappingURL=HelixWebHooksAPI.js.map","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar BaseAPI_1 = require(\"../../BaseAPI\");\nvar HelixUser_1 = require(\"./HelixUser\");\nvar HelixPrivilegedUser_1 = require(\"./HelixPrivilegedUser\");\nvar UserTools_1 = require(\"../../../Toolkit/UserTools\");\nvar HelixFollow_1 = require(\"./HelixFollow\");\nvar TwitchClient_1 = require(\"../../../TwitchClient\");\nvar HelixPaginatedRequestWithTotal_1 = require(\"../HelixPaginatedRequestWithTotal\");\nvar HellFreezesOverError_1 = require(\"../../../Errors/HellFreezesOverError\");\n/** @private */\nvar UserLookupType;\n(function (UserLookupType) {\n    UserLookupType[\"Id\"] = \"id\";\n    UserLookupType[\"Login\"] = \"login\";\n})(UserLookupType = exports.UserLookupType || (exports.UserLookupType = {}));\n/**\n * The Helix API methods that deal with users.\n *\n * Can be accessed using `client.helix.users` on a {@TwitchClient} instance.\n *\n * ## Example\n * ```ts\n * const client = await TwitchClient.withCredentials(clientId, accessToken);\n * const user = await client.helix.users.getUserById('125328655');\n * ```\n */\nvar HelixUserAPI = /** @class */ (function (_super) {\n    tslib_1.__extends(HelixUserAPI, _super);\n    function HelixUserAPI() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * Retrieves the user data for the given list of user IDs.\n     *\n     * @param userIds The user IDs you want to look up.\n     */\n    HelixUserAPI.prototype.getUsersByIds = function (userIds) {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            return tslib_1.__generator(this, function (_a) {\n                return [2 /*return*/, this._getUsers(UserLookupType.Id, userIds.map(UserTools_1.extractUserId))];\n            });\n        });\n    };\n    /**\n     * Retrieves the user data for the given list of user names.\n     *\n     * @param userNames The user names you want to look up.\n     */\n    HelixUserAPI.prototype.getUsersByNames = function (userNames) {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            return tslib_1.__generator(this, function (_a) {\n                return [2 /*return*/, this._getUsers(UserLookupType.Login, userNames.map(UserTools_1.extractUserName))];\n            });\n        });\n    };\n    /**\n     * Retrieves the user data for the given user ID.\n     *\n     * @param userId The user ID you want to look up.\n     */\n    HelixUserAPI.prototype.getUserById = function (userId) {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            var users;\n            return tslib_1.__generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this._getUsers(UserLookupType.Id, UserTools_1.extractUserId(userId))];\n                    case 1:\n                        users = _a.sent();\n                        return [2 /*return*/, users.length ? users[0] : null];\n                }\n            });\n        });\n    };\n    /**\n     * Retrieves the user data for the given user name.\n     *\n     * @param userName The user name you want to look up.\n     */\n    HelixUserAPI.prototype.getUserByName = function (userName) {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            var users;\n            return tslib_1.__generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this._getUsers(UserLookupType.Login, UserTools_1.extractUserName(userName))];\n                    case 1:\n                        users = _a.sent();\n                        return [2 /*return*/, users.length ? users[0] : null];\n                }\n            });\n        });\n    };\n    /**\n     * Retrieves the user data of the currently authenticated user.\n     *\n     * @param withEmail Whether you need the user's email address.\n     */\n    HelixUserAPI.prototype.getMe = function (withEmail) {\n        if (withEmail === void 0) { withEmail = false; }\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            var result;\n            return tslib_1.__generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this._client.callAPI({\n                            type: TwitchClient_1.TwitchAPICallType.Helix,\n                            url: 'users',\n                            scope: withEmail ? 'user:read:email' : ''\n                        })];\n                    case 1:\n                        result = _a.sent();\n                        if (!result.data || !result.data.length) {\n                            throw new HellFreezesOverError_1.default('Could not get authenticated user');\n                        }\n                        return [2 /*return*/, new HelixPrivilegedUser_1.default(result.data[0], this._client)];\n                }\n            });\n        });\n    };\n    /**\n     * Updates the currently authenticated user's data.\n     *\n     * @param data The data to update.\n     */\n    HelixUserAPI.prototype.updateUser = function (data) {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            var result;\n            return tslib_1.__generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this._client.callAPI({\n                            type: TwitchClient_1.TwitchAPICallType.Helix,\n                            url: 'users',\n                            method: 'PUT',\n                            scope: 'user:edit',\n                            query: {\n                                description: data.description\n                            }\n                        })];\n                    case 1:\n                        result = _a.sent();\n                        return [2 /*return*/, new HelixPrivilegedUser_1.default(result.data[0], this._client)];\n                }\n            });\n        });\n    };\n    /**\n     * Retrieves a list of follow relations.\n     *\n     * @param filter Several filtering and pagination parameters. See the {@HelixFollowFilter} documentation.\n     */\n    HelixUserAPI.prototype.getFollows = function (filter) {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            var query, result;\n            var _this = this;\n            return tslib_1.__generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        query = HelixUserAPI._makeFollowsQuery(filter);\n                        return [4 /*yield*/, this._client.callAPI({\n                                url: 'users/follows',\n                                type: TwitchClient_1.TwitchAPICallType.Helix,\n                                query: query\n                            })];\n                    case 1:\n                        result = _a.sent();\n                        return [2 /*return*/, {\n                                data: result.data.map(function (data) { return new HelixFollow_1.default(data, _this._client); }),\n                                cursor: result.pagination.cursor,\n                                total: result.total\n                            }];\n                }\n            });\n        });\n    };\n    /**\n     * Creates a paginator for follow relations.\n     *\n     * @param filter Several filtering and pagination parameters. See the {@HelixFollowFilter} documentation.\n     */\n    HelixUserAPI.prototype.getFollowsPaginated = function (filter) {\n        var _this = this;\n        var query = HelixUserAPI._makeFollowsQuery(filter);\n        return new HelixPaginatedRequestWithTotal_1.default({\n            url: 'users/follows',\n            query: query\n        }, this._client, function (data) { return new HelixFollow_1.default(data, _this._client); });\n    };\n    HelixUserAPI._makeFollowsQuery = function (filter) {\n        var query = {};\n        var hasUserIdParam = false;\n        if (filter.user) {\n            query.from_id = UserTools_1.extractUserId(filter.user);\n            hasUserIdParam = true;\n        }\n        if (filter.followedUser) {\n            query.to_id = UserTools_1.extractUserId(filter.followedUser);\n            hasUserIdParam = true;\n        }\n        if (!hasUserIdParam) {\n            throw new TypeError('At least one of user and followedUser have to be set');\n        }\n        return query;\n    };\n    HelixUserAPI.prototype._getUsers = function (lookupType, param) {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            var query, result;\n            var _a;\n            var _this = this;\n            return tslib_1.__generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0:\n                        query = (_a = {}, _a[lookupType] = param, _a);\n                        return [4 /*yield*/, this._client.callAPI({\n                                type: TwitchClient_1.TwitchAPICallType.Helix,\n                                url: 'users',\n                                query: query\n                            })];\n                    case 1:\n                        result = _b.sent();\n                        return [2 /*return*/, result.data.map(function (userData) { return new HelixUser_1.default(userData, _this._client); })];\n                }\n            });\n        });\n    };\n    return HelixUserAPI;\n}(BaseAPI_1.default));\nexports.default = HelixUserAPI;\n//# sourceMappingURL=HelixUserAPI.js.map","'use strict';\n\nvar utils = require('./utils');\n\nvar has = Object.prototype.hasOwnProperty;\n\nvar defaults = {\n    allowDots: false,\n    allowPrototypes: false,\n    arrayLimit: 20,\n    charset: 'utf-8',\n    charsetSentinel: false,\n    comma: false,\n    decoder: utils.decode,\n    delimiter: '&',\n    depth: 5,\n    ignoreQueryPrefix: false,\n    interpretNumericEntities: false,\n    parameterLimit: 1000,\n    parseArrays: true,\n    plainObjects: false,\n    strictNullHandling: false\n};\n\nvar interpretNumericEntities = function (str) {\n    return str.replace(/&#(\\d+);/g, function ($0, numberStr) {\n        return String.fromCharCode(parseInt(numberStr, 10));\n    });\n};\n\n// This is what browsers will submit when the ✓ character occurs in an\n// application/x-www-form-urlencoded body and the encoding of the page containing\n// the form is iso-8859-1, or when the submitted form has an accept-charset\n// attribute of iso-8859-1. Presumably also with other charsets that do not contain\n// the ✓ character, such as us-ascii.\nvar isoSentinel = 'utf8=%26%2310003%3B'; // encodeURIComponent('&#10003;')\n\n// These are the percent-encoded utf-8 octets representing a checkmark, indicating that the request actually is utf-8 encoded.\nvar charsetSentinel = 'utf8=%E2%9C%93'; // encodeURIComponent('✓')\n\nvar parseValues = function parseQueryStringValues(str, options) {\n    var obj = {};\n    var cleanStr = options.ignoreQueryPrefix ? str.replace(/^\\?/, '') : str;\n    var limit = options.parameterLimit === Infinity ? undefined : options.parameterLimit;\n    var parts = cleanStr.split(options.delimiter, limit);\n    var skipIndex = -1; // Keep track of where the utf8 sentinel was found\n    var i;\n\n    var charset = options.charset;\n    if (options.charsetSentinel) {\n        for (i = 0; i < parts.length; ++i) {\n            if (parts[i].indexOf('utf8=') === 0) {\n                if (parts[i] === charsetSentinel) {\n                    charset = 'utf-8';\n                } else if (parts[i] === isoSentinel) {\n                    charset = 'iso-8859-1';\n                }\n                skipIndex = i;\n                i = parts.length; // The eslint settings do not allow break;\n            }\n        }\n    }\n\n    for (i = 0; i < parts.length; ++i) {\n        if (i === skipIndex) {\n            continue;\n        }\n        var part = parts[i];\n\n        var bracketEqualsPos = part.indexOf(']=');\n        var pos = bracketEqualsPos === -1 ? part.indexOf('=') : bracketEqualsPos + 1;\n\n        var key, val;\n        if (pos === -1) {\n            key = options.decoder(part, defaults.decoder, charset);\n            val = options.strictNullHandling ? null : '';\n        } else {\n            key = options.decoder(part.slice(0, pos), defaults.decoder, charset);\n            val = options.decoder(part.slice(pos + 1), defaults.decoder, charset);\n        }\n\n        if (val && options.interpretNumericEntities && charset === 'iso-8859-1') {\n            val = interpretNumericEntities(val);\n        }\n\n        if (val && options.comma && val.indexOf(',') > -1) {\n            val = val.split(',');\n        }\n\n        if (has.call(obj, key)) {\n            obj[key] = utils.combine(obj[key], val);\n        } else {\n            obj[key] = val;\n        }\n    }\n\n    return obj;\n};\n\nvar parseObject = function (chain, val, options) {\n    var leaf = val;\n\n    for (var i = chain.length - 1; i >= 0; --i) {\n        var obj;\n        var root = chain[i];\n\n        if (root === '[]' && options.parseArrays) {\n            obj = [].concat(leaf);\n        } else {\n            obj = options.plainObjects ? Object.create(null) : {};\n            var cleanRoot = root.charAt(0) === '[' && root.charAt(root.length - 1) === ']' ? root.slice(1, -1) : root;\n            var index = parseInt(cleanRoot, 10);\n            if (!options.parseArrays && cleanRoot === '') {\n                obj = { 0: leaf };\n            } else if (\n                !isNaN(index)\n                && root !== cleanRoot\n                && String(index) === cleanRoot\n                && index >= 0\n                && (options.parseArrays && index <= options.arrayLimit)\n            ) {\n                obj = [];\n                obj[index] = leaf;\n            } else {\n                obj[cleanRoot] = leaf;\n            }\n        }\n\n        leaf = obj;\n    }\n\n    return leaf;\n};\n\nvar parseKeys = function parseQueryStringKeys(givenKey, val, options) {\n    if (!givenKey) {\n        return;\n    }\n\n    // Transform dot notation to bracket notation\n    var key = options.allowDots ? givenKey.replace(/\\.([^.[]+)/g, '[$1]') : givenKey;\n\n    // The regex chunks\n\n    var brackets = /(\\[[^[\\]]*])/;\n    var child = /(\\[[^[\\]]*])/g;\n\n    // Get the parent\n\n    var segment = brackets.exec(key);\n    var parent = segment ? key.slice(0, segment.index) : key;\n\n    // Stash the parent if it exists\n\n    var keys = [];\n    if (parent) {\n        // If we aren't using plain objects, optionally prefix keys that would overwrite object prototype properties\n        if (!options.plainObjects && has.call(Object.prototype, parent)) {\n            if (!options.allowPrototypes) {\n                return;\n            }\n        }\n\n        keys.push(parent);\n    }\n\n    // Loop through children appending to the array until we hit depth\n\n    var i = 0;\n    while ((segment = child.exec(key)) !== null && i < options.depth) {\n        i += 1;\n        if (!options.plainObjects && has.call(Object.prototype, segment[1].slice(1, -1))) {\n            if (!options.allowPrototypes) {\n                return;\n            }\n        }\n        keys.push(segment[1]);\n    }\n\n    // If there's a remainder, just add whatever is left\n\n    if (segment) {\n        keys.push('[' + key.slice(segment.index) + ']');\n    }\n\n    return parseObject(keys, val, options);\n};\n\nvar normalizeParseOptions = function normalizeParseOptions(opts) {\n    if (!opts) {\n        return defaults;\n    }\n\n    if (opts.decoder !== null && opts.decoder !== undefined && typeof opts.decoder !== 'function') {\n        throw new TypeError('Decoder has to be a function.');\n    }\n\n    if (typeof opts.charset !== 'undefined' && opts.charset !== 'utf-8' && opts.charset !== 'iso-8859-1') {\n        throw new Error('The charset option must be either utf-8, iso-8859-1, or undefined');\n    }\n    var charset = typeof opts.charset === 'undefined' ? defaults.charset : opts.charset;\n\n    return {\n        allowDots: typeof opts.allowDots === 'undefined' ? defaults.allowDots : !!opts.allowDots,\n        allowPrototypes: typeof opts.allowPrototypes === 'boolean' ? opts.allowPrototypes : defaults.allowPrototypes,\n        arrayLimit: typeof opts.arrayLimit === 'number' ? opts.arrayLimit : defaults.arrayLimit,\n        charset: charset,\n        charsetSentinel: typeof opts.charsetSentinel === 'boolean' ? opts.charsetSentinel : defaults.charsetSentinel,\n        comma: typeof opts.comma === 'boolean' ? opts.comma : defaults.comma,\n        decoder: typeof opts.decoder === 'function' ? opts.decoder : defaults.decoder,\n        delimiter: typeof opts.delimiter === 'string' || utils.isRegExp(opts.delimiter) ? opts.delimiter : defaults.delimiter,\n        depth: typeof opts.depth === 'number' ? opts.depth : defaults.depth,\n        ignoreQueryPrefix: opts.ignoreQueryPrefix === true,\n        interpretNumericEntities: typeof opts.interpretNumericEntities === 'boolean' ? opts.interpretNumericEntities : defaults.interpretNumericEntities,\n        parameterLimit: typeof opts.parameterLimit === 'number' ? opts.parameterLimit : defaults.parameterLimit,\n        parseArrays: opts.parseArrays !== false,\n        plainObjects: typeof opts.plainObjects === 'boolean' ? opts.plainObjects : defaults.plainObjects,\n        strictNullHandling: typeof opts.strictNullHandling === 'boolean' ? opts.strictNullHandling : defaults.strictNullHandling\n    };\n};\n\nmodule.exports = function (str, opts) {\n    var options = normalizeParseOptions(opts);\n\n    if (str === '' || str === null || typeof str === 'undefined') {\n        return options.plainObjects ? Object.create(null) : {};\n    }\n\n    var tempObj = typeof str === 'string' ? parseValues(str, options) : str;\n    var obj = options.plainObjects ? Object.create(null) : {};\n\n    // Iterate over the keys and setup the new object\n\n    var keys = Object.keys(tempObj);\n    for (var i = 0; i < keys.length; ++i) {\n        var key = keys[i];\n        var newObj = parseKeys(key, tempObj[key], options);\n        obj = utils.merge(obj, newObj, options);\n    }\n\n    return utils.compact(obj);\n};\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar Cache_1 = require(\"../../../Toolkit/Decorators/Cache\");\nvar BaseAPI_1 = require(\"../../BaseAPI\");\nvar Channel_1 = require(\"./Channel\");\nvar UserTools_1 = require(\"../../../Toolkit/UserTools\");\nvar ChannelSubscription_1 = require(\"./ChannelSubscription\");\nvar NoSubscriptionProgramError_1 = require(\"../../../Errors/NoSubscriptionProgramError\");\nvar PrivilegedChannel_1 = require(\"./PrivilegedChannel\");\nvar User_1 = require(\"../User/User\");\nvar ChannelFollow_1 = require(\"./ChannelFollow\");\nvar HTTPStatusCodeError_1 = require(\"../../../Errors/HTTPStatusCodeError\");\n/**\n * The API methods that deal with channels.\n *\n * Can be accessed using `client.kraken.channels` on a {@TwitchClient} instance.\n *\n * ## Example\n * ```ts\n * const client = await TwitchClient.withCredentials(clientId, accessToken);\n * const channel = await client.kraken.channels.getMyChannel();\n * ```\n */\nvar ChannelAPI = /** @class */ (function (_super) {\n    tslib_1.__extends(ChannelAPI, _super);\n    function ChannelAPI() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * Gets the channel the client is logged in to.\n     */\n    ChannelAPI.prototype.getMyChannel = function () {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            var _a;\n            return tslib_1.__generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0:\n                        _a = PrivilegedChannel_1.default.bind;\n                        return [4 /*yield*/, this._client.callAPI({ url: 'channel', scope: 'channel_read' })];\n                    case 1: return [2 /*return*/, new (_a.apply(PrivilegedChannel_1.default, [void 0, _b.sent(), this._client]))()];\n                }\n            });\n        });\n    };\n    /**\n     * Retrieves the channel for the given user.\n     *\n     * @param user The user you want to retrieve the channel for.\n     */\n    ChannelAPI.prototype.getChannel = function (user) {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            var _a;\n            return tslib_1.__generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0:\n                        _a = Channel_1.default.bind;\n                        return [4 /*yield*/, this._client.callAPI({ url: \"channels/\" + UserTools_1.extractUserId(user) })];\n                    case 1: return [2 /*return*/, new (_a.apply(Channel_1.default, [void 0, _b.sent(), this._client]))()];\n                }\n            });\n        });\n    };\n    /**\n     * Updates the given channel with the given data.\n     *\n     * @param channel The channel you want to update.\n     * @param data The updated channel data.\n     */\n    ChannelAPI.prototype.updateChannel = function (channel, data) {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            var channelId;\n            return tslib_1.__generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        channelId = UserTools_1.extractUserId(channel);\n                        return [4 /*yield*/, this._client.callAPI({\n                                url: \"channels/\" + channelId,\n                                method: 'PUT',\n                                jsonBody: { channel: data },\n                                scope: 'channel_editor'\n                            })];\n                    case 1:\n                        _a.sent();\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Retrieves the list of users that have editor rights to the given channel.\n     *\n     * @param channel The channel you want to retrieve the list of editors for.\n     */\n    ChannelAPI.prototype.getChannelEditors = function (channel) {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            var channelId, data;\n            var _this = this;\n            return tslib_1.__generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        channelId = UserTools_1.extractUserId(channel);\n                        return [4 /*yield*/, this._client.callAPI({\n                                url: \"channels/\" + channelId + \"/editors\",\n                                scope: 'channel_read'\n                            })];\n                    case 1:\n                        data = _a.sent();\n                        return [2 /*return*/, data.users.map(function (userData) { return new User_1.default(userData, _this._client); })];\n                }\n            });\n        });\n    };\n    /**\n     * Retrieves the list of followers of the given channel.\n     *\n     * @param channel The channel you want to retrieve the list of followers of.\n     * @param page The result page you want to retrieve.\n     * @param limit The number of results you want to retrieve.\n     * @param orderDirection The direction to order in - ascending or descending.\n     */\n    ChannelAPI.prototype.getChannelFollowers = function (channel, page, limit, orderDirection) {\n        if (limit === void 0) { limit = 25; }\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            var channelId, query, data;\n            var _this = this;\n            return tslib_1.__generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        channelId = UserTools_1.extractUserId(channel);\n                        query = { limit: limit.toString() };\n                        if (page) {\n                            query.offset = ((page - 1) * limit).toString();\n                        }\n                        if (orderDirection) {\n                            query.direction = orderDirection;\n                        }\n                        return [4 /*yield*/, this._client.callAPI({\n                                url: \"channels/\" + channelId + \"/follows\",\n                                query: query\n                            })];\n                    case 1:\n                        data = _a.sent();\n                        return [2 /*return*/, data.follows.map(function (follow) { return new ChannelFollow_1.default(follow, _this._client); })];\n                }\n            });\n        });\n    };\n    /**\n     * Retrieves the list of subscribers of the given channel.\n     *\n     * @param channel The channel you want to retrieve the list of subscribers of.\n     * @param page The result page you want to retrieve.\n     * @param limit The number of results you want to retrieve.\n     * @param orderDirection The direction to order in - ascending or descending.\n     */\n    ChannelAPI.prototype.getChannelSubscriptions = function (channel, page, limit, orderDirection) {\n        if (limit === void 0) { limit = 25; }\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            var data;\n            var _this = this;\n            return tslib_1.__generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this._getChannelSubscriptions(channel, page, limit, orderDirection)];\n                    case 1:\n                        data = _a.sent();\n                        return [2 /*return*/, data.subscriptions.map(function (sub) { return new ChannelSubscription_1.default(sub, _this._client); })];\n                }\n            });\n        });\n    };\n    /**\n     * Retrieves the total number of subscribers for the given channel.\n     *\n     * @param channel The channel you want to retrieve the number of subscribers for.\n     */\n    ChannelAPI.prototype.getChannelSubscriptionCount = function (channel) {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            var data;\n            return tslib_1.__generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this._getChannelSubscriptions(channel, 0, 1)];\n                    case 1:\n                        data = _a.sent();\n                        return [2 /*return*/, data._total];\n                }\n            });\n        });\n    };\n    /**\n     * Retrieves the subscription data for the given user to a given channel.\n     *\n     * Throws if the channel doesn't have a subscription program or the user is not subscribed to it.\n     *\n     * This method requires access to the channel. If you only have access to the user,\n     * use {@UserAPI#getSubscriptionData} instead.\n     *\n     * @param channel The channel to check the subscription to.\n     * @param byUser The user to check the subscription for.\n     */\n    ChannelAPI.prototype.getChannelSubscriptionByUser = function (channel, byUser) {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            var channelId, userId, _a, e_1;\n            return tslib_1.__generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0:\n                        channelId = UserTools_1.extractUserId(channel);\n                        userId = UserTools_1.extractUserId(byUser);\n                        _b.label = 1;\n                    case 1:\n                        _b.trys.push([1, 3, , 4]);\n                        _a = ChannelSubscription_1.default.bind;\n                        return [4 /*yield*/, this._client.callAPI({\n                                url: \"channels/\" + channelId + \"/subscriptions/\" + userId,\n                                scope: 'channel_check_subscription'\n                            })];\n                    case 2: return [2 /*return*/, new (_a.apply(ChannelSubscription_1.default, [void 0, _b.sent(),\n                            this._client]))()];\n                    case 3:\n                        e_1 = _b.sent();\n                        if (e_1 instanceof HTTPStatusCodeError_1.default) {\n                            if (e_1.statusCode === 404) {\n                                return [2 /*return*/, null];\n                            }\n                            else if (e_1.statusCode === 422) {\n                                throw new NoSubscriptionProgramError_1.default(channelId);\n                            }\n                        }\n                        throw e_1;\n                    case 4: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Starts a commercial in the given channel.\n     *\n     * @param channel The channel to start the commercial in.\n     * @param length The length of the commercial.\n     */\n    ChannelAPI.prototype.startChannelCommercial = function (channel, length) {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            var channelId;\n            return tslib_1.__generator(this, function (_a) {\n                channelId = UserTools_1.extractUserId(channel);\n                return [2 /*return*/, this._client.callAPI({\n                        url: \"channels/\" + channelId + \"/commercial\",\n                        method: 'POST',\n                        jsonBody: { length: length },\n                        scope: 'channel_commercial'\n                    })];\n            });\n        });\n    };\n    /**\n     * Resets the given channel's stream key.\n     *\n     * @param channel The channel to reset the stream key for.\n     */\n    ChannelAPI.prototype.resetChannelStreamKey = function (channel) {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            var channelId;\n            return tslib_1.__generator(this, function (_a) {\n                channelId = UserTools_1.extractUserId(channel);\n                return [2 /*return*/, this._client.callAPI({\n                        url: \"channels/\" + channelId + \"/stream_key\",\n                        method: 'DELETE',\n                        scope: 'channel_stream'\n                    })];\n            });\n        });\n    };\n    ChannelAPI.prototype._getChannelSubscriptions = function (channel, page, limit, orderDirection) {\n        if (limit === void 0) { limit = 25; }\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            var channelId, query, e_2;\n            return tslib_1.__generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        channelId = UserTools_1.extractUserId(channel);\n                        query = { limit: limit.toString() };\n                        if (page) {\n                            query.offset = ((page - 1) * limit).toString();\n                        }\n                        if (orderDirection) {\n                            query.direction = orderDirection;\n                        }\n                        _a.label = 1;\n                    case 1:\n                        _a.trys.push([1, 3, , 4]);\n                        return [4 /*yield*/, this._client.callAPI({\n                                url: \"channels/\" + channelId + \"/subscriptions\",\n                                query: query,\n                                scope: 'channel_subscriptions'\n                            })];\n                    case 2: return [2 /*return*/, _a.sent()];\n                    case 3:\n                        e_2 = _a.sent();\n                        if (e_2 instanceof HTTPStatusCodeError_1.default && e_2.statusCode === 422) {\n                            throw new NoSubscriptionProgramError_1.default(channelId);\n                        }\n                        throw e_2;\n                    case 4: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    tslib_1.__decorate([\n        Cache_1.Cached(3600)\n    ], ChannelAPI.prototype, \"getMyChannel\", null);\n    tslib_1.__decorate([\n        Cache_1.Cached(3600)\n    ], ChannelAPI.prototype, \"getChannel\", null);\n    tslib_1.__decorate([\n        Cache_1.ClearsCache('getChannel', 1)\n    ], ChannelAPI.prototype, \"updateChannel\", null);\n    tslib_1.__decorate([\n        Cache_1.Cached(3600)\n    ], ChannelAPI.prototype, \"getChannelEditors\", null);\n    tslib_1.__decorate([\n        Cache_1.Cached(30)\n    ], ChannelAPI.prototype, \"getChannelFollowers\", null);\n    tslib_1.__decorate([\n        Cache_1.Cached(30)\n    ], ChannelAPI.prototype, \"getChannelSubscriptions\", null);\n    tslib_1.__decorate([\n        Cache_1.Cached(30)\n    ], ChannelAPI.prototype, \"getChannelSubscriptionCount\", null);\n    tslib_1.__decorate([\n        Cache_1.Cached(3600)\n    ], ChannelAPI.prototype, \"getChannelSubscriptionByUser\", null);\n    tslib_1.__decorate([\n        Cache_1.ClearsCache('getMyChannel')\n    ], ChannelAPI.prototype, \"resetChannelStreamKey\", null);\n    ChannelAPI = tslib_1.__decorate([\n        Cache_1.Cacheable\n    ], ChannelAPI);\n    return ChannelAPI;\n}(BaseAPI_1.default));\nexports.default = ChannelAPI;\n//# sourceMappingURL=ChannelAPI.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar HelixUser_1 = require(\"./HelixUser\");\n/**\n * A user you have extended privilges for, i.e. yourself.\n */\nvar HelixPrivilegedUser = /** @class */ (function (_super) {\n    tslib_1.__extends(HelixPrivilegedUser, _super);\n    function HelixPrivilegedUser() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Object.defineProperty(HelixPrivilegedUser.prototype, \"email\", {\n        /**\n         * The email address of the user.\n         */\n        get: function () {\n            return this._data.email;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Changes the description of the user.\n     *\n     * @param description The new description.\n     */\n    HelixPrivilegedUser.prototype.setDescription = function (description) {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            return tslib_1.__generator(this, function (_a) {\n                return [2 /*return*/, this._client.helix.users.updateUser({ description: description })];\n            });\n        });\n    };\n    return HelixPrivilegedUser;\n}(HelixUser_1.default));\nexports.default = HelixPrivilegedUser;\n//# sourceMappingURL=HelixPrivilegedUser.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar BaseAPI_1 = require(\"../BaseAPI\");\nvar Cache_1 = require(\"../../Toolkit/Decorators/Cache\");\nvar HelixBitsAPI_1 = require(\"./Bits/HelixBitsAPI\");\nvar HelixClipAPI_1 = require(\"./Clip/HelixClipAPI\");\nvar HelixGameAPI_1 = require(\"./Game/HelixGameAPI\");\nvar HelixStreamAPI_1 = require(\"./Stream/HelixStreamAPI\");\nvar HelixSubscriptionAPI_1 = require(\"./Subscriptions/HelixSubscriptionAPI\");\nvar HelixUserAPI_1 = require(\"./User/HelixUserAPI\");\nvar HelixVideoAPI_1 = require(\"./Video/HelixVideoAPI\");\nvar HelixWebHooksAPI_1 = require(\"./WebHooks/HelixWebHooksAPI\");\n/**\n * Groups all API calls available in Helix a.k.a. the \"New Twitch API\".\n *\n * Can be accessed using {@TwitchClient#helix}.\n */\nvar HelixAPIGroup = /** @class */ (function (_super) {\n    tslib_1.__extends(HelixAPIGroup, _super);\n    function HelixAPIGroup() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Object.defineProperty(HelixAPIGroup.prototype, \"bits\", {\n        /**\n         * The Helix bits API methods.\n         */\n        get: function () {\n            return new HelixBitsAPI_1.default(this._client);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(HelixAPIGroup.prototype, \"clips\", {\n        /**\n         * The Helix clips API methods.\n         */\n        get: function () {\n            return new HelixClipAPI_1.default(this._client);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(HelixAPIGroup.prototype, \"games\", {\n        /**\n         * The Helix game API methods.\n         */\n        get: function () {\n            return new HelixGameAPI_1.default(this._client);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(HelixAPIGroup.prototype, \"streams\", {\n        /**\n         * The Helix stream API methods.\n         */\n        get: function () {\n            return new HelixStreamAPI_1.default(this._client);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(HelixAPIGroup.prototype, \"subscriptions\", {\n        /**\n         * The Helix subscription API methods.\n         */\n        get: function () {\n            return new HelixSubscriptionAPI_1.default(this._client);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(HelixAPIGroup.prototype, \"users\", {\n        /**\n         * The Helix user API methods.\n         */\n        get: function () {\n            return new HelixUserAPI_1.default(this._client);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(HelixAPIGroup.prototype, \"webHooks\", {\n        /**\n         * The Helix WebHook API methods.\n         */\n        get: function () {\n            return new HelixWebHooksAPI_1.default(this._client);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(HelixAPIGroup.prototype, \"videos\", {\n        /**\n         * The Helix video API methods.\n         */\n        get: function () {\n            return new HelixVideoAPI_1.default(this._client);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    tslib_1.__decorate([\n        Cache_1.CachedGetter()\n    ], HelixAPIGroup.prototype, \"bits\", null);\n    tslib_1.__decorate([\n        Cache_1.CachedGetter()\n    ], HelixAPIGroup.prototype, \"clips\", null);\n    tslib_1.__decorate([\n        Cache_1.CachedGetter()\n    ], HelixAPIGroup.prototype, \"games\", null);\n    tslib_1.__decorate([\n        Cache_1.CachedGetter()\n    ], HelixAPIGroup.prototype, \"streams\", null);\n    tslib_1.__decorate([\n        Cache_1.CachedGetter()\n    ], HelixAPIGroup.prototype, \"subscriptions\", null);\n    tslib_1.__decorate([\n        Cache_1.CachedGetter()\n    ], HelixAPIGroup.prototype, \"users\", null);\n    tslib_1.__decorate([\n        Cache_1.CachedGetter()\n    ], HelixAPIGroup.prototype, \"webHooks\", null);\n    tslib_1.__decorate([\n        Cache_1.CachedGetter()\n    ], HelixAPIGroup.prototype, \"videos\", null);\n    HelixAPIGroup = tslib_1.__decorate([\n        Cache_1.Cacheable\n    ], HelixAPIGroup);\n    return HelixAPIGroup;\n}(BaseAPI_1.default));\nexports.default = HelixAPIGroup;\n//# sourceMappingURL=HelixAPIGroup.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar Cache_1 = require(\"../../Toolkit/Decorators/Cache\");\nvar BaseAPI_1 = require(\"../BaseAPI\");\nvar ChattersList_1 = require(\"./ChattersList\");\nvar UserTools_1 = require(\"../../Toolkit/UserTools\");\nvar ChannelEvent_1 = require(\"./ChannelEvent\");\nvar TwitchClient_1 = require(\"../../TwitchClient\");\n/**\n * Different API methods that are not officially supported by Twitch.\n *\n * Can be accessed using `client.unsupported` on a {@TwitchClient} instance.\n *\n * ## Example\n * ```ts\n * const client = await TwitchClient.withCredentials(clientId, accessToken);\n * const events = await client.unsupported.getEvents('125328655');\n * ```\n */\nvar UnsupportedAPI = /** @class */ (function (_super) {\n    tslib_1.__extends(UnsupportedAPI, _super);\n    function UnsupportedAPI() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * Retrieves a list of chatters in the Twitch chat of the given channel.\n     *\n     * **WARNING**: In contrast to most other methods, this takes a channel *name*, not a user ID.\n     *\n     * @param channel The channel to retrieve the chatters for.\n     */\n    UnsupportedAPI.prototype.getChatters = function (channel) {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            var channelName, data;\n            return tslib_1.__generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        channelName = UserTools_1.extractUserName(channel);\n                        return [4 /*yield*/, this._client.callAPI({\n                                url: \"https://tmi.twitch.tv/group/user/\" + channelName + \"/chatters\",\n                                type: TwitchClient_1.TwitchAPICallType.Custom\n                            })];\n                    case 1:\n                        data = _a.sent();\n                        return [2 /*return*/, new ChattersList_1.default(data)];\n                }\n            });\n        });\n    };\n    /**\n     * Retrieves a list of event planned for the given channel.\n     *\n     * @param channel The channel to retrieve the events for.\n     */\n    UnsupportedAPI.prototype.getEvents = function (channel) {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            var channelId, data;\n            var _this = this;\n            return tslib_1.__generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        channelId = UserTools_1.extractUserId(channel);\n                        return [4 /*yield*/, this._client.callAPI({ url: \"channels/\" + channelId + \"/events\" })];\n                    case 1:\n                        data = _a.sent();\n                        return [2 /*return*/, data.events.map(function (event) { return new ChannelEvent_1.default(event, _this._client); })];\n                }\n            });\n        });\n    };\n    tslib_1.__decorate([\n        Cache_1.Cached(60)\n    ], UnsupportedAPI.prototype, \"getChatters\", null);\n    tslib_1.__decorate([\n        Cache_1.Cached(60)\n    ], UnsupportedAPI.prototype, \"getEvents\", null);\n    UnsupportedAPI = tslib_1.__decorate([\n        Cache_1.Cacheable\n    ], UnsupportedAPI);\n    return UnsupportedAPI;\n}(BaseAPI_1.default));\nexports.default = UnsupportedAPI;\n//# sourceMappingURL=UnsupportedAPI.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\n/** @private */\nvar NonEnumerable_1 = require(\"../../../Toolkit/Decorators/NonEnumerable\");\nvar ChatRoom = /** @class */ (function () {\n    /** @private */\n    function ChatRoom(_data, client) {\n        this._data = _data;\n        this._client = client;\n    }\n    Object.defineProperty(ChatRoom.prototype, \"id\", {\n        /**\n         * The ID of the chat room.\n         */\n        get: function () {\n            return this._data._id;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ChatRoom.prototype, \"ownerId\", {\n        /**\n         * The user ID of the chat room owner.\n         */\n        get: function () {\n            return this._data.owner_id;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Retrieves the user data of the chat room owner.\n     */\n    ChatRoom.prototype.getOwner = function () {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            return tslib_1.__generator(this, function (_a) {\n                return [2 /*return*/, this._client.kraken.users.getUser(this._data.owner_id)];\n            });\n        });\n    };\n    Object.defineProperty(ChatRoom.prototype, \"name\", {\n        /**\n         * The name of the chat room.\n         */\n        get: function () {\n            return this._data.name;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ChatRoom.prototype, \"topic\", {\n        /**\n         * The topic of the chat room.\n         */\n        get: function () {\n            return this._data.topic;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ChatRoom.prototype, \"isPreviewable\", {\n        /**\n         * Whether the chat room is previewable.\n         */\n        get: function () {\n            return this._data.is_previewable;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ChatRoom.prototype, \"minRole\", {\n        /**\n         * The minimum role allowed to enter this chat room.\n         */\n        get: function () {\n            return this._data.minimum_allowed_role;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ChatRoom.prototype, \"ircName\", {\n        /**\n         * The name of the IRC channel that corresponds to this chat room.\n         */\n        get: function () {\n            return \"#chatrooms:\" + this._data.owner_id + \":\" + this._data._id;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    tslib_1.__decorate([\n        NonEnumerable_1.NonEnumerable\n    ], ChatRoom.prototype, \"_client\", void 0);\n    return ChatRoom;\n}());\nexports.default = ChatRoom;\n//# sourceMappingURL=ChatRoom.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar NonEnumerable_1 = require(\"../../Toolkit/Decorators/NonEnumerable\");\n/**\n * A subscription to a Twitch channel.\n */\nvar Subscription = /** @class */ (function () {\n    /** @private */\n    function Subscription(/** @private */ _data, client) {\n        this._data = _data;\n        this._client = client;\n    }\n    Object.defineProperty(Subscription.prototype, \"id\", {\n        /**\n         * The ID of the subscription.\n         */\n        get: function () {\n            return this._data._id;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Subscription.prototype, \"subPlan\", {\n        /**\n         * The identifier of the subscription plan.\n         */\n        get: function () {\n            return this._data.sub_plan;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Subscription.prototype, \"subPlanName\", {\n        /**\n         * The name of the subscription plan.\n         */\n        get: function () {\n            return this._data.sub_plan_name;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Subscription.prototype, \"startDate\", {\n        /**\n         * The date when the subscription was started.\n         */\n        get: function () {\n            return new Date(this._data.created_at);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    tslib_1.__decorate([\n        NonEnumerable_1.NonEnumerable\n    ], Subscription.prototype, \"_client\", void 0);\n    return Subscription;\n}());\nexports.default = Subscription;\n//# sourceMappingURL=Subscription.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar ChannelPlaceholder_1 = require(\"./ChannelPlaceholder\");\n/**\n * A Twitch Channel.\n */\nvar Channel = /** @class */ (function (_super) {\n    tslib_1.__extends(Channel, _super);\n    /** @private */\n    function Channel(data, client) {\n        var _this = _super.call(this, data._id, client) || this;\n        _this._data = data;\n        return _this;\n    }\n    // override parent's method so we avoid the API/cache request here if someone wrongly assumes this is a placeholder\n    /** @private */\n    Channel.prototype.getChannel = function () {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            return tslib_1.__generator(this, function (_a) {\n                return [2 /*return*/, this];\n            });\n        });\n    };\n    /**\n     * Updates the game, title or delay of a channel or toggles the channel feed.\n     */\n    Channel.prototype.update = function (data) {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            return tslib_1.__generator(this, function (_a) {\n                return [2 /*return*/, this._client.kraken.channels.updateChannel(this, data)];\n            });\n        });\n    };\n    Object.defineProperty(Channel.prototype, \"name\", {\n        /**\n         * The name of the channel.\n         */\n        get: function () {\n            return this._data.name;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Channel.prototype, \"displayName\", {\n        /**\n         * The display name of the channel, with proper capitalization or as Asian script.\n         */\n        get: function () {\n            return this._data.display_name;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Channel.prototype, \"broadcasterLanguage\", {\n        /**\n         * The broadcaster's language.\n         */\n        get: function () {\n            return this._data.broadcaster_language;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Channel.prototype, \"broadcasterType\", {\n        /**\n         * The broadcaster's type, i.e. \"partner\", \"affiliate\" or \"\" (empty string, so neither of them).\n         */\n        get: function () {\n            return this._data.broadcaster_type;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Channel.prototype, \"creationDate\", {\n        /**\n         * The date when the channel was created.\n         */\n        get: function () {\n            return new Date(this._data.created_at);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Channel.prototype, \"description\", {\n        /**\n         * The description of the channel.\n         */\n        get: function () {\n            return this._data.description;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Channel.prototype, \"followers\", {\n        /**\n         * The number of people following the channel.\n         */\n        get: function () {\n            return this._data.followers;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Channel.prototype, \"game\", {\n        /**\n         * The game that is currently being played on the channel (or was played when it was last online).\n         */\n        get: function () {\n            return this._data.game;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Channel.prototype, \"language\", {\n        /**\n         * The language of the channel.\n         */\n        get: function () {\n            return this._data.language;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Channel.prototype, \"logo\", {\n        /**\n         * The URL to the logo of the channel.\n         */\n        get: function () {\n            return this._data.logo;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Channel.prototype, \"isMature\", {\n        /**\n         * Whether the channel is flagged as suitable for mature audiences only.\n         */\n        get: function () {\n            return this._data.mature;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Channel.prototype, \"isPartner\", {\n        /**\n         * Whether the channel is partnered.\n         */\n        get: function () {\n            return this._data.partner;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Channel.prototype, \"profileBanner\", {\n        /**\n         * The URL to the profile's banner image.\n         */\n        get: function () {\n            return this._data.profile_banner;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Channel.prototype, \"profileBannerBackgroundColor\", {\n        /**\n         * The background color of the profile's banner.\n         */\n        get: function () {\n            return this._data.profile_banner_background_color;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Channel.prototype, \"status\", {\n        /**\n         * The current status message (i.e. the title) of the channel.\n         */\n        get: function () {\n            return this._data.status;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Channel.prototype, \"updateDate\", {\n        /**\n         * The date when the channel was last updated.\n         */\n        get: function () {\n            return new Date(this._data.updated_at);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Channel.prototype, \"url\", {\n        /**\n         * The URL to the channel.\n         */\n        get: function () {\n            return this._data.url;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Channel.prototype, \"videoBanner\", {\n        /**\n         * The URL to the channel's video banner, i.e. the offline image.\n         */\n        get: function () {\n            return this._data.video_banner;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Channel.prototype, \"views\", {\n        /**\n         * The total number of views of the channel.\n         */\n        get: function () {\n            return this._data.views;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return Channel;\n}(ChannelPlaceholder_1.default));\nexports.default = Channel;\n//# sourceMappingURL=Channel.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar BaseAPI_1 = require(\"../BaseAPI\");\nvar Cache_1 = require(\"../../Toolkit/Decorators/Cache\");\nvar BitsAPI_1 = require(\"./Bits/BitsAPI\");\nvar ChannelAPI_1 = require(\"./Channel/ChannelAPI\");\nvar ChatAPI_1 = require(\"./Chat/ChatAPI\");\nvar SearchAPI_1 = require(\"./Search/SearchAPI\");\nvar StreamAPI_1 = require(\"./Stream/StreamAPI\");\nvar UserAPI_1 = require(\"./User/UserAPI\");\n/**\n * Groups all API calls available in Kraken v5.\n *\n * Can be accessed using {@TwitchClient#kraken}.\n */\nvar KrakenAPIGroup = /** @class */ (function (_super) {\n    tslib_1.__extends(KrakenAPIGroup, _super);\n    function KrakenAPIGroup() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Object.defineProperty(KrakenAPIGroup.prototype, \"bits\", {\n        /**\n         * The API methods that deal with bits.\n         */\n        get: function () {\n            return new BitsAPI_1.default(this._client);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(KrakenAPIGroup.prototype, \"channels\", {\n        /**\n         * The API methods that deal with channels.\n         */\n        get: function () {\n            return new ChannelAPI_1.default(this._client);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(KrakenAPIGroup.prototype, \"chat\", {\n        /**\n         * The API methods that deal with chat.\n         */\n        get: function () {\n            return new ChatAPI_1.default(this._client);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(KrakenAPIGroup.prototype, \"search\", {\n        /**\n         * The API methods that deal with searching.\n         */\n        get: function () {\n            return new SearchAPI_1.default(this._client);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(KrakenAPIGroup.prototype, \"streams\", {\n        /**\n         * The API methods that deal with streams.\n         */\n        get: function () {\n            return new StreamAPI_1.default(this._client);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(KrakenAPIGroup.prototype, \"users\", {\n        /**\n         * The API methods that deal with users.\n         */\n        get: function () {\n            return new UserAPI_1.default(this._client);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    tslib_1.__decorate([\n        Cache_1.CachedGetter()\n    ], KrakenAPIGroup.prototype, \"bits\", null);\n    tslib_1.__decorate([\n        Cache_1.CachedGetter()\n    ], KrakenAPIGroup.prototype, \"channels\", null);\n    tslib_1.__decorate([\n        Cache_1.CachedGetter()\n    ], KrakenAPIGroup.prototype, \"chat\", null);\n    tslib_1.__decorate([\n        Cache_1.CachedGetter()\n    ], KrakenAPIGroup.prototype, \"search\", null);\n    tslib_1.__decorate([\n        Cache_1.CachedGetter()\n    ], KrakenAPIGroup.prototype, \"streams\", null);\n    tslib_1.__decorate([\n        Cache_1.CachedGetter()\n    ], KrakenAPIGroup.prototype, \"users\", null);\n    KrakenAPIGroup = tslib_1.__decorate([\n        Cache_1.Cacheable\n    ], KrakenAPIGroup);\n    return KrakenAPIGroup;\n}(BaseAPI_1.default));\nexports.default = KrakenAPIGroup;\n//# sourceMappingURL=KrakenAPIGroup.js.map","'use strict';\n\nvar replace = String.prototype.replace;\nvar percentTwenties = /%20/g;\n\nmodule.exports = {\n    'default': 'RFC3986',\n    formatters: {\n        RFC1738: function (value) {\n            return replace.call(value, percentTwenties, '+');\n        },\n        RFC3986: function (value) {\n            return value;\n        }\n    },\n    RFC1738: 'RFC1738',\n    RFC3986: 'RFC3986'\n};\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar NonEnumerable_1 = require(\"../../../Toolkit/Decorators/NonEnumerable\");\nvar NoSubscriptionProgramError_1 = require(\"../../../Errors/NoSubscriptionProgramError\");\n/**\n * A placeholder for a channel.\n *\n * This is used for example when you only have retrieved user data, but not channel data.\n * This can do anything you can do with only a channel ID, as it's equivalent to the user ID.\n */\nvar ChannelPlaceholder = /** @class */ (function () {\n    /** @private */\n    function ChannelPlaceholder(id, client) {\n        this._data = { _id: id };\n        this._client = client;\n    }\n    Object.defineProperty(ChannelPlaceholder.prototype, \"cacheKey\", {\n        /** @private */\n        get: function () {\n            return this._data._id;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ChannelPlaceholder.prototype, \"id\", {\n        /**\n         * The ID of the channel.\n         */\n        get: function () {\n            return this._data._id;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Retrieves the list of cheermotes you can use in the channel.\n     */\n    ChannelPlaceholder.prototype.getCheermotes = function () {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            return tslib_1.__generator(this, function (_a) {\n                return [2 /*return*/, this._client.kraken.bits.getCheermotes(this)];\n            });\n        });\n    };\n    /**\n     * Retrieves the channel data.\n     */\n    ChannelPlaceholder.prototype.getChannel = function () {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            return tslib_1.__generator(this, function (_a) {\n                return [2 /*return*/, this._client.kraken.channels.getChannel(this)];\n            });\n        });\n    };\n    /**\n     * Retrieves the channel's stream data.\n     */\n    ChannelPlaceholder.prototype.getStream = function () {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            return tslib_1.__generator(this, function (_a) {\n                return [2 /*return*/, this._client.kraken.streams.getStreamByChannel(this)];\n            });\n        });\n    };\n    /**\n     * Retrieves the channel's followers.\n     */\n    ChannelPlaceholder.prototype.getFollowers = function () {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            return tslib_1.__generator(this, function (_a) {\n                return [2 /*return*/, this._client.kraken.channels.getChannelFollowers(this)];\n            });\n        });\n    };\n    /**\n     * Retrieves the channel's subscribers.\n     */\n    ChannelPlaceholder.prototype.getSubscriptions = function () {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            return tslib_1.__generator(this, function (_a) {\n                return [2 /*return*/, this._client.kraken.channels.getChannelSubscriptions(this)];\n            });\n        });\n    };\n    /**\n     * Retrieves the subscription data for the given user to the channel.\n     *\n     * Throws if the channel doesn't have a subscription program or the user is not subscribed to it.\n     *\n     * This method requires access to the channel. If you only have access to the user,\n     * use {@User#getSubscriptionTo} instead.\n     *\n     * @param user The user you want to get the subscription data for.\n     */\n    ChannelPlaceholder.prototype.getSubscriptionBy = function (user) {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            return tslib_1.__generator(this, function (_a) {\n                return [2 /*return*/, this._client.kraken.channels.getChannelSubscriptionByUser(this, user)];\n            });\n        });\n    };\n    /**\n     * Checks whether the given user is subscribed to the channel.\n     *\n     * @param user The user you want to check the subscription for.\n     */\n    ChannelPlaceholder.prototype.hasSubscriber = function (user) {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            var e_1;\n            return tslib_1.__generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        _a.trys.push([0, 2, , 3]);\n                        return [4 /*yield*/, this.getSubscriptionBy(user)];\n                    case 1: return [2 /*return*/, (_a.sent()) !== null];\n                    case 2:\n                        e_1 = _a.sent();\n                        if (e_1 instanceof NoSubscriptionProgramError_1.default) {\n                            return [2 /*return*/, false];\n                        }\n                        throw e_1;\n                    case 3: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    tslib_1.__decorate([\n        NonEnumerable_1.NonEnumerable\n    ], ChannelPlaceholder.prototype, \"_client\", void 0);\n    return ChannelPlaceholder;\n}());\nexports.default = ChannelPlaceholder;\n//# sourceMappingURL=ChannelPlaceholder.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Represents the data of an OAuth access token returned by Twitch.\n */\nvar AccessToken = /** @class */ (function () {\n    /** @private */\n    function AccessToken(_data, obtainmentDate) {\n        this._data = _data;\n        this._obtainmentDate = obtainmentDate || new Date();\n    }\n    Object.defineProperty(AccessToken.prototype, \"accessToken\", {\n        /**\n         * The access token which is necessary for every request to the Twitch API.\n         */\n        get: function () {\n            return this._data.access_token;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AccessToken.prototype, \"refreshToken\", {\n        /**\n         * The refresh token which is necessary to refresh the access token once it expires.\n         */\n        get: function () {\n            return this._data.refresh_token;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AccessToken.prototype, \"expiryDate\", {\n        /**\n         * The time when the access token will expire.\n         *\n         * May be `null`, in which case the token does not expire.\n         * This can only be the case with very old Client IDs.\n         */\n        get: function () {\n            if (!this._data.expires_in) {\n                return null;\n            }\n            return new Date(this._obtainmentDate.getTime() + this._data.expires_in * 1000);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AccessToken.prototype, \"isExpired\", {\n        get: function () {\n            if (!this._data.expires_in) {\n                return false;\n            }\n            return Date.now() > (this._obtainmentDate.getTime() + this._data.expires_in * 1000);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AccessToken.prototype, \"scope\", {\n        /**\n         * The scope the access token is valid for, i.e. what this token enables you to do.\n         */\n        get: function () {\n            return this._data.scope.split(' ');\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return AccessToken;\n}());\nexports.default = AccessToken;\n//# sourceMappingURL=AccessToken.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar TwitchClient_1 = require(\"./TwitchClient\");\nexports.TwitchAPICallType = TwitchClient_1.TwitchAPICallType;\nexports.default = TwitchClient_1.default;\nvar ConfigError_1 = require(\"./Errors/ConfigError\");\nexports.ConfigError = ConfigError_1.default;\nvar HellFreezesOverError_1 = require(\"./Errors/HellFreezesOverError\");\nexports.HellFreezesOverError = HellFreezesOverError_1.default;\nvar HTTPStatusCodeError_1 = require(\"./Errors/HTTPStatusCodeError\");\nexports.HTTPStatusCodeError = HTTPStatusCodeError_1.default;\nvar NoSubscriptionProgramError_1 = require(\"./Errors/NoSubscriptionProgramError\");\nexports.NoSubscriptionProgramError = NoSubscriptionProgramError_1.default;\nvar StreamNotLiveError_1 = require(\"./Errors/StreamNotLiveError\");\nexports.StreamNotLiveError = StreamNotLiveError_1.default;\nvar StaticAuthProvider_1 = require(\"./Auth/StaticAuthProvider\");\nexports.StaticAuthProvider = StaticAuthProvider_1.default;\nvar RefreshableAuthProvider_1 = require(\"./Auth/RefreshableAuthProvider\");\nexports.RefreshableAuthProvider = RefreshableAuthProvider_1.default;\nvar AccessToken_1 = require(\"./API/AccessToken\");\nexports.AccessToken = AccessToken_1.default;\nvar TokenInfo_1 = require(\"./API/TokenInfo\");\nexports.TokenInfo = TokenInfo_1.default;\nvar Subscription_1 = require(\"./API/Kraken/Subscription\");\nexports.Subscription = Subscription_1.default;\nvar CheermoteList_1 = require(\"./API/Kraken/Bits/CheermoteList\");\nexports.CheermoteList = CheermoteList_1.default;\nexports.CheermoteBackground = CheermoteList_1.CheermoteBackground;\nexports.CheermoteState = CheermoteList_1.CheermoteState;\nexports.CheermoteScale = CheermoteList_1.CheermoteScale;\nvar Channel_1 = require(\"./API/Kraken/Channel/Channel\");\nexports.Channel = Channel_1.default;\nvar ChannelFollow_1 = require(\"./API/Kraken/Channel/ChannelFollow\");\nexports.ChannelFollow = ChannelFollow_1.default;\nvar ChannelPlaceholder_1 = require(\"./API/Kraken/Channel/ChannelPlaceholder\");\nexports.ChannelPlaceholder = ChannelPlaceholder_1.default;\nvar ChannelSubscription_1 = require(\"./API/Kraken/Channel/ChannelSubscription\");\nexports.ChannelSubscription = ChannelSubscription_1.default;\nvar EmoteSetList_1 = require(\"./API/Kraken/Channel/EmoteSetList\");\nexports.EmoteSetList = EmoteSetList_1.default;\nvar PrivilegedChannel_1 = require(\"./API/Kraken/Channel/PrivilegedChannel\");\nexports.PrivilegedChannel = PrivilegedChannel_1.default;\nvar Stream_1 = require(\"./API/Kraken/Stream/Stream\");\nexports.Stream = Stream_1.default;\nexports.StreamType = Stream_1.StreamType;\nvar ChannelEvent_1 = require(\"./API/Unsupported/ChannelEvent\");\nexports.ChannelEvent = ChannelEvent_1.default;\nvar ChattersList_1 = require(\"./API/Unsupported/ChattersList\");\nexports.ChattersList = ChattersList_1.default;\nvar PrivilegedUser_1 = require(\"./API/Kraken/User/PrivilegedUser\");\nexports.PrivilegedUser = PrivilegedUser_1.default;\nvar User_1 = require(\"./API/Kraken/User/User\");\nexports.User = User_1.default;\nvar UserBlock_1 = require(\"./API/Kraken/User/UserBlock\");\nexports.UserBlock = UserBlock_1.default;\nvar UserFollow_1 = require(\"./API/Kraken/User/UserFollow\");\nexports.UserFollow = UserFollow_1.default;\nvar UserSubscription_1 = require(\"./API/Kraken/User/UserSubscription\");\nexports.UserSubscription = UserSubscription_1.default;\nvar HelixPaginatedRequest_1 = require(\"./API/Helix/HelixPaginatedRequest\");\nexports.HelixPaginatedRequest = HelixPaginatedRequest_1.default;\nvar HelixBitsLeaderboard_1 = require(\"./API/Helix/Bits/HelixBitsLeaderboard\");\nexports.HelixBitsLeaderboard = HelixBitsLeaderboard_1.default;\nvar HelixBitsLeaderboardEntry_1 = require(\"./API/Helix/Bits/HelixBitsLeaderboardEntry\");\nexports.HelixBitsLeaderboardEntry = HelixBitsLeaderboardEntry_1.default;\nvar HelixClip_1 = require(\"./API/Helix/Clip/HelixClip\");\nexports.HelixClip = HelixClip_1.default;\nvar HelixGame_1 = require(\"./API/Helix/Game/HelixGame\");\nexports.HelixGame = HelixGame_1.default;\nvar HelixStream_1 = require(\"./API/Helix/Stream/HelixStream\");\nexports.HelixStream = HelixStream_1.default;\nexports.HelixStreamType = HelixStream_1.HelixStreamType;\nvar HelixFollow_1 = require(\"./API/Helix/User/HelixFollow\");\nexports.HelixFollow = HelixFollow_1.default;\nvar HelixPrivilegedUser_1 = require(\"./API/Helix/User/HelixPrivilegedUser\");\nexports.HelixPrivilegedUser = HelixPrivilegedUser_1.default;\nvar HelixUser_1 = require(\"./API/Helix/User/HelixUser\");\nexports.HelixUser = HelixUser_1.default;\nexports.HelixBroadcasterType = HelixUser_1.HelixBroadcasterType;\nexports.HelixUserType = HelixUser_1.HelixUserType;\nvar HelixVideo_1 = require(\"./API/Helix/Video/HelixVideo\");\nexports.HelixVideo = HelixVideo_1.default;\nvar ChatBadgeList_1 = require(\"./API/Badges/ChatBadgeList\");\nexports.ChatBadgeList = ChatBadgeList_1.default;\nvar ChatBadgeSet_1 = require(\"./API/Badges/ChatBadgeSet\");\nexports.ChatBadgeSet = ChatBadgeSet_1.default;\nvar ChatBadgeVersion_1 = require(\"./API/Badges/ChatBadgeVersion\");\nexports.ChatBadgeVersion = ChatBadgeVersion_1.default;\nvar UserTools_1 = require(\"./Toolkit/UserTools\");\nexports.extractUserId = UserTools_1.extractUserId;\nexports.extractUserName = UserTools_1.extractUserName;\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar BaseAPI_1 = require(\"../BaseAPI\");\nvar Cache_1 = require(\"../../Toolkit/Decorators/Cache\");\nvar ChatBadgeList_1 = require(\"./ChatBadgeList\");\nvar TwitchClient_1 = require(\"../../TwitchClient\");\nvar UserTools_1 = require(\"../../Toolkit/UserTools\");\n/**\n * The API methods that deal with badges.\n *\n * Can be accessed using `client.badges` on a {@TwitchClient} instance.\n *\n * ## Example\n * ```ts\n * const client = await TwitchClient.withCredentials(clientId, accessToken);\n * const cheermotes = await client.badges.getGlobalBadges();\n * ```\n */\nvar BadgesAPI = /** @class */ (function (_super) {\n    tslib_1.__extends(BadgesAPI, _super);\n    function BadgesAPI() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * Retrieves all globally applicable chat badges.\n     */\n    BadgesAPI.prototype.getGlobalBadges = function () {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            var data;\n            return tslib_1.__generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this._client.callAPI({\n                            url: 'https://badges.twitch.tv/v1/badges/global/display',\n                            type: TwitchClient_1.TwitchAPICallType.Custom\n                        })];\n                    case 1:\n                        data = _a.sent();\n                        return [2 /*return*/, new ChatBadgeList_1.default(data.badge_sets, this._client)];\n                }\n            });\n        });\n    };\n    /**\n     * Retrieves all applicable chat badges for a given channel.\n     *\n     * @param channel The channel to retrieve the chat badges for.\n     * @param includeGlobal Whether to include global badges in the result list.\n     */\n    BadgesAPI.prototype.getChannelBadges = function (channel, includeGlobal) {\n        if (includeGlobal === void 0) { includeGlobal = true; }\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            var data, channelBadges, _a, _b;\n            return tslib_1.__generator(this, function (_c) {\n                switch (_c.label) {\n                    case 0: return [4 /*yield*/, this._client.callAPI({\n                            url: \"https://badges.twitch.tv/v1/badges/channels/\" + UserTools_1.extractUserId(channel) + \"/display\",\n                            type: TwitchClient_1.TwitchAPICallType.Custom\n                        })];\n                    case 1:\n                        data = _c.sent();\n                        channelBadges = new ChatBadgeList_1.default(data.badge_sets, this._client);\n                        if (!includeGlobal) return [3 /*break*/, 3];\n                        _b = (_a = channelBadges)._merge;\n                        return [4 /*yield*/, this.getGlobalBadges()];\n                    case 2: return [2 /*return*/, _b.apply(_a, [_c.sent()])];\n                    case 3: return [2 /*return*/, channelBadges];\n                }\n            });\n        });\n    };\n    tslib_1.__decorate([\n        Cache_1.Cached(3600)\n    ], BadgesAPI.prototype, \"getGlobalBadges\", null);\n    tslib_1.__decorate([\n        Cache_1.Cached(3600)\n    ], BadgesAPI.prototype, \"getChannelBadges\", null);\n    BadgesAPI = tslib_1.__decorate([\n        Cache_1.Cacheable\n    ], BadgesAPI);\n    return BadgesAPI;\n}(BaseAPI_1.default));\nexports.default = BadgesAPI;\n//# sourceMappingURL=BadgesAPI.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar Subscription_1 = require(\"../Subscription\");\nvar Channel_1 = require(\"../Channel/Channel\");\n/**\n * A relation of a previously given user subscribing to a channel.\n */\nvar UserSubscription = /** @class */ (function (_super) {\n    tslib_1.__extends(UserSubscription, _super);\n    function UserSubscription() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Object.defineProperty(UserSubscription.prototype, \"channel\", {\n        /**\n         * The subscribed channel.\n         */\n        get: function () {\n            return new Channel_1.default(this._data.channel, this._client);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return UserSubscription;\n}(Subscription_1.default));\nexports.default = UserSubscription;\n//# sourceMappingURL=UserSubscription.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar NonEnumerable_1 = require(\"../../../Toolkit/Decorators/NonEnumerable\");\nvar Channel_1 = require(\"../Channel/Channel\");\n/**\n * The type of a stream.\n */\nvar StreamType;\n(function (StreamType) {\n    /**\n     * A live stream.\n     */\n    StreamType[\"Live\"] = \"live\";\n    /**\n     * An upload to the channel (VoD) that is streamed live for the first time.\n     */\n    StreamType[\"Premiere\"] = \"premiere\";\n    /**\n     * A rerun of a past live stream.\n     */\n    StreamType[\"ReRun\"] = \"rerun\";\n    /**\n     * All types of streams. Used for filtering.\n     */\n    StreamType[\"All\"] = \"all\";\n})(StreamType = exports.StreamType || (exports.StreamType = {}));\n/**\n * A Twitch stream.\n */\nvar Stream = /** @class */ (function () {\n    /** @private */\n    function Stream(_data, client) {\n        this._data = _data;\n        this._client = client;\n    }\n    Object.defineProperty(Stream.prototype, \"id\", {\n        /**\n         * The ID of the stream.\n         */\n        get: function () {\n            return this._data._id;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Stream.prototype, \"game\", {\n        /**\n         * The game played on the stream.\n         */\n        get: function () {\n            return this._data.game;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Stream.prototype, \"viewers\", {\n        /**\n         * The current number of concurrent viewers.\n         */\n        get: function () {\n            return this._data.viewers;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Stream.prototype, \"videoHeight\", {\n        /**\n         * The height of the stream video.\n         */\n        get: function () {\n            return this._data.video_height;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Stream.prototype, \"averageFPS\", {\n        /**\n         * The average FPS (frames per second) that are shown on the stream.\n         */\n        get: function () {\n            return this._data.average_fps;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Stream.prototype, \"delay\", {\n        /**\n         * The delay of the stream, in seconds.\n         */\n        get: function () {\n            return this._data.delay;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Stream.prototype, \"startDate\", {\n        /**\n         * The time when the stream started.\n         */\n        get: function () {\n            return new Date(this._data.created_at);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Stream.prototype, \"isPlaylist\", {\n        /**\n         * Whether the stream is running a playlist.\n         */\n        get: function () {\n            return this._data.is_playlist;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Stream.prototype, \"type\", {\n        /**\n         * The type of the stream.\n         */\n        get: function () {\n            return this._data.stream_type;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Gets the URL of a preview image for the stream\n     *\n     * @param size The size of the image.\n     */\n    Stream.prototype.getPreviewUrl = function (size) {\n        return this._data.preview[size];\n    };\n    Object.defineProperty(Stream.prototype, \"channel\", {\n        /**\n         * The channel where the stream is shown.\n         */\n        get: function () {\n            return new Channel_1.default(this._data.channel, this._client);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    tslib_1.__decorate([\n        NonEnumerable_1.NonEnumerable\n    ], Stream.prototype, \"_client\", void 0);\n    return Stream;\n}());\nexports.default = Stream;\n//# sourceMappingURL=Stream.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/** @private */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction NonEnumerable(target, key) {\n    // first property defined in prototype, that's why we use getters/setters\n    // (otherwise assignment in object will override property in prototype)\n    Object.defineProperty(target, key, {\n        get: function () {\n            return;\n        },\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        set: function (val) {\n            // here we have a reference to the instance and can set property directly to it\n            Object.defineProperty(this, key, {\n                value: val,\n                writable: true,\n                enumerable: false\n            });\n        },\n        enumerable: false\n    });\n}\nexports.NonEnumerable = NonEnumerable;\n//# sourceMappingURL=NonEnumerable.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Information about an access token.\n */\nvar TokenInfo = /** @class */ (function () {\n    /** @private */\n    function TokenInfo(_data) {\n        this._data = _data;\n        this._obtainmentDate = new Date();\n    }\n    Object.defineProperty(TokenInfo.prototype, \"clientId\", {\n        /**\n         * The client ID.\n         */\n        get: function () {\n            return this._data.valid ? this._data.client_id : null;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(TokenInfo.prototype, \"userId\", {\n        /**\n         * The ID of the authenticated user.\n         */\n        get: function () {\n            return this._data.valid ? this._data.user_id : null;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(TokenInfo.prototype, \"userName\", {\n        /**\n         * The user name of the authenticated user.\n         */\n        get: function () {\n            return this._data.valid ? this._data.user_name : null;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(TokenInfo.prototype, \"scopes\", {\n        /**\n         * The scopes for which this token is valid.\n         */\n        get: function () {\n            return this._data.valid ? this._data.authorization.scopes : [];\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(TokenInfo.prototype, \"valid\", {\n        /**\n         * Whether the token is valid or not.\n         */\n        get: function () {\n            return this._data.valid;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(TokenInfo.prototype, \"expiryDate\", {\n        /**\n         * The time when the token will expire.\n         *\n         * If this returns null, it means that the token is either invalid or never expires (happens with old client IDs).\n         */\n        get: function () {\n            if (!this._data.valid || !this._data.expires_in) {\n                return null;\n            }\n            return new Date(this._obtainmentDate.getTime() + this._data.expires_in * 1000);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return TokenInfo;\n}());\nexports.default = TokenInfo;\n//# sourceMappingURL=TokenInfo.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar BaseAPI_1 = require(\"../../BaseAPI\");\nvar TwitchClient_1 = require(\"../../../TwitchClient\");\nvar HelixBitsLeaderboard_1 = require(\"./HelixBitsLeaderboard\");\n/**\n * The Helix API methods that deal with bits.\n *\n * Can be accessed using `client.helix.bits` on a {@TwitchClient} instance.\n *\n * ## Example\n * ```ts\n * const client = await TwitchClient.withCredentials(clientId, accessToken);\n * const leaderboard = await client.helix.bits.getLeaderboard({ period: 'day' });\n * ```\n */\nvar HelixBitsAPI = /** @class */ (function (_super) {\n    tslib_1.__extends(HelixBitsAPI, _super);\n    function HelixBitsAPI() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * Gets a bits leaderboard of your channel.\n     *\n     * @expandParams\n     */\n    HelixBitsAPI.prototype.getLeaderboard = function (params) {\n        if (params === void 0) { params = {}; }\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            var _a, count, _b, period, startDate, contextUserId, result;\n            return tslib_1.__generator(this, function (_c) {\n                switch (_c.label) {\n                    case 0:\n                        _a = params.count, count = _a === void 0 ? 10 : _a, _b = params.period, period = _b === void 0 ? 'all' : _b, startDate = params.startDate, contextUserId = params.contextUserId;\n                        return [4 /*yield*/, this._client.callAPI({\n                                type: TwitchClient_1.TwitchAPICallType.Helix,\n                                url: 'bits/leaderboard',\n                                scope: 'bits:read',\n                                query: {\n                                    count: count.toString(),\n                                    period: period,\n                                    started_at: startDate ? startDate.toISOString() : undefined,\n                                    user_id: contextUserId\n                                }\n                            })];\n                    case 1:\n                        result = _c.sent();\n                        return [2 /*return*/, new HelixBitsLeaderboard_1.default(result, this._client)];\n                }\n            });\n        });\n    };\n    return HelixBitsAPI;\n}(BaseAPI_1.default));\nexports.default = HelixBitsAPI;\n//# sourceMappingURL=HelixBitsAPI.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar NonEnumerable_1 = require(\"../../../Toolkit/Decorators/NonEnumerable\");\n/**\n * A Bits leaderboard entry.\n */\nvar HelixBitsLeaderboardEntry = /** @class */ (function () {\n    /** @private */\n    function HelixBitsLeaderboardEntry(_data, client) {\n        this._data = _data;\n        this._client = client;\n    }\n    Object.defineProperty(HelixBitsLeaderboardEntry.prototype, \"userId\", {\n        /**\n         * The ID of the user on the leaderboard.\n         */\n        get: function () {\n            return this._data.user_id;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(HelixBitsLeaderboardEntry.prototype, \"userDisplayName\", {\n        /**\n         * The display name of the user on the leaderboard.\n         */\n        get: function () {\n            return this._data.user_name;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(HelixBitsLeaderboardEntry.prototype, \"rank\", {\n        /**\n         * The position of the user on the leaderboard.\n         */\n        get: function () {\n            return this._data.rank;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(HelixBitsLeaderboardEntry.prototype, \"amount\", {\n        /**\n         * The amount of bits used in the given period of time.\n         */\n        get: function () {\n            return this._data.score;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Retrieves the user that's on this place on the leaderboard.\n     */\n    HelixBitsLeaderboardEntry.prototype.getUser = function () {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            return tslib_1.__generator(this, function (_a) {\n                return [2 /*return*/, this._client.helix.users.getUserById(this._data.user_id)];\n            });\n        });\n    };\n    tslib_1.__decorate([\n        NonEnumerable_1.NonEnumerable\n    ], HelixBitsLeaderboardEntry.prototype, \"_client\", void 0);\n    return HelixBitsLeaderboardEntry;\n}());\nexports.default = HelixBitsLeaderboardEntry;\n//# sourceMappingURL=HelixBitsLeaderboardEntry.js.map","'use strict';\n\nvar has = Object.prototype.hasOwnProperty;\nvar isArray = Array.isArray;\n\nvar hexTable = (function () {\n    var array = [];\n    for (var i = 0; i < 256; ++i) {\n        array.push('%' + ((i < 16 ? '0' : '') + i.toString(16)).toUpperCase());\n    }\n\n    return array;\n}());\n\nvar compactQueue = function compactQueue(queue) {\n    while (queue.length > 1) {\n        var item = queue.pop();\n        var obj = item.obj[item.prop];\n\n        if (isArray(obj)) {\n            var compacted = [];\n\n            for (var j = 0; j < obj.length; ++j) {\n                if (typeof obj[j] !== 'undefined') {\n                    compacted.push(obj[j]);\n                }\n            }\n\n            item.obj[item.prop] = compacted;\n        }\n    }\n};\n\nvar arrayToObject = function arrayToObject(source, options) {\n    var obj = options && options.plainObjects ? Object.create(null) : {};\n    for (var i = 0; i < source.length; ++i) {\n        if (typeof source[i] !== 'undefined') {\n            obj[i] = source[i];\n        }\n    }\n\n    return obj;\n};\n\nvar merge = function merge(target, source, options) {\n    if (!source) {\n        return target;\n    }\n\n    if (typeof source !== 'object') {\n        if (isArray(target)) {\n            target.push(source);\n        } else if (target && typeof target === 'object') {\n            if ((options && (options.plainObjects || options.allowPrototypes)) || !has.call(Object.prototype, source)) {\n                target[source] = true;\n            }\n        } else {\n            return [target, source];\n        }\n\n        return target;\n    }\n\n    if (!target || typeof target !== 'object') {\n        return [target].concat(source);\n    }\n\n    var mergeTarget = target;\n    if (isArray(target) && !isArray(source)) {\n        mergeTarget = arrayToObject(target, options);\n    }\n\n    if (isArray(target) && isArray(source)) {\n        source.forEach(function (item, i) {\n            if (has.call(target, i)) {\n                var targetItem = target[i];\n                if (targetItem && typeof targetItem === 'object' && item && typeof item === 'object') {\n                    target[i] = merge(targetItem, item, options);\n                } else {\n                    target.push(item);\n                }\n            } else {\n                target[i] = item;\n            }\n        });\n        return target;\n    }\n\n    return Object.keys(source).reduce(function (acc, key) {\n        var value = source[key];\n\n        if (has.call(acc, key)) {\n            acc[key] = merge(acc[key], value, options);\n        } else {\n            acc[key] = value;\n        }\n        return acc;\n    }, mergeTarget);\n};\n\nvar assign = function assignSingleSource(target, source) {\n    return Object.keys(source).reduce(function (acc, key) {\n        acc[key] = source[key];\n        return acc;\n    }, target);\n};\n\nvar decode = function (str, decoder, charset) {\n    var strWithoutPlus = str.replace(/\\+/g, ' ');\n    if (charset === 'iso-8859-1') {\n        // unescape never throws, no try...catch needed:\n        return strWithoutPlus.replace(/%[0-9a-f]{2}/gi, unescape);\n    }\n    // utf-8\n    try {\n        return decodeURIComponent(strWithoutPlus);\n    } catch (e) {\n        return strWithoutPlus;\n    }\n};\n\nvar encode = function encode(str, defaultEncoder, charset) {\n    // This code was originally written by Brian White (mscdex) for the io.js core querystring library.\n    // It has been adapted here for stricter adherence to RFC 3986\n    if (str.length === 0) {\n        return str;\n    }\n\n    var string = typeof str === 'string' ? str : String(str);\n\n    if (charset === 'iso-8859-1') {\n        return escape(string).replace(/%u[0-9a-f]{4}/gi, function ($0) {\n            return '%26%23' + parseInt($0.slice(2), 16) + '%3B';\n        });\n    }\n\n    var out = '';\n    for (var i = 0; i < string.length; ++i) {\n        var c = string.charCodeAt(i);\n\n        if (\n            c === 0x2D // -\n            || c === 0x2E // .\n            || c === 0x5F // _\n            || c === 0x7E // ~\n            || (c >= 0x30 && c <= 0x39) // 0-9\n            || (c >= 0x41 && c <= 0x5A) // a-z\n            || (c >= 0x61 && c <= 0x7A) // A-Z\n        ) {\n            out += string.charAt(i);\n            continue;\n        }\n\n        if (c < 0x80) {\n            out = out + hexTable[c];\n            continue;\n        }\n\n        if (c < 0x800) {\n            out = out + (hexTable[0xC0 | (c >> 6)] + hexTable[0x80 | (c & 0x3F)]);\n            continue;\n        }\n\n        if (c < 0xD800 || c >= 0xE000) {\n            out = out + (hexTable[0xE0 | (c >> 12)] + hexTable[0x80 | ((c >> 6) & 0x3F)] + hexTable[0x80 | (c & 0x3F)]);\n            continue;\n        }\n\n        i += 1;\n        c = 0x10000 + (((c & 0x3FF) << 10) | (string.charCodeAt(i) & 0x3FF));\n        out += hexTable[0xF0 | (c >> 18)]\n            + hexTable[0x80 | ((c >> 12) & 0x3F)]\n            + hexTable[0x80 | ((c >> 6) & 0x3F)]\n            + hexTable[0x80 | (c & 0x3F)];\n    }\n\n    return out;\n};\n\nvar compact = function compact(value) {\n    var queue = [{ obj: { o: value }, prop: 'o' }];\n    var refs = [];\n\n    for (var i = 0; i < queue.length; ++i) {\n        var item = queue[i];\n        var obj = item.obj[item.prop];\n\n        var keys = Object.keys(obj);\n        for (var j = 0; j < keys.length; ++j) {\n            var key = keys[j];\n            var val = obj[key];\n            if (typeof val === 'object' && val !== null && refs.indexOf(val) === -1) {\n                queue.push({ obj: obj, prop: key });\n                refs.push(val);\n            }\n        }\n    }\n\n    compactQueue(queue);\n\n    return value;\n};\n\nvar isRegExp = function isRegExp(obj) {\n    return Object.prototype.toString.call(obj) === '[object RegExp]';\n};\n\nvar isBuffer = function isBuffer(obj) {\n    if (!obj || typeof obj !== 'object') {\n        return false;\n    }\n\n    return !!(obj.constructor && obj.constructor.isBuffer && obj.constructor.isBuffer(obj));\n};\n\nvar combine = function combine(a, b) {\n    return [].concat(a, b);\n};\n\nmodule.exports = {\n    arrayToObject: arrayToObject,\n    assign: assign,\n    combine: combine,\n    compact: compact,\n    decode: decode,\n    encode: encode,\n    isBuffer: isBuffer,\n    isRegExp: isRegExp,\n    merge: merge\n};\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar Channel_1 = require(\"../Channel/Channel\");\nvar NonEnumerable_1 = require(\"../../../Toolkit/Decorators/NonEnumerable\");\n/**\n * A relation of a previously given user following a channel.\n */\nvar UserFollow = /** @class */ (function () {\n    /** @private */\n    function UserFollow(_data, client) {\n        this._data = _data;\n        this._client = client;\n    }\n    Object.defineProperty(UserFollow.prototype, \"followDate\", {\n        /**\n         * The date when the user followed the channel.\n         */\n        get: function () {\n            return new Date(this._data.created_at);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(UserFollow.prototype, \"hasNotifications\", {\n        /**\n         * Whether the user has notifications enabled for the channel.\n         */\n        get: function () {\n            return this._data.notifications;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(UserFollow.prototype, \"channel\", {\n        /**\n         * The followed channel.\n         */\n        get: function () {\n            return new Channel_1.default(this._data.channel, this._client);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    tslib_1.__decorate([\n        NonEnumerable_1.NonEnumerable\n    ], UserFollow.prototype, \"_client\", void 0);\n    return UserFollow;\n}());\nexports.default = UserFollow;\n//# sourceMappingURL=UserFollow.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar BaseAPI_1 = require(\"../../BaseAPI\");\nvar TwitchClient_1 = require(\"../../../TwitchClient\");\nvar HelixGame_1 = require(\"./HelixGame\");\nvar HelixPaginatedRequest_1 = require(\"../HelixPaginatedRequest\");\n/**\n * The Helix API methods that deal with games.\n *\n * Can be accessed using `client.helix.games` on a {@TwitchClient} instance.\n *\n * ## Example\n * ```ts\n * const client = await TwitchClient.withCredentials(clientId, accessToken);\n * const game = await client.helix.games.getGameByName('Hearthstone');\n * ```\n */\nvar HelixGameAPI = /** @class */ (function (_super) {\n    tslib_1.__extends(HelixGameAPI, _super);\n    function HelixGameAPI() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * Retrieves the game data for the given list of game IDs.\n     *\n     * @param ids The game IDs you want to look up.\n     */\n    HelixGameAPI.prototype.getGamesByIds = function (ids) {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            return tslib_1.__generator(this, function (_a) {\n                return [2 /*return*/, this._getGames('id', ids)];\n            });\n        });\n    };\n    /**\n     * Retrieves the game data for the given list of game names.\n     *\n     * @param names The game names you want to look up.\n     */\n    HelixGameAPI.prototype.getGamesByNames = function (names) {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            return tslib_1.__generator(this, function (_a) {\n                return [2 /*return*/, this._getGames('name', names)];\n            });\n        });\n    };\n    /**\n     * Retrieves the game data for the given game ID.\n     *\n     * @param id The game ID you want to look up.\n     */\n    HelixGameAPI.prototype.getGameById = function (id) {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            var games;\n            return tslib_1.__generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this._getGames('id', id)];\n                    case 1:\n                        games = _a.sent();\n                        return [2 /*return*/, games.length ? games[0] : null];\n                }\n            });\n        });\n    };\n    /**\n     * Retrieves the game data for the given game name.\n     *\n     * @param name The game name you want to look up.\n     */\n    HelixGameAPI.prototype.getGameByName = function (name) {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            var games;\n            return tslib_1.__generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this._getGames('name', name)];\n                    case 1:\n                        games = _a.sent();\n                        return [2 /*return*/, games.length ? games[0] : null];\n                }\n            });\n        });\n    };\n    /**\n     * Retrieves a list of the most viewed games at the moment.\n     */\n    HelixGameAPI.prototype.getTopGames = function (pagination) {\n        if (pagination === void 0) { pagination = {}; }\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            var after, before, limit, result;\n            var _this = this;\n            return tslib_1.__generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        after = pagination.after, before = pagination.before, limit = pagination.limit;\n                        return [4 /*yield*/, this._client.callAPI({\n                                type: TwitchClient_1.TwitchAPICallType.Helix,\n                                url: 'games/top',\n                                query: {\n                                    after: after,\n                                    before: before,\n                                    first: limit\n                                }\n                            })];\n                    case 1:\n                        result = _a.sent();\n                        return [2 /*return*/, {\n                                data: result.data.map(function (data) { return new HelixGame_1.default(data, _this._client); }),\n                                cursor: result.pagination && result.pagination.cursor\n                            }];\n                }\n            });\n        });\n    };\n    /**\n     * Creates a paginator for the most viewed games at the moment.\n     */\n    HelixGameAPI.prototype.getTopGamesPaginated = function () {\n        var _this = this;\n        return new HelixPaginatedRequest_1.default({\n            url: 'games/top'\n        }, this._client, function (data) { return new HelixGame_1.default(data, _this._client); });\n    };\n    HelixGameAPI.prototype._getGames = function (filterType, filterValues) {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            var result;\n            var _a;\n            var _this = this;\n            return tslib_1.__generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0: return [4 /*yield*/, this._client.callAPI({\n                            type: TwitchClient_1.TwitchAPICallType.Helix,\n                            url: 'games',\n                            query: (_a = {},\n                                _a[filterType] = filterValues,\n                                _a)\n                        })];\n                    case 1:\n                        result = _b.sent();\n                        return [2 /*return*/, result.data.map(function (entry) { return new HelixGame_1.default(entry, _this._client); })];\n                }\n            });\n        });\n    };\n    return HelixGameAPI;\n}(BaseAPI_1.default));\nexports.default = HelixGameAPI;\n//# sourceMappingURL=HelixGameAPI.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar NonEnumerable_1 = require(\"../Toolkit/Decorators/NonEnumerable\");\n/** @private */\nvar BaseAPI = /** @class */ (function () {\n    function BaseAPI(client) {\n        this._client = client;\n    }\n    tslib_1.__decorate([\n        NonEnumerable_1.NonEnumerable\n    ], BaseAPI.prototype, \"_client\", void 0);\n    return BaseAPI;\n}());\nexports.default = BaseAPI;\n//# sourceMappingURL=BaseAPI.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar HelixPaginatedRequest_1 = require(\"./HelixPaginatedRequest\");\n/**\n * A special case of {@HelixPaginatedRequest} with support for fetching the total number of entities, whenever an endpoint supports it.\n */\nvar HelixPaginatedRequestWithTotal = /** @class */ (function (_super) {\n    tslib_1.__extends(HelixPaginatedRequestWithTotal, _super);\n    function HelixPaginatedRequestWithTotal() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * Retrieves and returns the total number of entities existing in the queried result set.\n     */\n    HelixPaginatedRequestWithTotal.prototype.getTotalCount = function () {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            var data, _a;\n            return tslib_1.__generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0:\n                        _a = this._currentData;\n                        if (_a) return [3 /*break*/, 2];\n                        return [4 /*yield*/, this._fetchData({ query: { first: '1', after: undefined } })];\n                    case 1:\n                        _a = (_b.sent());\n                        _b.label = 2;\n                    case 2:\n                        data = _a;\n                        return [2 /*return*/, data.total];\n                }\n            });\n        });\n    };\n    return HelixPaginatedRequestWithTotal;\n}(HelixPaginatedRequest_1.default));\nexports.default = HelixPaginatedRequestWithTotal;\n//# sourceMappingURL=HelixPaginatedRequestWithTotal.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar Cache_1 = require(\"../../../Toolkit/Decorators/Cache\");\nvar BaseAPI_1 = require(\"../../BaseAPI\");\nvar PrivilegedUser_1 = require(\"./PrivilegedUser\");\nvar User_1 = require(\"./User\");\nvar ObjectTools_1 = require(\"../../../Toolkit/ObjectTools\");\nvar UserTools_1 = require(\"../../../Toolkit/UserTools\");\nvar EmoteSetList_1 = require(\"../Channel/EmoteSetList\");\nvar UserSubscription_1 = require(\"./UserSubscription\");\nvar NoSubscriptionProgramError_1 = require(\"../../../Errors/NoSubscriptionProgramError\");\nvar UserFollow_1 = require(\"./UserFollow\");\nvar UserBlock_1 = require(\"./UserBlock\");\nvar HellFreezesOverError_1 = require(\"../../../Errors/HellFreezesOverError\");\nvar HTTPStatusCodeError_1 = require(\"../../../Errors/HTTPStatusCodeError\");\n/**\n * The API methods that deal with users.\n *\n * Can be accessed using `client.kraken.users` on a {@TwitchClient} instance.\n *\n * ## Example\n * ```ts\n * const client = await TwitchClient.withCredentials(clientId, accessToken);\n * const user = await client.kraken.users.getUser('125328655');\n * ```\n */\nvar UserAPI = /** @class */ (function (_super) {\n    tslib_1.__extends(UserAPI, _super);\n    function UserAPI() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this._userByNameCache = new Map;\n        return _this;\n    }\n    /**\n     * Retrieves the user data of the currently authenticated user.\n     */\n    UserAPI.prototype.getMe = function () {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            var _a;\n            return tslib_1.__generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0:\n                        _a = PrivilegedUser_1.default.bind;\n                        return [4 /*yield*/, this._client.callAPI({ url: 'user', scope: 'user_read' })];\n                    case 1: return [2 /*return*/, new (_a.apply(PrivilegedUser_1.default, [void 0, _b.sent(), this._client]))()];\n                }\n            });\n        });\n    };\n    /**\n     * Retrieves the user data for the given user ID.\n     *\n     * @param userId The user ID you want to look up.\n     */\n    UserAPI.prototype.getUser = function (userId) {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            var userData;\n            return tslib_1.__generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this._client.callAPI({ url: \"users/\" + UserTools_1.extractUserId(userId) })];\n                    case 1:\n                        userData = _a.sent();\n                        if (!userData) {\n                            throw new HellFreezesOverError_1.default('Could not get authenticated user');\n                        }\n                        return [2 /*return*/, new User_1.default(userData, this._client)];\n                }\n            });\n        });\n    };\n    /**\n     * Retrieves the user data for the given user name.\n     *\n     * @param userName The user name you want to look up.\n     */\n    UserAPI.prototype.getUserByName = function (userName) {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            var users, user;\n            return tslib_1.__generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        // not using the decorator's cache here as users-by-name is slightly more complex to cache\n                        this._cleanUserCache();\n                        if (this._userByNameCache.has(userName)) {\n                            return [2 /*return*/, this._userByNameCache.get(userName).value];\n                        }\n                        return [4 /*yield*/, this._client.callAPI({ url: 'users', query: { login: userName } })];\n                    case 1:\n                        users = (_a.sent()).users;\n                        if (users.length === 0) {\n                            return [2 /*return*/, null];\n                        }\n                        user = new User_1.default(users[0], this._client);\n                        this._userByNameCache.set(userName, {\n                            value: user,\n                            expires: Date.now() + 3600 * 1000\n                        });\n                        return [2 /*return*/, user];\n                }\n            });\n        });\n    };\n    /**\n     * Retrieves the user data for the given user names.\n     *\n     * @param userNames The user names you want to look up.\n     */\n    UserAPI.prototype.getUsersByNames = function (userNames) {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            var cachedEntries, cachedObject, cachedUsers, toFetch, usersData, usersArr, users;\n            var _this = this;\n            return tslib_1.__generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        this._cleanUserCache();\n                        userNames = userNames.map(function (name) { return name.toLowerCase(); });\n                        cachedEntries = Array.from(this._userByNameCache.entries()).filter(function (_a) {\n                            var _b = tslib_1.__read(_a, 1), key = _b[0];\n                            return userNames.includes(key);\n                        });\n                        cachedObject = ObjectTools_1.entriesToObject(cachedEntries);\n                        cachedUsers = ObjectTools_1.mapObject(cachedObject, function (entry) { return entry.value; });\n                        toFetch = userNames.filter(function (name) { return !(name in cachedUsers); });\n                        if (!toFetch.length) {\n                            return [2 /*return*/, cachedUsers];\n                        }\n                        return [4 /*yield*/, this._client.callAPI({ url: 'users', query: { login: toFetch.join(',') } })];\n                    case 1:\n                        usersData = _a.sent();\n                        usersArr = usersData.users.map(function (data) { return new User_1.default(data, _this._client); });\n                        usersArr.forEach(function (user) { return _this._userByNameCache.set(user.name, {\n                            value: user,\n                            expires: Date.now() + 3600 * 1000\n                        }); });\n                        users = ObjectTools_1.indexBy(usersArr, 'name');\n                        return [2 /*return*/, tslib_1.__assign({}, cachedUsers, users)];\n                }\n            });\n        });\n    };\n    /**\n     * Retrieves the emotes a given user can use.\n     *\n     * @param user The user you want to get emotes for.\n     */\n    UserAPI.prototype.getUserEmotes = function (user) {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            var userId, data;\n            return tslib_1.__generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        userId = UserTools_1.extractUserId(user);\n                        return [4 /*yield*/, this._client.callAPI({ url: \"users/\" + userId + \"/emotes\", scope: 'user_subscriptions' })];\n                    case 1:\n                        data = _a.sent();\n                        return [2 /*return*/, new EmoteSetList_1.default(data.emoticon_sets)];\n                }\n            });\n        });\n    };\n    /**\n     * Retrieves the subscription data for a given user to a given channel.\n     *\n     * @param user The user to retrieve the subscription data of.\n     * @param toChannel The channel you want to retrieve the subscription data to.\n     */\n    UserAPI.prototype.getSubscriptionData = function (user, toChannel) {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            var userId, channelId, _a, e_1;\n            return tslib_1.__generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0:\n                        userId = UserTools_1.extractUserId(user);\n                        channelId = UserTools_1.extractUserId(toChannel);\n                        _b.label = 1;\n                    case 1:\n                        _b.trys.push([1, 3, , 4]);\n                        _a = UserSubscription_1.default.bind;\n                        return [4 /*yield*/, this._client.callAPI({\n                                url: \"users/\" + userId + \"/subscriptions/\" + channelId,\n                                scope: 'user_subscriptions'\n                            })];\n                    case 2: return [2 /*return*/, new (_a.apply(UserSubscription_1.default, [void 0, _b.sent(),\n                            this._client]))()];\n                    case 3:\n                        e_1 = _b.sent();\n                        if (e_1 instanceof HTTPStatusCodeError_1.default) {\n                            if (e_1.statusCode === 404) {\n                                return [2 /*return*/, null];\n                            }\n                            else if (e_1.statusCode === 422) {\n                                throw new NoSubscriptionProgramError_1.default(channelId);\n                            }\n                        }\n                        throw e_1;\n                    case 4: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Get a list of channels a given user follows.\n     *\n     * @param user The user you want to retrieve the follows of.\n     * @param page The result page you want to retrieve.\n     * @param limit The number of results you want to retrieve.\n     * @param orderBy The field to order by.\n     * @param orderDirection The direction to order in - ascending or descending.\n     */\n    UserAPI.prototype.getFollowedChannels = function (user, page, limit, orderBy, orderDirection) {\n        if (limit === void 0) { limit = 25; }\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            var userId, query, data;\n            var _this = this;\n            return tslib_1.__generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        userId = UserTools_1.extractUserId(user);\n                        query = {};\n                        if (page) {\n                            query.offset = ((page - 1) * limit).toString();\n                        }\n                        query.limit = limit.toString();\n                        if (orderBy) {\n                            query.sortby = orderBy;\n                        }\n                        if (orderDirection) {\n                            query.direction = orderDirection;\n                        }\n                        return [4 /*yield*/, this._client.callAPI({\n                                url: \"users/\" + userId + \"/follows/channels\", query: query\n                            })];\n                    case 1:\n                        data = _a.sent();\n                        return [2 /*return*/, data.follows.map(function (follow) { return new UserFollow_1.default(follow, _this._client); })];\n                }\n            });\n        });\n    };\n    /**\n     * Get follow data for a given user to a given channel.\n     *\n     * @param user The user you want to retrieve follow data of.\n     * @param channel The channel you want to retrieve follow data to.\n     */\n    UserAPI.prototype.getFollowedChannel = function (user, channel) {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            var userId, channelId, data, e_2;\n            return tslib_1.__generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        userId = UserTools_1.extractUserId(user);\n                        channelId = UserTools_1.extractUserId(channel);\n                        _a.label = 1;\n                    case 1:\n                        _a.trys.push([1, 3, , 4]);\n                        return [4 /*yield*/, this._client.callAPI({ url: \"users/\" + userId + \"/follows/channels/\" + channelId })];\n                    case 2:\n                        data = _a.sent();\n                        return [2 /*return*/, new UserFollow_1.default(data, this._client)];\n                    case 3:\n                        e_2 = _a.sent();\n                        if (e_2 instanceof HTTPStatusCodeError_1.default) {\n                            if (e_2.statusCode === 404) {\n                                return [2 /*return*/, null];\n                            }\n                        }\n                        throw e_2;\n                    case 4: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Follows a given channel with a given user.\n     *\n     * @param user The user you want to follow with.\n     * @param channel The channel to follow.\n     * @param notifications Whether the user will receive notifications.\n     */\n    UserAPI.prototype.followChannel = function (user, channel, notifications) {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            var userId, channelId, data;\n            return tslib_1.__generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        userId = UserTools_1.extractUserId(user);\n                        channelId = UserTools_1.extractUserId(channel);\n                        return [4 /*yield*/, this._client.callAPI({\n                                url: \"users/\" + userId + \"/follows/channels/\" + channelId,\n                                method: 'PUT',\n                                scope: 'user_follows_edit',\n                                body: { notifications: Boolean(notifications).toString() }\n                            })];\n                    case 1:\n                        data = _a.sent();\n                        return [2 /*return*/, new UserFollow_1.default(data, this._client)];\n                }\n            });\n        });\n    };\n    /**\n     * Unfollows a given channel with a given user.\n     *\n     * @param user The user you want to unfollow with.\n     * @param channel The channel to unfollow.\n     */\n    UserAPI.prototype.unfollowChannel = function (user, channel) {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            var userId, channelId;\n            return tslib_1.__generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        userId = UserTools_1.extractUserId(user);\n                        channelId = UserTools_1.extractUserId(channel);\n                        return [4 /*yield*/, this._client.callAPI({\n                                url: \"users/\" + userId + \"/follows/channels/\" + channelId,\n                                scope: 'user_follows_edit',\n                                method: 'DELETE'\n                            })];\n                    case 1:\n                        _a.sent();\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Retrieves a list of users a given user has blocked.\n     *\n     * @param user The user you want to retrieve the block list of.\n     * @param page The result page you want to retrieve.\n     * @param limit The number of results you want to retrieve.\n     */\n    UserAPI.prototype.getBlockedUsers = function (user, page, limit) {\n        if (limit === void 0) { limit = 25; }\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            var userId, query, data;\n            var _this = this;\n            return tslib_1.__generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        userId = UserTools_1.extractUserId(user);\n                        query = { limit: limit.toString() };\n                        if (page) {\n                            query.offset = ((page - 1) * limit).toString();\n                        }\n                        return [4 /*yield*/, this._client.callAPI({\n                                url: \"users/\" + userId + \"/blocks\", query: query, scope: 'user_blocks_read'\n                            })];\n                    case 1:\n                        data = _a.sent();\n                        return [2 /*return*/, data.blocks.map(function (block) { return new UserBlock_1.default(block, _this._client); })];\n                }\n            });\n        });\n    };\n    /**\n     * Blocks a given user with another given user.\n     *\n     * @param user The user you want to block with.\n     * @param userToBlock The user to block.\n     */\n    UserAPI.prototype.blockUser = function (user, userToBlock) {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            var userId, userIdToBlock, data;\n            return tslib_1.__generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        userId = UserTools_1.extractUserId(user);\n                        userIdToBlock = UserTools_1.extractUserId(userToBlock);\n                        return [4 /*yield*/, this._client.callAPI({\n                                url: \"users/\" + userId + \"/blocks/\" + userIdToBlock,\n                                method: 'PUT',\n                                scope: 'user_blocks_edit'\n                            })];\n                    case 1:\n                        data = _a.sent();\n                        return [2 /*return*/, new UserBlock_1.default(data, this._client)];\n                }\n            });\n        });\n    };\n    /**\n     * Unblocks a given user with another given user.\n     *\n     * @param user The user you want to unblock with.\n     * @param userToUnblock The user to unblock.\n     */\n    UserAPI.prototype.unblockUser = function (user, userToUnblock) {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            var userId, userIdToUnblock;\n            return tslib_1.__generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        userId = UserTools_1.extractUserId(user);\n                        userIdToUnblock = UserTools_1.extractUserId(userToUnblock);\n                        return [4 /*yield*/, this._client.callAPI({\n                                url: \"users/\" + userId + \"/blocks/\" + userIdToUnblock,\n                                method: 'DELETE',\n                                scope: 'user_blocks_edit'\n                            })];\n                    case 1:\n                        _a.sent();\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    UserAPI.prototype._cleanUserCache = function () {\n        var _this = this;\n        var now = Date.now();\n        this._userByNameCache.forEach(function (val, key) {\n            if (val.expires < now) {\n                _this._userByNameCache.delete(key);\n            }\n        });\n    };\n    tslib_1.__decorate([\n        Cache_1.Cached(3600)\n    ], UserAPI.prototype, \"getMe\", null);\n    tslib_1.__decorate([\n        Cache_1.Cached(3600)\n    ], UserAPI.prototype, \"getUser\", null);\n    tslib_1.__decorate([\n        Cache_1.Cached(3600)\n    ], UserAPI.prototype, \"getUserEmotes\", null);\n    tslib_1.__decorate([\n        Cache_1.Cached(3600)\n    ], UserAPI.prototype, \"getSubscriptionData\", null);\n    tslib_1.__decorate([\n        Cache_1.Cached(300)\n    ], UserAPI.prototype, \"getFollowedChannels\", null);\n    tslib_1.__decorate([\n        Cache_1.Cached(300)\n    ], UserAPI.prototype, \"getFollowedChannel\", null);\n    tslib_1.__decorate([\n        Cache_1.ClearsCache('getFollowedChannels', 1),\n        Cache_1.ClearsCache('getFollowedChannel', 2)\n    ], UserAPI.prototype, \"followChannel\", null);\n    tslib_1.__decorate([\n        Cache_1.ClearsCache('getFollowedChannels', 1),\n        Cache_1.ClearsCache('getFollowedChannel', 2)\n    ], UserAPI.prototype, \"unfollowChannel\", null);\n    tslib_1.__decorate([\n        Cache_1.Cached(3600)\n    ], UserAPI.prototype, \"getBlockedUsers\", null);\n    tslib_1.__decorate([\n        Cache_1.ClearsCache('getBlockedUsers', 1)\n    ], UserAPI.prototype, \"blockUser\", null);\n    tslib_1.__decorate([\n        Cache_1.ClearsCache('getBlockedUsers', 1)\n    ], UserAPI.prototype, \"unblockUser\", null);\n    UserAPI = tslib_1.__decorate([\n        Cache_1.Cacheable\n    ], UserAPI);\n    return UserAPI;\n}(BaseAPI_1.default));\nexports.default = UserAPI;\n//# sourceMappingURL=UserAPI.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar Cache_1 = require(\"../../Toolkit/Decorators/Cache\");\nvar ArrayTools_1 = require(\"../../Toolkit/ArrayTools\");\n/**\n * A list of chatters in a Twitch chat.\n */\nvar ChattersList = /** @class */ (function () {\n    /** @private */\n    function ChattersList(_data) {\n        this._data = _data;\n    }\n    Object.defineProperty(ChattersList.prototype, \"allChatters\", {\n        /**\n         * A list of user names of all chatters in the chat.\n         */\n        get: function () {\n            return ArrayTools_1.flatten(Object.values(this._data.chatters));\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ChattersList.prototype, \"allChattersWithStatus\", {\n        /**\n         * A map of user names of all chatters in the chat, mapped to their status in the channel.\n         */\n        get: function () {\n            return new Map(ArrayTools_1.flatten(Object.entries(this._data.chatters).map(function (_a) {\n                var _b = tslib_1.__read(_a, 2), status = _b[0], names = _b[1];\n                return names.map(function (name) { return [name, status]; });\n            })));\n        },\n        enumerable: true,\n        configurable: true\n    });\n    tslib_1.__decorate([\n        Cache_1.CachedGetter()\n    ], ChattersList.prototype, \"allChatters\", null);\n    tslib_1.__decorate([\n        Cache_1.CachedGetter()\n    ], ChattersList.prototype, \"allChattersWithStatus\", null);\n    ChattersList = tslib_1.__decorate([\n        Cache_1.Cacheable\n    ], ChattersList);\n    return ChattersList;\n}());\nexports.default = ChattersList;\n//# sourceMappingURL=ChattersList.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar NonEnumerable_1 = require(\"../Toolkit/Decorators/NonEnumerable\");\nvar TwitchClient_1 = require(\"../TwitchClient\");\n/**\n * Enhances another auth provider with the ability to make use of refresh\n * tokens, automatically refreshing the access token whenever necessary.\n */\nvar RefreshableAuthProvider = /** @class */ (function () {\n    /**\n     * Creates a new auth provider based on the given one that can automatically\n     * refresh access tokens.\n     *\n     * You don't usually have to create this manually. You should use `TwitchClient.withCredentials`\n     * with the `refreshConfig` parameter instead.\n     *\n     * @param childProvider The base auth provider.\n     * @param refreshConfig The information necessary to automatically refresh an access token.\n     */\n    function RefreshableAuthProvider(childProvider, refreshConfig) {\n        this._clientSecret = refreshConfig.clientSecret;\n        this._refreshToken = refreshConfig.refreshToken;\n        this._childProvider = childProvider;\n        this._initialExpiry = refreshConfig.expiry;\n        this._onRefresh = refreshConfig.onRefresh;\n    }\n    /**\n     * Retrieves an access token.\n     *\n     * If the current access token does not have the requested scopes, the base auth\n     * provider is called.\n     *\n     * If the current access token is expired, automatically renew it.\n     *\n     * @param scopes The requested scopes.\n     */\n    RefreshableAuthProvider.prototype.getAccessToken = function (scopes) {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            var oldToken, newToken, now, refreshedToken;\n            var _this = this;\n            return tslib_1.__generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        if (typeof scopes === 'string') {\n                            scopes = scopes.split(' ');\n                        }\n                        return [4 /*yield*/, this._childProvider.getAccessToken()];\n                    case 1:\n                        oldToken = _a.sent();\n                        if (!(oldToken && scopes && scopes.some(function (scope) { return !_this.currentScopes.includes(scope); }))) return [3 /*break*/, 3];\n                        return [4 /*yield*/, this._childProvider.getAccessToken(scopes)];\n                    case 2:\n                        newToken = _a.sent();\n                        // ...but if the token doesn't change, carry on\n                        if (newToken !== oldToken) {\n                            return [2 /*return*/, newToken];\n                        }\n                        _a.label = 3;\n                    case 3:\n                        // if we don't have a current token, we just pass this and refresh right away\n                        if (oldToken) {\n                            if (this._initialExpiry) {\n                                now = new Date();\n                                if (now < this._initialExpiry) {\n                                    return [2 /*return*/, oldToken];\n                                }\n                            }\n                            else if (!oldToken.isExpired) {\n                                return [2 /*return*/, oldToken];\n                            }\n                        }\n                        return [4 /*yield*/, this.refresh()];\n                    case 4:\n                        refreshedToken = _a.sent();\n                        if (oldToken) {\n                            return [2 /*return*/, refreshedToken];\n                        }\n                        // need to check again for scopes after refreshing, in case a refresh token was passed without an access token\n                        return [2 /*return*/, this._childProvider.getAccessToken(scopes)];\n                }\n            });\n        });\n    };\n    /**\n     * Force a refresh of the access token.\n     */\n    RefreshableAuthProvider.prototype.refresh = function () {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            var tokenData;\n            return tslib_1.__generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, TwitchClient_1.default.refreshAccessToken(this.clientId, this._clientSecret, this._refreshToken)];\n                    case 1:\n                        tokenData = _a.sent();\n                        this.setAccessToken(tokenData);\n                        this._refreshToken = tokenData.refreshToken;\n                        this._initialExpiry = undefined;\n                        if (this._onRefresh) {\n                            this._onRefresh(tokenData);\n                        }\n                        return [2 /*return*/, tokenData];\n                }\n            });\n        });\n    };\n    /** @private */\n    RefreshableAuthProvider.prototype.setAccessToken = function (token) {\n        this._childProvider.setAccessToken(token);\n    };\n    Object.defineProperty(RefreshableAuthProvider.prototype, \"clientId\", {\n        /**\n         * The client ID.\n         */\n        get: function () {\n            return this._childProvider.clientId;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(RefreshableAuthProvider.prototype, \"currentScopes\", {\n        /**\n         * The scopes that are currently available using the access token.\n         */\n        get: function () {\n            return this._childProvider.currentScopes;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    tslib_1.__decorate([\n        NonEnumerable_1.NonEnumerable\n    ], RefreshableAuthProvider.prototype, \"_clientSecret\", void 0);\n    tslib_1.__decorate([\n        NonEnumerable_1.NonEnumerable\n    ], RefreshableAuthProvider.prototype, \"_refreshToken\", void 0);\n    return RefreshableAuthProvider;\n}());\nexports.default = RefreshableAuthProvider;\n//# sourceMappingURL=RefreshableAuthProvider.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar UserTools_1 = require(\"../../../Toolkit/UserTools\");\nvar Cache_1 = require(\"../../../Toolkit/Decorators/Cache\");\nvar BaseAPI_1 = require(\"../../BaseAPI\");\nvar Stream_1 = require(\"./Stream\");\n/**\n * The API methods that deal with streams.\n *\n * Can be accessed using `client.kraken.streams` on a {@TwitchClient} instance.\n *\n * ## Example\n * ```ts\n * const client = await TwitchClient.withCredentials(clientId, accessToken);\n * const stream = await client.kraken.streams.getStreamByChannel('125328655');\n * ```\n */\nvar StreamAPI = /** @class */ (function (_super) {\n    tslib_1.__extends(StreamAPI, _super);\n    function StreamAPI() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * Retrieves the current stream on the given channel.\n     *\n     * @param channel\n     */\n    StreamAPI.prototype.getStreamByChannel = function (channel) {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            var channelId, data;\n            return tslib_1.__generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        channelId = UserTools_1.extractUserId(channel);\n                        return [4 /*yield*/, this._client.callAPI({ url: \"streams/\" + channelId })];\n                    case 1:\n                        data = _a.sent();\n                        return [2 /*return*/, data.stream ? new Stream_1.default(data.stream, this._client) : null];\n                }\n            });\n        });\n    };\n    /**\n     * Retrieves a list of streams.\n     *\n     * @param channels A channel ID or a list thereof.\n     * @param game Show only streams playing a certain game.\n     * @param languageCode Show only streams in a certain language.\n     * @param type Show only streams of a certain type.\n     * @param page The result page you want to retrieve.\n     * @param limit The number of results you want to retrieve.\n     */\n    StreamAPI.prototype.getStreams = function (channels, game, languageCode, type, page, limit) {\n        if (limit === void 0) { limit = 25; }\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            var query, data;\n            var _this = this;\n            return tslib_1.__generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        query = { limit: limit.toString() };\n                        if (channels) {\n                            query.channel = typeof channels === 'string' ? channels : channels.join(',');\n                        }\n                        if (game) {\n                            query.game = game;\n                        }\n                        if (languageCode) {\n                            query.broadcaster_language = languageCode;\n                        }\n                        if (type) {\n                            query.stream_type = type;\n                        }\n                        if (page) {\n                            query.offset = ((page - 1) * limit).toString();\n                        }\n                        return [4 /*yield*/, this._client.callAPI({ url: 'streams', query: query })];\n                    case 1:\n                        data = _a.sent();\n                        return [2 /*return*/, data.streams.map(function (streamData) { return new Stream_1.default(streamData, _this._client); })];\n                }\n            });\n        });\n    };\n    /**\n     * Retrieves a list of all streams.\n     *\n     * @param page The result page you want to retrieve.\n     * @param limit The number of results you want to retrieve.\n     */\n    StreamAPI.prototype.getAllStreams = function (page, limit) {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            return tslib_1.__generator(this, function (_a) {\n                return [2 /*return*/, this.getStreams(undefined, undefined, undefined, Stream_1.StreamType.All, page, limit)];\n            });\n        });\n    };\n    /**\n     * Retrieves a list of all live streams.\n     *\n     * @param page The result page you want to retrieve.\n     * @param limit The number of results you want to retrieve.\n     */\n    StreamAPI.prototype.getAllLiveStreams = function (page, limit) {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            return tslib_1.__generator(this, function (_a) {\n                return [2 /*return*/, this.getStreams(undefined, undefined, undefined, Stream_1.StreamType.Live, page, limit)];\n            });\n        });\n    };\n    /**\n     * Retrieves a list of all streams on channels the currently authenticated user is following.\n     *\n     * @param type Show only streams of a certain type.\n     * @param page The result page you want to retrieve.\n     * @param limit The number of results you want to retrieve.\n     */\n    StreamAPI.prototype.getFollowedStreams = function (type, page, limit) {\n        if (limit === void 0) { limit = 25; }\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            var query, data;\n            var _this = this;\n            return tslib_1.__generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        query = { limit: limit.toString() };\n                        if (type) {\n                            query.type = type;\n                        }\n                        if (page) {\n                            query.offset = ((page - 1) * limit).toString();\n                        }\n                        return [4 /*yield*/, this._client.callAPI({ url: 'streams/followed', query: query, scope: 'user_read' })];\n                    case 1:\n                        data = _a.sent();\n                        return [2 /*return*/, data.streams.map(function (streamData) { return new Stream_1.default(streamData, _this._client); })];\n                }\n            });\n        });\n    };\n    tslib_1.__decorate([\n        Cache_1.Cached(60)\n    ], StreamAPI.prototype, \"getStreamByChannel\", null);\n    tslib_1.__decorate([\n        Cache_1.Cached(60)\n    ], StreamAPI.prototype, \"getFollowedStreams\", null);\n    StreamAPI = tslib_1.__decorate([\n        Cache_1.Cacheable\n    ], StreamAPI);\n    return StreamAPI;\n}(BaseAPI_1.default));\nexports.default = StreamAPI;\n//# sourceMappingURL=StreamAPI.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar NonEnumerable_1 = require(\"../../../Toolkit/Decorators/NonEnumerable\");\nvar ChannelPlaceholder_1 = require(\"../Channel/ChannelPlaceholder\");\nvar NoSubscriptionProgramError_1 = require(\"../../../Errors/NoSubscriptionProgramError\");\n/**\n * A Twitch user.\n */\nvar User = /** @class */ (function () {\n    /** @private */\n    function User(/** @private */ _data, client) {\n        this._data = _data;\n        this._client = client;\n    }\n    Object.defineProperty(User.prototype, \"cacheKey\", {\n        /** @private */\n        get: function () {\n            return this._data._id;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(User.prototype, \"id\", {\n        /**\n         * The ID of the user.\n         */\n        get: function () {\n            return this._data._id;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(User.prototype, \"bio\", {\n        /**\n         * The bio of the user.\n         */\n        get: function () {\n            return this._data.bio;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(User.prototype, \"creationDate\", {\n        /**\n         * The date when the user was created, i.e. when they registered on Twitch.\n         */\n        get: function () {\n            return new Date(this._data.created_at);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(User.prototype, \"updateDate\", {\n        /**\n         * The last date when the user changed anything in their profile, e.g. their description or their profile picture.\n         */\n        get: function () {\n            return new Date(this._data.updated_at);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(User.prototype, \"name\", {\n        /**\n         * The user name of the user.\n         */\n        get: function () {\n            return this._data.name;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(User.prototype, \"displayName\", {\n        /**\n         * The display name of the user.\n         */\n        get: function () {\n            return this._data.display_name;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(User.prototype, \"logoUrl\", {\n        /**\n         * The URL to the profile picture of the user.\n         */\n        get: function () {\n            return this._data.logo;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(User.prototype, \"type\", {\n        /**\n         * The type of the user.\n         */\n        get: function () {\n            return this._data.type;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Retrieves the channel data of the user.\n     */\n    User.prototype.getChannel = function () {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            return tslib_1.__generator(this, function (_a) {\n                return [2 /*return*/, this._client.kraken.channels.getChannel(this)];\n            });\n        });\n    };\n    /**\n     * Gets a channel placeholder object for the user, which can do anything you can do to a channel with just the ID.\n     */\n    User.prototype.getChannelPlaceholder = function () {\n        return new ChannelPlaceholder_1.default(this._data._id, this._client);\n    };\n    /**\n     * Retrieves the currently running stream of the user.\n     */\n    User.prototype.getStream = function () {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            return tslib_1.__generator(this, function (_a) {\n                return [2 /*return*/, this.getChannelPlaceholder().getStream()];\n            });\n        });\n    };\n    /**\n     * Retrieves the subscription data for the user to the given channel.\n     *\n     * Throws if the channel doesn't have a subscription program or the user is not subscribed to it.\n     *\n     * This method requires access to the user. If you only have access to the channel,\n     * use {@ChannelPlaceholder#getSubscriptionBy} instead.\n     *\n     * @param channel The channel you want to get the subscription data for.\n     */\n    User.prototype.getSubscriptionTo = function (channel) {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            return tslib_1.__generator(this, function (_a) {\n                return [2 /*return*/, this._client.kraken.users.getSubscriptionData(this, channel)];\n            });\n        });\n    };\n    /**\n     * Checks whether the user is subscribed to the given channel.\n     *\n     * @param channel The channel you want to check the subscription for.\n     */\n    User.prototype.isSubscribedTo = function (channel) {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            var e_1;\n            return tslib_1.__generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        _a.trys.push([0, 2, , 3]);\n                        return [4 /*yield*/, this.getSubscriptionTo(channel)];\n                    case 1: return [2 /*return*/, (_a.sent()) !== null];\n                    case 2:\n                        e_1 = _a.sent();\n                        if (e_1 instanceof NoSubscriptionProgramError_1.default) {\n                            return [2 /*return*/, false];\n                        }\n                        throw e_1;\n                    case 3: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Retrieves a list of channels followed by the user.\n     *\n     * @param page The result page you want to retrieve.\n     * @param limit The number of results you want to retrieve.\n     * @param orderBy The field to order by.\n     * @param orderDirection The direction to order in - ascending or descending.\n     */\n    User.prototype.getFollows = function (page, limit, orderBy, orderDirection) {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            return tslib_1.__generator(this, function (_a) {\n                return [2 /*return*/, this._client.kraken.users.getFollowedChannels(this, page, limit, orderBy, orderDirection)];\n            });\n        });\n    };\n    /**\n     * Retrieves the follow data of the user to a given channel.\n     *\n     * @param channel The channel to retrieve the follow data for.\n     */\n    User.prototype.getFollowTo = function (channel) {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            return tslib_1.__generator(this, function (_a) {\n                return [2 /*return*/, this._client.kraken.users.getFollowedChannel(this, channel)];\n            });\n        });\n    };\n    /**\n     * Checks whether the user is following the given channel.\n     *\n     * @param channel The channel to check for the user's follow.\n     */\n    User.prototype.follows = function (channel) {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            var e_2;\n            return tslib_1.__generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        _a.trys.push([0, 2, , 3]);\n                        return [4 /*yield*/, this.getFollowTo(channel)];\n                    case 1: return [2 /*return*/, (_a.sent()) !== null];\n                    case 2:\n                        e_2 = _a.sent();\n                        throw e_2;\n                    case 3: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Follows the channel with the authenticated user.\n     */\n    User.prototype.follow = function () {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            var currentUser;\n            return tslib_1.__generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this._client.kraken.users.getMe()];\n                    case 1:\n                        currentUser = _a.sent();\n                        return [2 /*return*/, currentUser.followChannel(this)];\n                }\n            });\n        });\n    };\n    /**\n     * Unfollows the channel with the authenticated user.\n     */\n    User.prototype.unfollow = function () {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            var currentUser;\n            return tslib_1.__generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this._client.kraken.users.getMe()];\n                    case 1:\n                        currentUser = _a.sent();\n                        return [2 /*return*/, currentUser.unfollowChannel(this)];\n                }\n            });\n        });\n    };\n    /**\n     * Retrieves the emotes the user can use.\n     */\n    User.prototype.getEmotes = function () {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            return tslib_1.__generator(this, function (_a) {\n                return [2 /*return*/, this._client.kraken.users.getUserEmotes(this)];\n            });\n        });\n    };\n    tslib_1.__decorate([\n        NonEnumerable_1.NonEnumerable\n    ], User.prototype, \"_client\", void 0);\n    return User;\n}());\nexports.default = User;\n//# sourceMappingURL=User.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar TwitchClient_1 = require(\"../../TwitchClient\");\nvar NonEnumerable_1 = require(\"../../Toolkit/Decorators/NonEnumerable\");\n/**\n * Represents a request to the new Twitch API (Helix) that utilizes a cursor to paginate through its results.\n *\n * Aside from the methods described below, you can also utilize the async iterator using `for await .. of`:\n *\n * ```ts\n * const result = client.helix.videos.getVideosByUser('125328655');\n * for await (const video of result) {\n *     console.log(video.title);\n * }\n * ```\n */\nvar HelixPaginatedRequest = /** @class */ (function () {\n    /** @private */\n    function HelixPaginatedRequest(_callOptions, client, _mapper) {\n        this._callOptions = _callOptions;\n        this._mapper = _mapper;\n        this._client = client;\n    }\n    Object.defineProperty(HelixPaginatedRequest.prototype, \"current\", {\n        /**\n         * The last retrieved page of data associated to the requested resource.\n         *\n         * Only works with {@HelixPaginatedRequest#getNext} and not with any other methods of data retrieval.\n         */\n        get: function () {\n            return this._currentData ? this._currentData.data : undefined;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Retrieves and returns the next available page of data associated to the requested resource, or an empty array if there are no more available pages.\n     */\n    HelixPaginatedRequest.prototype.getNext = function () {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            var result;\n            return tslib_1.__generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this._fetchData()];\n                    case 1:\n                        result = _a.sent();\n                        if (!result.data.length) {\n                            return [2 /*return*/, []];\n                        }\n                        return [2 /*return*/, this._processResult(result)];\n                }\n            });\n        });\n    };\n    /**\n     * Retrieves and returns all data associated to the requested resource.\n     *\n     * Be aware that this makes multiple calls to the Twitch API. Due to this, you might be more suspectible to rate limits.\n     *\n     * Also be aware that this resets the internal cursor, so avoid using this and {@HelixPaginatedRequest#getNext} together.\n     */\n    HelixPaginatedRequest.prototype.getAll = function () {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            var result, data;\n            return tslib_1.__generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        this.reset();\n                        result = [];\n                        _a.label = 1;\n                    case 1: return [4 /*yield*/, this.getNext()];\n                    case 2:\n                        data = _a.sent();\n                        if (!data.length) {\n                            return [3 /*break*/, 4];\n                        }\n                        result.push.apply(result, tslib_1.__spread(data));\n                        _a.label = 3;\n                    case 3:\n                        if (this._currentCursor) return [3 /*break*/, 1];\n                        _a.label = 4;\n                    case 4:\n                        this.reset();\n                        return [2 /*return*/, result];\n                }\n            });\n        });\n    };\n    Object.defineProperty(HelixPaginatedRequest.prototype, \"currentCursor\", {\n        /**\n         * Retrieves the current cursor.\n         *\n         * Only useful if you want to make manual requests to the API.\n         */\n        get: function () {\n            return this._currentCursor;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Resets the internal cursor.\n     *\n     * This will make {@HelixPaginatedRequest#getNext} start from the first page again.\n     */\n    HelixPaginatedRequest.prototype.reset = function () {\n        this._currentCursor = undefined;\n    };\n    /** @private */\n    HelixPaginatedRequest.prototype._fetchData = function (additionalOptions) {\n        if (additionalOptions === void 0) { additionalOptions = {}; }\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            return tslib_1.__generator(this, function (_a) {\n                return [2 /*return*/, this._client.callAPI(tslib_1.__assign({ type: TwitchClient_1.TwitchAPICallType.Helix }, this._callOptions, additionalOptions, { query: tslib_1.__assign({}, this._callOptions.query, { after: this._currentCursor, first: '100' }, additionalOptions.query) }))];\n            });\n        });\n    };\n    /** @private */\n    HelixPaginatedRequest.prototype._processResult = function (result) {\n        var _this = this;\n        this._currentCursor = result.pagination ? result.pagination.cursor : undefined;\n        this._currentData = result;\n        return result.data.reduce(function (acc, elem) {\n            var mapped = _this._mapper(elem);\n            return Array.isArray(mapped) ? tslib_1.__spread(acc, mapped) : tslib_1.__spread(acc, [mapped]);\n        }, []);\n    };\n    tslib_1.__decorate([\n        NonEnumerable_1.NonEnumerable\n    ], HelixPaginatedRequest.prototype, \"_client\", void 0);\n    return HelixPaginatedRequest;\n}());\nexports.default = HelixPaginatedRequest;\nif (typeof Symbol === 'function' && typeof Symbol.asyncIterator === 'symbol') {\n    Object.defineProperty(HelixPaginatedRequest.prototype, Symbol.asyncIterator, {\n        value: function () {\n            return tslib_1.__asyncGenerator(this, arguments, function () {\n                var data;\n                return tslib_1.__generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0:\n                            this.reset();\n                            _a.label = 1;\n                        case 1:\n                            if (!true) return [3 /*break*/, 5];\n                            return [4 /*yield*/, tslib_1.__await(this.getNext())];\n                        case 2:\n                            data = _a.sent();\n                            if (!data.length) {\n                                return [3 /*break*/, 5];\n                            }\n                            return [5 /*yield**/, tslib_1.__values(tslib_1.__asyncDelegator(tslib_1.__asyncValues(data[Symbol.iterator]())))];\n                        case 3: return [4 /*yield*/, tslib_1.__await.apply(void 0, [_a.sent()])];\n                        case 4:\n                            _a.sent();\n                            return [3 /*break*/, 1];\n                        case 5: return [2 /*return*/];\n                    }\n                });\n            });\n        }\n    });\n}\n//# sourceMappingURL=HelixPaginatedRequest.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar NonEnumerable_1 = require(\"../../../Toolkit/Decorators/NonEnumerable\");\n/**\n * A subscription to a Twitch WebHook.\n */\nvar HelixWebHookSubscription = /** @class */ (function () {\n    /** @private */\n    function HelixWebHookSubscription(_data, client) {\n        this._data = _data;\n        this._client = client;\n    }\n    Object.defineProperty(HelixWebHookSubscription.prototype, \"topicUrl\", {\n        /**\n         * The topic the WebHook is listening to.\n         */\n        get: function () {\n            return this._data.topic;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(HelixWebHookSubscription.prototype, \"callbackUrl\", {\n        /**\n         * The URL that will be called for every subscribed event.\n         */\n        get: function () {\n            return this._data.callback;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(HelixWebHookSubscription.prototype, \"expiryDate\", {\n        /**\n         * The time when the subscription will expire.\n         */\n        get: function () {\n            return new Date(this._data.expires_at);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    tslib_1.__decorate([\n        NonEnumerable_1.NonEnumerable\n    ], HelixWebHookSubscription.prototype, \"_client\", void 0);\n    return HelixWebHookSubscription;\n}());\nexports.default = HelixWebHookSubscription;\n//# sourceMappingURL=HelixWebHookSubscription.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar CustomError_1 = require(\"./CustomError\");\n/**\n * Thrown whenever a HTTP error occurs. Some HTTP errors are handled in the library when they're expected.\n */\nvar HTTPStatusCodeError = /** @class */ (function (_super) {\n    tslib_1.__extends(HTTPStatusCodeError, _super);\n    /** @private */\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    function HTTPStatusCodeError(statusCode, statusText, body) {\n        var _this = _super.call(this, \"Encountered HTTP status code \" + statusCode + \": \" + statusText + \"\\n\\nBody:\\n\" + JSON.stringify(body, null, 2)) || this;\n        _this._statusCode = statusCode;\n        _this._body = body;\n        return _this;\n    }\n    Object.defineProperty(HTTPStatusCodeError.prototype, \"statusCode\", {\n        get: function () {\n            return this._statusCode;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(HTTPStatusCodeError.prototype, \"body\", {\n        get: function () {\n            return this._body;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return HTTPStatusCodeError;\n}(CustomError_1.default));\nexports.default = HTTPStatusCodeError;\n//# sourceMappingURL=HTTPStatusCodeError.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar NonEnumerable_1 = require(\"../../../Toolkit/Decorators/NonEnumerable\");\nvar HelixBitsLeaderboardEntry_1 = require(\"./HelixBitsLeaderboardEntry\");\nvar Cache_1 = require(\"../../../Toolkit/Decorators/Cache\");\n/**\n * A leaderboard where the users who used the most bits to a broadcaster are listed.\n */\nvar HelixBitsLeaderboard = /** @class */ (function () {\n    /** @private */\n    function HelixBitsLeaderboard(_data, client) {\n        this._data = _data;\n        this._client = client;\n    }\n    Object.defineProperty(HelixBitsLeaderboard.prototype, \"entries\", {\n        /**\n         * The entries of the leaderboard.\n         */\n        get: function () {\n            var _this = this;\n            return this._data.data.map(function (entry) { return new HelixBitsLeaderboardEntry_1.default(entry, _this._client); });\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(HelixBitsLeaderboard.prototype, \"totalCount\", {\n        /**\n         * The total amount of people on the requested leaderboard.\n         */\n        get: function () {\n            return this._data.total;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    tslib_1.__decorate([\n        NonEnumerable_1.NonEnumerable\n    ], HelixBitsLeaderboard.prototype, \"_client\", void 0);\n    tslib_1.__decorate([\n        Cache_1.CachedGetter()\n    ], HelixBitsLeaderboard.prototype, \"entries\", null);\n    HelixBitsLeaderboard = tslib_1.__decorate([\n        Cache_1.Cacheable\n    ], HelixBitsLeaderboard);\n    return HelixBitsLeaderboard;\n}());\nexports.default = HelixBitsLeaderboard;\n//# sourceMappingURL=HelixBitsLeaderboard.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar NonEnumerable_1 = require(\"../../../Toolkit/Decorators/NonEnumerable\");\nvar User_1 = require(\"./User\");\n/**\n * A relation of a previously givn user blocking another user.\n */\nvar UserBlock = /** @class */ (function () {\n    /** @private */\n    function UserBlock(_data, client) {\n        this._data = _data;\n        this._client = client;\n    }\n    Object.defineProperty(UserBlock.prototype, \"blockedUser\", {\n        /**\n         * The blocked user.\n         */\n        get: function () {\n            return new User_1.default(this._data.user, this._client);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    tslib_1.__decorate([\n        NonEnumerable_1.NonEnumerable\n    ], UserBlock.prototype, \"_client\", void 0);\n    return UserBlock;\n}());\nexports.default = UserBlock;\n//# sourceMappingURL=UserBlock.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar NonEnumerable_1 = require(\"../../../Toolkit/Decorators/NonEnumerable\");\nvar HelixClip = /** @class */ (function () {\n    /** @private */\n    function HelixClip(_data, client) {\n        this._data = _data;\n        this._client = client;\n    }\n    Object.defineProperty(HelixClip.prototype, \"id\", {\n        /**\n         * The clip ID.\n         */\n        get: function () {\n            return this._data.id;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(HelixClip.prototype, \"url\", {\n        /**\n         * The URL of the clip.\n         */\n        get: function () {\n            return this._data.url;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(HelixClip.prototype, \"embedUrl\", {\n        /**\n         * The embed URL of the clip.\n         */\n        get: function () {\n            return this._data.embed_url;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(HelixClip.prototype, \"broadcasterId\", {\n        /**\n         * The user ID of the broadcaster of the stream where the clip was created.\n         */\n        get: function () {\n            return this._data.broadcaster_id;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(HelixClip.prototype, \"broadcasterDisplayName\", {\n        /**\n         * The display name of the broadcaster of the stream where the clip was created.\n         */\n        get: function () {\n            return this._data.broadcaster_name;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Retrieves information about the broadcaster of the stream where the clip was created.\n     */\n    HelixClip.prototype.getBroadcaster = function () {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            return tslib_1.__generator(this, function (_a) {\n                return [2 /*return*/, this._client.helix.users.getUserById(this._data.broadcaster_id)];\n            });\n        });\n    };\n    Object.defineProperty(HelixClip.prototype, \"creatorId\", {\n        /**\n         * The user ID of the creator of the clip.\n         */\n        get: function () {\n            return this._data.creator_id;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(HelixClip.prototype, \"creatorDisplayName\", {\n        /**\n         * The display name of the creator of the clip.\n         */\n        get: function () {\n            return this._data.creator_name;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Retrieves information about the creator of the clip.\n     */\n    HelixClip.prototype.getCreator = function () {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            return tslib_1.__generator(this, function (_a) {\n                return [2 /*return*/, this._client.helix.users.getUserById(this._data.creator_id)];\n            });\n        });\n    };\n    Object.defineProperty(HelixClip.prototype, \"videoId\", {\n        /**\n         * The ID of the video the clip is taken from.\n         */\n        get: function () {\n            return this._data.video_id;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Retrieves information about the video the clip is taken from.\n     */\n    HelixClip.prototype.getVideo = function () {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            return tslib_1.__generator(this, function (_a) {\n                return [2 /*return*/, this._client.helix.videos.getVideoById(this._data.video_id)];\n            });\n        });\n    };\n    Object.defineProperty(HelixClip.prototype, \"gameId\", {\n        /**\n         * The ID of the game that was being played when the clip was created.\n         */\n        get: function () {\n            return this._data.game_id;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Retrieves information about the game that was being played when the clip was created.\n     */\n    HelixClip.prototype.getGame = function () {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            return tslib_1.__generator(this, function (_a) {\n                return [2 /*return*/, this._client.helix.games.getGameById(this._data.game_id)];\n            });\n        });\n    };\n    Object.defineProperty(HelixClip.prototype, \"language\", {\n        /**\n         * The language of the stream where the clip was created.\n         */\n        get: function () {\n            return this._data.language;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(HelixClip.prototype, \"title\", {\n        /**\n         * The title of the clip.\n         */\n        get: function () {\n            return this._data.title;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(HelixClip.prototype, \"views\", {\n        /**\n         * The number of views of the clip.\n         */\n        get: function () {\n            return this._data.view_count;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(HelixClip.prototype, \"creationDate\", {\n        /**\n         * The date when the clip was created.\n         */\n        get: function () {\n            return new Date(this._data.created_at);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(HelixClip.prototype, \"thumbnailUrl\", {\n        /**\n         * The URL of the thumbnail of the clip.\n         */\n        get: function () {\n            return this._data.thumbnail_url;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    tslib_1.__decorate([\n        NonEnumerable_1.NonEnumerable\n    ], HelixClip.prototype, \"_client\", void 0);\n    return HelixClip;\n}());\nexports.default = HelixClip;\n//# sourceMappingURL=HelixClip.js.map"],"sourceRoot":""}