{"version":3,"sources":["webpack:///./node_modules/twitch/lib/API/Badges/ChatBadgeSet.js","webpack:///./node_modules/twitch/lib/Toolkit/UserTools.js","webpack:///./node_modules/twitch/lib/API/Helix/Stream/HelixStreamMarkerWithVideo.js","webpack:///./node_modules/twitch/lib/API/Helix/User/HelixFollow.js","webpack:///./node_modules/twitch/lib/API/Kraken/Channel/ChannelSubscription.js","webpack:///./node_modules/twitch/lib/API/Helix/Subscriptions/HelixSubscription.js","webpack:///./node_modules/twitch/lib/API/Kraken/Chat/ChatEmoteList.js","webpack:///./node_modules/twitch/lib/API/Helix/Stream/HelixStreamMarker.js","webpack:///./node_modules/twitch/lib/Auth/ClientCredentialsAuthProvider.js","webpack:///./node_modules/fetch-ponyfill/build/fetch-browser.js","webpack:///./node_modules/twitch/lib/API/Helix/Clip/HelixClipAPI.js","webpack:///./node_modules/twitch/lib/API/Helix/Video/HelixVideoAPI.js","webpack:///./node_modules/twitch/lib/API/Kraken/Search/SearchAPI.js","webpack:///./node_modules/twitch/lib/API/Kraken/Team/TeamAPI.js","webpack:///./node_modules/twitch/lib/API/Helix/Game/HelixGame.js","webpack:///./node_modules/twitch/lib/TwitchClient.js","webpack:///./node_modules/twitch/lib/API/Badges/ChatBadgeVersion.js","webpack:///./node_modules/twitch/lib/API/Kraken/Bits/BitsAPI.js","webpack:///./node_modules/twitch/lib/API/Kraken/Team/TeamWithUsers.js","webpack:///./node_modules/twitch/lib/API/Unsupported/ChannelEvent.js","webpack:///./node_modules/twitch/lib/API/Helix/User/HelixUser.js","webpack:///./node_modules/qs/lib/stringify.js","webpack:///./node_modules/qs/lib/index.js","webpack:///./node_modules/twitch/lib/Toolkit/ArrayTools.js","webpack:///./node_modules/twitch/lib/API/Kraken/Channel/PrivilegedChannel.js","webpack:///./node_modules/twitch/lib/API/Kraken/Chat/ChatAPI.js","webpack:///./node_modules/twitch/lib/Errors/StreamNotLiveError.js","webpack:///./node_modules/twitch/lib/API/Kraken/Channel/ChannelFollow.js","webpack:///./node_modules/twitch/lib/Toolkit/Decorators/Cache.js","webpack:///./node_modules/twitch/lib/API/Helix/Stream/HelixStream.js","webpack:///./node_modules/twitch/lib/API/Helix/Stream/HelixStreamAPI.js","webpack:///./node_modules/twitch/lib/API/Kraken/User/PrivilegedUser.js","webpack:///./node_modules/twitch/lib/Auth/StaticAuthProvider.js","webpack:///./node_modules/twitch/lib/API/Kraken/Bits/CheermoteList.js","webpack:///./node_modules/twitch/lib/Errors/ConfigError.js","webpack:///./node_modules/twitch/lib/Errors/CustomError.js","webpack:///./node_modules/twitch/lib/API/Kraken/Channel/EmoteSetList.js","webpack:///./node_modules/twitch/lib/API/Helix/Video/HelixVideo.js","webpack:///./node_modules/twitch/lib/Toolkit/ObjectTools.js","webpack:///./node_modules/twitch/lib/Errors/HellFreezesOverError.js","webpack:///./node_modules/twitch/lib/API/Badges/ChatBadgeList.js","webpack:///./node_modules/twitch/lib/API/Helix/Subscriptions/HelixSubscriptionAPI.js","webpack:///./node_modules/twitch/lib/API/Kraken/Chat/ChatEmote.js","webpack:///./node_modules/twitch/lib/Errors/NoSubscriptionProgramError.js","webpack:///./node_modules/twitch/lib/API/Helix/WebHooks/HelixWebHooksAPI.js","webpack:///./node_modules/tslib/tslib.es6.js","webpack:///./node_modules/twitch/lib/API/Helix/User/HelixUserAPI.js","webpack:///./node_modules/qs/lib/parse.js","webpack:///./node_modules/twitch/lib/API/Kraken/Channel/ChannelAPI.js","webpack:///./node_modules/twitch/lib/API/Helix/User/HelixPrivilegedUser.js","webpack:///./node_modules/twitch/lib/API/Kraken/Team/Team.js","webpack:///./node_modules/twitch/lib/API/Helix/HelixAPIGroup.js","webpack:///./node_modules/twitch/lib/API/Unsupported/UnsupportedAPI.js","webpack:///./node_modules/twitch/lib/API/Kraken/Chat/ChatRoom.js","webpack:///./node_modules/twitch/lib/API/Kraken/Subscription.js","webpack:///./node_modules/twitch/lib/API/Kraken/Channel/Channel.js","webpack:///./node_modules/twitch/lib/API/Kraken/KrakenAPIGroup.js","webpack:///./node_modules/qs/lib/formats.js","webpack:///./node_modules/twitch/lib/API/Kraken/Channel/ChannelPlaceholder.js","webpack:///./node_modules/twitch/lib/API/AccessToken.js","webpack:///./node_modules/twitch/lib/index.js","webpack:///./node_modules/twitch/lib/API/Badges/BadgesAPI.js","webpack:///./node_modules/twitch/lib/API/Kraken/User/UserSubscription.js","webpack:///./node_modules/twitch/lib/API/Kraken/Stream/Stream.js","webpack:///./node_modules/twitch/lib/Toolkit/Decorators/NonEnumerable.js","webpack:///./node_modules/twitch/lib/API/TokenInfo.js","webpack:///./node_modules/twitch/lib/API/Helix/Bits/HelixBitsAPI.js","webpack:///./node_modules/twitch/lib/API/Helix/Bits/HelixBitsLeaderboardEntry.js","webpack:///./node_modules/qs/lib/utils.js","webpack:///./node_modules/twitch/lib/API/Kraken/User/UserFollow.js","webpack:///./node_modules/twitch/lib/API/Helix/Game/HelixGameAPI.js","webpack:///./node_modules/twitch/lib/API/BaseAPI.js","webpack:///./node_modules/twitch/lib/API/Helix/HelixPaginatedRequestWithTotal.js","webpack:///./node_modules/twitch/lib/API/Kraken/User/UserAPI.js","webpack:///./node_modules/twitch/lib/API/Unsupported/ChattersList.js","webpack:///./node_modules/twitch/lib/Auth/RefreshableAuthProvider.js","webpack:///./node_modules/twitch/lib/API/Kraken/Stream/StreamAPI.js","webpack:///./node_modules/twitch/lib/API/Kraken/User/User.js","webpack:///./node_modules/twitch/lib/API/Helix/HelixPaginatedRequest.js","webpack:///./node_modules/twitch/lib/API/Helix/WebHooks/HelixWebHookSubscription.js","webpack:///./node_modules/twitch/lib/Errors/HTTPStatusCodeError.js","webpack:///./node_modules/twitch/lib/API/Helix/Bits/HelixBitsLeaderboard.js","webpack:///./node_modules/twitch/lib/API/Kraken/User/UserBlock.js","webpack:///./node_modules/twitch/lib/API/Helix/Clip/HelixClip.js"],"names":["Object","defineProperty","exports","value","tslib_1","__webpack_require__","ChatBadgeVersion_1","NonEnumerable_1","ChatBadgeSet","_data","client","this","_client","prototype","get","keys","versions","enumerable","configurable","getVersion","name","default","__decorate","NonEnumerable","extractUserId","user","id","extractUserName","HelixStreamMarker_1","HelixStreamMarkerWithVideo","_super","data","_videoId","_this","call","__extends","URL","getVideo","__awaiter","__generator","_a","helix","videos","getVideoById","HelixFollow","from_id","from_name","getUser","users","getUserById","to_id","to_name","getFollowedUser","Date","followed_at","Subscription_1","User_1","ChannelSubscription","apply","arguments","HelixSubscription","broadcaster_id","broadcaster_name","getBroadcaster","broadcasterId","is_gift","tier","user_id","user_name","userId","ChatEmote_1","Cache_1","ChatEmoteList","map","emote","getAllFromSet","setId","filter","emoticon_set","getById","find","CachedGetter","Cached","Cacheable","HelixStreamMarker","created_at","description","position_seconds","TwitchClient_1","ClientCredentialsAuthProvider","clientId","clientSecret","_clientId","_clientSecret","getAccessToken","scopes","length","Error","_token","isExpired","refresh","_b","label","getAppAccessToken","sent","setAccessToken","token","global","__WEBPACK_AMD_DEFINE_RESULT__","self","fetchPonyfill","options","Promise","XMLHttpRequest","create","fetch","undefined","writable","support","searchParams","iterable","Symbol","blob","Blob","e","formData","arrayBuffer","viewClasses","isDataView","obj","DataView","isPrototypeOf","isArrayBufferView","ArrayBuffer","isView","indexOf","toString","Headers","append","normalizeName","normalizeValue","oldValue","has","hasOwnProperty","set","forEach","callback","thisArg","items","push","iteratorFor","values","entries","iterator","methods","Request","clone","body","_bodyInit","Body","Response","status","statusText","headers","url","error","response","type","redirectStatuses","redirect","RangeError","location","input","init","resolve","reject","request","xhr","onload","parseHeaders","getAllResponseHeaders","responseURL","responseText","onerror","TypeError","ontimeout","open","method","credentials","withCredentials","responseType","setRequestHeader","send","polyfill","String","test","toLowerCase","next","shift","done","Array","isArray","header","getOwnPropertyNames","consumed","bodyUsed","fileReaderReady","reader","result","readBlobAsArrayBuffer","FileReader","promise","readAsArrayBuffer","readBlobAsText","readAsText","readArrayBufferAsText","buf","view","Uint8Array","chars","i","fromCharCode","join","bufferClone","slice","byteLength","buffer","_initBody","_bodyText","_bodyBlob","FormData","_bodyFormData","URLSearchParams","_bodyArrayBuffer","rejected","then","text","decode","json","JSON","parse","normalizeMethod","upcased","toUpperCase","mode","referrer","form","trim","split","bytes","replace","decodeURIComponent","rawHeaders","preProcessedHeaders","line","parts","key","bodyInit","ok","module","BaseAPI_1","HelixClip_1","HelixPaginatedRequest_1","HelixClipAPI","getClipsForBroadcaster","_getClips","__assign","filterType","ids","getClipsForBroadcasterPaginated","_getClipsPaginated","getClipsForGame","gameId","getClipsForGamePaginated","getClipsByIds","getClipById","clips","createClip","params","channelId","createAfterDelay","callAPI","TwitchAPICallType","Helix","scope","query","has_delay","startDate","endDate","limit","_c","started_at","ended_at","first","cursor","pagination","HelixVideo_1","UserTools_1","HelixVideoAPI","getVideosByIds","_getVideos","getVideosByUser","getVideosByUserPaginated","_getVideosPaginated","getVideosByGame","getVideosByGamePaginated","filterValues","_makeVideosQuery","language","period","orderBy","sort","Channel_1","Stream_1","SearchAPI","searchChannels","term","page","offset","channels","channelData","searchStreams","hls","streams","streamData","Team_1","TeamWithUsers_1","TeamAPI","getTeams","teams","team","getTeamByName","teamData","HelixGame","box_art_url","qs","TokenInfo_1","CheermoteList_1","AccessToken_1","StaticAuthProvider_1","RefreshableAuthProvider_1","ClientCredentialsAuthProvider_1","ConfigError_1","HTTPStatusCodeError_1","KrakenAPIGroup_1","HelixAPIGroup_1","BadgesAPI_1","UnsupportedAPI_1","TwitchClient","config","authProvider","restConfig","__rest","_config","preAuth","cheermotes","defaultBackground","CheermoteBackground","dark","defaultState","CheermoteState","animated","defaultScale","CheermoteScale","x1","initialScopes","accessToken","refreshConfig","tokenData","newToken","getTokenInfo","valid","refreshAccessToken","refreshToken","withClientCredentials","requestOptions","_getUrl","stringify","arrayFormat","Accept","version","jsonBody","bind","concat","code","redirectUri","grant_type","client_id","client_secret","redirect_uri","refresh_token","Kraken","typeName","Custom","ChatBadgeVersion","click_action","click_url","getImageUrl","scale","title","BitsAPI","getCheermotes","channel","includeSponsored","channel_id","include_sponsored","actions","TeamWithUsers","getUsers","ChannelEvent","_id","start_time","end_time","time_zone_id","buildCoverImageUrl","width","height","cover_image_url","NoSubscriptionProgramError_1","HelixBroadcasterType","HelixUserType","HelixUser","login","display_name","broadcaster_type","profile_image_url","offline_image_url","view_count","getStream","getStreamByUserId","getFollows","getFollowTo","broadcaster","followedUser","follows","follow","currentUser","kraken","getMe","followChannel","unfollow","unfollowChannel","getSubscriptionTo","subscriptions","getSubscriptionForUser","isSubscribedTo","e_1","trys","utils","formats","arrayPrefixGenerators","brackets","prefix","comma","indices","repeat","pushToArray","arr","valueOrArray","toISO","toISOString","defaults","addQueryPrefix","allowDots","charset","charsetSentinel","delimiter","encode","encoder","encodeValuesOnly","formatter","formatters","serializeDate","date","skipNulls","strictNullHandling","object","generateArrayPrefix","isBuffer","keyValue","objKeys","normalizeStringifyOptions","opts","format","joined","flatten","__spread","PrivilegedChannel","stream_key","email","getEditors","getChannelEditors","startCommercial","startChannelCommercial","resetStreamKey","streamKey","resetChannelStreamKey","ChatEmoteList_1","ChatRoom_1","ChatAPI","getEmotesBySets","emotesets","emoticons","getChatRoomsForChannel","rooms","room","CustomError_1","StreamNotLiveError","ChannelFollow","notifications","createCacheKey","propName","createSingleCacheKey","param","cacheKey","objKey","cls","class_1","cache","Map","getFromCache","_cleanCache","entry","setCache","timeInSeconds","expires","now","removeFromCache","internalCacheKey","endsWith","val","startsWith","delete","cacheFailures","Infinity","target","descriptor","origFn","_i","cachedValue","origFn_1","ClearsCache","cacheName","numberOfArguments","args","HelixStreamType","HelixStream","game_id","getGame","games","getGameById","viewer_count","thumbnail_url","HelixStream_1","HelixStreamMarkerWithVideo_1","StreamNotLiveError_1","ArrayTools_1","HelixStreamAPI","getStreams","after","before","community_id","community","game","user_login","userName","getStreamsPaginated","getStreamByUserName","getStreamMarkersForUser","_getStreamMarkers","getStreamMarkersForUserPaginated","_getStreamMarkersPaginated","getStreamMarkersForVideo","videoId","getStreamMarkersForVideoPaginated","createStreamMarker","statusCode","queryType","_mapGetStreamMarkersResult","reduce","video","markers","marker","video_id","PrivilegedUser","email_verified","partnered","twitter_connected","blockUser","userToBlock","unblockUser","userToUnblock","StaticAuthProvider","_accessToken","access_token","_scopes","tokenInfo","some","includes","HellFreezesOverError_1","ObjectTools_1","CheermoteList","indexBy","action","getCheermoteDisplayInfo","bits","cheermoteDefaults","fullOptions","background","state","tiers","correctTier","a","b","min_bits","images","color","getPossibleNames","parseMessage","message","match","names","re","RegExp","exec","name_1","amount","Number","position","index","displayInfo","transformCheerMessage","transformer","currentPosition","__values","foundCheermote","substring","e_1_1","return","substr","ConfigError","CustomError","captureStackTrace","constructor","EmoteSetList","findEmoteId","emoteCode","e_2","_d","emoteSet","emoteSet_1","emoteSet_1_1","e_2_1","HelixVideo","published_at","viewable","duration","part","partialMatch","__read","num","unit","parseInt","h","m","s","mapObject","fn","mapped","assign","objectFromArray","keyFn","key_1","forEachObjectEntry","entriesToObject","HellFreezesOverError","ChatBadgeSet_1","ChatBadgeList","getBadgeSet","_merge","additionalData","__1","HelixSubscription_1","HelixSubscriptionAPI","getSubscriptions","getSubscriptionsPaginated","getSubscriptionsForUsers","list","ChatEmote","NoSubscriptionProgramError","HelixPaginatedRequestWithTotal_1","HelixWebHookSubscription_1","HelixWebHooksAPI","sendHubRequest","callbackUrl","topicUrl","validityInSeconds","secret","hub.mode","hub.topic","hub.callback","hub.lease_seconds","hub.secret","subscribeToUserFollowsFrom","_sendUserFollowsHubRequest","subscribeToUserFollowsTo","unsubscribeFromUserFollowsFrom","unsubscribeFromUserFollowsTo","subscribeToStreamChanges","_sendStreamChangeHubRequest","unsubscribeFromStreamChanges","subscribeToUserChanges","withEmail","_sendUserChangeHubRequest","unsubscribeFromUserChanges","direction","r","__webpack_exports__","d","__param","__metadata","__exportStar","__spreadArrays","__await","__asyncGenerator","__asyncDelegator","__asyncValues","__makeTemplateObject","__importStar","__importDefault","extendStatics","setPrototypeOf","__proto__","p","__","t","n","getOwnPropertySymbols","propertyIsEnumerable","decorators","desc","c","getOwnPropertyDescriptor","Reflect","decorate","paramIndex","decorator","metadataKey","metadataValue","metadata","_arguments","P","generator","fulfilled","step","f","y","g","_","ops","verb","throw","v","op","pop","o","ar","il","k","j","jl","asyncIterator","q","resume","settle","fulfill","cooked","raw","mod","__esModule","UserLookupType","HelixUser_1","HelixPrivilegedUser_1","HelixFollow_1","HelixUserAPI","getUsersByIds","userIds","_getUsers","Id","getUsersByNames","userNames","Login","getUserByName","updateUser","_makeFollowsQuery","total","getFollowsPaginated","hasUserIdParam","lookupType","userData","allowPrototypes","arrayLimit","decoder","depth","ignoreQueryPrefix","interpretNumericEntities","parameterLimit","parseArrays","plainObjects","str","$0","numberStr","isoSentinel","parseValues","cleanStr","skipIndex","bracketEqualsPos","pos","combine","parseObject","chain","leaf","root","cleanRoot","charAt","isNaN","0","parseKeys","givenKey","child","segment","parent","normalizeParseOptions","isRegExp","tempObj","newObj","merge","compact","ChannelSubscription_1","PrivilegedChannel_1","ChannelFollow_1","ChannelAPI","getMyChannel","getChannel","updateChannel","getChannelFollowers","orderDirection","getChannelSubscriptions","_getChannelSubscriptions","sub","getChannelSubscriptionCount","_total","getChannelSubscriptionByUser","byUser","HelixPrivilegedUser","setDescription","Team","banner","updated_at","info","logo","HelixBitsAPI_1","HelixClipAPI_1","HelixGameAPI_1","HelixStreamAPI_1","HelixSubscriptionAPI_1","HelixUserAPI_1","HelixVideoAPI_1","HelixWebHooksAPI_1","HelixAPIGroup","ChattersList_1","ChannelEvent_1","UnsupportedAPI","getChatters","channelName","getEvents","events","event","ChatRoom","owner_id","getOwner","topic","is_previewable","minimum_allowed_role","Subscription","sub_plan","sub_plan_name","ChannelPlaceholder_1","Channel","update","broadcaster_language","followers","mature","partner","profile_banner","profile_banner_background_color","video_banner","views","BitsAPI_1","ChannelAPI_1","ChatAPI_1","SearchAPI_1","StreamAPI_1","UserAPI_1","TeamAPI_1","KrakenAPIGroup","percentTwenties","RFC1738","RFC3986","ChannelPlaceholder","getStreamByChannel","getFollowers","getSubscriptionBy","hasSubscriber","AccessToken","obtainmentDate","_obtainmentDate","expires_in","getTime","HTTPStatusCodeError","RefreshableAuthProvider","TokenInfo","EmoteSetList_1","Stream","StreamType","ChattersList","PrivilegedUser_1","User","UserBlock_1","UserBlock","UserFollow_1","UserFollow","UserSubscription_1","UserSubscription","HelixPaginatedRequest","HelixBitsLeaderboard_1","HelixBitsLeaderboard","HelixBitsLeaderboardEntry_1","HelixBitsLeaderboardEntry","HelixClip","HelixGame_1","ChatBadgeList_1","BadgesAPI","getGlobalBadges","badge_sets","getChannelBadges","includeGlobal","channelBadges","viewers","video_height","average_fps","delay","is_playlist","stream_type","getPreviewUrl","size","preview","authorization","HelixBitsAPI","getLeaderboard","count","contextUserId","rank","score","hexTable","array","compactQueue","queue","item","prop","compacted","arrayToObject","source","mergeTarget","targetItem","acc","strWithoutPlus","unescape","defaultEncoder","string","escape","out","charCodeAt","refs","HelixGameAPI","getGamesByIds","_getGames","getGamesByNames","getGameByName","getTopGames","getTopGamesPaginated","BaseAPI","HelixPaginatedRequestWithTotal","getTotalCount","_currentData","_fetchData","UserAPI","_userByNameCache","_cleanUserCache","cachedEntries","cachedObject","cachedUsers","toFetch","usersData","usersArr","from","getUserEmotes","emoticon_sets","getSubscriptionData","toChannel","getFollowedChannels","sortby","getFollowedChannel","Boolean","getBlockedUsers","blocks","block","userIdToBlock","userIdToUnblock","chatters","childProvider","_refreshToken","_childProvider","_initialExpiry","expiry","_onRefresh","onRefresh","oldToken","refreshedToken","currentScopes","StreamAPI","stream","languageCode","getAllStreams","All","getAllLiveStreams","Live","getFollowedStreams","bio","getChannelPlaceholder","getEmotes","_callOptions","_mapper","getNext","_processResult","getAll","reset","_currentCursor","additionalOptions","elem","HelixWebHookSubscription","expires_at","_statusCode","_body","embed_url","creator_id","creator_name","getCreator"],"mappings":"gHACAA,OAAAC,eAAAC,EAAA,cAA8CC,OAAA,IAC9C,IAAAC,EAAcC,EAAQ,QACtBC,EAAyBD,EAAQ,QACjCE,EAAsBF,EAAQ,QAI9BG,EAAA,WAEA,SAAAA,EAAAC,EAAAC,GACAC,KAAAF,QACAE,KAAAC,QAAAF,EAuBA,OArBAV,OAAAC,eAAAO,EAAAK,UAAA,gBAIAC,IAAA,WACA,OAAAd,OAAAe,KAAAJ,KAAAF,MAAAO,WAEAC,YAAA,EACAC,cAAA,IAOAV,EAAAK,UAAAM,WAAA,SAAAC,GACA,WAAAd,EAAAe,QAAAV,KAAAF,MAAAO,SAAAI,GAAAT,KAAAC,UAEAR,EAAAkB,WAAA,CACAf,EAAAgB,eACAf,EAAAK,UAAA,kBACAL,EA3BA,GA6BAN,EAAAmB,QAAAb,uCC9BA,SAAAgB,EAAAC,GACA,wBAAAA,MAAAC,GAQA,SAAAC,EAAAF,GACA,wBAAAA,MAAAL,KAhBApB,OAAAC,eAAAC,EAAA,cAA8CC,OAAA,IAS9CD,EAAAsB,gBASAtB,EAAAyB,uDClBA3B,OAAAC,eAAAC,EAAA,cAA8CC,OAAA,IAC9C,IAAAC,EAAcC,EAAQ,QACtBuB,EAA0BvB,EAAQ,QAClCwB,EAAA,SAAAC,GAGA,SAAAD,EAAAE,EAAAC,EAAAtB,GACA,IAAAuB,EAAAH,EAAAI,KAAAvB,KAAAoB,EAAArB,IAAAC,KAEA,OADAsB,EAAAD,WACAC,EAgCA,OArCA7B,EAAA+B,UAAAN,EAAAC,GAOA9B,OAAAC,eAAA4B,EAAAhB,UAAA,OAIAC,IAAA,WACA,OAAAH,KAAAF,MAAA2B,KAEAnB,YAAA,EACAC,cAAA,IAEAlB,OAAAC,eAAA4B,EAAAhB,UAAA,WAIAC,IAAA,WACA,OAAAH,KAAAqB,UAEAf,YAAA,EACAC,cAAA,IAKAW,EAAAhB,UAAAwB,SAAA,WACA,OAAAjC,EAAAkC,UAAA3B,UAAA,oBACA,OAAAP,EAAAmC,YAAA5B,KAAA,SAAA6B,GACA,SAAA7B,KAAAC,QAAA6B,MAAAC,OAAAC,aAAAhC,KAAAqB,gBAIAH,EAtCA,CAuCCD,EAAAP,SACDnB,EAAAmB,QAAAQ,uCC3CA7B,OAAAC,eAAAC,EAAA,cAA8CC,OAAA,IAC9C,IAAAC,EAAcC,EAAQ,QACtBE,EAAsBF,EAAQ,QAI9BuC,EAAA,WAEA,SAAAA,EAAAnC,EAAAC,GACAC,KAAAF,QACAE,KAAAC,QAAAF,EA2EA,OAzEAV,OAAAC,eAAA2C,EAAA/B,UAAA,UAIAC,IAAA,WACA,OAAAH,KAAAF,MAAAoC,SAEA5B,YAAA,EACAC,cAAA,IAEAlB,OAAAC,eAAA2C,EAAA/B,UAAA,mBAIAC,IAAA,WACA,OAAAH,KAAAF,MAAAqC,WAEA7B,YAAA,EACAC,cAAA,IAKA0B,EAAA/B,UAAAkC,QAAA,WACA,OAAA3C,EAAAkC,UAAA3B,UAAA,oBACA,OAAAP,EAAAmC,YAAA5B,KAAA,SAAA6B,GACA,SAAA7B,KAAAC,QAAA6B,MAAAO,MAAAC,YAAAtC,KAAAF,MAAAoC,eAIA7C,OAAAC,eAAA2C,EAAA/B,UAAA,kBAIAC,IAAA,WACA,OAAAH,KAAAF,MAAAyC,OAEAjC,YAAA,EACAC,cAAA,IAEAlB,OAAAC,eAAA2C,EAAA/B,UAAA,2BAIAC,IAAA,WACA,OAAAH,KAAAF,MAAA0C,SAEAlC,YAAA,EACAC,cAAA,IAKA0B,EAAA/B,UAAAuC,gBAAA,WACA,OAAAhD,EAAAkC,UAAA3B,UAAA,oBACA,OAAAP,EAAAmC,YAAA5B,KAAA,SAAA6B,GACA,SAAA7B,KAAAC,QAAA6B,MAAAO,MAAAC,YAAAtC,KAAAF,MAAAyC,aAIAlD,OAAAC,eAAA2C,EAAA/B,UAAA,cAIAC,IAAA,WACA,WAAAuC,KAAA1C,KAAAF,MAAA6C,cAEArC,YAAA,EACAC,cAAA,IAEAd,EAAAkB,WAAA,CACAf,EAAAgB,eACAqB,EAAA/B,UAAA,kBACA+B,EA/EA,GAiFA1C,EAAAmB,QAAAuB,uCCvFA5C,OAAAC,eAAAC,EAAA,cAA8CC,OAAA,IAC9C,IAAAC,EAAcC,EAAQ,QACtBkD,EAAqBlD,EAAQ,QAC7BmD,EAAanD,EAAQ,QAIrBoD,EAAA,SAAA3B,GAEA,SAAA2B,IACA,cAAA3B,KAAA4B,MAAA/C,KAAAgD,YAAAhD,KAYA,OAdAP,EAAA+B,UAAAsB,EAAA3B,GAIA9B,OAAAC,eAAAwD,EAAA5C,UAAA,QAIAC,IAAA,WACA,WAAA0C,EAAAnC,QAAAV,KAAAF,MAAAgB,KAAAd,KAAAC,UAEAK,YAAA,EACAC,cAAA,IAEAuC,EAfA,CAgBCF,EAAAlC,SACDnB,EAAAmB,QAAAoC,uCCxBAzD,OAAAC,eAAAC,EAAA,cAA8CC,OAAA,IAC9C,IAAAC,EAAcC,EAAQ,QACtBE,EAAsBF,EAAQ,QAI9BuD,EAAA,WAEA,SAAAA,EAAAnD,EAAAC,GACAC,KAAAF,QACAE,KAAAC,QAAAF,EAqFA,OAnFAV,OAAAC,eAAA2D,EAAA/C,UAAA,iBAIAC,IAAA,WACA,OAAAH,KAAAF,MAAAoD,gBAEA5C,YAAA,EACAC,cAAA,IAEAlB,OAAAC,eAAA2D,EAAA/C,UAAA,0BAIAC,IAAA,WACA,OAAAH,KAAAF,MAAAqD,kBAEA7C,YAAA,EACAC,cAAA,IAKA0C,EAAA/C,UAAAkD,eAAA,WACA,OAAA3D,EAAAkC,UAAA3B,UAAA,oBACA,OAAAP,EAAAmC,YAAA5B,KAAA,SAAA6B,GACA,SAAA7B,KAAAC,QAAA6B,MAAAO,MAAAC,YAAAtC,KAAAqD,qBAIAhE,OAAAC,eAAA2D,EAAA/C,UAAA,UAIAC,IAAA,WACA,OAAAH,KAAAF,MAAAwD,SAEAhD,YAAA,EACAC,cAAA,IAEAlB,OAAAC,eAAA2D,EAAA/C,UAAA,QAIAC,IAAA,WACA,OAAAH,KAAAF,MAAAyD,MAEAjD,YAAA,EACAC,cAAA,IAEAlB,OAAAC,eAAA2D,EAAA/C,UAAA,UAIAC,IAAA,WACA,OAAAH,KAAAF,MAAA0D,SAEAlD,YAAA,EACAC,cAAA,IAEAlB,OAAAC,eAAA2D,EAAA/C,UAAA,mBAIAC,IAAA,WACA,OAAAH,KAAAF,MAAA2D,WAEAnD,YAAA,EACAC,cAAA,IAKA0C,EAAA/C,UAAAkC,QAAA,WACA,OAAA3C,EAAAkC,UAAA3B,UAAA,oBACA,OAAAP,EAAAmC,YAAA5B,KAAA,SAAA6B,GACA,SAAA7B,KAAAC,QAAA6B,MAAAO,MAAAC,YAAAtC,KAAA0D,cAIAjE,EAAAkB,WAAA,CACAf,EAAAgB,eACAqC,EAAA/C,UAAA,kBACA+C,EAzFA,GA2FA1D,EAAAmB,QAAAuC,uCCjGA5D,OAAAC,eAAAC,EAAA,cAA8CC,OAAA,IAC9C,IAAAC,EAAcC,EAAQ,QACtBE,EAAsBF,EAAQ,QAC9BiE,EAAkBjE,EAAQ,QAC1BkE,EAAclE,EAAQ,QAItBmE,EAAA,WAEA,SAAAA,EAAA/D,EAAAC,GACAC,KAAAF,QACAE,KAAAC,QAAAF,EA8CA,OA5CAV,OAAAC,eAAAuE,EAAA3D,UAAA,UAIAC,IAAA,WACA,IAAAmB,EAAAtB,KACA,OAAAA,KAAAF,MAAAgE,IAAA,SAAAC,GAAoD,WAAAJ,EAAAjD,QAAAqD,EAAAzC,EAAArB,YAEpDK,YAAA,EACAC,cAAA,IAOAsD,EAAA3D,UAAA8D,cAAA,SAAAC,GACA,IAAA3C,EAAAtB,KACA,OAAAA,KAAAF,MAAAoE,OAAA,SAAAH,GAAmD,OAAAA,EAAAI,eAAAF,IAAuCH,IAAA,SAAAC,GAAwB,WAAAJ,EAAAjD,QAAAqD,EAAAzC,EAAArB,YAOlH4D,EAAA3D,UAAAkE,QAAA,SAAArD,GACA,IAAAK,EAAApB,KAAAF,MAAAuE,KAAA,SAAAN,GAAqD,OAAAA,EAAAhD,SACrD,OAAAK,EAAA,IAAAuC,EAAAjD,QAAAU,EAAApB,KAAAC,SAAA,MAEAR,EAAAkB,WAAA,CACAf,EAAAgB,eACAiD,EAAA3D,UAAA,kBACAT,EAAAkB,WAAA,CACAiD,EAAAU,gBACAT,EAAA3D,UAAA,eACAT,EAAAkB,WAAA,CACAiD,EAAAW,UACAV,EAAA3D,UAAA,sBACAT,EAAAkB,WAAA,CACAiD,EAAAW,UACAV,EAAA3D,UAAA,gBACA2D,EAAApE,EAAAkB,WAAA,CACAiD,EAAAY,WACAX,GACAA,EAlDA,GAoDAtE,EAAAmB,QAAAmD,uCC5DAxE,OAAAC,eAAAC,EAAA,cAA8CC,OAAA,IAC9C,IAAAC,EAAcC,EAAQ,QACtBE,EAAsBF,EAAQ,QAC9B+E,EAAA,WAEA,SAAAA,EAAA3E,EAAAC,GACAC,KAAAF,QACAE,KAAAC,QAAAF,EA6CA,OA3CAV,OAAAC,eAAAmF,EAAAvE,UAAA,MAIAC,IAAA,WACA,OAAAH,KAAAF,MAAAiB,IAEAT,YAAA,EACAC,cAAA,IAEAlB,OAAAC,eAAAmF,EAAAvE,UAAA,gBAIAC,IAAA,WACA,WAAAuC,KAAA1C,KAAAF,MAAA4E,aAEApE,YAAA,EACAC,cAAA,IAEAlB,OAAAC,eAAAmF,EAAAvE,UAAA,eAIAC,IAAA,WACA,OAAAH,KAAAF,MAAA6E,aAEArE,YAAA,EACAC,cAAA,IAEAlB,OAAAC,eAAAmF,EAAAvE,UAAA,qBAIAC,IAAA,WACA,OAAAH,KAAAF,MAAA8E,kBAEAtE,YAAA,EACAC,cAAA,IAEAd,EAAAkB,WAAA,CACAf,EAAAgB,eACA6D,EAAAvE,UAAA,kBACAuE,EAjDA,GAmDAlF,EAAAmB,QAAA+D,uCCtDApF,OAAAC,eAAAC,EAAA,cAA8CC,OAAA,IAC9C,IAAAC,EAAcC,EAAQ,QACtBE,EAAsBF,EAAQ,QAC9BmF,EAAqBnF,EAAQ,QAI7BoF,EAAA,WAWA,SAAAA,EAAAC,EAAAC,GACAhF,KAAAiF,UAAAF,EACA/E,KAAAkF,cAAAF,EAuEA,OA9DAF,EAAA5E,UAAAiF,eAAA,SAAAC,GACA,OAAA3F,EAAAkC,UAAA3B,UAAA,oBACA,OAAAP,EAAAmC,YAAA5B,KAAA,SAAA6B,GACA,GAAAuD,KAAAC,OAAA,EACA,UAAAC,MAAA,uDAEA,OAAAtF,KAAAuF,QAAAvF,KAAAuF,OAAAC,UACA,GAAAxF,KAAAyF,WAEA,GAAAzF,KAAAuF,aAOAT,EAAA5E,UAAAuF,QAAA,WACA,OAAAhG,EAAAkC,UAAA3B,UAAA,oBACA,IAAA6B,EACA,OAAApC,EAAAmC,YAAA5B,KAAA,SAAA0F,GACA,OAAAA,EAAAC,OACA,OAEA,OADA9D,EAAA7B,KACA,GAAA6E,EAAAnE,QAAAkF,kBAAA5F,KAAAiF,UAAAjF,KAAAkF,gBACA,gBAAArD,EAAA0D,OAAAG,EAAAG,cAMAf,EAAA5E,UAAA4F,eAAA,SAAAC,GACA/F,KAAAuF,OAAAQ,GAEA1G,OAAAC,eAAAwF,EAAA5E,UAAA,YAIAC,IAAA,WACA,OAAAH,KAAAiF,WAEA3E,YAAA,EACAC,cAAA,IAEAlB,OAAAC,eAAAwF,EAAA5E,UAAA,iBAIAC,IAAA,WACA,UAEAG,YAAA,EACAC,cAAA,IAEAd,EAAAkB,WAAA,CACAf,EAAAgB,eACAkE,EAAA5E,UAAA,oBACAT,EAAAkB,WAAA,CACAf,EAAAgB,eACAkE,EAAA5E,UAAA,wBACAT,EAAAkB,WAAA,CACAf,EAAAgB,eACAkE,EAAA5E,UAAA,iBACA4E,EApFA,GAsFAvF,EAAAmB,QAAAoE,yBC9FA,SAAAkB,GAAA,IAAAC,GAAA,SAAAC,GACA,aAEA,SAAAC,EAAAC,GACA,IAAAC,EAAAD,KAAAC,SAAAH,EAAAG,QACAC,EAAAF,KAAAE,gBAAAJ,EAAAI,eACAN,EAAAE,EAEA,kBACA,IAAAA,EAAA7G,OAAAkH,OAAAP,EAAA,CACAQ,MAAA,CACAhH,WAAAiH,EACAC,UAAA,KAwdA,OApdA,SAAAR,GAGA,IAAAA,EAAAM,MAAA,CAIA,IAAAG,EAAA,CACAC,aAAA,oBAAAV,EACAW,SAAA,WAAAX,GAAA,aAAAY,OACAC,KAAA,eAAAb,GAAA,SAAAA,GAAA,WACA,IAEA,OADA,IAAAc,MACA,EACa,MAAAC,GACb,UALA,GAQAC,SAAA,aAAAhB,EACAiB,YAAA,gBAAAjB,GAGA,GAAAS,EAAAQ,YACA,IAAAC,EAAA,CACA,qBACA,sBACA,6BACA,sBACA,uBACA,sBACA,uBACA,wBACA,yBAGAC,EAAA,SAAAC,GACA,OAAAA,GAAAC,SAAArH,UAAAsH,cAAAF,IAGAG,EAAAC,YAAAC,QAAA,SAAAL,GACA,OAAAA,GAAAF,EAAAQ,QAAAvI,OAAAa,UAAA2H,SAAAtG,KAAA+F,KAAA,GAyDAQ,EAAA5H,UAAA6H,OAAA,SAAAtH,EAAAjB,GACAiB,EAAAuH,EAAAvH,GACAjB,EAAAyI,EAAAzI,GACA,IAAA0I,EAAAlI,KAAA8D,IAAArD,GACAT,KAAA8D,IAAArD,GAAAyH,IAAA,IAAA1I,KAGAsI,EAAA5H,UAAA,mBAAAO,UACAT,KAAA8D,IAAAkE,EAAAvH,KAGAqH,EAAA5H,UAAAC,IAAA,SAAAM,GAEA,OADAA,EAAAuH,EAAAvH,GACAT,KAAAmI,IAAA1H,GAAAT,KAAA8D,IAAArD,GAAA,MAGAqH,EAAA5H,UAAAiI,IAAA,SAAA1H,GACA,OAAAT,KAAA8D,IAAAsE,eAAAJ,EAAAvH,KAGAqH,EAAA5H,UAAAmI,IAAA,SAAA5H,EAAAjB,GACAQ,KAAA8D,IAAAkE,EAAAvH,IAAAwH,EAAAzI,IAGAsI,EAAA5H,UAAAoI,QAAA,SAAAC,EAAAC,GACA,QAAA/H,KAAAT,KAAA8D,IACA9D,KAAA8D,IAAAsE,eAAA3H,IACA8H,EAAAhH,KAAAiH,EAAAxI,KAAA8D,IAAArD,KAAAT,OAKA8H,EAAA5H,UAAAE,KAAA,WACA,IAAAqI,EAAA,GAEA,OADAzI,KAAAsI,QAAA,SAAA9I,EAAAiB,GAA8CgI,EAAAC,KAAAjI,KAC9CkI,EAAAF,IAGAX,EAAA5H,UAAA0I,OAAA,WACA,IAAAH,EAAA,GAEA,OADAzI,KAAAsI,QAAA,SAAA9I,GAAwCiJ,EAAAC,KAAAlJ,KACxCmJ,EAAAF,IAGAX,EAAA5H,UAAA2I,QAAA,WACA,IAAAJ,EAAA,GAEA,OADAzI,KAAAsI,QAAA,SAAA9I,EAAAiB,GAA8CgI,EAAAC,KAAA,CAAAjI,EAAAjB,MAC9CmJ,EAAAF,IAGA9B,EAAAE,WACAiB,EAAA5H,UAAA4G,OAAAgC,UAAAhB,EAAA5H,UAAA2I,SAqJA,IAAAE,EAAA,+CA4CAC,EAAA9I,UAAA+I,MAAA,WACA,WAAAD,EAAAhJ,KAAA,CAAoCkJ,KAAAlJ,KAAAmJ,aAgCpCC,EAAA7H,KAAAyH,EAAA9I,WAgBAkJ,EAAA7H,KAAA8H,EAAAnJ,WAEAmJ,EAAAnJ,UAAA+I,MAAA,WACA,WAAAI,EAAArJ,KAAAmJ,UAAA,CACAG,OAAAtJ,KAAAsJ,OACAC,WAAAvJ,KAAAuJ,WACAC,QAAA,IAAA1B,EAAA9H,KAAAwJ,SACAC,IAAAzJ,KAAAyJ,OAIAJ,EAAAK,MAAA,WACA,IAAAC,EAAA,IAAAN,EAAA,MAA6CC,OAAA,EAAAC,WAAA,KAE7C,OADAI,EAAAC,KAAA,QACAD,GAGA,IAAAE,EAAA,sBAEAR,EAAAS,SAAA,SAAAL,EAAAH,GACA,QAAAO,EAAAjC,QAAA0B,GACA,UAAAS,WAAA,uBAGA,WAAAV,EAAA,MAAqCC,SAAAE,QAAA,CAA0BQ,SAAAP,MAG/DvD,EAAA4B,UACA5B,EAAA8C,UACA9C,EAAAmD,WAEAnD,EAAAM,MAAA,SAAAyD,EAAAC,GACA,WAAA7D,EAAA,SAAA8D,EAAAC,GACA,IAAAC,EAAA,IAAArB,EAAAiB,EAAAC,GACAI,EAAA,IAAAhE,EAEAgE,EAAAC,OAAA,WACA,IAAAnE,EAAA,CACAkD,OAAAgB,EAAAhB,OACAC,WAAAe,EAAAf,WACAC,QAAAgB,EAAAF,EAAAG,yBAAA,KAEArE,EAAAqD,IAAA,gBAAAa,IAAAI,YAAAtE,EAAAoD,QAAArJ,IAAA,iBACA,IAAA+I,EAAA,aAAAoB,IAAAX,SAAAW,EAAAK,aACAR,EAAA,IAAAd,EAAAH,EAAA9C,KAGAkE,EAAAM,QAAA,WACAR,EAAA,IAAAS,UAAA,4BAGAP,EAAAQ,UAAA,WACAV,EAAA,IAAAS,UAAA,4BAGAP,EAAAS,KAAAV,EAAAW,OAAAX,EAAAZ,KAAA,GAEA,YAAAY,EAAAY,YACAX,EAAAY,iBAAA,EACa,SAAAb,EAAAY,cACbX,EAAAY,iBAAA,GAGA,iBAAAZ,GAAA3D,EAAAI,OACAuD,EAAAa,aAAA,QAGAd,EAAAb,QAAAlB,QAAA,SAAA9I,EAAAiB,GACA6J,EAAAc,iBAAA3K,EAAAjB,KAGA8K,EAAAe,KAAA,qBAAAhB,EAAAlB,UAAA,KAAAkB,EAAAlB,cAGAjD,EAAAM,MAAA8E,UAAA,EApaA,SAAAtD,EAAAvH,GAIA,GAHA,kBAAAA,IACAA,EAAA8K,OAAA9K,IAEA,6BAAA+K,KAAA/K,GACA,UAAAoK,UAAA,0CAEA,OAAApK,EAAAgL,cAGA,SAAAxD,EAAAzI,GAIA,MAHA,kBAAAA,IACAA,EAAA+L,OAAA/L,IAEAA,EAIA,SAAAmJ,EAAAF,GACA,IAAAK,EAAA,CACA4C,KAAA,WACA,IAAAlM,EAAAiJ,EAAAkD,QACA,OAAsBC,UAAAnF,IAAAjH,aAUtB,OANAmH,EAAAE,WACAiC,EAAAhC,OAAAgC,UAAA,WACA,OAAAA,IAIAA,EAGA,SAAAhB,EAAA0B,GACAxJ,KAAA8D,IAAA,GAEA0F,aAAA1B,EACA0B,EAAAlB,QAAA,SAAA9I,EAAAiB,GACAT,KAAA+H,OAAAtH,EAAAjB,IACaQ,MACF6L,MAAAC,QAAAtC,GACXA,EAAAlB,QAAA,SAAAyD,GACA/L,KAAA+H,OAAAgE,EAAA,GAAAA,EAAA,KACa/L,MACFwJ,GACXnK,OAAA2M,oBAAAxC,GAAAlB,QAAA,SAAA7H,GACAT,KAAA+H,OAAAtH,EAAA+I,EAAA/I,KACaT,MA0Db,SAAAiM,EAAA/C,GACA,GAAAA,EAAAgD,SACA,OAAA7F,EAAA+D,OAAA,IAAAS,UAAA,iBAEA3B,EAAAgD,UAAA,EAGA,SAAAC,EAAAC,GACA,WAAA/F,EAAA,SAAA8D,EAAAC,GACAgC,EAAA7B,OAAA,WACAJ,EAAAiC,EAAAC,SAEAD,EAAAxB,QAAA,WACAR,EAAAgC,EAAA1C,UAKA,SAAA4C,EAAAvF,GACA,IAAAqF,EAAA,IAAAG,WACAC,EAAAL,EAAAC,GAEA,OADAA,EAAAK,kBAAA1F,GACAyF,EAGA,SAAAE,EAAA3F,GACA,IAAAqF,EAAA,IAAAG,WACAC,EAAAL,EAAAC,GAEA,OADAA,EAAAO,WAAA5F,GACAyF,EAGA,SAAAI,EAAAC,GAIA,IAHA,IAAAC,EAAA,IAAAC,WAAAF,GACAG,EAAA,IAAAnB,MAAAiB,EAAAzH,QAEA4H,EAAA,EAAyBA,EAAAH,EAAAzH,OAAiB4H,IAC1CD,EAAAC,GAAA1B,OAAA2B,aAAAJ,EAAAG,IAEA,OAAAD,EAAAG,KAAA,IAGA,SAAAC,EAAAP,GACA,GAAAA,EAAAQ,MACA,OAAAR,EAAAQ,MAAA,GAEA,IAAAP,EAAA,IAAAC,WAAAF,EAAAS,YAEA,OADAR,EAAAzE,IAAA,IAAA0E,WAAAF,IACAC,EAAAS,OAIA,SAAAnE,IA0FA,OAzFApJ,KAAAkM,UAAA,EAEAlM,KAAAwN,UAAA,SAAAtE,GAEA,GADAlJ,KAAAmJ,UAAAD,EACAA,EAEa,qBAAAA,EACblJ,KAAAyN,UAAAvE,OACa,GAAAvC,EAAAI,MAAAC,KAAA9G,UAAAsH,cAAA0B,GACblJ,KAAA0N,UAAAxE,OACa,GAAAvC,EAAAO,UAAAyG,SAAAzN,UAAAsH,cAAA0B,GACblJ,KAAA4N,cAAA1E,OACa,GAAAvC,EAAAC,cAAAiH,gBAAA3N,UAAAsH,cAAA0B,GACblJ,KAAAyN,UAAAvE,EAAArB,gBACa,GAAAlB,EAAAQ,aAAAR,EAAAI,MAAAM,EAAA6B,GACblJ,KAAA8N,iBAAAV,EAAAlE,EAAAqE,QAEAvN,KAAAmJ,UAAA,IAAAnC,KAAA,CAAAhH,KAAA8N,uBACa,KAAAnH,EAAAQ,cAAAO,YAAAxH,UAAAsH,cAAA0B,KAAAzB,EAAAyB,GAGb,UAAA5D,MAAA,6BAFAtF,KAAA8N,iBAAAV,EAAAlE,QAdAlJ,KAAAyN,UAAA,GAmBAzN,KAAAwJ,QAAArJ,IAAA,kBACA,kBAAA+I,EACAlJ,KAAAwJ,QAAAnB,IAAA,2CACerI,KAAA0N,WAAA1N,KAAA0N,UAAA9D,KACf5J,KAAAwJ,QAAAnB,IAAA,eAAArI,KAAA0N,UAAA9D,MACejD,EAAAC,cAAAiH,gBAAA3N,UAAAsH,cAAA0B,IACflJ,KAAAwJ,QAAAnB,IAAA,oEAKA1B,EAAAI,OACA/G,KAAA+G,KAAA,WACA,IAAAgH,EAAA9B,EAAAjM,MACA,GAAA+N,EACA,OAAAA,EAGA,GAAA/N,KAAA0N,UACA,OAAArH,EAAA8D,QAAAnK,KAAA0N,WACe,GAAA1N,KAAA8N,iBACf,OAAAzH,EAAA8D,QAAA,IAAAnD,KAAA,CAAAhH,KAAA8N,oBACe,GAAA9N,KAAA4N,cACf,UAAAtI,MAAA,wCAEA,OAAAe,EAAA8D,QAAA,IAAAnD,KAAA,CAAAhH,KAAAyN,cAIAzN,KAAAmH,YAAA,WACA,OAAAnH,KAAA8N,iBACA7B,EAAAjM,OAAAqG,EAAA8D,QAAAnK,KAAA8N,kBAEA9N,KAAA+G,OAAAiH,KAAA1B,KAKAtM,KAAAiO,KAAA,WACA,IAAAF,EAAA9B,EAAAjM,MACA,GAAA+N,EACA,OAAAA,EAGA,GAAA/N,KAAA0N,UACA,OAAAhB,EAAA1M,KAAA0N,WACa,GAAA1N,KAAA8N,iBACb,OAAAzH,EAAA8D,QAAAyC,EAAA5M,KAAA8N,mBACa,GAAA9N,KAAA4N,cACb,UAAAtI,MAAA,wCAEA,OAAAe,EAAA8D,QAAAnK,KAAAyN,YAIA9G,EAAAO,WACAlH,KAAAkH,SAAA,WACA,OAAAlH,KAAAiO,OAAAD,KAAAE,KAIAlO,KAAAmO,KAAA,WACA,OAAAnO,KAAAiO,OAAAD,KAAAI,KAAAC,QAGArO,KAMA,SAAAsO,EAAAtD,GACA,IAAAuD,EAAAvD,EAAAwD,cACA,OAAAzF,EAAAnB,QAAA2G,IAAA,EAAAA,EAAAvD,EAGA,SAAAhC,EAAAiB,EAAA7D,GACAA,KAAA,GACA,IAAA8C,EAAA9C,EAAA8C,KAEA,GAAAe,aAAAjB,EAAA,CACA,GAAAiB,EAAAiC,SACA,UAAArB,UAAA,gBAEA7K,KAAAyJ,IAAAQ,EAAAR,IACAzJ,KAAAiL,YAAAhB,EAAAgB,YACA7E,EAAAoD,UACAxJ,KAAAwJ,QAAA,IAAA1B,EAAAmC,EAAAT,UAEAxJ,KAAAgL,OAAAf,EAAAe,OACAhL,KAAAyO,KAAAxE,EAAAwE,KACAvF,GAAA,MAAAe,EAAAd,YACAD,EAAAe,EAAAd,UACAc,EAAAiC,UAAA,QAGAlM,KAAAyJ,IAAA8B,OAAAtB,GAWA,GARAjK,KAAAiL,YAAA7E,EAAA6E,aAAAjL,KAAAiL,aAAA,QACA7E,EAAAoD,SAAAxJ,KAAAwJ,UACAxJ,KAAAwJ,QAAA,IAAA1B,EAAA1B,EAAAoD,UAEAxJ,KAAAgL,OAAAsD,EAAAlI,EAAA4E,QAAAhL,KAAAgL,QAAA,OACAhL,KAAAyO,KAAArI,EAAAqI,MAAAzO,KAAAyO,MAAA,KACAzO,KAAA0O,SAAA,MAEA,QAAA1O,KAAAgL,QAAA,SAAAhL,KAAAgL,SAAA9B,EACA,UAAA2B,UAAA,6CAEA7K,KAAAwN,UAAAtE,GAOA,SAAAgF,EAAAhF,GACA,IAAAyF,EAAA,IAAAhB,SASA,OARAzE,EAAA0F,OAAAC,MAAA,KAAAvG,QAAA,SAAAwG,GACA,GAAAA,EAAA,CACA,IAAAD,EAAAC,EAAAD,MAAA,KACApO,EAAAoO,EAAAlD,QAAAoD,QAAA,WACAvP,EAAAqP,EAAA1B,KAAA,KAAA4B,QAAA,WACAJ,EAAA5G,OAAAiH,mBAAAvO,GAAAuO,mBAAAxP,OAGAmP,EAGA,SAAAnE,EAAAyE,GACA,IAAAzF,EAAA,IAAA1B,EAGAoH,EAAAD,EAAAF,QAAA,oBASA,OARAG,EAAAL,MAAA,SAAAvG,QAAA,SAAA6G,GACA,IAAAC,EAAAD,EAAAN,MAAA,KACAQ,EAAAD,EAAAzD,QAAAiD,OACA,GAAAS,EAAA,CACA,IAAA7P,EAAA4P,EAAAjC,KAAA,KAAAyB,OACApF,EAAAzB,OAAAsH,EAAA7P,MAGAgK,EAKA,SAAAH,EAAAiG,EAAAlJ,GACAA,IACAA,EAAA,IAGApG,KAAA4J,KAAA,UACA5J,KAAAsJ,YAAA7C,IAAAL,EAAAkD,OAAA,IAAAlD,EAAAkD,OACAtJ,KAAAuP,GAAAvP,KAAAsJ,QAAA,KAAAtJ,KAAAsJ,OAAA,IACAtJ,KAAAuJ,WAAA,eAAAnD,IAAAmD,WAAA,KACAvJ,KAAAwJ,QAAA,IAAA1B,EAAA1B,EAAAoD,SACAxJ,KAAAyJ,IAAArD,EAAAqD,KAAA,GACAzJ,KAAAwN,UAAA8B,IAnYA,CAidO,qBAAApJ,IAAAlG,MAGP,CACAwG,MAAAN,EAAAM,MACAsB,QAAA5B,EAAA4B,QACAkB,QAAA9C,EAAA8C,QACAK,SAAAnD,EAAAmD,UAheA,GAseIpD,EAAA,WACJ,OAAAE,GACK5E,KAAAhC,EAAAG,EAAAH,EAAAiQ,QAAA/I,IAAAR,IAAAuJ,EAAAjQ,QAAA0G,IAhfL,CAsfC,qBAAAC,UAAA,qBAAAF,IAAAhG,gECrfDX,OAAAC,eAAAC,EAAA,cAA8CC,OAAA,IAC9C,IAAAC,EAAcC,EAAQ,QACtB+P,EAAgB/P,EAAQ,QACxBmF,EAAqBnF,EAAQ,QAC7BgQ,EAAkBhQ,EAAQ,QAC1BiQ,EAA8BjQ,EAAQ,QAYtCkQ,EAAA,SAAAzO,GAEA,SAAAyO,IACA,cAAAzO,KAAA4B,MAAA/C,KAAAgD,YAAAhD,KA0KA,OA5KAP,EAAA+B,UAAAoO,EAAAzO,GAYAyO,EAAA1P,UAAA2P,uBAAA,SAAAnM,EAAAQ,GAEA,YADA,IAAAA,IAAgCA,EAAA,IAChCzE,EAAAkC,UAAA3B,UAAA,oBACA,OAAAP,EAAAmC,YAAA5B,KAAA,SAAA6B,GACA,SAAA7B,KAAA8P,UAAArQ,EAAAsQ,SAAA,GAAwE7L,EAAA,CAAW8L,WAAA,iBAAAC,IAAAvM,WAYnFkM,EAAA1P,UAAAgQ,gCAAA,SAAAxM,EAAAQ,GAEA,YADA,IAAAA,IAAgCA,EAAA,IAChClE,KAAAmQ,mBAAA1Q,EAAAsQ,SAAA,GAA0D7L,EAAA,CAAW8L,WAAA,iBAAAC,IAAAvM,MAUrEkM,EAAA1P,UAAAkQ,gBAAA,SAAAC,EAAAnM,GAEA,YADA,IAAAA,IAAgCA,EAAA,IAChCzE,EAAAkC,UAAA3B,UAAA,oBACA,OAAAP,EAAAmC,YAAA5B,KAAA,SAAA6B,GACA,SAAA7B,KAAA8P,UAAArQ,EAAAsQ,SAAA,GAAwE7L,EAAA,CAAW8L,WAAA,UAAAC,IAAAI,WAYnFT,EAAA1P,UAAAoQ,yBAAA,SAAAD,EAAAnM,GAEA,YADA,IAAAA,IAAgCA,EAAA,IAChClE,KAAAmQ,mBAAA1Q,EAAAsQ,SAAA,GAA0D7L,EAAA,CAAW8L,WAAA,UAAAC,IAAAI,MAOrET,EAAA1P,UAAAqQ,cAAA,SAAAN,GACA,OAAAxQ,EAAAkC,UAAA3B,UAAA,oBACA,IAAAqM,EACA,OAAA5M,EAAAmC,YAAA5B,KAAA,SAAA6B,GACA,OAAAA,EAAA8D,OACA,gBAAA3F,KAAA8P,UAAA,CACAE,WAAA,KACAC,SAEA,OAEA,OADA5D,EAAAxK,EAAAgE,OACA,GAAAwG,EAAAjL,YAUAwO,EAAA1P,UAAAsQ,YAAA,SAAAzP,GACA,OAAAtB,EAAAkC,UAAA3B,UAAA,oBACA,IAAAyQ,EACA,OAAAhR,EAAAmC,YAAA5B,KAAA,SAAA6B,GACA,OAAAA,EAAA8D,OACA,gBAAA3F,KAAAuQ,cAAA,CAAAxP,KACA,OAEA,OADA0P,EAAA5O,EAAAgE,OACA,GAAA4K,EAAApL,OAAAoL,EAAA,eAYAb,EAAA1P,UAAAwQ,WAAA,SAAAC,GACA,OAAAlR,EAAAkC,UAAA3B,UAAA,oBACA,IAAA4Q,EAAA/O,EAAAgP,EAAAxE,EACA,OAAA5M,EAAAmC,YAAA5B,KAAA,SAAA0F,GACA,OAAAA,EAAAC,OACA,OAEA,OADAiL,EAAAD,EAAAC,UAAA/O,EAAA8O,EAAAE,wBAAA,IAAAhP,KACA,GAAA7B,KAAAC,QAAA6Q,QAAA,CACAlH,KAAA/E,EAAAkM,kBAAAC,MACAvH,IAAA,QACAuB,OAAA,OACAiG,MAAA,aACAC,MAAA,CACAhO,eAAA0N,EACAO,UAAAN,EAAAhJ,eAGA,OAEA,OADAwE,EAAA3G,EAAAG,OACA,GAAAwG,EAAAjL,KAAA,GAAAL,UAKA6O,EAAA1P,UAAA4P,UAAA,SAAAa,GACA,OAAAlR,EAAAkC,UAAA3B,UAAA,oBACA,IAAAgQ,EAAAC,EAAAmB,EAAAC,EAAAxP,EAAAyP,EAAAjF,EACA3G,EACApE,EAAAtB,KACA,OAAAP,EAAAmC,YAAA5B,KAAA,SAAAuR,GACA,OAAAA,EAAA5L,OACA,OAEA,OADAqK,EAAAW,EAAAX,WAAAC,EAAAU,EAAAV,IAAAmB,EAAAT,EAAAS,UAAAC,EAAAV,EAAAU,QAAAxP,EAAA8O,EAAAW,aAAA,IAAAzP,EAAA,GAAAA,EACA,GAAA7B,KAAAC,QAAA6Q,QAAA,CACAlH,KAAA/E,EAAAkM,kBAAAC,MACAvH,IAAA,QACAyH,OAAAxL,EAAA,GACAA,EAAAsK,GAAAC,EACAvK,EAAA8L,WAAAJ,EACA1L,EAAA+L,SAAAJ,EACA3L,EAAAgM,MAAAJ,EAAAzJ,WACAnC,MAEA,OAEA,OADA2G,EAAAkF,EAAA1L,OACA,IACAzE,KAAAiL,EAAAjL,KAAA0C,IAAA,SAAA1C,GAAuE,WAAAsO,EAAAhP,QAAAU,EAAAE,EAAArB,WACvE0R,OAAAtF,EAAAuF,YAAAvF,EAAAuF,WAAAD,eAMA/B,EAAA1P,UAAAiQ,mBAAA,SAAAQ,GACA,IAAA9O,EACAP,EAAAtB,KACAgQ,EAAAW,EAAAX,WAAAC,EAAAU,EAAAV,IAAAmB,EAAAT,EAAAS,UAAAC,EAAAV,EAAAU,QACA,WAAA1B,EAAAjP,QAAA,CACA+I,IAAA,QACAyH,OAAArP,EAAA,GACAA,EAAAmO,GAAAC,EACApO,EAAA2P,WAAAJ,EACAvP,EAAA4P,SAAAJ,EACAxP,IACS7B,KAAAC,QAAA,SAAAmB,GAAiC,WAAAsO,EAAAhP,QAAAU,EAAAE,EAAArB,YAE1C2P,EA7KA,CA8KCH,EAAA/O,SACDnB,EAAAmB,QAAAkP,qCChMAvQ,OAAAC,eAAAC,EAAA,cAA8CC,OAAA,IAC9C,IAAAC,EAAcC,EAAQ,QACtB+P,EAAgB/P,EAAQ,QACxBmF,EAAqBnF,EAAQ,QAC7BmS,EAAmBnS,EAAQ,QAC3BoS,EAAkBpS,EAAQ,QAC1BiQ,EAA8BjQ,EAAQ,QAYtCqS,EAAA,SAAA5Q,GAEA,SAAA4Q,IACA,cAAA5Q,KAAA4B,MAAA/C,KAAAgD,YAAAhD,KAmIA,OArIAP,EAAA+B,UAAAuQ,EAAA5Q,GASA4Q,EAAA7R,UAAA8R,eAAA,SAAA/B,GACA,OAAAxQ,EAAAkC,UAAA3B,UAAA,oBACA,IAAAqM,EACA,OAAA5M,EAAAmC,YAAA5B,KAAA,SAAA6B,GACA,OAAAA,EAAA8D,OACA,gBAAA3F,KAAAiS,WAAA,KAAAhC,IACA,OAEA,OADA5D,EAAAxK,EAAAgE,OACA,GAAAwG,EAAAjL,YAUA2Q,EAAA7R,UAAA8B,aAAA,SAAAjB,GACA,OAAAtB,EAAAkC,UAAA3B,UAAA,oBACA,IAAA+B,EACA,OAAAtC,EAAAmC,YAAA5B,KAAA,SAAA6B,GACA,OAAAA,EAAA8D,OACA,gBAAA3F,KAAAgS,eAAAjR,IACA,OAEA,OADAgB,EAAAF,EAAAgE,OACA,GAAA9D,EAAAsD,OAAAtD,EAAA,eAWAgQ,EAAA7R,UAAAgS,gBAAA,SAAApR,EAAAoD,GAEA,YADA,IAAAA,IAAgCA,EAAA,IAChCzE,EAAAkC,UAAA3B,UAAA,oBACA,IAAA0D,EACA,OAAAjE,EAAAmC,YAAA5B,KAAA,SAAA6B,GAEA,OADA6B,EAAAoO,EAAAjR,cAAAC,GACA,GAAAd,KAAAiS,WAAA,UAAAvO,EAAAQ,SAUA6N,EAAA7R,UAAAiS,yBAAA,SAAArR,EAAAoD,QACA,IAAAA,IAAgCA,EAAA,IAChC,IAAAR,EAAAoO,EAAAjR,cAAAC,GACA,OAAAd,KAAAoS,oBAAA,UAAA1O,EAAAQ,IAQA6N,EAAA7R,UAAAmS,gBAAA,SAAAhC,EAAAnM,GAEA,YADA,IAAAA,IAAgCA,EAAA,IAChCzE,EAAAkC,UAAA3B,UAAA,oBACA,OAAAP,EAAAmC,YAAA5B,KAAA,SAAA6B,GACA,SAAA7B,KAAAiS,WAAA,UAAA5B,EAAAnM,SAUA6N,EAAA7R,UAAAoS,yBAAA,SAAAjC,EAAAnM,GAEA,YADA,IAAAA,IAAgCA,EAAA,IAChClE,KAAAoS,oBAAA,UAAA/B,EAAAnM,IAEA6N,EAAA7R,UAAA+R,WAAA,SAAAjC,EAAAuC,EAAArO,GAEA,YADA,IAAAA,IAAgCA,EAAA,IAChCzE,EAAAkC,UAAA3B,UAAA,oBACA,IAAAqM,EACA/K,EAAAtB,KACA,OAAAP,EAAAmC,YAAA5B,KAAA,SAAA6B,GACA,OAAAA,EAAA8D,OACA,gBAAA3F,KAAAC,QAAA6Q,QAAA,CACArH,IAAA,SACAG,KAAA/E,EAAAkM,kBAAAC,MACAE,MAAAa,EAAAS,iBAAAxC,EAAAuC,EAAArO,MAEA,OAEA,OADAmI,EAAAxK,EAAAgE,OACA,IACAzE,KAAAiL,EAAAjL,KAAA0C,IAAA,SAAA1C,GAAuE,WAAAyQ,EAAAnR,QAAAU,EAAAE,EAAArB,WACvE0R,OAAAtF,EAAAuF,YAAAvF,EAAAuF,WAAAD,eAMAI,EAAA7R,UAAAkS,oBAAA,SAAApC,EAAAuC,EAAArO,GACA,IAAA5C,EAAAtB,KAEA,YADA,IAAAkE,IAAgCA,EAAA,IAChC,IAAAyL,EAAAjP,QAAA,CACA+I,IAAA,SACAyH,MAAAa,EAAAS,iBAAAxC,EAAAuC,EAAArO,IACSlE,KAAAC,QAAA,SAAAmB,GAAiC,WAAAyQ,EAAAnR,QAAAU,EAAAE,EAAArB,YAE1C8R,EAAAS,iBAAA,SAAAxC,EAAAuC,EAAArO,GACA,IAAArC,OACA,IAAAqC,IAAgCA,EAAA,IAChC,IAAAuO,EAAAvO,EAAAuO,SAAAC,EAAAxO,EAAAwO,OAAAC,EAAAzO,EAAAyO,QAAA/I,EAAA1F,EAAA0F,KACA,OAAA/H,EAAA,GACAA,EAAAmO,GAAAuC,EACA1Q,EAAA4Q,WACA5Q,EAAA6Q,SACA7Q,EAAA+Q,KAAAD,EACA9Q,EAAA+H,OACA/H,GAEAkQ,EAtIA,CAuICtC,EAAA/O,SACDnB,EAAAmB,QAAAqR,uCC1JA1S,OAAAC,eAAAC,EAAA,cAA8CC,OAAA,IAC9C,IAAAC,EAAcC,EAAQ,QACtBkE,EAAclE,EAAQ,QACtB+P,EAAgB/P,EAAQ,QACxBmT,EAAgBnT,EAAQ,QACxBoT,EAAepT,EAAQ,QAYvBqT,EAAA,SAAA5R,GAEA,SAAA4R,IACA,cAAA5R,KAAA4B,MAAA/C,KAAAgD,YAAAhD,KAqEA,OAvEAP,EAAA+B,UAAAuR,EAAA5R,GAWA4R,EAAA7S,UAAA8S,eAAA,SAAAC,EAAAC,EAAA5B,GAEA,YADA,IAAAA,IAA+BA,EAAA,IAC/B7R,EAAAkC,UAAA3B,UAAA,oBACA,IAAAkR,EAAA9P,EACAE,EAAAtB,KACA,OAAAP,EAAAmC,YAAA5B,KAAA,SAAA6B,GACA,OAAAA,EAAA8D,OACA,OAKA,OAJAuL,EAAA,CAAiCA,MAAA+B,EAAA3B,QAAAzJ,YACjCqL,IACAhC,EAAAiC,SAAAD,EAAA,GAAA5B,GAAAzJ,YAEA,GAAA7H,KAAAC,QAAA6Q,QAAA,CAAmErH,IAAA,kBAAAyH,WACnE,OAEA,OADA9P,EAAAS,EAAAgE,OACA,GAAAzE,EAAAgS,SAAAtP,IAAA,SAAAuP,GAAwF,WAAAR,EAAAnS,QAAA2S,EAAA/R,EAAArB,kBAaxF8S,EAAA7S,UAAAoT,cAAA,SAAAL,EAAAC,EAAA5B,EAAAiC,GAEA,YADA,IAAAjC,IAA+BA,EAAA,IAC/B7R,EAAAkC,UAAA3B,UAAA,oBACA,IAAAkR,EAAA9P,EACAE,EAAAtB,KACA,OAAAP,EAAAmC,YAAA5B,KAAA,SAAA6B,GACA,OAAAA,EAAA8D,OACA,OAQA,OAPAuL,EAAA,CAAiCA,MAAA+B,EAAA3B,QAAAzJ,YACjCqL,IACAhC,EAAAiC,SAAAD,EAAA,GAAA5B,GAAAzJ,iBAEApB,IAAA8M,IACArC,EAAAqC,MAAA1L,YAEA,GAAA7H,KAAAC,QAAA6Q,QAAA,CAAmErH,IAAA,iBAAAyH,WACnE,OAEA,OADA9P,EAAAS,EAAAgE,OACA,GAAAzE,EAAAoS,QAAA1P,IAAA,SAAA2P,GAAsF,WAAAX,EAAApS,QAAA+S,EAAAnS,EAAArB,kBAKtFR,EAAAkB,WAAA,CACAiD,EAAAW,OAAA,MACAwO,EAAA7S,UAAA,uBACAT,EAAAkB,WAAA,CACAiD,EAAAW,OAAA,MACAwO,EAAA7S,UAAA,sBACA6S,EAAAtT,EAAAkB,WAAA,CACAiD,EAAAY,WACAuO,GACAA,EAxEA,CAyECtD,EAAA/O,SACDnB,EAAAmB,QAAAqS,uCC3FA1T,OAAAC,eAAAC,EAAA,cAA8CC,OAAA,IAC9C,IAAAC,EAAcC,EAAQ,QACtB+P,EAAgB/P,EAAQ,QACxBkE,EAAclE,EAAQ,QACtBgU,EAAahU,EAAQ,QACrBiU,EAAsBjU,EAAQ,QAY9BkU,EAAA,SAAAzS,GAEA,SAAAyS,IACA,cAAAzS,KAAA4B,MAAA/C,KAAAgD,YAAAhD,KA0DA,OA5DAP,EAAA+B,UAAAoS,EAAAzS,GAUAyS,EAAA1T,UAAA2T,SAAA,SAAAX,EAAA5B,GAEA,YADA,IAAAA,IAA+BA,EAAA,IAC/B7R,EAAAkC,UAAA3B,UAAA,oBACA,IAAAkR,EAAA9P,EACAE,EAAAtB,KACA,OAAAP,EAAAmC,YAAA5B,KAAA,SAAA6B,GACA,OAAAA,EAAA8D,OACA,OAMA,OALAuL,EAAA,GACAgC,IACAhC,EAAAiC,SAAAD,EAAA,GAAA5B,GAAAzJ,YAEAqJ,EAAAI,QAAAzJ,WACA,GAAA7H,KAAAC,QAAA6Q,QAAA,CACArH,IAAA,QAAAyH,WAEA,OAEA,OADA9P,EAAAS,EAAAgE,OACA,GAAAzE,EAAA0S,MAAAhQ,IAAA,SAAAiQ,GAA8E,WAAAL,EAAAhT,QAAAqT,EAAAzS,EAAArB,kBAU9E2T,EAAA1T,UAAA8T,cAAA,SAAAD,GACA,OAAAtU,EAAAkC,UAAA3B,UAAA,oBACA,IAAAiU,EACA,OAAAxU,EAAAmC,YAAA5B,KAAA,SAAA6B,GACA,OAAAA,EAAA8D,OACA,gBAAA3F,KAAAC,QAAA6Q,QAAA,CAAuErH,IAAA,SAAAsK,KACvE,OAEA,OADAE,EAAApS,EAAAgE,OACA,OAAA8N,EAAAjT,QAAAuT,EAAAjU,KAAAC,gBAKAR,EAAAkB,WAAA,CACAiD,EAAAW,OAAA,OACAqP,EAAA1T,UAAA,iBACAT,EAAAkB,WAAA,CACAiD,EAAAW,OAAA,OACAqP,EAAA1T,UAAA,sBACA0T,EAAAnU,EAAAkB,WAAA,CACAiD,EAAAY,WACAoP,GACAA,EA7DA,CA8DCnE,EAAA/O,SACDnB,EAAAmB,QAAAkT,uCChFAvU,OAAAC,eAAAC,EAAA,cAA8CC,OAAA,IAC9C,IAAAC,EAAcC,EAAQ,QACtBE,EAAsBF,EAAQ,QAI9BwU,EAAA,WAEA,SAAAA,EAAApU,EAAAC,GACAC,KAAAF,QACAE,KAAAC,QAAAF,EAmCA,OAjCAV,OAAAC,eAAA4U,EAAAhU,UAAA,MAIAC,IAAA,WACA,OAAAH,KAAAF,MAAAiB,IAEAT,YAAA,EACAC,cAAA,IAEAlB,OAAAC,eAAA4U,EAAAhU,UAAA,QAIAC,IAAA,WACA,OAAAH,KAAAF,MAAAW,MAEAH,YAAA,EACAC,cAAA,IAEAlB,OAAAC,eAAA4U,EAAAhU,UAAA,aAIAC,IAAA,WACA,OAAAH,KAAAF,MAAAqU,aAEA7T,YAAA,EACAC,cAAA,IAEAd,EAAAkB,WAAA,CACAf,EAAAgB,eACAsT,EAAAhU,UAAA,kBACAgU,EAvCA,GAyCA3U,EAAAmB,QAAAwT,qCC/CA7U,OAAAC,eAAAC,EAAA,cAA8CC,OAAA,IAC9C,IAoBAuR,EApBAtR,EAAcC,EAAQ,QACtB0U,EAAS1U,EAAQ,QACjBkE,EAAclE,EAAQ,QACtB2U,EAAkB3U,EAAQ,QAC1B4U,EAAsB5U,EAAQ,QAC9B6U,EAAoB7U,EAAQ,QAC5B8U,EAA2B9U,EAAQ,QACnC+U,EAAgC/U,EAAQ,QACxCgV,EAAsChV,EAAQ,QAC9CiV,EAAoBjV,EAAQ,QAC5BkV,EAA4BlV,EAAQ,QACpCmV,EAAuBnV,EAAQ,QAC/BoV,EAAsBpV,EAAQ,QAC9BqV,EAAkBrV,EAAQ,QAC1BsV,EAAuBtV,EAAQ,QAC/ByG,EAAoBzG,EAAQ,QAC5BmC,EAAAsE,IAAAK,EAAA3E,EAAA2E,MAAAsB,EAAAjG,EAAAiG,SAKA,SAAAiJ,GAIAA,IAAA,sBAIAA,IAAA,oBAIAA,IAAA,uBAZA,CAaCA,EAAAxR,EAAAwR,oBAAAxR,EAAAwR,kBAAA,KAID,IAAAkE,EAAA,WAMA,SAAAA,EAAAC,GACA,IAAAC,EAAAD,EAAAC,aAAAC,EAAA3V,EAAA4V,OAAAH,EAAA,kBACA,IAAAC,EACA,UAAAR,EAAAjU,QAAA,0BAEAV,KAAAsV,QAAA7V,EAAAsQ,SAAA,CAAyCwF,SAAA,EAAAC,WAAA,CACzCC,kBAAAnB,EAAAoB,oBAAAC,KACAC,aAAAtB,EAAAuB,eAAAC,SACAC,aAAAzB,EAAA0B,eAAAC,IACad,gBAA8BC,GAC3CpV,KAAAsV,QAAAC,SAEAJ,EAAAhQ,eAAAnF,KAAAsV,QAAAY,eAiXA,IAAArR,EAgBA,OA9XAA,EAAAoQ,EAkBAA,EAAA/J,gBAAA,SAAAnG,EAAAoR,EAAA/Q,EAAAgR,EAAAlB,GAEA,YADA,IAAAA,IAAgCA,EAAA,IAChCzV,EAAAkC,UAAA3B,UAAA,oBACA,IAAAqW,EAAAC,EAAAnB,EACA,OAAA1V,EAAAmC,YAAA5B,KAAA,SAAA6B,GACA,OAAAA,EAAA8D,OACA,OACA,OAAAP,IAAA+Q,EAAA,MACA,GAAAnW,KAAAuW,aAAAxR,EAAAoR,IACA,OAEA,OADAE,EAAAxU,EAAAgE,OACAwQ,EAAAG,MAAA,MACAJ,EACA,GAAApW,KAAAyW,mBAAA1R,EAAAqR,EAAApR,aAAAoR,EAAAM,eADA,MAEA,OAGA,OAFAJ,EAAAzU,EAAAgE,OACAsQ,EAAAG,EAAAH,YACA,GAAAnW,KAAAuW,aAAAxR,EAAAoR,IACA,OACAE,EAAAxU,EAAAgE,OACAhE,EAAA8D,MAAA,EACA,OACA,IAAA0Q,EAAAG,MACA,UAAA7B,EAAAjU,QAAA,4DAEAmB,EAAA8D,MAAA,EACA,OACAP,EAAAiR,EAAAjR,OACAvD,EAAA8D,MAAA,EACA,OAIA,OAHAwP,EAAAiB,EACA,IAAA3B,EAAA/T,QAAA,IAAA8T,EAAA9T,QAAAqE,EAAAoR,EAAA/Q,GAAAgR,GACA,IAAA5B,EAAA9T,QAAAqE,EAAAoR,EAAA/Q,GACA,OAAApF,KAAAP,EAAAsQ,SAAA,GAA0EmF,EAAA,CAAWC,yBAcrFF,EAAA0B,sBAAA,SAAA5R,EAAAC,EAAAkQ,QACA,IAAAA,IAAgCA,EAAA,IAChC,IAAAC,EAAAnQ,EACA,IAAA0P,EAAAhU,QAAAqE,EAAAC,GACA,IAAAwP,EAAA9T,QAAAqE,GACA,WAAA/E,KAAAP,EAAAsQ,SAAA,GAA2CmF,EAAA,CAAWC,mBAYtDF,EAAAnE,QAAA,SAAA1K,EAAArB,EAAAoR,GACA,OAAA1W,EAAAkC,UAAA3B,UAAA,oBACA,IAAAyJ,EAAAkH,EAAAnH,EAAAN,EAAA0N,EAAAjN,EAAA9H,EAAA6D,EAAAuI,EACA,OAAAxO,EAAAmC,YAAA5B,KAAA,SAAAuR,GACA,OAAAA,EAAA5L,OACA,OAyBA,OAxBA8D,EAAAzJ,KAAA6W,QAAAzQ,EAAAqD,IAAArD,EAAAwD,MACA+G,EAAAyD,EAAA0C,UAAA1Q,EAAA8K,MAAA,CAA8D6F,YAAA,WAC9DvN,EAAA,IAAA1B,EAAA,CACAkP,OAAA,8BAAA5Q,EAAA6Q,SAAA,aAEA7Q,EAAA8C,MACAA,EAAAkL,EAAA0C,UAAA1Q,EAAA8C,MACAM,EAAAzB,OAAA,qDAEA3B,EAAA8Q,WACAhO,EAAAkF,KAAA0I,UAAA1Q,EAAA8Q,UACA1N,EAAAzB,OAAA,oCAEAhD,GACAyE,EAAAzB,OAAA,YAAAhD,GAEAoR,GACA3M,EAAAzB,OAAA,iBAAA3B,EAAAwD,OAAAmH,EAAAC,MAAA,sBAAAmF,GAEAS,EAAA,CACA5L,OAAA5E,EAAA4E,QAAA,MACAxB,UACAN,QAEA,GAAA1C,EAAAmK,EAAAlH,EAAA,IAAAkH,EAAAlH,EAAAmN,IACA,OAEA,OADAjN,EAAA4H,EAAA1L,OACA8D,EAAA4F,GAAA,OACA1N,EAAA+S,EAAAlU,QAAAyW,KACAzR,EAAA,QAAAiE,EAAAL,OAAAK,EAAAJ,YACA,GAAAI,EAAAwE,SACA,iBAAAtM,EAAAkB,MAAA6R,EAAAlU,QAAAgF,EAAA0R,OAAA,CAAA7F,EAAA1L,WACA,OACA,aAAA8D,EAAAL,OAEA,QAAA7C,GAEA,GAAAkD,EAAAsE,QACA,OAEA,OADAA,EAAAsD,EAAA1L,OACAoI,EAIA,GAAAG,KAAAC,MAAAJ,IAFA,QAAAxH,SAeAwO,EAAA9P,eAAA,SAAAJ,EAAAC,EAAAqS,EAAAC,GACA,OAAA7X,EAAAkC,UAAA3B,UAAA,oBACA,IAAA6B,EACA,OAAApC,EAAAmC,YAAA5B,KAAA,SAAA0F,GACA,OAAAA,EAAAC,OACA,OAEA,OADA9D,EAAA0S,EAAA7T,QAAAyW,KACA,GAAAnX,KAAA8Q,QAAA,CACArH,IAAA,eACAuB,OAAA,OACAkG,MAAA,CACAqG,WAAA,qBACAC,UAAAzS,EACA0S,cAAAzS,EACAqS,OACAK,aAAAJ,MAGA,oBAAAzV,EAAAkB,MAAAwR,EAAA7T,QAAA,QAAAgF,EAAAG,iBAYAoP,EAAArP,kBAAA,SAAAb,EAAAC,GACA,OAAAvF,EAAAkC,UAAA3B,UAAA,oBACA,IAAA6B,EACA,OAAApC,EAAAmC,YAAA5B,KAAA,SAAA0F,GACA,OAAAA,EAAAC,OACA,OAEA,OADA9D,EAAA0S,EAAA7T,QAAAyW,KACA,GAAAnX,KAAA8Q,QAAA,CACArH,IAAA,eACAuB,OAAA,OACAkG,MAAA,CACAqG,WAAA,qBACAC,UAAAzS,EACA0S,cAAAzS,MAGA,oBAAAnD,EAAAkB,MAAAwR,EAAA7T,QAAA,QAAAgF,EAAAG,iBAYAoP,EAAAwB,mBAAA,SAAA1R,EAAAC,EAAA0R,GACA,OAAAjX,EAAAkC,UAAA3B,UAAA,oBACA,IAAA6B,EACA,OAAApC,EAAAmC,YAAA5B,KAAA,SAAA0F,GACA,OAAAA,EAAAC,OACA,OAEA,OADA9D,EAAA0S,EAAA7T,QAAAyW,KACA,GAAAnX,KAAA8Q,QAAA,CACArH,IAAA,eACAuB,OAAA,OACAkG,MAAA,CACAqG,WAAA,gBACAC,UAAAzS,EACA0S,cAAAzS,EACA2S,cAAAjB,MAGA,oBAAA7U,EAAAkB,MAAAwR,EAAA7T,QAAA,QAAAgF,EAAAG,iBAaAoP,EAAAsB,aAAA,SAAAxR,EAAAoR,GACA,OAAA1W,EAAAkC,UAAA3B,UAAA,oBACA,IAAAoB,EACA,OAAA3B,EAAAmC,YAAA5B,KAAA,SAAA6B,GACA,OAAAA,EAAA8D,OACA,gBAAA3F,KAAA8Q,QAAA,CAA+DrH,IAAA,KAAW1E,EAAAoR,IAC1E,OAEA,OADA/U,EAAAS,EAAAgE,OACA,OAAAwO,EAAA3T,QAAAU,EAAA2E,cAQAkP,EAAA/U,UAAAqW,aAAA,WACA,OAAA9W,EAAAkC,UAAA3B,UAAA,oBACA,IAAAoB,EACA,OAAA3B,EAAAmC,YAAA5B,KAAA,SAAA6B,GACA,OAAAA,EAAA8D,OACA,gBAAA3F,KAAA8Q,QAAA,CAA+DrH,IAAA,OAC/D,OAEA,OADArI,EAAAS,EAAAgE,OACA,OAAAwO,EAAA3T,QAAAU,EAAA2E,cAUAkP,EAAA/U,UAAAiF,eAAA,SAAAC,GACA,OAAA3F,EAAAkC,UAAA3B,UAAA,oBACA,OAAAP,EAAAmC,YAAA5B,KAAA,SAAA6B,GACA,SAAA7B,KAAAsV,QAAAH,aAAAhQ,eAAAC,SAOA6P,EAAA/U,UAAAuW,mBAAA,WACA,OAAAhX,EAAAkC,UAAA3B,UAAA,oBACA,OAAAP,EAAAmC,YAAA5B,KAAA,SAAA6B,GACA,SAAA7B,KAAAsV,QAAAH,aAAA1P,SAAAzF,KAAAsV,QAAAH,aAAA1P,gBAUAwP,EAAA/U,UAAA4Q,QAAA,SAAA1K,GACA,OAAA3G,EAAAkC,UAAA3B,UAAA,oBACA,IAAAmV,EAAAgB,EACA,OAAA1W,EAAAmC,YAAA5B,KAAA,SAAA6B,GACA,OAAAA,EAAA8D,OACA,OAEA,OADAwP,EAAAnV,KAAAsV,QAAAH,aACA,GAAAA,EAAAhQ,eAAAiB,EAAA6K,MAAA,CAAA7K,EAAA6K,YAAAxK,IACA,OAEA,OADA0P,EAAAtU,EAAAgE,OACAsQ,EAGAA,EAAA3Q,WAAA2P,EAAA1P,QACA,GAAA0P,EAAA1P,WADA,MAFA,GAAAZ,EAAAiM,QAAA1K,EAAA+O,EAAApQ,WAIA,OACAoR,EAAAtU,EAAAgE,OACAhE,EAAA8D,MAAA,EACA,gBAAAd,EAAAiM,QAAA1K,EAAA+O,EAAApQ,SAAAoR,sBAKA9W,OAAAC,eAAA2V,EAAA/U,UAAA,UAIAC,IAAA,WACA,WAAA0U,EAAAnU,QAAAV,OAEAM,YAAA,EACAC,cAAA,IAEAlB,OAAAC,eAAA2V,EAAA/U,UAAA,SAIAC,IAAA,WACA,WAAA2U,EAAApU,QAAAV,OAEAM,YAAA,EACAC,cAAA,IAEAlB,OAAAC,eAAA2V,EAAA/U,UAAA,UAIAC,IAAA,WACA,WAAA4U,EAAArU,QAAAV,OAEAM,YAAA,EACAC,cAAA,IAEAlB,OAAAC,eAAA2V,EAAA/U,UAAA,eAIAC,IAAA,WACA,WAAA6U,EAAAtU,QAAAV,OAEAM,YAAA,EACAC,cAAA,IAEA0U,EAAA4B,QAAA,SAAApN,EAAAG,GAEA,OADAA,OAAAnD,IAAAmD,EAAAmH,EAAA6G,OAAAhO,EACAA,GACA,KAAAmH,EAAA6G,OACA,KAAA7G,EAAAC,MACA,IAAA6G,EAAAjO,IAAAmH,EAAA6G,OAAA,iBACA,+BAAAC,EAAA,IAAApO,EAAAsF,QAAA,UACA,KAAAgC,EAAA+G,OACA,OAAArO,EACA,QACA,OAAAA,IAIAhK,EAAAkB,WAAA,CACAiD,EAAAU,gBACA2Q,EAAA/U,UAAA,eACAT,EAAAkB,WAAA,CACAiD,EAAAU,gBACA2Q,EAAA/U,UAAA,cACAT,EAAAkB,WAAA,CACAiD,EAAAU,gBACA2Q,EAAA/U,UAAA,eACAT,EAAAkB,WAAA,CACAiD,EAAAU,gBACA2Q,EAAA/U,UAAA,oBACA+U,EAAApQ,EAAApF,EAAAkB,WAAA,CACAiD,EAAAY,WACAyQ,GACAA,EAnZA,GAqZA1V,EAAAmB,QAAAuU,uCC5bA5V,OAAAC,eAAAC,EAAA,cAA8CC,OAAA,IAC9C,IAAAC,EAAcC,EAAQ,QACtBE,EAAsBF,EAAQ,QAI9BqY,EAAA,WAEA,SAAAA,EAAAjY,EAAAC,GACAC,KAAAF,QACAE,KAAAC,QAAAF,EAuDA,OArDAV,OAAAC,eAAAyY,EAAA7X,UAAA,eAIAC,IAAA,WACA,OAAAH,KAAAF,MAAAkY,cAEA1X,YAAA,EACAC,cAAA,IAEAlB,OAAAC,eAAAyY,EAAA7X,UAAA,YAMAC,IAAA,WACA,OAAAH,KAAAF,MAAAmY,WAEA3X,YAAA,EACAC,cAAA,IAEAlB,OAAAC,eAAAyY,EAAA7X,UAAA,eAIAC,IAAA,WACA,OAAAH,KAAAF,MAAA6E,aAEArE,YAAA,EACAC,cAAA,IAOAwX,EAAA7X,UAAAgY,YAAA,SAAAC,GACA,OAAAnY,KAAAF,MAAA,aAAAqY,EAAA,MAEA9Y,OAAAC,eAAAyY,EAAA7X,UAAA,SAIAC,IAAA,WACA,OAAAH,KAAAF,MAAAsY,OAEA9X,YAAA,EACAC,cAAA,IAEAd,EAAAkB,WAAA,CACAf,EAAAgB,eACAmX,EAAA7X,UAAA,kBACA6X,EA3DA,GA6DAxY,EAAAmB,QAAAqX,uCCnEA1Y,OAAAC,eAAAC,EAAA,cAA8CC,OAAA,IAC9C,IAAAC,EAAcC,EAAQ,QACtBoS,EAAkBpS,EAAQ,QAC1BkE,EAAclE,EAAQ,QACtB4U,EAAsB5U,EAAQ,QAC9B+P,EAAgB/P,EAAQ,QAYxB2Y,EAAA,SAAAlX,GAEA,SAAAkX,IACA,cAAAlX,KAAA4B,MAAA/C,KAAAgD,YAAAhD,KAqCA,OAvCAP,EAAA+B,UAAA6W,EAAAlX,GAWAkX,EAAAnY,UAAAoY,cAAA,SAAAC,EAAAC,GAEA,YADA,IAAAA,IAA0CA,GAAA,GAC1C/Y,EAAAkC,UAAA3B,UAAA,oBACA,IAAAkR,EAAA9P,EACA,OAAA3B,EAAAmC,YAAA5B,KAAA,SAAA6B,GACA,OAAAA,EAAA8D,OACA,OAQA,OAPAuL,EAAA,GACAqH,IACArH,EAAAuH,WAAA3G,EAAAjR,cAAA0X,IAEAC,IACAtH,EAAAwH,kBAAA,QAEA,GAAA1Y,KAAAC,QAAA6Q,QAAA,CAAmErH,IAAA,eAAAyH,WACnE,OAEA,OADA9P,EAAAS,EAAAgE,OACA,OAAAyO,EAAA5T,QAAAU,EAAAuX,QAAA3Y,KAAAC,gBAKAR,EAAAkB,WAAA,CACAiD,EAAAW,OAAA,OACA8T,EAAAnY,UAAA,sBACAmY,EAAA5Y,EAAAkB,WAAA,CACAiD,EAAAY,WACA6T,GACAA,EAxCA,CAyCC5I,EAAA/O,SACDnB,EAAAmB,QAAA2X,uCC3DAhZ,OAAAC,eAAAC,EAAA,cAA8CC,OAAA,IAC9C,IAAAC,EAAcC,EAAQ,QACtBgU,EAAahU,EAAQ,QACrBmD,EAAanD,EAAQ,QACrBkZ,EAAA,SAAAzX,GAEA,SAAAyX,IACA,cAAAzX,KAAA4B,MAAA/C,KAAAgD,YAAAhD,KAaA,OAfAP,EAAA+B,UAAAoX,EAAAzX,GAOAyX,EAAA1Y,UAAA2Y,SAAA,WACA,OAAApZ,EAAAkC,UAAA3B,UAAA,oBACA,IAAAsB,EAAAtB,KACA,OAAAP,EAAAmC,YAAA5B,KAAA,SAAA6B,GACA,SAAA7B,KAAAF,MAAAuC,MAAAyB,IAAA,SAAA1C,GAA4E,WAAAyB,EAAAnC,QAAAU,EAAAE,EAAArB,iBAI5E2Y,EAhBA,CAiBClF,EAAAhT,SACDnB,EAAAmB,QAAAkY,uCCtBAvZ,OAAAC,eAAAC,EAAA,cAA8CC,OAAA,IAC9C,IAAAC,EAAcC,EAAQ,QACtBmT,EAAgBnT,EAAQ,QACxBE,EAAsBF,EAAQ,QAI9BoZ,EAAA,WAEA,SAAAA,EAAAhZ,EAAAC,GACAC,KAAAF,QACAE,KAAAC,QAAAF,EAgGA,OA9FAV,OAAAC,eAAAwZ,EAAA5Y,UAAA,MAIAC,IAAA,WACA,OAAAH,KAAAF,MAAAiZ,KAEAzY,YAAA,EACAC,cAAA,IAEAlB,OAAAC,eAAAwZ,EAAA5Y,UAAA,aAIAC,IAAA,WACA,WAAAuC,KAAA1C,KAAAF,MAAAkZ,aAEA1Y,YAAA,EACAC,cAAA,IAEAlB,OAAAC,eAAAwZ,EAAA5Y,UAAA,WAIAC,IAAA,WACA,WAAAuC,KAAA1C,KAAAF,MAAAmZ,WAEA3Y,YAAA,EACAC,cAAA,IAEAlB,OAAAC,eAAAwZ,EAAA5Y,UAAA,cAIAC,IAAA,WACA,OAAAH,KAAAF,MAAAoZ,cAEA5Y,YAAA,EACAC,cAAA,IAEAlB,OAAAC,eAAAwZ,EAAA5Y,UAAA,SAIAC,IAAA,WACA,OAAAH,KAAAF,MAAAsY,OAEA9X,YAAA,EACAC,cAAA,IAEAlB,OAAAC,eAAAwZ,EAAA5Y,UAAA,eAIAC,IAAA,WACA,OAAAH,KAAAF,MAAA6E,aAEArE,YAAA,EACAC,cAAA,IAEAlB,OAAAC,eAAAwZ,EAAA5Y,UAAA,YAIAC,IAAA,WACA,OAAAH,KAAAF,MAAA2S,UAEAnS,YAAA,EACAC,cAAA,IAEAlB,OAAAC,eAAAwZ,EAAA5Y,UAAA,WAIAC,IAAA,WACA,WAAA0S,EAAAnS,QAAAV,KAAAF,MAAAyY,QAAAvY,KAAAC,UAEAK,YAAA,EACAC,cAAA,IAQAuY,EAAA5Y,UAAAiZ,mBAAA,SAAAC,EAAAC,GACA,OAAArZ,KAAAF,MAAAwZ,gBACAvK,QAAA,UAA6BqK,EAAAvR,YAC7BkH,QAAA,WAA8BsK,EAAAxR,aAE9BpI,EAAAkB,WAAA,CACAf,EAAAgB,eACAkY,EAAA5Y,UAAA,kBACA4Y,EApGA,GAsGAvZ,EAAAmB,QAAAoY,uCC7GAzZ,OAAAC,eAAAC,EAAA,cAA8CC,OAAA,IAC9C,IAAAC,EAAcC,EAAQ,QACtBE,EAAsBF,EAAQ,QAC9B6Z,EAAmC7Z,EAAQ,SAK3C,SAAA8Z,GAIAA,EAAA,qBAIAA,EAAA,yBAIAA,EAAA,YAZA,CAaCja,EAAAia,uBAAAja,EAAAia,qBAAA,KAKD,SAAAC,GAIAA,EAAA,iBAIAA,EAAA,iBAIAA,EAAA,0BAIAA,EAAA,WAhBA,CAiBCla,EAAAka,gBAAAla,EAAAka,cAAA,KAID,IAAAC,EAAA,WAEA,SAAAA,EAAA5Z,EAAAC,GACAC,KAAAF,QACAE,KAAAC,QAAAF,EAkOA,OAhOAV,OAAAC,eAAAoa,EAAAxZ,UAAA,YAEAC,IAAA,WACA,OAAAH,KAAAF,MAAAiB,IAEAT,YAAA,EACAC,cAAA,IAEAlB,OAAAC,eAAAoa,EAAAxZ,UAAA,MAIAC,IAAA,WACA,OAAAH,KAAAF,MAAAiB,IAEAT,YAAA,EACAC,cAAA,IAEAlB,OAAAC,eAAAoa,EAAAxZ,UAAA,QAIAC,IAAA,WACA,OAAAH,KAAAF,MAAA6Z,OAEArZ,YAAA,EACAC,cAAA,IAEAlB,OAAAC,eAAAoa,EAAAxZ,UAAA,eAIAC,IAAA,WACA,OAAAH,KAAAF,MAAA8Z,cAEAtZ,YAAA,EACAC,cAAA,IAEAlB,OAAAC,eAAAoa,EAAAxZ,UAAA,eAIAC,IAAA,WACA,OAAAH,KAAAF,MAAA6E,aAEArE,YAAA,EACAC,cAAA,IAEAlB,OAAAC,eAAAoa,EAAAxZ,UAAA,QAIAC,IAAA,WACA,OAAAH,KAAAF,MAAA8J,MAEAtJ,YAAA,EACAC,cAAA,IAEAlB,OAAAC,eAAAoa,EAAAxZ,UAAA,mBAIAC,IAAA,WACA,OAAAH,KAAAF,MAAA+Z,kBAEAvZ,YAAA,EACAC,cAAA,IAEAlB,OAAAC,eAAAoa,EAAAxZ,UAAA,qBAIAC,IAAA,WACA,OAAAH,KAAAF,MAAAga,mBAEAxZ,YAAA,EACAC,cAAA,IAEAlB,OAAAC,eAAAoa,EAAAxZ,UAAA,yBAIAC,IAAA,WACA,OAAAH,KAAAF,MAAAia,mBAEAzZ,YAAA,EACAC,cAAA,IAEAlB,OAAAC,eAAAoa,EAAAxZ,UAAA,SAIAC,IAAA,WACA,OAAAH,KAAAF,MAAAka,YAEA1Z,YAAA,EACAC,cAAA,IAKAmZ,EAAAxZ,UAAA+Z,UAAA,WACA,OAAAxa,EAAAkC,UAAA3B,UAAA,oBACA,OAAAP,EAAAmC,YAAA5B,KAAA,SAAA6B,GACA,SAAA7B,KAAAC,QAAA6B,MAAA0R,QAAA0G,kBAAAla,YAOA0Z,EAAAxZ,UAAAia,WAAA,WACA,OAAAna,KAAAC,QAAA6B,MAAAO,MAAA8X,WAAA,CAAoDrZ,KAAAd,QAOpD0Z,EAAAxZ,UAAAka,YAAA,SAAAC,GACA,OAAA5a,EAAAkC,UAAA3B,UAAA,oBACA,IAAA2Q,EAAAtE,EACA,OAAA5M,EAAAmC,YAAA5B,KAAA,SAAA6B,GACA,OAAAA,EAAA8D,OACA,OAKA,OAJAgL,EAAA,CACA7P,KAAAd,KAAAe,GACAuZ,aAAAD,GAEA,GAAAra,KAAAC,QAAA6B,MAAAO,MAAA8X,WAAAxJ,IACA,OAEA,OADAtE,EAAAxK,EAAAgE,OAAAzE,KACA,GAAAiL,EAAAhH,OAAAgH,EAAA,eAUAqN,EAAAxZ,UAAAqa,QAAA,SAAAF,GACA,OAAA5a,EAAAkC,UAAA3B,UAAA,oBACA,OAAAP,EAAAmC,YAAA5B,KAAA,SAAA6B,GACA,OAAAA,EAAA8D,OACA,gBAAA3F,KAAAoa,YAAAC,IACA,uBAAAxY,EAAAgE,cAQA6T,EAAAxZ,UAAAsa,OAAA,WACA,OAAA/a,EAAAkC,UAAA3B,UAAA,oBACA,IAAAya,EACA,OAAAhb,EAAAmC,YAAA5B,KAAA,SAAA6B,GACA,OAAAA,EAAA8D,OACA,gBAAA3F,KAAAC,QAAAya,OAAArY,MAAAsY,SACA,OAEA,OADAF,EAAA5Y,EAAAgE,OACA,GAAA4U,EAAAG,cAAA5a,aAQA0Z,EAAAxZ,UAAA2a,SAAA,WACA,OAAApb,EAAAkC,UAAA3B,UAAA,oBACA,IAAAya,EACA,OAAAhb,EAAAmC,YAAA5B,KAAA,SAAA6B,GACA,OAAAA,EAAA8D,OACA,gBAAA3F,KAAAC,QAAAya,OAAArY,MAAAsY,SACA,OAEA,OADAF,EAAA5Y,EAAAgE,OACA,GAAA4U,EAAAK,gBAAA9a,aAUA0Z,EAAAxZ,UAAA6a,kBAAA,SAAAV,GACA,OAAA5a,EAAAkC,UAAA3B,UAAA,oBACA,OAAAP,EAAAmC,YAAA5B,KAAA,SAAA6B,GACA,SAAA7B,KAAAC,QAAA6B,MAAAkZ,cAAAC,uBAAAZ,EAAAra,YASA0Z,EAAAxZ,UAAAgb,eAAA,SAAAb,GACA,OAAA5a,EAAAkC,UAAA3B,UAAA,oBACA,IAAAmb,EACA,OAAA1b,EAAAmC,YAAA5B,KAAA,SAAA6B,GACA,OAAAA,EAAA8D,OACA,OAEA,OADA9D,EAAAuZ,KAAA1S,KAAA,UACA,GAAA1I,KAAA+a,kBAAAV,IACA,uBAAAxY,EAAAgE,QACA,OAEA,GADAsV,EAAAtZ,EAAAgE,OACAsV,aAAA5B,EAAA7Y,QACA,aAEA,MAAAya,EACA,uBAKA1b,EAAAkB,WAAA,CACAf,EAAAgB,eACA8Y,EAAAxZ,UAAA,kBACAwZ,EAtOA,GAwOAna,EAAAmB,QAAAgZ,qCCtRA,IAAA2B,EAAY3b,EAAQ,QACpB4b,EAAc5b,EAAQ,QACtByI,EAAA9I,OAAAa,UAAAkI,eAEAmT,EAAA,CACAC,SAAA,SAAAC,GACA,OAAAA,EAAA,MAEAC,MAAA,QACAC,QAAA,SAAAF,EAAApM,GACA,OAAAoM,EAAA,IAAApM,EAAA,KAEAuM,OAAA,SAAAH,GACA,OAAAA,IAIA3P,EAAAD,MAAAC,QACApD,EAAAmD,MAAA3L,UAAAwI,KACAmT,EAAA,SAAAC,EAAAC,GACArT,EAAA3F,MAAA+Y,EAAAhQ,EAAAiQ,KAAA,CAAAA,KAGAC,EAAAtZ,KAAAxC,UAAA+b,YAEAC,EAAA,CACAC,gBAAA,EACAC,WAAA,EACAC,QAAA,QACAC,iBAAA,EACAC,UAAA,IACAC,QAAA,EACAC,QAAApB,EAAAmB,OACAE,kBAAA,EACAC,UAAArB,EAAAsB,WAAAtB,EAAA,YAEAK,SAAA,EACAkB,cAAA,SAAAC,GACA,OAAAd,EAAAza,KAAAub,IAEAC,WAAA,EACAC,oBAAA,GAGAlG,EAAA,SAAAA,EACAmG,EACAxB,EACAyB,EACAF,EACAD,EACAN,EACAvY,EACA0O,EACAwJ,EACAS,EACAF,EACAD,EACAL,GAEA,IAAA/U,EAAA2V,EASA,GARA,oBAAA/Y,EACAoD,EAAApD,EAAAuX,EAAAnU,GACKA,aAAA5E,KACL4E,EAAAuV,EAAAvV,GACK,UAAA4V,GAAApR,EAAAxE,KACLA,IAAA6F,KAAA,MAGA,OAAA7F,EAAA,CACA,GAAA0V,EACA,OAAAP,IAAAC,EAAAD,EAAAhB,EAAAS,EAAAO,QAAAJ,GAAAZ,EAGAnU,EAAA,GAGA,qBAAAA,GAAA,kBAAAA,GAAA,mBAAAA,GAAA+T,EAAA8B,SAAA7V,GAAA,CACA,GAAAmV,EAAA,CACA,IAAAW,EAAAV,EAAAjB,EAAAgB,EAAAhB,EAAAS,EAAAO,QAAAJ,GACA,OAAAM,EAAAS,GAAA,IAAAT,EAAAF,EAAAnV,EAAA4U,EAAAO,QAAAJ,KAEA,OAAAM,EAAAlB,GAAA,IAAAkB,EAAApR,OAAAjE,KAGA,IAMA+V,EANAzU,EAAA,GAEA,wBAAAtB,EACA,OAAAsB,EAIA,GAAAkD,EAAA5H,GACAmZ,EAAAnZ,MACK,CACL,IAAA9D,EAAAf,OAAAe,KAAAkH,GACA+V,EAAAzK,EAAAxS,EAAAwS,QAAAxS,EAGA,QAAA6M,EAAA,EAAmBA,EAAAoQ,EAAAhY,SAAoB4H,EAAA,CACvC,IAAAoC,EAAAgO,EAAApQ,GAEA8P,GAAA,OAAAzV,EAAA+H,KAIAvD,EAAAxE,GACAuU,EAAAjT,EAAAkO,EACAxP,EAAA+H,GACA,oBAAA6N,IAAAzB,EAAApM,GAAAoM,EACAyB,EACAF,EACAD,EACAN,EACAvY,EACA0O,EACAwJ,EACAS,EACAF,EACAD,EACAL,IAGAR,EAAAjT,EAAAkO,EACAxP,EAAA+H,GACAoM,GAAAW,EAAA,IAAA/M,EAAA,IAAAA,EAAA,KACA6N,EACAF,EACAD,EACAN,EACAvY,EACA0O,EACAwJ,EACAS,EACAF,EACAD,EACAL,KAKA,OAAAzT,GAGA0U,EAAA,SAAAC,GACA,IAAAA,EACA,OAAArB,EAGA,UAAAqB,EAAAd,cAAAhW,IAAA8W,EAAAd,SAAA,oBAAAc,EAAAd,QACA,UAAA5R,UAAA,iCAGA,IAAAwR,EAAAkB,EAAAlB,SAAAH,EAAAG,QACA,wBAAAkB,EAAAlB,SAAA,UAAAkB,EAAAlB,SAAA,eAAAkB,EAAAlB,QACA,UAAAxR,UAAA,qEAGA,IAAA2S,EAAAlC,EAAA,WACA,wBAAAiC,EAAAC,OAAA,CACA,IAAArV,EAAA5G,KAAA+Z,EAAAsB,WAAAW,EAAAC,QACA,UAAA3S,UAAA,mCAEA2S,EAAAD,EAAAC,OAEA,IAAAb,EAAArB,EAAAsB,WAAAY,GAEAtZ,EAAAgY,EAAAhY,OAKA,OAJA,oBAAAqZ,EAAArZ,QAAA4H,EAAAyR,EAAArZ,WACAA,EAAAqZ,EAAArZ,QAGA,CACAiY,eAAA,mBAAAoB,EAAApB,eAAAoB,EAAApB,eAAAD,EAAAC,eACAC,UAAA,qBAAAmB,EAAAnB,UAAAF,EAAAE,YAAAmB,EAAAnB,UACAC,UACAC,gBAAA,mBAAAiB,EAAAjB,gBAAAiB,EAAAjB,gBAAAJ,EAAAI,gBACAC,UAAA,qBAAAgB,EAAAhB,UAAAL,EAAAK,UAAAgB,EAAAhB,UACAC,OAAA,mBAAAe,EAAAf,OAAAe,EAAAf,OAAAN,EAAAM,OACAC,QAAA,oBAAAc,EAAAd,QAAAc,EAAAd,QAAAP,EAAAO,QACAC,iBAAA,mBAAAa,EAAAb,iBAAAa,EAAAb,iBAAAR,EAAAQ,iBACAxY,SACAyY,YACAE,cAAA,oBAAAU,EAAAV,cAAAU,EAAAV,cAAAX,EAAAW,cACAE,UAAA,mBAAAQ,EAAAR,UAAAQ,EAAAR,UAAAb,EAAAa,UACAnK,KAAA,oBAAA2K,EAAA3K,KAAA2K,EAAA3K,KAAA,KACAoK,mBAAA,mBAAAO,EAAAP,mBAAAO,EAAAP,mBAAAd,EAAAc,qBAIAxN,EAAAjQ,QAAA,SAAA0d,EAAAM,GACA,IAGAF,EACAnZ,EAJAoD,EAAA2V,EACA7W,EAAAkX,EAAAC,GAKA,oBAAAnX,EAAAlC,QACAA,EAAAkC,EAAAlC,OACAoD,EAAApD,EAAA,GAAAoD,IACKwE,EAAA1F,EAAAlC,UACLA,EAAAkC,EAAAlC,OACAmZ,EAAAnZ,GAGA,IAMA6S,EANA3W,EAAA,GAEA,qBAAAkH,GAAA,OAAAA,EACA,SAKAyP,EADAwG,KAAAxG,eAAAwE,EACAgC,EAAAxG,YACKwG,GAAA,YAAAA,EACLA,EAAA5B,QAAA,mBAEA,UAGA,IAAAuB,EAAA3B,EAAAxE,GAEAsG,IACAA,EAAAhe,OAAAe,KAAAkH,IAGAlB,EAAAwM,MACAyK,EAAAzK,KAAAxM,EAAAwM,MAGA,QAAA3F,EAAA,EAAmBA,EAAAoQ,EAAAhY,SAAoB4H,EAAA,CACvC,IAAAoC,EAAAgO,EAAApQ,GAEA7G,EAAA2W,WAAA,OAAAzV,EAAA+H,IAGAwM,EAAAzb,EAAA0W,EACAxP,EAAA+H,GACAA,EACA6N,EACA9W,EAAA4W,mBACA5W,EAAA2W,UACA3W,EAAAoW,OAAApW,EAAAqW,QAAA,KACArW,EAAAlC,OACAkC,EAAAwM,KACAxM,EAAAgW,UACAhW,EAAAyW,cACAzW,EAAAuW,UACAvW,EAAAsW,iBACAtW,EAAAiW,UAIA,IAAAoB,EAAArd,EAAA+M,KAAA/G,EAAAmW,WACAd,GAAA,IAAArV,EAAA+V,eAAA,OAYA,OAVA/V,EAAAkW,kBACA,eAAAlW,EAAAiW,QAEAZ,GAAA,uBAGAA,GAAA,mBAIAgC,EAAApY,OAAA,EAAAoW,EAAAgC,EAAA,uCCzQA,IAAA3G,EAAgBpX,EAAQ,QACxB2O,EAAY3O,EAAQ,QACpB4b,EAAc5b,EAAQ,QAEtB8P,EAAAjQ,QAAA,CACA+b,UACAjN,QACAyI,gDCRAzX,OAAAC,eAAAC,EAAA,cAA8CC,OAAA,IAC9C,IAAAC,EAAcC,EAAQ,QAEtB,SAAAge,EAAA5B,GACA,IAAAja,EACA,OAAAA,EAAA,IAAAuV,OAAArU,MAAAlB,EAAApC,EAAAke,SAAA7B,IAEAvc,EAAAme,+CCPAre,OAAAC,eAAAC,EAAA,cAA8CC,OAAA,IAC9C,IAAAC,EAAcC,EAAQ,QACtBmT,EAAgBnT,EAAQ,QAIxBke,EAAA,SAAAzc,GAEA,SAAAyc,IACA,cAAAzc,KAAA4B,MAAA/C,KAAAgD,YAAAhD,KA8DA,OAhEAP,EAAA+B,UAAAoc,EAAAzc,GAIA9B,OAAAC,eAAAse,EAAA1d,UAAA,aAIAC,IAAA,WACA,OAAAH,KAAAF,MAAA+d,YAEAvd,YAAA,EACAC,cAAA,IAEAlB,OAAAC,eAAAse,EAAA1d,UAAA,SAIAC,IAAA,WACA,OAAAH,KAAAF,MAAAge,OAEAxd,YAAA,EACAC,cAAA,IAKAqd,EAAA1d,UAAA6d,WAAA,WACA,OAAAte,EAAAkC,UAAA3B,UAAA,oBACA,OAAAP,EAAAmC,YAAA5B,KAAA,SAAA6B,GACA,SAAA7B,KAAAC,QAAAya,OAAAtH,SAAA4K,kBAAAhe,YASA4d,EAAA1d,UAAA+d,gBAAA,SAAA5Y,GACA,OAAA5F,EAAAkC,UAAA3B,UAAA,oBACA,OAAAP,EAAAmC,YAAA5B,KAAA,SAAA6B,GACA,SAAA7B,KAAAC,QAAAya,OAAAtH,SAAA8K,uBAAAle,KAAAqF,SAOAuY,EAAA1d,UAAAie,eAAA,WACA,OAAA1e,EAAAkC,UAAA3B,UAAA,oBACA,IAAAqT,EAAA+K,EACA,OAAA3e,EAAAmC,YAAA5B,KAAA,SAAA6B,GACA,OAAAA,EAAA8D,OACA,gBAAA3F,KAAAC,QAAAya,OAAAtH,SAAAiL,sBAAAre,OACA,OAIA,OAHAqT,EAAAxR,EAAAgE,OACAuY,EAAA/K,EAAAwK,WACA7d,KAAAF,MAAA+d,WAAAO,EACA,GAAAA,SAKAR,EAjEA,CAkEC/K,EAAAnS,SACDnB,EAAAmB,QAAAkd,qCCzEAve,OAAAC,eAAAC,EAAA,cAA8CC,OAAA,IAC9C,IAAAC,EAAcC,EAAQ,QACtB+P,EAAgB/P,EAAQ,QACxBkE,EAAclE,EAAQ,QACtBoS,EAAkBpS,EAAQ,QAC1B4e,EAAsB5e,EAAQ,QAC9B6e,EAAiB7e,EAAQ,QAYzB8e,EAAA,SAAArd,GAEA,SAAAqd,IACA,cAAArd,KAAA4B,MAAA/C,KAAAgD,YAAAhD,KA2DA,OA7DAP,EAAA+B,UAAAgd,EAAArd,GASAqd,EAAAte,UAAAue,gBAAA,SAAAC,GACA,OAAAjf,EAAAkC,UAAA3B,UAAA,oBACA,IAAAoB,EACA,OAAA3B,EAAAmC,YAAA5B,KAAA,SAAA6B,GACA,OAAAA,EAAA8D,OACA,OAIA,MAHA,kBAAA+Y,IACAA,IAAAvR,KAAA,MAEA,GAAAnN,KAAAC,QAAA6Q,QAAA,CACArH,IAAA,uBACAyH,MAAA,CACAwN,gBAGA,OAEA,OADAtd,EAAAS,EAAAgE,OACA,OAAAyY,EAAA5d,QAAAU,EAAAud,UAAA3e,KAAAC,gBAUAue,EAAAte,UAAA0e,uBAAA,SAAArG,GACA,OAAA9Y,EAAAkC,UAAA3B,UAAA,oBACA,IAAAoB,EACAE,EAAAtB,KACA,OAAAP,EAAAmC,YAAA5B,KAAA,SAAA6B,GACA,OAAAA,EAAA8D,OACA,gBAAA3F,KAAAC,QAAA6Q,QAAA,CACArH,IAAA,QAAAqI,EAAAjR,cAAA0X,GAAA,YAEA,OAEA,OADAnX,EAAAS,EAAAgE,OACA,GAAAzE,EAAAyd,MAAA/a,IAAA,SAAAgb,GAA8E,WAAAP,EAAA7d,QAAAoe,EAAAxd,EAAArB,kBAK9ER,EAAAkB,WAAA,CACAiD,EAAAW,OAAA,OACAia,EAAAte,UAAA,wBACAT,EAAAkB,WAAA,CACAiD,EAAAW,OAAA,OACAia,EAAAte,UAAA,+BACAse,EAAA/e,EAAAkB,WAAA,CACAiD,EAAAY,WACAga,GACAA,EA9DA,CA+DC/O,EAAA/O,SACDnB,EAAAmB,QAAA8d,uCClFAnf,OAAAC,eAAAC,EAAA,cAA8CC,OAAA,IAC9C,IAAAC,EAAcC,EAAQ,QACtBqf,EAAoBrf,EAAQ,QAI5Bsf,EAAA,SAAA7d,GAEA,SAAA6d,IACA,OAAA7d,EAAAI,KAAAvB,KAAA,4CAAAA,KAEA,OAJAP,EAAA+B,UAAAwd,EAAA7d,GAIA6d,EALA,CAMCD,EAAAre,SACDnB,EAAAmB,QAAAse,uCCbA3f,OAAAC,eAAAC,EAAA,cAA8CC,OAAA,IAC9C,IAAAC,EAAcC,EAAQ,QACtBmD,EAAanD,EAAQ,QACrBE,EAAsBF,EAAQ,QAI9Buf,EAAA,WAEA,SAAAA,EAAAnf,EAAAC,GACAC,KAAAF,QACAE,KAAAC,QAAAF,EAmCA,OAjCAV,OAAAC,eAAA2f,EAAA/e,UAAA,QAIAC,IAAA,WACA,WAAA0C,EAAAnC,QAAAV,KAAAF,MAAAgB,KAAAd,KAAAC,UAEAK,YAAA,EACAC,cAAA,IAEAlB,OAAAC,eAAA2f,EAAA/e,UAAA,oBAIAC,IAAA,WACA,OAAAH,KAAAF,MAAAof,eAEA5e,YAAA,EACAC,cAAA,IAEAlB,OAAAC,eAAA2f,EAAA/e,UAAA,cAIAC,IAAA,WACA,WAAAuC,KAAA1C,KAAAF,MAAA4E,aAEApE,YAAA,EACAC,cAAA,IAEAd,EAAAkB,WAAA,CACAf,EAAAgB,eACAqe,EAAA/e,UAAA,kBACA+e,EAvCA,GAyCA1f,EAAAmB,QAAAue,uCChDA5f,OAAAC,eAAAC,EAAA,cAA8CC,OAAA,IAC9C,IAAAC,EAAcC,EAAQ,QAGtB,SAAAyf,EAAAC,EAAAzO,EAAA8K,GAEA,SAAA4D,EAAAC,GAEA,cAAAA,GACA,gBACA,SAEA,aACA,UAAAA,EACA,SAEA,gBAAAA,EACA,OAAAA,EAAAC,SAEA,IAAAC,EAAApR,KAAA0I,UAAAwI,GACA,UAAAE,EACA,OAAAA,EAIA,QACA,OAAAF,EAAAzX,YAIA,OAAApI,EAAAke,SAAA,CAAAyB,GAAAzO,EAAA7M,IAAAub,IAAAlS,KAAA,MAAAsO,EAAA,QAIA,SAAAjX,EAAAib,GACA,gBAAAte,GAEA,SAAAue,IACA,IAAApe,EAAA,OAAAH,KAAA4B,MAAA/C,KAAAgD,YAAAhD,KAEA,OADAsB,EAAAqe,MAAA,IAAAC,IACAte,EAkDA,OAtDA7B,EAAA+B,UAAAke,EAAAve,GAMAue,EAAAxf,UAAA2f,aAAA,SAAAN,GAEA,GADAvf,KAAA8f,cACA9f,KAAA2f,MAAAxX,IAAAoX,GAAA,CACA,IAAAQ,EAAA/f,KAAA2f,MAAAxf,IAAAof,GACA,GAAAQ,EACA,OAAAA,EAAAvgB,QAKAkgB,EAAAxf,UAAA8f,SAAA,SAAAT,EAAA/f,EAAAygB,GACAjgB,KAAA2f,MAAAtX,IAAAkX,EAAA,CACA/f,QAAA0gB,QAAAxd,KAAAyd,MAAA,IAAAF,KAGAP,EAAAxf,UAAAkgB,gBAAA,SAAAb,EAAA9D,GACA,IACA4E,EADA/e,EAAAtB,KAEA,qBAAAuf,EACAc,EAAAd,EACAc,EAAAC,SAAA,OACAD,GAAA,SAGA,CACA,IAAAjB,EAAAG,EAAA5T,QACA0U,EAAAlB,EAAAC,EAAAG,EAAA9D,GAEAA,EACAzb,KAAA2f,MAAArX,QAAA,SAAAiY,EAAAlR,GACAA,EAAAmR,WAAAH,IACA/e,EAAAqe,MAAAc,OAAApR,KAKArP,KAAA2f,MAAAc,OAAAJ,IAGAX,EAAAxf,UAAA4f,YAAA,WACA,IAAAxe,EAAAtB,KACAmgB,EAAAzd,KAAAyd,MACAngB,KAAA2f,MAAArX,QAAA,SAAAiY,EAAAlR,GACAkR,EAAAL,QAAAC,GACA7e,EAAAqe,MAAAc,OAAApR,MAIAqQ,EAvDA,CAwDKD,GAIL,SAAAlb,EAAA0b,EAAAS,GAIA,YAHA,IAAAT,IAAmCA,EAAAU,UACnC,IAAAD,IAAmCA,GAAA,GAEnC,SAAAE,EAAAxB,EAAAyB,GACA,IAAAC,EAAAD,EAAArhB,MA4BA,OA1BAqhB,EAAArhB,MAAA,WAEA,IADA,IAAAmR,EAAA,GACAoQ,EAAA,EAA4BA,EAAA/d,UAAAqC,OAAuB0b,IACnDpQ,EAAAoQ,GAAA/d,UAAA+d,GAEA,OAAAthB,EAAAkC,UAAA3B,UAAA,oBACA,IAAAuf,EAAAyB,EAAA3U,EACA,OAAA5M,EAAAmC,YAAA5B,KAAA,SAAA6B,GACA,OAAAA,EAAA8D,OACA,OAGA,OAFA4Z,EAAAJ,EAAAC,EAAAzO,GACAqQ,EAAAhhB,KAAA6f,aAAAN,GACAyB,EACA,GAAAA,GAEA,GAAAF,EAAA/d,MAAA/C,KAAA2Q,IACA,OAKA,OAJAtE,EAAAxK,EAAAgE,QACA,MAAAwG,GAAAqU,IACA1gB,KAAAggB,SAAAT,EAAAlT,EAAA4T,GAEA,GAAA5T,SAKAwU,GAKA,SAAAvc,EAAA2b,GAGA,YAFA,IAAAA,IAAmCA,EAAAU,KAEnC,SAAAC,EAAAxB,EAAAyB,GACA,GAAAA,EAAA1gB,IAAA,CACA,IAAA8gB,EAAAJ,EAAA1gB,IAEA0gB,EAAA1gB,IAAA,WAEA,IADA,IAAAwQ,EAAA,GACAoQ,EAAA,EAAgCA,EAAA/d,UAAAqC,OAAuB0b,IACvDpQ,EAAAoQ,GAAA/d,UAAA+d,GAEA,IAAAxB,EAAAJ,EAAAC,EAAAzO,GACAqQ,EAAAhhB,KAAA6f,aAAAN,GACA,GAAAyB,EACA,OAAAA,EAEA,IAAA3U,EAAA4U,EAAAle,MAAA/C,KAAA2Q,GAEA,OADA3Q,KAAAggB,SAAAT,EAAAlT,EAAA4T,GACA5T,GAGA,OAAAwU,GAKA,SAAAK,EAAAC,EAAAC,GAEA,gBAAAR,EAAAxB,EAAAyB,GACA,IAAAC,EAAAD,EAAArhB,MAqBA,OAnBAqhB,EAAArhB,MAAA,WAEA,IADA,IAAAmR,EAAA,GACAoQ,EAAA,EAA4BA,EAAA/d,UAAAqC,OAAuB0b,IACnDpQ,EAAAoQ,GAAA/d,UAAA+d,GAEA,OAAAthB,EAAAkC,UAAA3B,UAAA,oBACA,IAAAqM,EAAAgV,EACA,OAAA5hB,EAAAmC,YAAA5B,KAAA,SAAA6B,GACA,OAAAA,EAAA8D,OACA,gBAAAmb,EAAA/d,MAAA/C,KAAA2Q,IACA,OAIA,OAHAtE,EAAAxK,EAAAgE,OACAwb,OAAA5a,IAAA2a,EAAAzQ,EAAAtD,QAAAsD,EAAAtD,MAAA,EAAA+T,GACAphB,KAAAogB,gBAAA3gB,EAAAke,SAAA,CAAAwD,GAAAE,IAAA,GACA,GAAAhV,SAKAwU,GAxJAthB,EAAA4f,iBA6DA5f,EAAAiF,YAsCAjF,EAAAgF,SA2BAhF,EAAA+E,eA6BA/E,EAAA2hB,mDC3LA7hB,OAAAC,eAAAC,EAAA,cAA8CC,OAAA,IAC9C,IAAAC,EAAcC,EAAQ,QACtBE,EAAsBF,EAAQ,SAK9B,SAAA4hB,GAIAA,EAAA,WAIAA,EAAA,eAMAA,EAAA,sBAdA,CAeC/hB,EAAA+hB,kBAAA/hB,EAAA+hB,gBAAA,KAID,IAAAC,EAAA,WAEA,SAAAA,EAAAzhB,EAAAC,GACAC,KAAAF,QACAE,KAAAC,QAAAF,EA6HA,OA3HAV,OAAAC,eAAAiiB,EAAArhB,UAAA,MAIAC,IAAA,WACA,OAAAH,KAAAF,MAAAiB,IAEAT,YAAA,EACAC,cAAA,IAEAlB,OAAAC,eAAAiiB,EAAArhB,UAAA,UAIAC,IAAA,WACA,OAAAH,KAAAF,MAAA0D,SAEAlD,YAAA,EACAC,cAAA,IAEAlB,OAAAC,eAAAiiB,EAAArhB,UAAA,mBAIAC,IAAA,WACA,OAAAH,KAAAF,MAAA2D,WAEAnD,YAAA,EACAC,cAAA,IAKAghB,EAAArhB,UAAAkC,QAAA,WACA,OAAA3C,EAAAkC,UAAA3B,UAAA,oBACA,OAAAP,EAAAmC,YAAA5B,KAAA,SAAA6B,GACA,SAAA7B,KAAAC,QAAA6B,MAAAO,MAAAC,YAAAtC,KAAAF,MAAA0D,eAIAnE,OAAAC,eAAAiiB,EAAArhB,UAAA,UAIAC,IAAA,WACA,OAAAH,KAAAF,MAAA0hB,SAEAlhB,YAAA,EACAC,cAAA,IAKAghB,EAAArhB,UAAAuhB,QAAA,WACA,OAAAhiB,EAAAkC,UAAA3B,UAAA,oBACA,OAAAP,EAAAmC,YAAA5B,KAAA,SAAA6B,GACA,SAAA7B,KAAAC,QAAA6B,MAAA4f,MAAAC,YAAA3hB,KAAAF,MAAA0hB,eAIAniB,OAAAC,eAAAiiB,EAAArhB,UAAA,QAIAC,IAAA,WACA,OAAAH,KAAAF,MAAA8J,MAEAtJ,YAAA,EACAC,cAAA,IAEAlB,OAAAC,eAAAiiB,EAAArhB,UAAA,SAIAC,IAAA,WACA,OAAAH,KAAAF,MAAAsY,OAEA9X,YAAA,EACAC,cAAA,IAEAlB,OAAAC,eAAAiiB,EAAArhB,UAAA,WAIAC,IAAA,WACA,OAAAH,KAAAF,MAAA8hB,cAEAthB,YAAA,EACAC,cAAA,IAEAlB,OAAAC,eAAAiiB,EAAArhB,UAAA,aAIAC,IAAA,WACA,WAAAuC,KAAA1C,KAAAF,MAAA0R,aAEAlR,YAAA,EACAC,cAAA,IAEAlB,OAAAC,eAAAiiB,EAAArhB,UAAA,YAIAC,IAAA,WACA,OAAAH,KAAAF,MAAA2S,UAEAnS,YAAA,EACAC,cAAA,IAEAlB,OAAAC,eAAAiiB,EAAArhB,UAAA,gBAIAC,IAAA,WACA,OAAAH,KAAAF,MAAA+hB,eAEAvhB,YAAA,EACAC,cAAA,IAEAd,EAAAkB,WAAA,CACAf,EAAAgB,eACA2gB,EAAArhB,UAAA,kBACAqhB,EAjIA,GAmIAhiB,EAAAmB,QAAA6gB,uCC7JAliB,OAAAC,eAAAC,EAAA,cAA8CC,OAAA,IAC9C,IAAAC,EAAcC,EAAQ,QACtB+P,EAAgB/P,EAAQ,QACxBoiB,EAAoBpiB,EAAQ,QAC5BmF,EAAqBnF,EAAQ,QAC7BiQ,EAA8BjQ,EAAQ,QACtCoS,EAAkBpS,EAAQ,QAC1BqiB,EAAmCriB,EAAQ,QAC3CuB,EAA0BvB,EAAQ,QAClCsiB,EAA2BtiB,EAAQ,QACnCkV,EAA4BlV,EAAQ,QACpCuiB,EAAmBviB,EAAQ,QAY3BwiB,EAAA,SAAA/gB,GAEA,SAAA+gB,IACA,cAAA/gB,KAAA4B,MAAA/C,KAAAgD,YAAAhD,KA6MA,OA/MAP,EAAA+B,UAAA0gB,EAAA/gB,GASA+gB,EAAAhiB,UAAAiiB,WAAA,SAAAje,GAEA,YADA,IAAAA,IAAgCA,EAAA,IAChCzE,EAAAkC,UAAA3B,UAAA,oBACA,IAAAqM,EACA/K,EAAAtB,KACA,OAAAP,EAAAmC,YAAA5B,KAAA,SAAA6B,GACA,OAAAA,EAAA8D,OACA,gBAAA3F,KAAAC,QAAA6Q,QAAA,CACArH,IAAA,UACAG,KAAA/E,EAAAkM,kBAAAC,MACAE,MAAA,CACAkR,MAAAle,EAAAke,MACAC,OAAAne,EAAAme,OACA3Q,MAAAxN,EAAAoN,MACAgR,aAAApe,EAAAqe,UACAf,QAAAtd,EAAAse,KACA/P,SAAAvO,EAAAuO,SACA7I,KAAA1F,EAAA0F,KACApG,QAAAU,EAAAR,OACA+e,WAAAve,EAAAwe,aAGA,OAEA,OADArW,EAAAxK,EAAAgE,OACA,IACAzE,KAAAiL,EAAAjL,KAAA0C,IAAA,SAAA2P,GAA6E,WAAAqO,EAAAphB,QAAA+S,EAAAnS,EAAArB,WAC7E0R,OAAAtF,EAAAuF,YAAAvF,EAAAuF,WAAAD,eAWAuQ,EAAAhiB,UAAAyiB,oBAAA,SAAAze,GACA,IAAA5C,EAAAtB,KAEA,YADA,IAAAkE,IAAgCA,EAAA,IAChC,IAAAyL,EAAAjP,QAAA,CACA+I,IAAA,UACAyH,MAAA,CACAoR,aAAApe,EAAAqe,UACAf,QAAAtd,EAAAse,KACA/P,SAAAvO,EAAAuO,SACA7I,KAAA1F,EAAA0F,KACApG,QAAAU,EAAAR,OACA+e,WAAAve,EAAAwe,WAES1iB,KAAAC,QAAA,SAAAmB,GAAiC,WAAA0gB,EAAAphB,QAAAU,EAAAE,EAAArB,YAO1CiiB,EAAAhiB,UAAA0iB,oBAAA,SAAA9hB,GACA,OAAArB,EAAAkC,UAAA3B,UAAA,oBACA,IAAAqM,EACA,OAAA5M,EAAAmC,YAAA5B,KAAA,SAAA6B,GACA,OAAAA,EAAA8D,OACA,gBAAA3F,KAAAmiB,WAAA,CAAkEO,SAAA5Q,EAAA9Q,gBAAAF,MAClE,OAEA,OADAuL,EAAAxK,EAAAgE,OACA,GAAAwG,EAAAjL,KAAAiE,OAAAgH,EAAAjL,KAAA,eAUA8gB,EAAAhiB,UAAAga,kBAAA,SAAApZ,GACA,OAAArB,EAAAkC,UAAA3B,UAAA,oBACA,IAAAqM,EACA,OAAA5M,EAAAmC,YAAA5B,KAAA,SAAA6B,GACA,OAAAA,EAAA8D,OACA,gBAAA3F,KAAAmiB,WAAA,CAAkEze,OAAAoO,EAAAjR,cAAAC,MAClE,OAEA,OADAuL,EAAAxK,EAAAgE,OACA,GAAAwG,EAAAjL,KAAAiE,OAAAgH,EAAAjL,KAAA,eAUA8gB,EAAAhiB,UAAA2iB,wBAAA,SAAA/hB,GACA,OAAArB,EAAAkC,UAAA3B,UAAA,oBACA,OAAAP,EAAAmC,YAAA5B,KAAA,SAAA6B,GACA,SAAA7B,KAAA8iB,kBAAA,UAAAhR,EAAAjR,cAAAC,UASAohB,EAAAhiB,UAAA6iB,iCAAA,SAAAjiB,GACA,OAAAd,KAAAgjB,2BAAA,UAAAlR,EAAAjR,cAAAC,KAOAohB,EAAAhiB,UAAA+iB,yBAAA,SAAAC,GACA,OAAAzjB,EAAAkC,UAAA3B,UAAA,oBACA,OAAAP,EAAAmC,YAAA5B,KAAA,SAAA6B,GACA,SAAA7B,KAAA8iB,kBAAA,WAAAI,SASAhB,EAAAhiB,UAAAijB,kCAAA,SAAAD,GACA,OAAAljB,KAAAgjB,2BAAA,WAAAE,IAOAhB,EAAAhiB,UAAAkjB,mBAAA,WACA,OAAA3jB,EAAAkC,UAAA3B,UAAA,oBACA,IAAAqM,EAAA8O,EACA,OAAA1b,EAAAmC,YAAA5B,KAAA,SAAA6B,GACA,OAAAA,EAAA8D,OACA,OAEA,OADA9D,EAAAuZ,KAAA1S,KAAA,UACA,GAAA1I,KAAAC,QAAA6Q,QAAA,CACArH,IAAA,kBACAuB,OAAA,OACApB,KAAA/E,EAAAkM,kBAAAC,MACAC,MAAA,yBAEA,OAEA,OADA5E,EAAAxK,EAAAgE,OACA,OAAA5E,EAAAP,QAAA2L,EAAAjL,KAAA,GAAApB,KAAAC,UACA,OAEA,GADAkb,EAAAtZ,EAAAgE,OACAsV,aAAAvG,EAAAlU,SAAA,MAAAya,EAAAkI,WACA,UAAArB,EAAAthB,QAEA,MAAAya,EACA,uBAKA+G,EAAAhiB,UAAA4iB,kBAAA,SAAAQ,EAAAviB,GACA,OAAAtB,EAAAkC,UAAA3B,UAAA,oBACA,IAAAqM,EACAxK,EACA,OAAApC,EAAAmC,YAAA5B,KAAA,SAAA0F,GACA,OAAAA,EAAAC,OACA,gBAAA3F,KAAAC,QAAA6Q,QAAA,CACArH,IAAA,kBACAG,KAAA/E,EAAAkM,kBAAAC,MACAE,OAAArP,EAAA,GACAA,EAAAyhB,GAAAviB,EACAc,GACAoP,MAAA,yBAEA,OAEA,OADA5E,EAAA3G,EAAAG,OACA,IACAzE,KAAA6gB,EAAAvE,QAAArR,EAAAjL,KAAA0C,IAAAoe,EAAAqB,2BAAApM,KAAAnX,KAAAC,WACA0R,OAAAtF,EAAAuF,YAAAvF,EAAAuF,WAAAD,eAMAuQ,EAAAhiB,UAAA8iB,2BAAA,SAAAM,EAAAviB,GACA,IAAAc,EACA,WAAA8N,EAAAjP,QAAA,CACA+I,IAAA,kBACAyH,OAAArP,EAAA,GACAA,EAAAyhB,GAAAviB,EACAc,GACAoP,MAAA,uBACSjR,KAAAC,QAAAiiB,EAAAqB,2BAAApM,KAAAnX,KAAAC,WAETiiB,EAAAqB,2BAAA,SAAAniB,GACA,IAAAE,EAAAtB,KACA,OAAAoB,EAAAW,OAAAyhB,OAAA,SAAAnX,EAAAoX,GAA4D,OAAAhkB,EAAAke,SAAAtR,EAAAoX,EAAAC,QAAA5f,IAAA,SAAA6f,GAAsE,WAAA5B,EAAArhB,QAAAijB,EAAAF,EAAAG,SAAAtiB,OAAuF,KAEzN4gB,EAhNA,CAiNCzS,EAAA/O,SACDnB,EAAAmB,QAAAwhB,uCCzOA7iB,OAAAC,eAAAC,EAAA,cAA8CC,OAAA,IAC9C,IAAAC,EAAcC,EAAQ,QACtBmD,EAAanD,EAAQ,QAMrBmkB,EAAA,SAAA1iB,GAEA,SAAA0iB,IACA,cAAA1iB,KAAA4B,MAAA/C,KAAAgD,YAAAhD,KA+GA,OAjHAP,EAAA+B,UAAAqiB,EAAA1iB,GAIA9B,OAAAC,eAAAukB,EAAA3jB,UAAA,SAIAC,IAAA,WACA,OAAAH,KAAAF,MAAAge,OAEAxd,YAAA,EACAC,cAAA,IAEAlB,OAAAC,eAAAukB,EAAA3jB,UAAA,mBAIAC,IAAA,WACA,OAAAH,KAAAF,MAAAgkB,gBAEAxjB,YAAA,EACAC,cAAA,IAEAlB,OAAAC,eAAAukB,EAAA3jB,UAAA,yBAIAC,IAAA,WACA,OAAAH,KAAAF,MAAAof,cAAApB,OAEAxd,YAAA,EACAC,cAAA,IAEAlB,OAAAC,eAAAukB,EAAA3jB,UAAA,wBAIAC,IAAA,WACA,OAAAH,KAAAF,MAAAof,cAAAxW,MAEApI,YAAA,EACAC,cAAA,IAEAlB,OAAAC,eAAAukB,EAAA3jB,UAAA,eAIAC,IAAA,WACA,OAAAH,KAAAF,MAAAikB,WAEAzjB,YAAA,EACAC,cAAA,IAEAlB,OAAAC,eAAAukB,EAAA3jB,UAAA,cAIAC,IAAA,WACA,OAAAH,KAAAF,MAAAkkB,mBAEA1jB,YAAA,EACAC,cAAA,IAQAsjB,EAAA3jB,UAAA0a,cAAA,SAAArC,EAAA2G,GACA,OAAAzf,EAAAkC,UAAA3B,UAAA,oBACA,OAAAP,EAAAmC,YAAA5B,KAAA,SAAA6B,GACA,SAAA7B,KAAAC,QAAAya,OAAArY,MAAAuY,cAAA5a,KAAAuY,EAAA2G,SASA2E,EAAA3jB,UAAA4a,gBAAA,SAAAvC,GACA,OAAA9Y,EAAAkC,UAAA3B,UAAA,oBACA,OAAAP,EAAAmC,YAAA5B,KAAA,SAAA6B,GACA,SAAA7B,KAAAC,QAAAya,OAAArY,MAAAyY,gBAAA9a,KAAAuY,SASAsL,EAAA3jB,UAAA+jB,UAAA,SAAAC,GACA,OAAAzkB,EAAAkC,UAAA3B,UAAA,oBACA,OAAAP,EAAAmC,YAAA5B,KAAA,SAAA6B,GACA,SAAA7B,KAAAC,QAAAya,OAAArY,MAAA4hB,UAAAjkB,KAAAkkB,SASAL,EAAA3jB,UAAAikB,YAAA,SAAAC,GACA,OAAA3kB,EAAAkC,UAAA3B,UAAA,oBACA,OAAAP,EAAAmC,YAAA5B,KAAA,SAAA6B,GACA,SAAA7B,KAAAC,QAAAya,OAAArY,MAAA8hB,YAAAnkB,KAAAokB,SAIAP,EAlHA,CAmHChhB,EAAAnC,SACDnB,EAAAmB,QAAAmjB,uCC5HAxkB,OAAAC,eAAAC,EAAA,cAA8CC,OAAA,IAC9C,IAAAC,EAAcC,EAAQ,QACtBE,EAAsBF,EAAQ,QAC9B6U,EAAoB7U,EAAQ,QAC5BmF,EAAqBnF,EAAQ,QAQ7B2kB,EAAA,WAYA,SAAAA,EAAAtf,EAAAoR,EAAA/Q,GACApF,KAAAiF,UAAAF,GAAA,GACAoR,IACAnW,KAAAskB,aAAA,IAAA/P,EAAA7T,QAAA,CAA2D6jB,aAAApO,EAAAlF,MAAA7L,IAAA+H,KAAA,QAAAwK,cAAA,KAC3D3X,KAAAwkB,QAAApf,GA0EA,OA/DAif,EAAAnkB,UAAAiF,eAAA,SAAAC,GACA,OAAA3F,EAAAkC,UAAA3B,UAAA,oBACA,IAAAykB,EACAnjB,EAAAtB,KACA,OAAAP,EAAAmC,YAAA5B,KAAA,SAAA6B,GACA,OAAAA,EAAA8D,OACA,OACA,KAAAP,KAAAC,OAAA,eACA,GAAArF,KAAAwkB,QAAA,YACA,IAAAxkB,KAAAskB,aACA,UAAAhf,MAAA,oFAEA,SAAAT,EAAAnE,QAAA6V,aAAAvW,KAAAiF,UAAAjF,KAAAskB,aAAAnO,cACA,OAEA,GADAsO,EAAA5iB,EAAAgE,QACA4e,EAAAjO,MACA,UAAAlR,MAAA,4DAEAtF,KAAAwkB,QAAAC,EAAArf,OACAvD,EAAA8D,MAAA,EACA,OAIA,GAHA,kBAAAP,IACAA,IAAAyJ,MAAA,MAEAzJ,EAAAsf,KAAA,SAAAzT,GAA0D,OAAA3P,EAAAkjB,QAAAG,SAAA1T,KAC1D,UAAA3L,MAAA,kDAAAF,EAAA+H,KAAA,mCAEAtL,EAAA8D,MAAA,EACA,gBAAA3F,KAAAskB,cAAA,YAMAD,EAAAnkB,UAAA4F,eAAA,SAAAC,GACA/F,KAAAskB,aAAAve,GAEA1G,OAAAC,eAAA+kB,EAAAnkB,UAAA,YAIAC,IAAA,WACA,OAAAH,KAAAiF,WAEA3E,YAAA,EACAC,cAAA,IAEAlB,OAAAC,eAAA+kB,EAAAnkB,UAAA,iBAIAC,IAAA,WACA,OAAAH,KAAAwkB,SAAA,IAEAlkB,YAAA,EACAC,cAAA,IAEAd,EAAAkB,WAAA,CACAf,EAAAgB,eACAyjB,EAAAnkB,UAAA,oBACAT,EAAAkB,WAAA,CACAf,EAAAgB,eACAyjB,EAAAnkB,UAAA,uBACAmkB,EA1FA,GA4FA9kB,EAAAmB,QAAA2jB,uCCxGAhlB,OAAAC,eAAAC,EAAA,cAA8CC,OAAA,IAC9C,IAAAC,EAAcC,EAAQ,QACtBE,EAAsBF,EAAQ,QAC9BklB,EAA6BllB,EAAQ,QACrCmlB,EAAoBnlB,EAAQ,SAQ5B,SAAAgW,GAMAA,EAAA,eAMAA,EAAA,kBAZA,CAaCnW,EAAAmW,sBAAAnW,EAAAmW,oBAAA,KAKD,SAAAG,GAIAA,EAAA,uBAIAA,EAAA,mBARA,CASCtW,EAAAsW,iBAAAtW,EAAAsW,eAAA,KAKD,SAAAG,GAIAA,EAAA,UAIAA,EAAA,cAIAA,EAAA,UAIAA,EAAA,UAIAA,EAAA,UApBA,CAqBCzW,EAAAyW,iBAAAzW,EAAAyW,eAAA,KAID,IAAA8O,EAAA,WAEA,SAAAA,EAAA1jB,EAAArB,GACAC,KAAAC,QAAAF,EACAC,KAAAF,MAAA+kB,EAAAE,QAAA3jB,EAAA,SAAA4jB,GAAoE,OAAAA,EAAAvJ,OAAAhQ,gBA4FpE,OAnFAqZ,EAAA5kB,UAAA+kB,wBAAA,SAAAxkB,EAAAykB,EAAA1H,QACA,IAAAA,IAAgCA,EAAA,IAChC/c,IAAAgL,cACA,IAAA0Z,EAAAnlB,KAAAC,QAAAqV,QAAAE,WACA4P,EAAA3lB,EAAAsQ,SAAA,CAA4CsV,WAAAF,EAAA1P,kBAAA6P,MAAAH,EAAAvP,aAAAuC,MAAAgN,EAAApP,cAAgIyH,GAC5K+H,EAAAvlB,KAAAF,MAAAW,GAAA8kB,MACAC,EAAAD,EAAA3S,KAAA,SAAA6S,EAAAC,GAAsD,OAAAA,EAAAC,SAAAF,EAAAE,WAAkCthB,KAAA,SAAAd,GAAwB,OAAAA,EAAAoiB,UAAAT,IAChH,IAAAM,EACA,UAAAZ,EAAAlkB,QAAA,cAAAD,EAAA,0CAAAykB,EAAA,SAEA,OACAzb,IAAA+b,EAAAI,OAAAR,EAAAC,YAAAD,EAAAE,OAAAF,EAAAjN,OACA0N,MAAAL,EAAAK,QAMAf,EAAA5kB,UAAA4lB,iBAAA,WACA,OAAAzmB,OAAAe,KAAAJ,KAAAF,QAOAglB,EAAA5kB,UAAA6lB,aAAA,SAAAC,GACA,IAIAC,EAJA5Z,EAAA,GACA6Z,EAAAlmB,KAAA8lB,mBAEAK,EAAA,IAAAC,OAAA,0CAGA,MAAAH,EAAAE,EAAAE,KAAAL,GAAA,CACA,IAAAM,EAAAL,EAAA,GAAAxa,cACA,GAAAya,EAAAvB,SAAA2B,GAAA,CACA,IAAAC,EAAAC,OAAAP,EAAA,IACA5Z,EAAA3D,KAAA,CACAjI,KAAA6lB,EACAC,SACAE,SAAAR,EAAAS,MACArhB,OAAA4gB,EAAA,GAAA5gB,OACAshB,YAAA3mB,KAAAilB,wBAAAqB,EAAAC,MAIA,OAAAla,GAQAyY,EAAA5kB,UAAA0mB,sBAAA,SAAAZ,EAAAa,GACA,IAAA1L,EAAAtZ,EACAwK,EAAA,GACAya,EAAA,EACA,IACA,QAAAphB,EAAAjG,EAAAsnB,SAAA/mB,KAAA+lB,aAAAC,IAAAzU,EAAA7L,EAAAgG,QAAuF6F,EAAA3F,KAAU2F,EAAA7L,EAAAgG,OAAA,CACjG,IAAAsb,EAAAzV,EAAA/R,MACAsnB,EAAAE,EAAAP,UACApa,EAAA3D,KAAAsd,EAAAiB,UAAAH,EAAAE,EAAAP,WAEApa,EAAA3D,KAAAme,EAAAG,IACAF,EAAAE,EAAAP,SAAAO,EAAA3hB,QAGA,MAAA6hB,GAAuB/L,EAAA,CAAQzR,MAAAwd,GAC/B,QACA,IACA3V,MAAA3F,OAAA/J,EAAA6D,EAAAyhB,SAAAtlB,EAAAN,KAAAmE,GAEA,QAAqB,GAAAyV,EAAA,MAAAA,EAAAzR,OAKrB,OAHAod,EAAAd,EAAA3gB,QACAgH,EAAA3D,KAAAsd,EAAAoB,OAAAN,IAEAza,GAEA5M,EAAAkB,WAAA,CACAf,EAAAgB,eACAkkB,EAAA5kB,UAAA,kBACA4kB,EAhGA,GAkGAvlB,EAAAmB,QAAAokB,uCCvKAzlB,OAAAC,eAAAC,EAAA,cAA8CC,OAAA,IAC9C,IAAAC,EAAcC,EAAQ,QACtBqf,EAAoBrf,EAAQ,QAI5B2nB,EAAA,SAAAlmB,GAEA,SAAAkmB,IACA,cAAAlmB,KAAA4B,MAAA/C,KAAAgD,YAAAhD,KAEA,OAJAP,EAAA+B,UAAA6lB,EAAAlmB,GAIAkmB,EALA,CAMCtI,EAAAre,SACDnB,EAAAmB,QAAA2mB,uCCbAhoB,OAAAC,eAAAC,EAAA,cAA8CC,OAAA,IAC9C,IAAAC,EAAcC,EAAQ,QAEtB4nB,EAAA,SAAAnmB,GAEA,SAAAmmB,IAEA,IADA,IAAA3W,EAAA,GACAoQ,EAAA,EAAwBA,EAAA/d,UAAAqC,OAAuB0b,IAC/CpQ,EAAAoQ,GAAA/d,UAAA+d,GAEA,IAAAzf,EAAAH,EAAA4B,MAAA/C,KAAAP,EAAAke,SAAAhN,KAAA3Q,KAIA,OAHAsF,MAAAiiB,mBACAjiB,MAAAiiB,kBAAAjmB,IAAAkmB,aAEAlmB,EASA,OAnBA7B,EAAA+B,UAAA8lB,EAAAnmB,GAYA9B,OAAAC,eAAAgoB,EAAApnB,UAAA,QACAC,IAAA,WACA,OAAAH,KAAAwnB,YAAA/mB,MAEAH,YAAA,EACAC,cAAA,IAEA+mB,EApBA,CAqBChiB,OACD/F,EAAAmB,QAAA4mB,uCCzBAjoB,OAAAC,eAAAC,EAAA,cAA8CC,OAAA,IAC9C,IAAAC,EAAcC,EAAQ,QACtBkE,EAAclE,EAAQ,QAItB+nB,EAAA,WAEA,SAAAA,EAAA3nB,GACAE,KAAAF,QA4CA,OArCA2nB,EAAAvnB,UAAAwnB,YAAA,SAAAC,GACA,IAAAxM,EAAAtZ,EAAA+lB,EAAAliB,EACA,IACA,QAAA6L,EAAA9R,EAAAsnB,SAAA1nB,OAAAuJ,OAAA5I,KAAAF,QAAA+nB,EAAAtW,EAAA7F,QAAsFmc,EAAAjc,KAAUic,EAAAtW,EAAA7F,OAAA,CAChG,IAAAoc,EAAAD,EAAAroB,MACA,IACA,QAAAuoB,GAAAH,OAAA,EAAAnoB,EAAAsnB,SAAAe,IAAAE,EAAAD,EAAArc,QAAuHsc,EAAApc,KAAoBoc,EAAAD,EAAArc,OAAA,CAC3I,IAAA3H,EAAAikB,EAAAxoB,MACA,OAAA4mB,OAAAriB,EAAAsT,MAAA7L,KAAAmc,GACA,OAAA5jB,EAAAhD,IAIA,MAAAknB,GAA+BL,EAAA,CAAQle,MAAAue,GACvC,QACA,IACAD,MAAApc,OAAAlG,EAAAqiB,EAAAZ,SAAAzhB,EAAAnE,KAAAwmB,GAEA,QAA6B,GAAAH,EAAA,MAAAA,EAAAle,SAI7B,MAAAwd,GAAuB/L,EAAA,CAAQzR,MAAAwd,GAC/B,QACA,IACAW,MAAAjc,OAAA/J,EAAA0P,EAAA4V,SAAAtlB,EAAAN,KAAAgQ,GAEA,QAAqB,GAAA4J,EAAA,MAAAA,EAAAzR,SAIrBjK,EAAAkB,WAAA,CACAiD,EAAAW,OAAAoc,KAAA,IACA8G,EAAAvnB,UAAA,oBACAunB,EAAAhoB,EAAAkB,WAAA,CACAiD,EAAAY,WACAijB,GACAA,EA/CA,GAiDAloB,EAAAmB,QAAA+mB,uCCvDApoB,OAAAC,eAAAC,EAAA,cAA8CC,OAAA,IAC9C,IAAAC,EAAcC,EAAQ,QACtBE,EAAsBF,EAAQ,QAC9BklB,EAA6BllB,EAAQ,QACrCkE,EAAclE,EAAQ,QAItBwoB,EAAA,WAEA,SAAAA,EAAApoB,EAAAC,GACAC,KAAAF,QACAE,KAAAC,QAAAF,EAsLA,OApLAV,OAAAC,eAAA4oB,EAAAhoB,UAAA,MAIAC,IAAA,WACA,OAAAH,KAAAF,MAAAiB,IAEAT,YAAA,EACAC,cAAA,IAEAlB,OAAAC,eAAA4oB,EAAAhoB,UAAA,UAIAC,IAAA,WACA,OAAAH,KAAAF,MAAA0D,SAEAlD,YAAA,EACAC,cAAA,IAEAlB,OAAAC,eAAA4oB,EAAAhoB,UAAA,mBAIAC,IAAA,WACA,OAAAH,KAAAF,MAAA2D,WAEAnD,YAAA,EACAC,cAAA,IAKA2nB,EAAAhoB,UAAAkC,QAAA,WACA,OAAA3C,EAAAkC,UAAA3B,UAAA,oBACA,OAAAP,EAAAmC,YAAA5B,KAAA,SAAA6B,GACA,SAAA7B,KAAAC,QAAA6B,MAAAO,MAAAC,YAAAtC,KAAAF,MAAA0D,eAIAnE,OAAAC,eAAA4oB,EAAAhoB,UAAA,SAIAC,IAAA,WACA,OAAAH,KAAAF,MAAAsY,OAEA9X,YAAA,EACAC,cAAA,IAEAlB,OAAAC,eAAA4oB,EAAAhoB,UAAA,eAIAC,IAAA,WACA,OAAAH,KAAAF,MAAA6E,aAEArE,YAAA,EACAC,cAAA,IAEAlB,OAAAC,eAAA4oB,EAAAhoB,UAAA,gBAIAC,IAAA,WACA,WAAAuC,KAAA1C,KAAAF,MAAA4E,aAEApE,YAAA,EACAC,cAAA,IAEAlB,OAAAC,eAAA4oB,EAAAhoB,UAAA,eAIAC,IAAA,WACA,WAAAuC,KAAA1C,KAAAF,MAAAqoB,eAEA7nB,YAAA,EACAC,cAAA,IAEAlB,OAAAC,eAAA4oB,EAAAhoB,UAAA,OAIAC,IAAA,WACA,OAAAH,KAAAF,MAAA2J,KAEAnJ,YAAA,EACAC,cAAA,IAEAlB,OAAAC,eAAA4oB,EAAAhoB,UAAA,gBAIAC,IAAA,WACA,OAAAH,KAAAF,MAAA+hB,eAEAvhB,YAAA,EACAC,cAAA,IAEAlB,OAAAC,eAAA4oB,EAAAhoB,UAAA,YAIAC,IAAA,WACA,iBAAAH,KAAAF,MAAAsoB,UAEA9nB,YAAA,EACAC,cAAA,IAEAlB,OAAAC,eAAA4oB,EAAAhoB,UAAA,SAIAC,IAAA,WACA,OAAAH,KAAAF,MAAAka,YAEA1Z,YAAA,EACAC,cAAA,IAEAlB,OAAAC,eAAA4oB,EAAAhoB,UAAA,YAIAC,IAAA,WACA,OAAAH,KAAAF,MAAA2S,UAEAnS,YAAA,EACAC,cAAA,IAEAlB,OAAAC,eAAA4oB,EAAAhoB,UAAA,QAIAC,IAAA,WACA,OAAAH,KAAAF,MAAA8J,MAEAtJ,YAAA,EACAC,cAAA,IAEAlB,OAAAC,eAAA4oB,EAAAhoB,UAAA,YAIAC,IAAA,WACA,OAAAH,KAAAF,MAAAuoB,UAEA/nB,YAAA,EACAC,cAAA,IAEAlB,OAAAC,eAAA4oB,EAAAhoB,UAAA,qBAIAC,IAAA,WACA,IAAAiP,EAAApP,KAAAF,MAAAuoB,SAAApC,MAAA,aACA,IAAA7W,EACA,UAAAwV,EAAAlkB,QAAA,oCAAAV,KAAAF,MAAAuoB,UAEA,OAAAjZ,EAAAtL,IAAA,SAAAwkB,GACA,IAAAC,EAAAD,EAAArC,MAAA,gBACA,IAAAsC,EACA,UAAA3D,EAAAlkB,QAAA,4CAAA4nB,GAEA,IAAAzmB,EAAApC,EAAA+oB,OAAAD,EAAA,GAAAE,EAAA5mB,EAAA,GAAA6mB,EAAA7mB,EAAA,GACA,OAAA8mB,SAAAF,EAAA,KAA4CG,EAAA,KAAAC,EAAA,GAAAC,EAAA,GAAuBJ,KACtDlF,OAAA,SAAAiC,EAAAC,GAA0B,OAAAD,EAAAC,KAEvCplB,YAAA,EACAC,cAAA,IAEAd,EAAAkB,WAAA,CACAf,EAAAgB,eACAsnB,EAAAhoB,UAAA,kBACAT,EAAAkB,WAAA,CACAiD,EAAAU,gBACA4jB,EAAAhoB,UAAA,0BACAgoB,EAAAzoB,EAAAkB,WAAA,CACAiD,EAAAY,WACA0jB,GACAA,EA1LA,GA4LA3oB,EAAAmB,QAAAwnB,uCCpMA7oB,OAAAC,eAAAC,EAAA,cAA8CC,OAAA,IAC9C,IAAAC,EAAcC,EAAQ,QAEtB,SAAAqpB,EAAAzhB,EAAA0hB,GAEA,IAAAC,EAAA5pB,OAAAwJ,QAAAvB,GAAAxD,IAAA,SAAAjC,GACA,IAAA6D,EACA6L,EAAA9R,EAAA+oB,OAAA3mB,EAAA,GAAAwN,EAAAkC,EAAA,GAAA/R,EAAA+R,EAAA,GACA,OAAA7L,EAAA,GAAuBA,EAAA2J,GAAA2Z,EAAAxpB,EAAA6P,GAAA3J,IAEvB,OAAArG,OAAA6pB,OAAAnmB,MAAA1D,OAAAI,EAAAke,SAAA,KAA2DsL,IAI3D,SAAAE,EAAArN,EAAAkN,GACA,OAAA3pB,OAAA6pB,OAAAnmB,MAAA1D,OAAAI,EAAAke,SAAA,KAA2D7B,EAAAhY,IAAAklB,KAI3D,SAAAjE,EAAAjJ,EAAAsN,GACA,uBAAAA,EAAA,CACA,IAAAC,EAAAD,EACAA,EAAA,SAAA5pB,GAAmC,OAAAA,EAAA6pB,GAAAxhB,YAEnC,OAAAshB,EAAArN,EAAA,SAAAyE,GACA,IAAA1e,EACA,OAAAA,EAAA,GAAuBA,EAAAunB,EAAA7I,MAAA1e,IAKvB,SAAAynB,EAAAhiB,EAAA0hB,GACA3pB,OAAAwJ,QAAAvB,GAAAgB,QAAA,SAAAzG,GACA,IAAA6D,EAAAjG,EAAA+oB,OAAA3mB,EAAA,GAAAwN,EAAA3J,EAAA,GAAAlG,EAAAkG,EAAA,GACA,OAAAsjB,EAAAxpB,EAAA6P,KAKA,SAAAka,EAAAjiB,GACA,OAAA6hB,EAAA7hB,EAAA,SAAAzF,GACA,IAAA6D,EACA6L,EAAA9R,EAAA+oB,OAAA3mB,EAAA,GAAAwN,EAAAkC,EAAA,GAAAgP,EAAAhP,EAAA,GACA,OAAA7L,EAAA,GAAuBA,EAAA2J,GAAAkR,EAAA7a,IA/BvBnG,EAAAwpB,YAKAxpB,EAAA4pB,kBAYA5pB,EAAAwlB,UAQAxlB,EAAA+pB,qBASA/pB,EAAAgqB,uDC9CAlqB,OAAAC,eAAAC,EAAA,cAA8CC,OAAA,IAC9C,IAAAC,EAAcC,EAAQ,QACtBqf,EAAoBrf,EAAQ,QAM5B8pB,EAAA,SAAAroB,GAEA,SAAAqoB,EAAAxD,GACA,OAAA7kB,EAAAI,KAAAvB,KAAAgmB,EAAA,+EAAAhmB,KAEA,OAJAP,EAAA+B,UAAAgoB,EAAAroB,GAIAqoB,EALA,CAMCzK,EAAAre,SACDnB,EAAAmB,QAAA8oB,uCCfAnqB,OAAAC,eAAAC,EAAA,cAA8CC,OAAA,IAC9C,IAAAC,EAAcC,EAAQ,QACtBE,EAAsBF,EAAQ,QAC9B+pB,EAAqB/pB,EAAQ,QAI7BgqB,EAAA,WAEA,SAAAA,EAAA5pB,EAAAC,GACAC,KAAAF,QACAE,KAAAC,QAAAF,EA8BA,OA5BAV,OAAAC,eAAAoqB,EAAAxpB,UAAA,iBAIAC,IAAA,WACA,OAAAd,OAAAe,KAAAJ,KAAAF,QAEAQ,YAAA,EACAC,cAAA,IAOAmpB,EAAAxpB,UAAAypB,YAAA,SAAAlpB,GACA,WAAAgpB,EAAA/oB,QAAAV,KAAAF,MAAAW,GAAAT,KAAAC,UAGAypB,EAAAxpB,UAAA0pB,OAAA,SAAAC,GAIA,OAHAA,aAAAH,IACAG,IAAA/pB,OAEA,IAAA4pB,EAAAjqB,EAAAsQ,SAAA,GAAoD/P,KAAAF,MAAA+pB,GAAA7pB,KAAAC,UAEpDR,EAAAkB,WAAA,CACAf,EAAAgB,eACA8oB,EAAAxpB,UAAA,kBACAwpB,EAlCA,GAoCAnqB,EAAAmB,QAAAgpB,uCC3CArqB,OAAAC,eAAAC,EAAA,cAA8CC,OAAA,IAC9C,IAAAC,EAAcC,EAAQ,QACtB+P,EAAgB/P,EAAQ,QACxBoqB,EAAUpqB,EAAQ,QAClBiQ,EAA8BjQ,EAAQ,QACtCqqB,EAA0BrqB,EAAQ,QAYlCsqB,EAAA,SAAA7oB,GAEA,SAAA6oB,IACA,cAAA7oB,KAAA4B,MAAA/C,KAAAgD,YAAAhD,KAyFA,OA3FAP,EAAA+B,UAAAwoB,EAAA7oB,GASA6oB,EAAA9pB,UAAA+pB,iBAAA,SAAA5P,GACA,OAAA5a,EAAAkC,UAAA3B,UAAA,oBACA,IAAAqM,EACA/K,EAAAtB,KACA,OAAAP,EAAAmC,YAAA5B,KAAA,SAAA6B,GACA,OAAAA,EAAA8D,OACA,gBAAA3F,KAAAC,QAAA6Q,QAAA,CACArH,IAAA,gBACAyH,MAAA,CACAhO,eAAA4mB,EAAAjpB,cAAAwZ,OAGA,OAEA,OADAhO,EAAAxK,EAAAgE,OACA,IACAzE,KAAAiL,EAAAjL,KAAA0C,IAAA,SAAA1C,GAAuE,WAAA2oB,EAAArpB,QAAAU,EAAAE,EAAArB,WACvE0R,OAAAtF,EAAAuF,YAAAvF,EAAAuF,WAAAD,eAWAqY,EAAA9pB,UAAAgqB,0BAAA,SAAA7P,GACA,IAAA/Y,EAAAtB,KACA,WAAA2P,EAAAjP,QAAA,CACA+I,IAAA,gBACAyH,MAAA,CACAhO,eAAA4mB,EAAAjpB,cAAAwZ,KAESra,KAAAC,QAAA,SAAAmB,GAAiC,WAAA2oB,EAAArpB,QAAAU,EAAAE,EAAArB,YAQ1C+pB,EAAA9pB,UAAAiqB,yBAAA,SAAA9P,EAAAhY,GACA,OAAA5C,EAAAkC,UAAA3B,UAAA,oBACA,IAAAqM,EACA/K,EAAAtB,KACA,OAAAP,EAAAmC,YAAA5B,KAAA,SAAA6B,GACA,OAAAA,EAAA8D,OACA,gBAAA3F,KAAAC,QAAA6Q,QAAA,CACArH,IAAA,gBACAG,KAAAkgB,EAAA/Y,kBAAAC,MACAE,MAAA,CACAhO,eAAA4mB,EAAAjpB,cAAAwZ,GACA7W,QAAAnB,EAAAyB,IAAAgmB,EAAAjpB,mBAGA,OAEA,OADAwL,EAAAxK,EAAAgE,OACA,GAAAwG,EAAAjL,KAAA0C,IAAA,SAAA1C,GAA+E,WAAA2oB,EAAArpB,QAAAU,EAAAE,EAAArB,kBAW/E+pB,EAAA9pB,UAAA+a,uBAAA,SAAAZ,EAAAvZ,GACA,OAAArB,EAAAkC,UAAA3B,UAAA,oBACA,IAAAoqB,EACA,OAAA3qB,EAAAmC,YAAA5B,KAAA,SAAA6B,GACA,OAAAA,EAAA8D,OACA,gBAAA3F,KAAAmqB,yBAAA9P,EAAA,CAAAvZ,KACA,OAEA,OADAspB,EAAAvoB,EAAAgE,OACA,GAAAukB,EAAA/kB,OAAA+kB,EAAA,eAKAJ,EA5FA,CA6FCva,EAAA/O,SACDnB,EAAAmB,QAAAspB,uCC/GA3qB,OAAAC,eAAAC,EAAA,cAA8CC,OAAA,IAC9C,IAAAC,EAAcC,EAAQ,QACtBE,EAAsBF,EAAQ,QAI9B2qB,EAAA,WAEA,SAAAA,EAAAvqB,EAAAC,GACAC,KAAAF,QACAE,KAAAC,QAAAF,EAmCA,OAjCAV,OAAAC,eAAA+qB,EAAAnqB,UAAA,MAIAC,IAAA,WACA,OAAAH,KAAAF,MAAAiB,IAEAT,YAAA,EACAC,cAAA,IAEAlB,OAAAC,eAAA+qB,EAAAnqB,UAAA,QAIAC,IAAA,WACA,OAAAH,KAAAF,MAAAuX,MAEA/W,YAAA,EACAC,cAAA,IAEAlB,OAAAC,eAAA+qB,EAAAnqB,UAAA,SAIAC,IAAA,WACA,OAAAH,KAAAF,MAAAqE,cAEA7D,YAAA,EACAC,cAAA,IAEAd,EAAAkB,WAAA,CACAf,EAAAgB,eACAypB,EAAAnqB,UAAA,kBACAmqB,EAvCA,GAyCA9qB,EAAAmB,QAAA2pB,uCC/CAhrB,OAAAC,eAAAC,EAAA,cAA8CC,OAAA,IAC9C,IAAAC,EAAcC,EAAQ,QACtBqf,EAAoBrf,EAAQ,QAM5B4qB,EAAA,SAAAnpB,GAEA,SAAAmpB,EAAA1Z,GACA,OAAAzP,EAAAI,KAAAvB,KAAA,WAAA4Q,EAAA,0CAAA5Q,KAEA,OAJAP,EAAA+B,UAAA8oB,EAAAnpB,GAIAmpB,EALA,CAMCvL,EAAAre,SACDnB,EAAAmB,QAAA4pB,uCCfAjrB,OAAAC,eAAAC,EAAA,cAA8CC,OAAA,IAC9C,IAAAC,EAAcC,EAAQ,QACtB+P,EAAgB/P,EAAQ,QACxBoS,EAAkBpS,EAAQ,QAC1BmF,EAAqBnF,EAAQ,QAC7B6qB,EAAuC7qB,EAAQ,QAC/C8qB,EAAiC9qB,EAAQ,QAYzC+qB,EAAA,SAAAtpB,GAEA,SAAAspB,IACA,cAAAtpB,KAAA4B,MAAA/C,KAAAgD,YAAAhD,KAuMA,OAzMAP,EAAA+B,UAAAipB,EAAAtpB,GASAspB,EAAAvqB,UAAA+pB,iBAAA,WACA,OAAAxqB,EAAAkC,UAAA3B,UAAA,oBACA,IAAAsB,EAAAtB,KACA,OAAAP,EAAAmC,YAAA5B,KAAA,SAAA6B,GACA,aAAA0oB,EAAA7pB,QAAA,CACA+I,IAAA,0BACqBzJ,KAAAC,QAAA,SAAAmB,GAAiC,WAAAopB,EAAA9pB,QAAAU,EAAAE,EAAArB,iBAStDwqB,EAAAvqB,UAAAwqB,eAAA,SAAAtkB,GACA,OAAA3G,EAAAkC,UAAA3B,UAAA,oBACA,IAAAyO,EAAAkc,EAAAC,EAAA/oB,EAAAgpB,EAAAC,EAAA7Z,EACA,OAAAxR,EAAAmC,YAAA5B,KAAA,SAAA0F,GACA,OAAAA,EAAAC,OACA,OAEA,OADA8I,EAAArI,EAAAqI,KAAAkc,EAAAvkB,EAAAukB,YAAAC,EAAAxkB,EAAAwkB,SAAA/oB,EAAAuE,EAAAykB,yBAAA,IAAAhpB,EAAA,KAAAA,EAAAipB,EAAA1kB,EAAA0kB,OAAA7Z,EAAA7K,EAAA6K,MACA,GAAAjR,KAAAC,QAAA6Q,QAAA,CACArH,IAAA,eACAG,KAAA/E,EAAAkM,kBAAAC,MACAhG,OAAA,OACAiG,QACAiG,SAAA,CACA6T,WAAAtc,EACAuc,YAAAJ,EACAK,eAAAN,EACAO,oBAAAL,EAAAhjB,WACAsjB,aAAAL,MAGA,OAEA,OADAplB,EAAAG,OACA,UAaA4kB,EAAAvqB,UAAAkrB,2BAAA,SAAAtqB,EAAAsF,GACA,OAAA3G,EAAAkC,UAAA3B,UAAA,oBACA,OAAAP,EAAAmC,YAAA5B,KAAA,SAAA6B,GACA,SAAA7B,KAAAqrB,2BAAA,mBAAAvqB,EAAAsF,SAYAqkB,EAAAvqB,UAAAorB,yBAAA,SAAAxqB,EAAAsF,GACA,OAAA3G,EAAAkC,UAAA3B,UAAA,oBACA,OAAAP,EAAAmC,YAAA5B,KAAA,SAAA6B,GACA,SAAA7B,KAAAqrB,2BAAA,iBAAAvqB,EAAAsF,SAYAqkB,EAAAvqB,UAAAqrB,+BAAA,SAAAzqB,EAAAsF,GACA,OAAA3G,EAAAkC,UAAA3B,UAAA,oBACA,OAAAP,EAAAmC,YAAA5B,KAAA,SAAA6B,GACA,SAAA7B,KAAAqrB,2BAAA,qBAAAvqB,EAAAsF,SAYAqkB,EAAAvqB,UAAAsrB,6BAAA,SAAA1qB,EAAAsF,GACA,OAAA3G,EAAAkC,UAAA3B,UAAA,oBACA,OAAAP,EAAAmC,YAAA5B,KAAA,SAAA6B,GACA,SAAA7B,KAAAqrB,2BAAA,mBAAAvqB,EAAAsF,SAYAqkB,EAAAvqB,UAAAurB,yBAAA,SAAA3qB,EAAAsF,GACA,OAAA3G,EAAAkC,UAAA3B,UAAA,oBACA,OAAAP,EAAAmC,YAAA5B,KAAA,SAAA6B,GACA,SAAA7B,KAAA0rB,4BAAA,YAAA5qB,EAAAsF,SAYAqkB,EAAAvqB,UAAAyrB,6BAAA,SAAA7qB,EAAAsF,GACA,OAAA3G,EAAAkC,UAAA3B,UAAA,oBACA,OAAAP,EAAAmC,YAAA5B,KAAA,SAAA6B,GACA,SAAA7B,KAAA0rB,4BAAA,cAAA5qB,EAAAsF,SAaAqkB,EAAAvqB,UAAA0rB,uBAAA,SAAA9qB,EAAAsF,EAAAylB,GAEA,YADA,IAAAA,IAAmCA,GAAA,GACnCpsB,EAAAkC,UAAA3B,UAAA,oBACA,OAAAP,EAAAmC,YAAA5B,KAAA,SAAA6B,GACA,SAAA7B,KAAA8rB,0BAAA,YAAAhrB,EAAAsF,EAAAylB,SAYApB,EAAAvqB,UAAA6rB,2BAAA,SAAAjrB,EAAAsF,GACA,OAAA3G,EAAAkC,UAAA3B,UAAA,oBACA,OAAAP,EAAAmC,YAAA5B,KAAA,SAAA6B,GACA,SAAA7B,KAAA8rB,0BAAA,cAAAhrB,EAAAsF,SAIAqkB,EAAAvqB,UAAAmrB,2BAAA,SAAA5c,EAAAud,EAAAlrB,EAAAsF,GACA,OAAA3G,EAAAkC,UAAA3B,UAAA,oBACA,IAAA0D,EACA,OAAAjE,EAAAmC,YAAA5B,KAAA,SAAA6B,GAEA,OADA6B,EAAAoO,EAAAjR,cAAAC,GACA,GAAAd,KAAA0qB,eAAAjrB,EAAAsQ,SAAA,CAA4EtB,OAAAmc,SAAA,qDAAAoB,EAAA,OAAAtoB,GAA2G0C,UAIvLqkB,EAAAvqB,UAAAwrB,4BAAA,SAAAjd,EAAA3N,EAAAsF,GACA,OAAA3G,EAAAkC,UAAA3B,UAAA,oBACA,IAAA0D,EACA,OAAAjE,EAAAmC,YAAA5B,KAAA,SAAA6B,GAEA,OADA6B,EAAAoO,EAAAjR,cAAAC,GACA,GAAAd,KAAA0qB,eAAAjrB,EAAAsQ,SAAA,CAA4EtB,OAAAmc,SAAA,+CAAAlnB,GAAgF0C,UAI5JqkB,EAAAvqB,UAAA4rB,0BAAA,SAAArd,EAAA3N,EAAAsF,EAAAylB,GAEA,YADA,IAAAA,IAAmCA,GAAA,GACnCpsB,EAAAkC,UAAA3B,UAAA,oBACA,IAAA0D,EACA,OAAAjE,EAAAmC,YAAA5B,KAAA,SAAA6B,GAEA,OADA6B,EAAAoO,EAAAjR,cAAAC,GACA,GAAAd,KAAA0qB,eAAAjrB,EAAAsQ,SAAA,CAA4EtB,OAAAmc,SAAA,wCAAAlnB,EAAAuN,MAAA4a,EAAA,uBAAAplB,GAA2HL,UAIvMqkB,EA1MA,CA2MChb,EAAA/O,SACDnB,EAAAmB,QAAA+pB,uCC/NA/qB,EAAAusB,EAAAC,GAAAxsB,EAAAysB,EAAAD,EAAA,8BAAA1qB,IAAA9B,EAAAysB,EAAAD,EAAA,6BAAAnc,IAAArQ,EAAAysB,EAAAD,EAAA,2BAAA7W,IAAA3V,EAAAysB,EAAAD,EAAA,+BAAAvrB,IAAAjB,EAAAysB,EAAAD,EAAA,4BAAAE,IAAA1sB,EAAAysB,EAAAD,EAAA,+BAAAG,IAAA3sB,EAAAysB,EAAAD,EAAA,8BAAAvqB,IAAAjC,EAAAysB,EAAAD,EAAA,gCAAAtqB,IAAAlC,EAAAysB,EAAAD,EAAA,iCAAAI,IAAA5sB,EAAAysB,EAAAD,EAAA,6BAAAnF,IAAArnB,EAAAysB,EAAAD,EAAA,2BAAA1D,IAAA9oB,EAAAysB,EAAAD,EAAA,6BAAAvO,IAAAje,EAAAysB,EAAAD,EAAA,mCAAAK,IAAA7sB,EAAAysB,EAAAD,EAAA,4BAAAM,IAAA9sB,EAAAysB,EAAAD,EAAA,qCAAAO,IAAA/sB,EAAAysB,EAAAD,EAAA,qCAAAQ,IAAAhtB,EAAAysB,EAAAD,EAAA,kCAAAS,IAAAjtB,EAAAysB,EAAAD,EAAA,yCAAAU,IAAAltB,EAAAysB,EAAAD,EAAA,iCAAAW,IAAAntB,EAAAysB,EAAAD,EAAA,oCAAAY;;;;;;;;;;;;;;;AAgBA,IAAAC,EAAA,SAAAZ,EAAAzG,GAIA,OAHAqH,EAAA1tB,OAAA2tB,gBACA,CAAUC,UAAA,cAAgBphB,OAAA,SAAAsgB,EAAAzG,GAAsCyG,EAAAc,UAAAvH,IAChE,SAAAyG,EAAAzG,GAAyB,QAAAwH,KAAAxH,IAAAtd,eAAA8kB,KAAAf,EAAAe,GAAAxH,EAAAwH,KACzBH,EAAAZ,EAAAzG,IAGO,SAAAlkB,EAAA2qB,EAAAzG,GAEP,SAAAyH,IAAmBntB,KAAAwnB,YAAA2E,EADnBY,EAAAZ,EAAAzG,GAEAyG,EAAAjsB,UAAA,OAAAwlB,EAAArmB,OAAAkH,OAAAmf,IAAAyH,EAAAjtB,UAAAwlB,EAAAxlB,UAAA,IAAAitB,GAGO,IAAApd,EAAA,WAQP,OAPAA,EAAA1Q,OAAA6pB,QAAA,SAAAkE,GACA,QAAAtE,EAAA7b,EAAA,EAAAogB,EAAArqB,UAAAqC,OAAgD4H,EAAAogB,EAAOpgB,IAEvD,QAAAigB,KADApE,EAAA9lB,UAAAiK,GACA6b,EAAAzpB,OAAAa,UAAAkI,eAAA7G,KAAAunB,EAAAoE,KAAAE,EAAAF,GAAApE,EAAAoE,IAEA,OAAAE,GAEArd,EAAAhN,MAAA/C,KAAAgD,YAGO,SAAAqS,EAAAyT,EAAA7hB,GACP,IAAAmmB,EAAA,GACA,QAAAF,KAAApE,EAAAzpB,OAAAa,UAAAkI,eAAA7G,KAAAunB,EAAAoE,IAAAjmB,EAAAW,QAAAslB,GAAA,IACAE,EAAAF,GAAApE,EAAAoE,IACA,SAAApE,GAAA,oBAAAzpB,OAAAiuB,sBACA,KAAArgB,EAAA,MAAAigB,EAAA7tB,OAAAiuB,sBAAAxE,GAA4D7b,EAAAigB,EAAA7nB,OAAc4H,IAC1EhG,EAAAW,QAAAslB,EAAAjgB,IAAA,GAAA5N,OAAAa,UAAAqtB,qBAAAhsB,KAAAunB,EAAAoE,EAAAjgB,MACAmgB,EAAAF,EAAAjgB,IAAA6b,EAAAoE,EAAAjgB,KAEA,OAAAmgB,EAGO,SAAAzsB,EAAA6sB,EAAA5M,EAAAvR,EAAAoe,GACP,IAAAtB,EAAAuB,EAAA1qB,UAAAqC,OAAA4mB,EAAAyB,EAAA,EAAA9M,EAAA,OAAA6M,IAAApuB,OAAAsuB,yBAAA/M,EAAAvR,GAAAoe,EACA,qBAAAG,SAAA,oBAAAA,QAAAC,SAAA5B,EAAA2B,QAAAC,SAAAL,EAAA5M,EAAAvR,EAAAoe,QACA,QAAAxgB,EAAAugB,EAAAnoB,OAAA,EAA4C4H,GAAA,EAAQA,KAAAkf,EAAAqB,EAAAvgB,MAAAgf,GAAAyB,EAAA,EAAAvB,EAAAF,GAAAyB,EAAA,EAAAvB,EAAAvL,EAAAvR,EAAA4c,GAAAE,EAAAvL,EAAAvR,KAAA4c,GACpD,OAAAyB,EAAA,GAAAzB,GAAA5sB,OAAAC,eAAAshB,EAAAvR,EAAA4c,KAGO,SAAAG,EAAA0B,EAAAC,GACP,gBAAAnN,EAAAvR,GAAmC0e,EAAAnN,EAAAvR,EAAAye,IAG5B,SAAAzB,EAAA2B,EAAAC,GACP,qBAAAL,SAAA,oBAAAA,QAAAM,SAAA,OAAAN,QAAAM,SAAAF,EAAAC,GAGO,SAAAtsB,EAAA6G,EAAA2lB,EAAAC,EAAAC,GACP,WAAAD,MAAA/nB,UAAA,SAAA8D,EAAAC,GACA,SAAAkkB,EAAA9uB,GAAmC,IAAM+uB,EAAAF,EAAA3iB,KAAAlM,IAA+B,MAAAyH,GAAYmD,EAAAnD,IACpF,SAAA8G,EAAAvO,GAAkC,IAAM+uB,EAAAF,EAAA,SAAA7uB,IAAmC,MAAAyH,GAAYmD,EAAAnD,IACvF,SAAAsnB,EAAAliB,GAA+BA,EAAAT,KAAAzB,EAAAkC,EAAA7M,OAAA,IAAA4uB,EAAA,SAAAjkB,GAAiEA,EAAAkC,EAAA7M,SAAyBwO,KAAAsgB,EAAAvgB,GACzHwgB,GAAAF,IAAAtrB,MAAAyF,EAAA2lB,GAAA,KAAAziB,UAIO,SAAA9J,EAAA4G,EAAAU,GACP,IAAwGslB,EAAAC,EAAArB,EAAAsB,EAAxGC,EAAA,CAAahpB,MAAA,EAAAE,KAAA,WAA6B,KAAAunB,EAAA,SAAAA,EAAA,GAA0B,OAAAA,EAAA,IAAehS,KAAA,GAAAwT,IAAA,IACnF,OAAAF,EAAA,CAAgBhjB,KAAAmjB,EAAA,GAAAC,MAAAD,EAAA,GAAA1H,OAAA0H,EAAA,IAAqD,oBAAA/nB,SAAA4nB,EAAA5nB,OAAAgC,UAAA,WAAoE,OAAA9I,OAAe0uB,EACxJ,SAAAG,EAAAxB,GAAsB,gBAAA0B,GAAsB,OAAAR,EAAA,CAAAlB,EAAA0B,KAC5C,SAAAR,EAAAS,GACA,GAAAR,EAAA,UAAA3jB,UAAA,mCACA,MAAA8jB,EAAA,IACA,GAAAH,EAAA,EAAAC,IAAArB,EAAA,EAAA4B,EAAA,GAAAP,EAAA,UAAAO,EAAA,GAAAP,EAAA,YAAArB,EAAAqB,EAAA,YAAArB,EAAA7rB,KAAAktB,GAAA,GAAAA,EAAA/iB,SAAA0hB,IAAA7rB,KAAAktB,EAAAO,EAAA,KAAApjB,KAAA,OAAAwhB,EAEA,OADAqB,EAAA,EAAArB,IAAA4B,EAAA,GAAAA,EAAA,GAAA5B,EAAA5tB,QACAwvB,EAAA,IACA,cAAA5B,EAAA4B,EAAuC,MACvC,OAAkC,OAAlCL,EAAAhpB,QAAkC,CAASnG,MAAAwvB,EAAA,GAAApjB,MAAA,GAC3C,OAAA+iB,EAAAhpB,QAAkC8oB,EAAAO,EAAA,GAAWA,EAAA,IAAU,SACvD,OAAAA,EAAAL,EAAAC,IAAAK,MAAyCN,EAAAvT,KAAA6T,MAAc,SACvD,QACA,GAAA7B,EAAAuB,EAAAvT,OAAAgS,IAAA/nB,OAAA,GAAA+nB,IAAA/nB,OAAA,UAAA2pB,EAAA,QAAAA,EAAA,KAA6GL,EAAA,EAAO,SACpH,OAAAK,EAAA,MAAA5B,GAAA4B,EAAA,GAAA5B,EAAA,IAAA4B,EAAA,GAAA5B,EAAA,KAAgFuB,EAAAhpB,MAAAqpB,EAAA,GAAiB,MACjG,OAAAA,EAAA,IAAAL,EAAAhpB,MAAAynB,EAAA,IAAwDuB,EAAAhpB,MAAAynB,EAAA,GAAgBA,EAAA4B,EAAQ,MAChF,GAAA5B,GAAAuB,EAAAhpB,MAAAynB,EAAA,IAA8CuB,EAAAhpB,MAAAynB,EAAA,GAAgBuB,EAAAC,IAAAlmB,KAAAsmB,GAAgB,MAC9E5B,EAAA,IAAAuB,EAAAC,IAAAK,MACAN,EAAAvT,KAAA6T,MAAiC,SAEjCD,EAAA9lB,EAAA3H,KAAAiH,EAAAmmB,GACS,MAAA1nB,GAAY+nB,EAAA,GAAA/nB,GAAawnB,EAAA,EAAS,QAAUD,EAAApB,EAAA,EACrD,KAAA4B,EAAA,SAAAA,EAAA,GAAmC,OAASxvB,MAAAwvB,EAAA,GAAAA,EAAA,UAAApjB,MAAA,IAIrC,SAAA0gB,EAAAzD,EAAAtpB,GACP,QAAA2tB,KAAArE,EAAAtpB,EAAA6I,eAAA8kB,KAAA3tB,EAAA2tB,GAAArE,EAAAqE,IAGO,SAAAnG,EAAAmI,GACP,IAAArG,EAAA,oBAAA/hB,QAAAooB,EAAApoB,OAAAgC,UAAAmE,EAAA,EACA,OAAA4b,IAAAtnB,KAAA2tB,GACA,CACAxjB,KAAA,WAEA,OADAwjB,GAAAjiB,GAAAiiB,EAAA7pB,SAAA6pB,OAAA,GACA,CAAoB1vB,MAAA0vB,KAAAjiB,KAAArB,MAAAsjB,KAKb,SAAA1G,EAAA0G,EAAA7B,GACP,IAAAxE,EAAA,oBAAA/hB,QAAAooB,EAAApoB,OAAAgC,UACA,IAAA+f,EAAA,OAAAqG,EACA,IAAAjD,EAAAhlB,EAAAgG,EAAA4b,EAAAtnB,KAAA2tB,GAAAC,EAAA,GACA,IACA,gBAAA9B,QAAA,MAAApB,EAAAhf,EAAAvB,QAAAE,KAAAujB,EAAAzmB,KAAAujB,EAAAzsB,OAEA,MAAAkK,GAAmBzC,EAAA,CAAMyC,SACzB,QACA,IACAuiB,MAAArgB,OAAAid,EAAA5b,EAAA,YAAA4b,EAAAtnB,KAAA0L,GAEA,QAAiB,GAAAhG,EAAA,MAAAA,EAAAyC,OAEjB,OAAAylB,EAGO,SAAAxR,IACP,QAAAwR,EAAA,GAAAliB,EAAA,EAA4BA,EAAAjK,UAAAqC,OAAsB4H,IAClDkiB,IAAA/X,OAAAoR,EAAAxlB,UAAAiK,KACA,OAAAkiB,EAGO,SAAA5C,IACP,QAAAzD,EAAA,EAAA7b,EAAA,EAAAmiB,EAAApsB,UAAAqC,OAAiD4H,EAAAmiB,EAAQniB,IAAA6b,GAAA9lB,UAAAiK,GAAA5H,OACzD,IAAA4mB,EAAApgB,MAAAid,GAAAuG,EAAA,MAAApiB,EAAA,EAAwCA,EAAAmiB,EAAQniB,IAChD,QAAAwY,EAAAziB,UAAAiK,GAAAqiB,EAAA,EAAAC,EAAA9J,EAAApgB,OAAwDiqB,EAAAC,EAAQD,IAAAD,IAChEpD,EAAAoD,GAAA5J,EAAA6J,GACA,OAAArD,EAGO,SAAAO,EAAAuC,GACP,OAAA/uB,gBAAAwsB,GAAAxsB,KAAA+uB,IAAA/uB,MAAA,IAAAwsB,EAAAuC,GAGO,SAAAtC,EAAAjkB,EAAA2lB,EAAAE,GACP,IAAAvnB,OAAA0oB,cAAA,UAAA3kB,UAAA,wCACA,IAAAoC,EAAAyhB,EAAAL,EAAAtrB,MAAAyF,EAAA2lB,GAAA,IAAAsB,EAAA,GACA,OAAAxiB,EAAA,GAAiB4hB,EAAA,QAAAA,EAAA,SAAAA,EAAA,UAAA5hB,EAAAnG,OAAA0oB,eAAA,WAAsF,OAAAxvB,MAAeiN,EACtH,SAAA4hB,EAAAxB,GAAsBqB,EAAArB,KAAApgB,EAAAogB,GAAA,SAAA0B,GAAgC,WAAA1oB,QAAA,SAAAof,EAAAC,GAAqC+J,EAAA/mB,KAAA,CAAA2kB,EAAA0B,EAAAtJ,EAAAC,IAAA,GAAAgK,EAAArC,EAAA0B,OAC3F,SAAAW,EAAArC,EAAA0B,GAA2B,IAAMR,EAAAG,EAAArB,GAAA0B,IAAiB,MAAA9nB,GAAY0oB,EAAAF,EAAA,MAAAxoB,IAC9D,SAAAsnB,EAAAtC,GAAsBA,EAAAzsB,iBAAAgtB,EAAAnmB,QAAA8D,QAAA8hB,EAAAzsB,MAAAuvB,GAAA/gB,KAAA4hB,EAAAxlB,GAAAulB,EAAAF,EAAA,MAAAxD,GACtB,SAAA2D,EAAApwB,GAA6BkwB,EAAA,OAAAlwB,GAC7B,SAAA4K,EAAA5K,GAA4BkwB,EAAA,QAAAlwB,GAC5B,SAAAmwB,EAAAnB,EAAAO,GAA2BP,EAAAO,GAAAU,EAAA9jB,QAAA8jB,EAAApqB,QAAAqqB,EAAAD,EAAA,MAAAA,EAAA,QAGpB,SAAA/C,EAAAwC,GACP,IAAAjiB,EAAAigB,EACA,OAAAjgB,EAAA,GAAiB4hB,EAAA,QAAAA,EAAA,iBAAA5nB,GAA4C,MAAAA,IAAW4nB,EAAA,UAAA5hB,EAAAnG,OAAAgC,UAAA,WAAqD,OAAA9I,MAAeiN,EAC5I,SAAA4hB,EAAAxB,EAAAmB,GAAyBvhB,EAAAogB,GAAA6B,EAAA7B,GAAA,SAAA0B,GAA6B,OAAA7B,MAAA,CAAoB1tB,MAAAgtB,EAAA0C,EAAA7B,GAAA0B,IAAAnjB,KAAA,WAAAyhB,GAAgDmB,IAAAO,MAAkBP,GAGrI,SAAA7B,EAAAuC,GACP,IAAApoB,OAAA0oB,cAAA,UAAA3kB,UAAA,wCACA,IAAAoC,EAAA4b,EAAAqG,EAAApoB,OAAA0oB,eACA,OAAA3G,IAAAtnB,KAAA2tB,MAAA,oBAAAnI,IAAAmI,KAAApoB,OAAAgC,YAAAmE,EAAA,GAA2G4hB,EAAA,QAAAA,EAAA,SAAAA,EAAA,UAAA5hB,EAAAnG,OAAA0oB,eAAA,WAAsF,OAAAxvB,MAAeiN,GAChN,SAAA4hB,EAAAxB,GAAsBpgB,EAAAogB,GAAA6B,EAAA7B,IAAA,SAAA0B,GAA8B,WAAA1oB,QAAA,SAAA8D,EAAAC,GAAgD2kB,EAAAG,EAAA7B,GAAA0B,GAAAY,EAAAxlB,EAAAC,EAAA2kB,EAAAnjB,KAAAmjB,EAAAvvB,UACpG,SAAAmwB,EAAAxlB,EAAAC,EAAA+hB,EAAA4C,GAA4C1oB,QAAA8D,QAAA4kB,GAAA/gB,KAAA,SAAA+gB,GAAsC5kB,EAAA,CAAU3K,MAAAuvB,EAAAnjB,KAAAugB,KAAwB/hB,IAG7G,SAAAwiB,EAAAiD,EAAAC,GAEP,OADAzwB,OAAAC,eAAgCD,OAAAC,eAAAuwB,EAAA,OAAuCrwB,MAAAswB,IAAwBD,EAAAC,MAC/FD,EAGO,SAAAhD,EAAAkD,GACP,GAAAA,KAAAC,WAAA,OAAAD,EACA,IAAA1jB,EAAA,GACA,SAAA0jB,EAAA,QAAAV,KAAAU,EAAA1wB,OAAA+I,eAAA7G,KAAAwuB,EAAAV,KAAAhjB,EAAAgjB,GAAAU,EAAAV,IAEA,OADAhjB,EAAA3L,QAAAqvB,EACA1jB,EAGO,SAAAygB,EAAAiD,GACP,OAAAA,KAAAC,WAAAD,EAAA,CAA4CrvB,QAAAqvB,yCCjM5C1wB,OAAAC,eAAAC,EAAA,cAA8CC,OAAA,IAC9C,IAUAywB,EAVAxwB,EAAcC,EAAQ,QACtB+P,EAAgB/P,EAAQ,QACxBwwB,EAAkBxwB,EAAQ,QAC1BywB,EAA4BzwB,EAAQ,QACpCoS,EAAkBpS,EAAQ,QAC1B0wB,EAAoB1wB,EAAQ,QAC5BmF,EAAqBnF,EAAQ,QAC7B6qB,EAAuC7qB,EAAQ,QAC/CklB,EAA6BllB,EAAQ,SAGrC,SAAAuwB,GACAA,EAAA,WACAA,EAAA,kBAFA,CAGCA,EAAA1wB,EAAA0wB,iBAAA1wB,EAAA0wB,eAAA,KAYD,IAAAI,EAAA,SAAAlvB,GAEA,SAAAkvB,IACA,cAAAlvB,KAAA4B,MAAA/C,KAAAgD,YAAAhD,KAiMA,OAnMAP,EAAA+B,UAAA6uB,EAAAlvB,GASAkvB,EAAAnwB,UAAAowB,cAAA,SAAAC,GACA,OAAA9wB,EAAAkC,UAAA3B,UAAA,oBACA,OAAAP,EAAAmC,YAAA5B,KAAA,SAAA6B,GACA,SAAA7B,KAAAwwB,UAAAP,EAAAQ,GAAAF,EAAAzsB,IAAAgO,EAAAjR,sBASAwvB,EAAAnwB,UAAAwwB,gBAAA,SAAAC,GACA,OAAAlxB,EAAAkC,UAAA3B,UAAA,oBACA,OAAAP,EAAAmC,YAAA5B,KAAA,SAAA6B,GACA,SAAA7B,KAAAwwB,UAAAP,EAAAW,MAAAD,EAAA7sB,IAAAgO,EAAA9Q,wBASAqvB,EAAAnwB,UAAAoC,YAAA,SAAAoB,GACA,OAAAjE,EAAAkC,UAAA3B,UAAA,oBACA,IAAAqC,EACA,OAAA5C,EAAAmC,YAAA5B,KAAA,SAAA6B,GACA,OAAAA,EAAA8D,OACA,gBAAA3F,KAAAwwB,UAAAP,EAAAQ,GAAA3e,EAAAjR,cAAA6C,KACA,OAEA,OADArB,EAAAR,EAAAgE,OACA,GAAAxD,EAAAgD,OAAAhD,EAAA,eAUAguB,EAAAnwB,UAAA2wB,cAAA,SAAAnO,GACA,OAAAjjB,EAAAkC,UAAA3B,UAAA,oBACA,IAAAqC,EACA,OAAA5C,EAAAmC,YAAA5B,KAAA,SAAA6B,GACA,OAAAA,EAAA8D,OACA,gBAAA3F,KAAAwwB,UAAAP,EAAAW,MAAA9e,EAAA9Q,gBAAA0hB,KACA,OAEA,OADArgB,EAAAR,EAAAgE,OACA,GAAAxD,EAAAgD,OAAAhD,EAAA,eAUAguB,EAAAnwB,UAAAya,MAAA,SAAAkR,GAEA,YADA,IAAAA,IAAmCA,GAAA,GACnCpsB,EAAAkC,UAAA3B,UAAA,oBACA,IAAAqM,EACA,OAAA5M,EAAAmC,YAAA5B,KAAA,SAAA6B,GACA,OAAAA,EAAA8D,OACA,gBAAA3F,KAAAC,QAAA6Q,QAAA,CACAlH,KAAA/E,EAAAkM,kBAAAC,MACAvH,IAAA,QACAwH,MAAA4a,EAAA,wBAEA,OAEA,GADAxf,EAAAxK,EAAAgE,QACAwG,EAAAjL,OAAAiL,EAAAjL,KAAAiE,OACA,UAAAuf,EAAAlkB,QAAA,oCAEA,aAAAyvB,EAAAzvB,QAAA2L,EAAAjL,KAAA,GAAApB,KAAAC,gBAUAowB,EAAAnwB,UAAA4wB,WAAA,SAAA1vB,GACA,OAAA3B,EAAAkC,UAAA3B,UAAA,oBACA,IAAAqM,EACA,OAAA5M,EAAAmC,YAAA5B,KAAA,SAAA6B,GACA,OAAAA,EAAA8D,OACA,gBAAA3F,KAAAC,QAAA6Q,QAAA,CACAlH,KAAA/E,EAAAkM,kBAAAC,MACAvH,IAAA,QACAuB,OAAA,MACAiG,MAAA,YACAC,MAAA,CACAvM,YAAAvD,EAAAuD,gBAGA,OAEA,OADA0H,EAAAxK,EAAAgE,OACA,OAAAsqB,EAAAzvB,QAAA2L,EAAAjL,KAAA,GAAApB,KAAAC,gBAUAowB,EAAAnwB,UAAAia,WAAA,SAAAjW,GACA,OAAAzE,EAAAkC,UAAA3B,UAAA,oBACA,IAAAkR,EAAA7E,EACA/K,EAAAtB,KACA,OAAAP,EAAAmC,YAAA5B,KAAA,SAAA6B,GACA,OAAAA,EAAA8D,OACA,OAEA,OADAuL,EAAAmf,EAAAU,kBAAA7sB,GACA,GAAAlE,KAAAC,QAAA6Q,QAAA,CACArH,IAAA,gBACAG,KAAA/E,EAAAkM,kBAAAC,MACAE,WAEA,OAEA,OADA7E,EAAAxK,EAAAgE,OACA,IACAzE,KAAAiL,EAAAjL,KAAA0C,IAAA,SAAA1C,GAAuE,WAAAgvB,EAAA1vB,QAAAU,EAAAE,EAAArB,WACvE0R,OAAAtF,EAAAuF,WAAAD,OACAqf,MAAA3kB,EAAA2kB,cAWAX,EAAAnwB,UAAA+wB,oBAAA,SAAA/sB,GACA,IAAA5C,EAAAtB,KACAkR,EAAAmf,EAAAU,kBAAA7sB,GACA,WAAAqmB,EAAA7pB,QAAA,CACA+I,IAAA,gBACAyH,SACSlR,KAAAC,QAAA,SAAAmB,GAAiC,WAAAgvB,EAAA1vB,QAAAU,EAAAE,EAAArB,YAE1CowB,EAAAU,kBAAA,SAAA7sB,GACA,IAAAgN,EAAA,GACAggB,GAAA,EASA,GARAhtB,EAAApD,OACAoQ,EAAAhP,QAAA4P,EAAAjR,cAAAqD,EAAApD,MACAowB,GAAA,GAEAhtB,EAAAoW,eACApJ,EAAA3O,MAAAuP,EAAAjR,cAAAqD,EAAAoW,cACA4W,GAAA,IAEAA,EACA,UAAArmB,UAAA,wDAEA,OAAAqG,GAEAmf,EAAAnwB,UAAAswB,UAAA,SAAAW,EAAA7R,GACA,OAAA7f,EAAAkC,UAAA3B,UAAA,oBACA,IAAAkR,EAAA7E,EACAxK,EACAP,EAAAtB,KACA,OAAAP,EAAAmC,YAAA5B,KAAA,SAAA0F,GACA,OAAAA,EAAAC,OACA,OAEA,OADA9D,EAAA,GAAwCA,EAAAsvB,GAAA7R,EAAxCpO,EAAwCrP,EACxC,GAAA7B,KAAAC,QAAA6Q,QAAA,CACAlH,KAAA/E,EAAAkM,kBAAAC,MACAvH,IAAA,QACAyH,WAEA,OAEA,OADA7E,EAAA3G,EAAAG,OACA,GAAAwG,EAAAjL,KAAA0C,IAAA,SAAAstB,GAAmF,WAAAlB,EAAAxvB,QAAA0wB,EAAA9vB,EAAArB,kBAKnFowB,EApMA,CAqMC5gB,EAAA/O,SACDnB,EAAAmB,QAAA2vB,uCChOA,IAAAhV,EAAY3b,EAAQ,QAEpByI,EAAA9I,OAAAa,UAAAkI,eAEA8T,EAAA,CACAE,WAAA,EACAiV,iBAAA,EACAC,WAAA,GACAjV,QAAA,QACAC,iBAAA,EACAZ,OAAA,EACA6V,QAAAlW,EAAAnN,OACAqO,UAAA,IACAiV,MAAA,EACAC,mBAAA,EACAC,0BAAA,EACAC,eAAA,IACAC,aAAA,EACAC,cAAA,EACA7U,oBAAA,GAGA0U,EAAA,SAAAI,GACA,OAAAA,EAAA/iB,QAAA,YAAgC,SAAAgjB,EAAAC,GAChC,OAAAzmB,OAAA2B,aAAAyb,SAAAqJ,EAAA,QASAC,EAAA,sBAGA3V,EAAA,iBAEA4V,EAAA,SAAAJ,EAAA1rB,GACA,IAKA6G,EALA3F,EAAA,GACA6qB,EAAA/rB,EAAAqrB,kBAAAK,EAAA/iB,QAAA,UAAA+iB,EACAxgB,EAAAlL,EAAAurB,iBAAAhR,SAAAla,EAAAL,EAAAurB,eACAviB,EAAA+iB,EAAAtjB,MAAAzI,EAAAmW,UAAAjL,GACA8gB,GAAA,EAGA/V,EAAAjW,EAAAiW,QACA,GAAAjW,EAAAkW,gBACA,IAAArP,EAAA,EAAmBA,EAAAmC,EAAA/J,SAAkB4H,EACrC,IAAAmC,EAAAnC,GAAArF,QAAA,WACAwH,EAAAnC,KAAAqP,EACAD,EAAA,QACiBjN,EAAAnC,KAAAglB,IACjB5V,EAAA,cAEA+V,EAAAnlB,EACAA,EAAAmC,EAAA/J,QAKA,IAAA4H,EAAA,EAAeA,EAAAmC,EAAA/J,SAAkB4H,EACjC,GAAAA,IAAAmlB,EAAA,CAGA,IAKA/iB,EAAAkR,EALA+H,EAAAlZ,EAAAnC,GAEAolB,EAAA/J,EAAA1gB,QAAA,MACA0qB,GAAA,IAAAD,EAAA/J,EAAA1gB,QAAA,KAAAyqB,EAAA,GAGA,IAAAC,GACAjjB,EAAAjJ,EAAAmrB,QAAAjJ,EAAApM,EAAAqV,QAAAlV,GACAkE,EAAAna,EAAA4W,mBAAA,UAEA3N,EAAAjJ,EAAAmrB,QAAAjJ,EAAAjb,MAAA,EAAAilB,GAAApW,EAAAqV,QAAAlV,GACAkE,EAAAna,EAAAmrB,QAAAjJ,EAAAjb,MAAAilB,EAAA,GAAApW,EAAAqV,QAAAlV,IAGAkE,GAAAna,EAAAsrB,0BAAA,eAAArV,IACAkE,EAAAmR,EAAAnR,IAGAA,GAAAna,EAAAsV,OAAA6E,EAAA3Y,QAAA,UACA2Y,IAAA1R,MAAA,MAGA1G,EAAA5G,KAAA+F,EAAA+H,GACA/H,EAAA+H,GAAAgM,EAAAkX,QAAAjrB,EAAA+H,GAAAkR,GAEAjZ,EAAA+H,GAAAkR,EAIA,OAAAjZ,GAGAkrB,EAAA,SAAAC,EAAAlS,EAAAna,GAGA,IAFA,IAAAssB,EAAAnS,EAEAtT,EAAAwlB,EAAAptB,OAAA,EAAkC4H,GAAA,IAAQA,EAAA,CAC1C,IAAA3F,EACAqrB,EAAAF,EAAAxlB,GAEA,UAAA0lB,GAAAvsB,EAAAwrB,YACAtqB,EAAA,GAAA8P,OAAAsb,OACS,CACTprB,EAAAlB,EAAAyrB,aAAAxyB,OAAAkH,OAAA,SACA,IAAAqsB,EAAA,MAAAD,EAAAE,OAAA,UAAAF,EAAAE,OAAAF,EAAAttB,OAAA,GAAAstB,EAAAtlB,MAAA,MAAAslB,EACAjM,EAAAiC,SAAAiK,EAAA,IACAxsB,EAAAwrB,aAAA,KAAAgB,GAGAE,MAAApM,IACAiM,IAAAC,GACArnB,OAAAmb,KAAAkM,GACAlM,GAAA,GACAtgB,EAAAwrB,aAAAlL,GAAAtgB,EAAAkrB,YAEAhqB,EAAA,GACAA,EAAAof,GAAAgM,GAEAprB,EAAAsrB,GAAAF,EAXAprB,EAAA,CAAuByrB,EAAAL,GAevBA,EAAAprB,EAGA,OAAAorB,GAGAM,EAAA,SAAAC,EAAA1S,EAAAna,GACA,GAAA6sB,EAAA,CAKA,IAAA5jB,EAAAjJ,EAAAgW,UAAA6W,EAAAlkB,QAAA,sBAAAkkB,EAIAzX,EAAA,eACA0X,EAAA,gBAIAC,EAAA3X,EAAA6K,KAAAhX,GACA+jB,EAAAD,EAAA9jB,EAAAhC,MAAA,EAAA8lB,EAAAzM,OAAArX,EAIAjP,EAAA,GACA,GAAAgzB,EAAA,CAEA,IAAAhtB,EAAAyrB,cAAA1pB,EAAA5G,KAAAlC,OAAAa,UAAAkzB,KACAhtB,EAAAirB,gBACA,OAIAjxB,EAAAsI,KAAA0qB,GAKA,IAAAnmB,EAAA,EACA,cAAAkmB,EAAAD,EAAA7M,KAAAhX,KAAApC,EAAA7G,EAAAorB,MAAA,CAEA,GADAvkB,GAAA,GACA7G,EAAAyrB,cAAA1pB,EAAA5G,KAAAlC,OAAAa,UAAAizB,EAAA,GAAA9lB,MAAA,SACAjH,EAAAirB,gBACA,OAGAjxB,EAAAsI,KAAAyqB,EAAA,IASA,OAJAA,GACA/yB,EAAAsI,KAAA,IAAA2G,EAAAhC,MAAA8lB,EAAAzM,OAAA,KAGA8L,EAAApyB,EAAAmgB,EAAAna,KAGAitB,EAAA,SAAA9V,GACA,IAAAA,EACA,OAAArB,EAGA,UAAAqB,EAAAgU,cAAA9qB,IAAA8W,EAAAgU,SAAA,oBAAAhU,EAAAgU,QACA,UAAA1mB,UAAA,iCAGA,wBAAA0S,EAAAlB,SAAA,UAAAkB,EAAAlB,SAAA,eAAAkB,EAAAlB,QACA,UAAA/W,MAAA,qEAEA,IAAA+W,EAAA,qBAAAkB,EAAAlB,QAAAH,EAAAG,QAAAkB,EAAAlB,QAEA,OACAD,UAAA,qBAAAmB,EAAAnB,UAAAF,EAAAE,YAAAmB,EAAAnB,UACAiV,gBAAA,mBAAA9T,EAAA8T,gBAAA9T,EAAA8T,gBAAAnV,EAAAmV,gBACAC,WAAA,kBAAA/T,EAAA+T,WAAA/T,EAAA+T,WAAApV,EAAAoV,WACAjV,UACAC,gBAAA,mBAAAiB,EAAAjB,gBAAAiB,EAAAjB,gBAAAJ,EAAAI,gBACAZ,MAAA,mBAAA6B,EAAA7B,MAAA6B,EAAA7B,MAAAQ,EAAAR,MACA6V,QAAA,oBAAAhU,EAAAgU,QAAAhU,EAAAgU,QAAArV,EAAAqV,QACAhV,UAAA,kBAAAgB,EAAAhB,WAAAlB,EAAAiY,SAAA/V,EAAAhB,WAAAgB,EAAAhB,UAAAL,EAAAK,UACAiV,MAAA,kBAAAjU,EAAAiU,MAAAjU,EAAAiU,MAAAtV,EAAAsV,MACAC,mBAAA,IAAAlU,EAAAkU,kBACAC,yBAAA,mBAAAnU,EAAAmU,yBAAAnU,EAAAmU,yBAAAxV,EAAAwV,yBACAC,eAAA,kBAAApU,EAAAoU,eAAApU,EAAAoU,eAAAzV,EAAAyV,eACAC,aAAA,IAAArU,EAAAqU,YACAC,aAAA,mBAAAtU,EAAAsU,aAAAtU,EAAAsU,aAAA3V,EAAA2V,aACA7U,mBAAA,mBAAAO,EAAAP,mBAAAO,EAAAP,mBAAAd,EAAAc,qBAIAxN,EAAAjQ,QAAA,SAAAuyB,EAAAvU,GACA,IAAAnX,EAAAitB,EAAA9V,GAEA,QAAAuU,GAAA,OAAAA,GAAA,qBAAAA,EACA,OAAA1rB,EAAAyrB,aAAAxyB,OAAAkH,OAAA,SASA,IANA,IAAAgtB,EAAA,kBAAAzB,EAAAI,EAAAJ,EAAA1rB,GAAA0rB,EACAxqB,EAAAlB,EAAAyrB,aAAAxyB,OAAAkH,OAAA,SAIAnG,EAAAf,OAAAe,KAAAmzB,GACAtmB,EAAA,EAAmBA,EAAA7M,EAAAiF,SAAiB4H,EAAA,CACpC,IAAAoC,EAAAjP,EAAA6M,GACAumB,EAAAR,EAAA3jB,EAAAkkB,EAAAlkB,GAAAjJ,GACAkB,EAAA+T,EAAAoY,MAAAnsB,EAAAksB,EAAAptB,GAGA,OAAAiV,EAAAqY,QAAApsB,yCC/OAjI,OAAAC,eAAAC,EAAA,cAA8CC,OAAA,IAC9C,IAAAC,EAAcC,EAAQ,QACtBkE,EAAclE,EAAQ,QACtB+P,EAAgB/P,EAAQ,QACxBmT,EAAgBnT,EAAQ,QACxBoS,EAAkBpS,EAAQ,QAC1Bi0B,EAA4Bj0B,EAAQ,QACpC6Z,EAAmC7Z,EAAQ,QAC3Ck0B,EAA0Bl0B,EAAQ,QAClCmD,EAAanD,EAAQ,QACrBm0B,EAAsBn0B,EAAQ,QAC9BkV,EAA4BlV,EAAQ,QAYpCo0B,EAAA,SAAA3yB,GAEA,SAAA2yB,IACA,cAAA3yB,KAAA4B,MAAA/C,KAAAgD,YAAAhD,KAsTA,OAxTAP,EAAA+B,UAAAsyB,EAAA3yB,GAOA2yB,EAAA5zB,UAAA6zB,aAAA,WACA,OAAAt0B,EAAAkC,UAAA3B,UAAA,oBACA,IAAA6B,EACA,OAAApC,EAAAmC,YAAA5B,KAAA,SAAA0F,GACA,OAAAA,EAAAC,OACA,OAEA,OADA9D,EAAA+xB,EAAAlzB,QAAAyW,KACA,GAAAnX,KAAAC,QAAA6Q,QAAA,CAAmErH,IAAA,UAAAwH,MAAA,kBACnE,oBAAApP,EAAAkB,MAAA6wB,EAAAlzB,QAAA,QAAAgF,EAAAG,OAAA7F,KAAAC,kBAUA6zB,EAAA5zB,UAAA8zB,WAAA,SAAAlzB,GACA,OAAArB,EAAAkC,UAAA3B,UAAA,oBACA,IAAA6B,EACA,OAAApC,EAAAmC,YAAA5B,KAAA,SAAA0F,GACA,OAAAA,EAAAC,OACA,OAEA,OADA9D,EAAAgR,EAAAnS,QAAAyW,KACA,GAAAnX,KAAAC,QAAA6Q,QAAA,CAAmErH,IAAA,YAAAqI,EAAAjR,cAAAC,MACnE,oBAAAe,EAAAkB,MAAA8P,EAAAnS,QAAA,QAAAgF,EAAAG,OAAA7F,KAAAC,kBAWA6zB,EAAA5zB,UAAA+zB,cAAA,SAAA1b,EAAAnX,GACA,OAAA3B,EAAAkC,UAAA3B,UAAA,oBACA,IAAA4Q,EACA,OAAAnR,EAAAmC,YAAA5B,KAAA,SAAA6B,GACA,OAAAA,EAAA8D,OACA,OAEA,OADAiL,EAAAkB,EAAAjR,cAAA0X,GACA,GAAAvY,KAAAC,QAAA6Q,QAAA,CACArH,IAAA,YAAAmH,EACA5F,OAAA,MACAkM,SAAA,CAA2CqB,QAAAnX,GAC3C6P,MAAA,oBAEA,OAEA,OADApP,EAAAgE,OACA,UAUAiuB,EAAA5zB,UAAA8d,kBAAA,SAAAzF,GACA,OAAA9Y,EAAAkC,UAAA3B,UAAA,oBACA,IAAA4Q,EAAAxP,EACAE,EAAAtB,KACA,OAAAP,EAAAmC,YAAA5B,KAAA,SAAA6B,GACA,OAAAA,EAAA8D,OACA,OAEA,OADAiL,EAAAkB,EAAAjR,cAAA0X,GACA,GAAAvY,KAAAC,QAAA6Q,QAAA,CACArH,IAAA,YAAAmH,EAAA,WACAK,MAAA,kBAEA,OAEA,OADA7P,EAAAS,EAAAgE,OACA,GAAAzE,EAAAiB,MAAAyB,IAAA,SAAAstB,GAAkF,WAAAvuB,EAAAnC,QAAA0wB,EAAA9vB,EAAArB,kBAalF6zB,EAAA5zB,UAAAg0B,oBAAA,SAAA3b,EAAArF,EAAA5B,EAAA6iB,GAEA,YADA,IAAA7iB,IAA+BA,EAAA,IAC/B7R,EAAAkC,UAAA3B,UAAA,oBACA,IAAA4Q,EAAAM,EAAA9P,EACAE,EAAAtB,KACA,OAAAP,EAAAmC,YAAA5B,KAAA,SAAA6B,GACA,OAAAA,EAAA8D,OACA,OASA,OARAiL,EAAAkB,EAAAjR,cAAA0X,GACArH,EAAA,CAAiCI,QAAAzJ,YACjCqL,IACAhC,EAAAiC,SAAAD,EAAA,GAAA5B,GAAAzJ,YAEAssB,IACAjjB,EAAA8a,UAAAmI,GAEA,GAAAn0B,KAAAC,QAAA6Q,QAAA,CACArH,IAAA,YAAAmH,EAAA,WACAM,WAEA,OAEA,OADA9P,EAAAS,EAAAgE,OACA,GAAAzE,EAAAmZ,QAAAzW,IAAA,SAAA0W,GAAkF,WAAAqZ,EAAAnzB,QAAA8Z,EAAAlZ,EAAArB,kBAalF6zB,EAAA5zB,UAAAk0B,wBAAA,SAAA7b,EAAArF,EAAA5B,EAAA6iB,GAEA,YADA,IAAA7iB,IAA+BA,EAAA,IAC/B7R,EAAAkC,UAAA3B,UAAA,oBACA,IAAAoB,EACAE,EAAAtB,KACA,OAAAP,EAAAmC,YAAA5B,KAAA,SAAA6B,GACA,OAAAA,EAAA8D,OACA,gBAAA3F,KAAAq0B,yBAAA9b,EAAArF,EAAA5B,EAAA6iB,IACA,OAEA,OADA/yB,EAAAS,EAAAgE,OACA,GAAAzE,EAAA4Z,cAAAlX,IAAA,SAAAwwB,GAAqF,WAAAX,EAAAjzB,QAAA4zB,EAAAhzB,EAAArB,kBAUrF6zB,EAAA5zB,UAAAq0B,4BAAA,SAAAhc,GACA,OAAA9Y,EAAAkC,UAAA3B,UAAA,oBACA,IAAAoB,EACA,OAAA3B,EAAAmC,YAAA5B,KAAA,SAAA6B,GACA,OAAAA,EAAA8D,OACA,gBAAA3F,KAAAq0B,yBAAA9b,EAAA,MACA,OAEA,OADAnX,EAAAS,EAAAgE,OACA,GAAAzE,EAAAozB,cAgBAV,EAAA5zB,UAAAu0B,6BAAA,SAAAlc,EAAAmc,GACA,OAAAj1B,EAAAkC,UAAA3B,UAAA,oBACA,IAAA4Q,EAAAlN,EAAA7B,EAAAsZ,EACA,OAAA1b,EAAAmC,YAAA5B,KAAA,SAAA0F,GACA,OAAAA,EAAAC,OACA,OACAiL,EAAAkB,EAAAjR,cAAA0X,GACA7U,EAAAoO,EAAAjR,cAAA6zB,GACAhvB,EAAAC,MAAA,EACA,OAGA,OAFAD,EAAA0V,KAAA1S,KAAA,UACA7G,EAAA8xB,EAAAjzB,QAAAyW,KACA,GAAAnX,KAAAC,QAAA6Q,QAAA,CACArH,IAAA,YAAAmH,EAAA,kBAAAlN,EACAuN,MAAA,gCAEA,oBAAApP,EAAAkB,MAAA4wB,EAAAjzB,QAAA,QAAAgF,EAAAG,OACA7F,KAAAC,YACA,OAEA,GADAkb,EAAAzV,EAAAG,OACAsV,aAAAvG,EAAAlU,QAAA,CACA,SAAAya,EAAAkI,WACA,eAEA,SAAAlI,EAAAkI,WACA,UAAA9J,EAAA7Y,QAAAkQ,GAGA,MAAAuK,EACA,uBAWA2Y,EAAA5zB,UAAAge,uBAAA,SAAA3F,EAAAlT,GACA,OAAA5F,EAAAkC,UAAA3B,UAAA,oBACA,IAAA4Q,EACA,OAAAnR,EAAAmC,YAAA5B,KAAA,SAAA6B,GAEA,OADA+O,EAAAkB,EAAAjR,cAAA0X,GACA,GAAAvY,KAAAC,QAAA6Q,QAAA,CACArH,IAAA,YAAAmH,EAAA,cACA5F,OAAA,OACAkM,SAAA,CAAmC7R,UACnC4L,MAAA,6BAUA6iB,EAAA5zB,UAAAme,sBAAA,SAAA9F,GACA,OAAA9Y,EAAAkC,UAAA3B,UAAA,oBACA,IAAA4Q,EACA,OAAAnR,EAAAmC,YAAA5B,KAAA,SAAA6B,GAEA,OADA+O,EAAAkB,EAAAjR,cAAA0X,GACA,GAAAvY,KAAAC,QAAA6Q,QAAA,CACArH,IAAA,YAAAmH,EAAA,cACA5F,OAAA,SACAiG,MAAA,yBAKA6iB,EAAA5zB,UAAAm0B,yBAAA,SAAA9b,EAAArF,EAAA5B,EAAA6iB,GAEA,YADA,IAAA7iB,IAA+BA,EAAA,IAC/B7R,EAAAkC,UAAA3B,UAAA,oBACA,IAAA4Q,EAAAM,EAAA0W,EACA,OAAAnoB,EAAAmC,YAAA5B,KAAA,SAAA6B,GACA,OAAAA,EAAA8D,OACA,OACAiL,EAAAkB,EAAAjR,cAAA0X,GACArH,EAAA,CAAiCI,QAAAzJ,YACjCqL,IACAhC,EAAAiC,SAAAD,EAAA,GAAA5B,GAAAzJ,YAEAssB,IACAjjB,EAAA8a,UAAAmI,GAEAtyB,EAAA8D,MAAA,EACA,OAEA,OADA9D,EAAAuZ,KAAA1S,KAAA,UACA,GAAA1I,KAAAC,QAAA6Q,QAAA,CACArH,IAAA,YAAAmH,EAAA,iBACAM,QACAD,MAAA,2BAEA,gBAAApP,EAAAgE,QACA,OAEA,GADA+hB,EAAA/lB,EAAAgE,OACA+hB,aAAAhT,EAAAlU,SAAA,MAAAknB,EAAAvE,WACA,UAAA9J,EAAA7Y,QAAAkQ,GAEA,MAAAgX,EACA,uBAKAnoB,EAAAkB,WAAA,CACAiD,EAAAW,OAAA,OACAuvB,EAAA5zB,UAAA,qBACAT,EAAAkB,WAAA,CACAiD,EAAAW,OAAA,OACAuvB,EAAA5zB,UAAA,mBACAT,EAAAkB,WAAA,CACAiD,EAAAsd,YAAA,iBACA4S,EAAA5zB,UAAA,sBACAT,EAAAkB,WAAA,CACAiD,EAAAW,OAAA,OACAuvB,EAAA5zB,UAAA,0BACAT,EAAAkB,WAAA,CACAiD,EAAAW,OAAA,KACAuvB,EAAA5zB,UAAA,4BACAT,EAAAkB,WAAA,CACAiD,EAAAW,OAAA,KACAuvB,EAAA5zB,UAAA,gCACAT,EAAAkB,WAAA,CACAiD,EAAAW,OAAA,KACAuvB,EAAA5zB,UAAA,oCACAT,EAAAkB,WAAA,CACAiD,EAAAW,OAAA,OACAuvB,EAAA5zB,UAAA,qCACAT,EAAAkB,WAAA,CACAiD,EAAAsd,YAAA,iBACA4S,EAAA5zB,UAAA,8BACA4zB,EAAAr0B,EAAAkB,WAAA,CACAiD,EAAAY,WACAsvB,GACAA,EAzTA,CA0TCrkB,EAAA/O,SACDnB,EAAAmB,QAAAozB,qCClVAz0B,OAAAC,eAAAC,EAAA,cAA8CC,OAAA,IAC9C,IAAAC,EAAcC,EAAQ,QACtBwwB,EAAkBxwB,EAAQ,QAI1Bi1B,EAAA,SAAAxzB,GAEA,SAAAwzB,IACA,cAAAxzB,KAAA4B,MAAA/C,KAAAgD,YAAAhD,KAwBA,OA1BAP,EAAA+B,UAAAmzB,EAAAxzB,GAIA9B,OAAAC,eAAAq1B,EAAAz0B,UAAA,SAIAC,IAAA,WACA,OAAAH,KAAAF,MAAAge,OAEAxd,YAAA,EACAC,cAAA,IAOAo0B,EAAAz0B,UAAA00B,eAAA,SAAAjwB,GACA,OAAAlF,EAAAkC,UAAA3B,UAAA,oBACA,OAAAP,EAAAmC,YAAA5B,KAAA,SAAA6B,GACA,SAAA7B,KAAAC,QAAA6B,MAAAO,MAAAyuB,WAAA,CAA2EnsB,sBAI3EgwB,EA3BA,CA4BCzE,EAAAxvB,SACDnB,EAAAmB,QAAAi0B,qCCnCAt1B,OAAAC,eAAAC,EAAA,cAA8CC,OAAA,IAC9C,IAAAC,EAAcC,EAAQ,QACtBE,EAAsBF,EAAQ,QAI9Bm1B,EAAA,WAEA,SAAAA,EAAA/0B,EAAAC,GACAC,KAAAF,QACAE,KAAAC,QAAAF,EA4GA,OA1GAV,OAAAC,eAAAu1B,EAAA30B,UAAA,MAIAC,IAAA,WACA,OAAAH,KAAAF,MAAAiZ,KAEAzY,YAAA,EACAC,cAAA,IAEAlB,OAAAC,eAAAu1B,EAAA30B,UAAA,cAIAC,IAAA,WACA,OAAAH,KAAAF,MAAAulB,YAEA/kB,YAAA,EACAC,cAAA,IAEAlB,OAAAC,eAAAu1B,EAAA30B,UAAA,UAIAC,IAAA,WACA,OAAAH,KAAAF,MAAAg1B,QAEAx0B,YAAA,EACAC,cAAA,IAEAlB,OAAAC,eAAAu1B,EAAA30B,UAAA,gBAIAC,IAAA,WACA,WAAAuC,KAAA1C,KAAAF,MAAA4E,aAEApE,YAAA,EACAC,cAAA,IAEAlB,OAAAC,eAAAu1B,EAAA30B,UAAA,cAIAC,IAAA,WACA,WAAAuC,KAAA1C,KAAAF,MAAAi1B,aAEAz0B,YAAA,EACAC,cAAA,IAEAlB,OAAAC,eAAAu1B,EAAA30B,UAAA,QAIAC,IAAA,WACA,OAAAH,KAAAF,MAAAW,MAEAH,YAAA,EACAC,cAAA,IAEAlB,OAAAC,eAAAu1B,EAAA30B,UAAA,QAIAC,IAAA,WACA,OAAAH,KAAAF,MAAAk1B,MAEA10B,YAAA,EACAC,cAAA,IAEAlB,OAAAC,eAAAu1B,EAAA30B,UAAA,eAIAC,IAAA,WACA,OAAAH,KAAAF,MAAA8Z,cAEAtZ,YAAA,EACAC,cAAA,IAEAlB,OAAAC,eAAAu1B,EAAA30B,UAAA,WAIAC,IAAA,WACA,OAAAH,KAAAF,MAAAm1B,MAEA30B,YAAA,EACAC,cAAA,IAEAs0B,EAAA30B,UAAA2Y,SAAA,WACA,OAAApZ,EAAAkC,UAAA3B,UAAA,oBACA,IAAA+T,EACA,OAAAtU,EAAAmC,YAAA5B,KAAA,SAAA6B,GACA,OAAAA,EAAA8D,OACA,gBAAA3F,KAAAC,QAAAya,OAAA5G,MAAAE,cAAAhU,KAAAS,OACA,OAEA,OADAsT,EAAAlS,EAAAgE,OACA,GAAAkO,EAAA8E,kBAKApZ,EAAAkB,WAAA,CACAf,EAAAgB,eACAi0B,EAAA30B,UAAA,kBACA20B,EAhHA,GAkHAt1B,EAAAmB,QAAAm0B,qCCxHAx1B,OAAAC,eAAAC,EAAA,cAA8CC,OAAA,IAC9C,IAAAC,EAAcC,EAAQ,QACtB+P,EAAgB/P,EAAQ,QACxBkE,EAAclE,EAAQ,QACtBw1B,EAAqBx1B,EAAQ,QAC7By1B,EAAqBz1B,EAAQ,QAC7B01B,EAAqB11B,EAAQ,QAC7B21B,EAAuB31B,EAAQ,QAC/B41B,EAA6B51B,EAAQ,QACrC61B,EAAqB71B,EAAQ,QAC7B81B,EAAsB91B,EAAQ,QAC9B+1B,EAAyB/1B,EAAQ,QAMjCg2B,EAAA,SAAAv0B,GAEA,SAAAu0B,IACA,cAAAv0B,KAAA4B,MAAA/C,KAAAgD,YAAAhD,KA6GA,OA/GAP,EAAA+B,UAAAk0B,EAAAv0B,GAIA9B,OAAAC,eAAAo2B,EAAAx1B,UAAA,QAIAC,IAAA,WACA,WAAA+0B,EAAAx0B,QAAAV,KAAAC,UAEAK,YAAA,EACAC,cAAA,IAEAlB,OAAAC,eAAAo2B,EAAAx1B,UAAA,SAIAC,IAAA,WACA,WAAAg1B,EAAAz0B,QAAAV,KAAAC,UAEAK,YAAA,EACAC,cAAA,IAEAlB,OAAAC,eAAAo2B,EAAAx1B,UAAA,SAIAC,IAAA,WACA,WAAAi1B,EAAA10B,QAAAV,KAAAC,UAEAK,YAAA,EACAC,cAAA,IAEAlB,OAAAC,eAAAo2B,EAAAx1B,UAAA,WAIAC,IAAA,WACA,WAAAk1B,EAAA30B,QAAAV,KAAAC,UAEAK,YAAA,EACAC,cAAA,IAEAlB,OAAAC,eAAAo2B,EAAAx1B,UAAA,iBAIAC,IAAA,WACA,WAAAm1B,EAAA50B,QAAAV,KAAAC,UAEAK,YAAA,EACAC,cAAA,IAEAlB,OAAAC,eAAAo2B,EAAAx1B,UAAA,SAIAC,IAAA,WACA,WAAAo1B,EAAA70B,QAAAV,KAAAC,UAEAK,YAAA,EACAC,cAAA,IAEAlB,OAAAC,eAAAo2B,EAAAx1B,UAAA,YAIAC,IAAA,WACA,WAAAs1B,EAAA/0B,QAAAV,KAAAC,UAEAK,YAAA,EACAC,cAAA,IAEAlB,OAAAC,eAAAo2B,EAAAx1B,UAAA,UAIAC,IAAA,WACA,WAAAq1B,EAAA90B,QAAAV,KAAAC,UAEAK,YAAA,EACAC,cAAA,IAEAd,EAAAkB,WAAA,CACAiD,EAAAU,gBACAoxB,EAAAx1B,UAAA,aACAT,EAAAkB,WAAA,CACAiD,EAAAU,gBACAoxB,EAAAx1B,UAAA,cACAT,EAAAkB,WAAA,CACAiD,EAAAU,gBACAoxB,EAAAx1B,UAAA,cACAT,EAAAkB,WAAA,CACAiD,EAAAU,gBACAoxB,EAAAx1B,UAAA,gBACAT,EAAAkB,WAAA,CACAiD,EAAAU,gBACAoxB,EAAAx1B,UAAA,sBACAT,EAAAkB,WAAA,CACAiD,EAAAU,gBACAoxB,EAAAx1B,UAAA,cACAT,EAAAkB,WAAA,CACAiD,EAAAU,gBACAoxB,EAAAx1B,UAAA,iBACAT,EAAAkB,WAAA,CACAiD,EAAAU,gBACAoxB,EAAAx1B,UAAA,eACAw1B,EAAAj2B,EAAAkB,WAAA,CACAiD,EAAAY,WACAkxB,GACAA,EAhHA,CAiHCjmB,EAAA/O,SACDnB,EAAAmB,QAAAg1B,qCCnIAr2B,OAAAC,eAAAC,EAAA,cAA8CC,OAAA,IAC9C,IAAAC,EAAcC,EAAQ,QACtBkE,EAAclE,EAAQ,QACtB+P,EAAgB/P,EAAQ,QACxBi2B,EAAqBj2B,EAAQ,QAC7BoS,EAAkBpS,EAAQ,QAC1Bk2B,EAAqBl2B,EAAQ,QAC7BmF,EAAqBnF,EAAQ,QAY7Bm2B,EAAA,SAAA10B,GAEA,SAAA00B,IACA,cAAA10B,KAAA4B,MAAA/C,KAAAgD,YAAAhD,KAyDA,OA3DAP,EAAA+B,UAAAq0B,EAAA10B,GAWA00B,EAAA31B,UAAA41B,YAAA,SAAAvd,GACA,OAAA9Y,EAAAkC,UAAA3B,UAAA,oBACA,IAAA+1B,EAAA30B,EACA,OAAA3B,EAAAmC,YAAA5B,KAAA,SAAA6B,GACA,OAAAA,EAAA8D,OACA,OAEA,OADAowB,EAAAjkB,EAAA9Q,gBAAAuX,GACA,GAAAvY,KAAAC,QAAA6Q,QAAA,CACArH,IAAA,oCAAAssB,EAAA,YACAnsB,KAAA/E,EAAAkM,kBAAA+G,UAEA,OAEA,OADA1W,EAAAS,EAAAgE,OACA,OAAA8vB,EAAAj1B,QAAAU,UAUAy0B,EAAA31B,UAAA81B,UAAA,SAAAzd,GACA,OAAA9Y,EAAAkC,UAAA3B,UAAA,oBACA,IAAA4Q,EAAAxP,EACAE,EAAAtB,KACA,OAAAP,EAAAmC,YAAA5B,KAAA,SAAA6B,GACA,OAAAA,EAAA8D,OACA,OAEA,OADAiL,EAAAkB,EAAAjR,cAAA0X,GACA,GAAAvY,KAAAC,QAAA6Q,QAAA,CAAmErH,IAAA,YAAAmH,EAAA,aACnE,OAEA,OADAxP,EAAAS,EAAAgE,OACA,GAAAzE,EAAA60B,OAAAnyB,IAAA,SAAAoyB,GAAgF,WAAAN,EAAAl1B,QAAAw1B,EAAA50B,EAAArB,kBAKhFR,EAAAkB,WAAA,CACAiD,EAAAW,OAAA,KACAsxB,EAAA31B,UAAA,oBACAT,EAAAkB,WAAA,CACAiD,EAAAW,OAAA,KACAsxB,EAAA31B,UAAA,kBACA21B,EAAAp2B,EAAAkB,WAAA,CACAiD,EAAAY,WACAqxB,GACAA,EA5DA,CA6DCpmB,EAAA/O,SACDnB,EAAAmB,QAAAm1B,qCCjFAx2B,OAAAC,eAAAC,EAAA,cAA8CC,OAAA,IAC9C,IAAAC,EAAcC,EAAQ,QAEtBE,EAAsBF,EAAQ,QAC9By2B,EAAA,WAEA,SAAAA,EAAAr2B,EAAAC,GACAC,KAAAF,QACAE,KAAAC,QAAAF,EAqFA,OAnFAV,OAAAC,eAAA62B,EAAAj2B,UAAA,MAIAC,IAAA,WACA,OAAAH,KAAAF,MAAAiZ,KAEAzY,YAAA,EACAC,cAAA,IAEAlB,OAAAC,eAAA62B,EAAAj2B,UAAA,WAIAC,IAAA,WACA,OAAAH,KAAAF,MAAAs2B,UAEA91B,YAAA,EACAC,cAAA,IAKA41B,EAAAj2B,UAAAm2B,SAAA,WACA,OAAA52B,EAAAkC,UAAA3B,UAAA,oBACA,OAAAP,EAAAmC,YAAA5B,KAAA,SAAA6B,GACA,SAAA7B,KAAAC,QAAAya,OAAArY,MAAAD,QAAApC,KAAAF,MAAAs2B,gBAIA/2B,OAAAC,eAAA62B,EAAAj2B,UAAA,QAIAC,IAAA,WACA,OAAAH,KAAAF,MAAAW,MAEAH,YAAA,EACAC,cAAA,IAEAlB,OAAAC,eAAA62B,EAAAj2B,UAAA,SAIAC,IAAA,WACA,OAAAH,KAAAF,MAAAw2B,OAEAh2B,YAAA,EACAC,cAAA,IAEAlB,OAAAC,eAAA62B,EAAAj2B,UAAA,iBAIAC,IAAA,WACA,OAAAH,KAAAF,MAAAy2B,gBAEAj2B,YAAA,EACAC,cAAA,IAEAlB,OAAAC,eAAA62B,EAAAj2B,UAAA,WAIAC,IAAA,WACA,OAAAH,KAAAF,MAAA02B,sBAEAl2B,YAAA,EACAC,cAAA,IAEAlB,OAAAC,eAAA62B,EAAAj2B,UAAA,WAIAC,IAAA,WACA,oBAAAH,KAAAF,MAAAs2B,SAAA,IAAAp2B,KAAAF,MAAAiZ,KAEAzY,YAAA,EACAC,cAAA,IAEAd,EAAAkB,WAAA,CACAf,EAAAgB,eACAu1B,EAAAj2B,UAAA,kBACAi2B,EAzFA,GA2FA52B,EAAAmB,QAAAy1B,qCC/FA92B,OAAAC,eAAAC,EAAA,cAA8CC,OAAA,IAC9C,IAAAC,EAAcC,EAAQ,QACtBE,EAAsBF,EAAQ,QAI9B+2B,EAAA,WAEA,SAAAA,EAAA32B,EAAAC,GACAC,KAAAF,QACAE,KAAAC,QAAAF,EA6CA,OA3CAV,OAAAC,eAAAm3B,EAAAv2B,UAAA,MAIAC,IAAA,WACA,OAAAH,KAAAF,MAAAiZ,KAEAzY,YAAA,EACAC,cAAA,IAEAlB,OAAAC,eAAAm3B,EAAAv2B,UAAA,WAIAC,IAAA,WACA,OAAAH,KAAAF,MAAA42B,UAEAp2B,YAAA,EACAC,cAAA,IAEAlB,OAAAC,eAAAm3B,EAAAv2B,UAAA,eAIAC,IAAA,WACA,OAAAH,KAAAF,MAAA62B,eAEAr2B,YAAA,EACAC,cAAA,IAEAlB,OAAAC,eAAAm3B,EAAAv2B,UAAA,aAIAC,IAAA,WACA,WAAAuC,KAAA1C,KAAAF,MAAA4E,aAEApE,YAAA,EACAC,cAAA,IAEAd,EAAAkB,WAAA,CACAf,EAAAgB,eACA61B,EAAAv2B,UAAA,kBACAu2B,EAjDA,GAmDAl3B,EAAAmB,QAAA+1B,qCCzDAp3B,OAAAC,eAAAC,EAAA,cAA8CC,OAAA,IAC9C,IAAAC,EAAcC,EAAQ,QACtBk3B,EAA2Bl3B,EAAQ,QAInCm3B,EAAA,SAAA11B,GAGA,SAAA01B,EAAAz1B,EAAArB,GACA,IAAAuB,EAAAH,EAAAI,KAAAvB,KAAAoB,EAAA2X,IAAAhZ,IAAAC,KAEA,OADAsB,EAAAxB,MAAAsB,EACAE,EAmNA,OAxNA7B,EAAA+B,UAAAq1B,EAAA11B,GASA01B,EAAA32B,UAAA8zB,WAAA,WACA,OAAAv0B,EAAAkC,UAAA3B,UAAA,oBACA,OAAAP,EAAAmC,YAAA5B,KAAA,SAAA6B,GACA,SAAA7B,WAOA62B,EAAA32B,UAAA42B,OAAA,SAAA11B,GACA,OAAA3B,EAAAkC,UAAA3B,UAAA,oBACA,OAAAP,EAAAmC,YAAA5B,KAAA,SAAA6B,GACA,SAAA7B,KAAAC,QAAAya,OAAAtH,SAAA6gB,cAAAj0B,KAAAoB,SAIA/B,OAAAC,eAAAu3B,EAAA32B,UAAA,QAIAC,IAAA,WACA,OAAAH,KAAAF,MAAAW,MAEAH,YAAA,EACAC,cAAA,IAEAlB,OAAAC,eAAAu3B,EAAA32B,UAAA,eAIAC,IAAA,WACA,OAAAH,KAAAF,MAAA8Z,cAEAtZ,YAAA,EACAC,cAAA,IAEAlB,OAAAC,eAAAu3B,EAAA32B,UAAA,uBAIAC,IAAA,WACA,OAAAH,KAAAF,MAAAi3B,sBAEAz2B,YAAA,EACAC,cAAA,IAEAlB,OAAAC,eAAAu3B,EAAA32B,UAAA,mBAIAC,IAAA,WACA,OAAAH,KAAAF,MAAA+Z,kBAEAvZ,YAAA,EACAC,cAAA,IAEAlB,OAAAC,eAAAu3B,EAAA32B,UAAA,gBAIAC,IAAA,WACA,WAAAuC,KAAA1C,KAAAF,MAAA4E,aAEApE,YAAA,EACAC,cAAA,IAEAlB,OAAAC,eAAAu3B,EAAA32B,UAAA,eAIAC,IAAA,WACA,OAAAH,KAAAF,MAAA6E,aAEArE,YAAA,EACAC,cAAA,IAEAlB,OAAAC,eAAAu3B,EAAA32B,UAAA,aAIAC,IAAA,WACA,OAAAH,KAAAF,MAAAk3B,WAEA12B,YAAA,EACAC,cAAA,IAEAlB,OAAAC,eAAAu3B,EAAA32B,UAAA,QAIAC,IAAA,WACA,OAAAH,KAAAF,MAAA0iB,MAEAliB,YAAA,EACAC,cAAA,IAEAlB,OAAAC,eAAAu3B,EAAA32B,UAAA,YAIAC,IAAA,WACA,OAAAH,KAAAF,MAAA2S,UAEAnS,YAAA,EACAC,cAAA,IAEAlB,OAAAC,eAAAu3B,EAAA32B,UAAA,QAIAC,IAAA,WACA,OAAAH,KAAAF,MAAAm1B,MAEA30B,YAAA,EACAC,cAAA,IAEAlB,OAAAC,eAAAu3B,EAAA32B,UAAA,YAIAC,IAAA,WACA,OAAAH,KAAAF,MAAAm3B,QAEA32B,YAAA,EACAC,cAAA,IAEAlB,OAAAC,eAAAu3B,EAAA32B,UAAA,aAIAC,IAAA,WACA,OAAAH,KAAAF,MAAAo3B,SAEA52B,YAAA,EACAC,cAAA,IAEAlB,OAAAC,eAAAu3B,EAAA32B,UAAA,iBAIAC,IAAA,WACA,OAAAH,KAAAF,MAAAq3B,gBAEA72B,YAAA,EACAC,cAAA,IAEAlB,OAAAC,eAAAu3B,EAAA32B,UAAA,gCAIAC,IAAA,WACA,OAAAH,KAAAF,MAAAs3B,iCAEA92B,YAAA,EACAC,cAAA,IAEAlB,OAAAC,eAAAu3B,EAAA32B,UAAA,UAIAC,IAAA,WACA,OAAAH,KAAAF,MAAAwJ,QAEAhJ,YAAA,EACAC,cAAA,IAEAlB,OAAAC,eAAAu3B,EAAA32B,UAAA,cAIAC,IAAA,WACA,WAAAuC,KAAA1C,KAAAF,MAAAi1B,aAEAz0B,YAAA,EACAC,cAAA,IAEAlB,OAAAC,eAAAu3B,EAAA32B,UAAA,OAIAC,IAAA,WACA,OAAAH,KAAAF,MAAA2J,KAEAnJ,YAAA,EACAC,cAAA,IAEAlB,OAAAC,eAAAu3B,EAAA32B,UAAA,eAIAC,IAAA,WACA,OAAAH,KAAAF,MAAAu3B,cAEA/2B,YAAA,EACAC,cAAA,IAEAlB,OAAAC,eAAAu3B,EAAA32B,UAAA,SAIAC,IAAA,WACA,OAAAH,KAAAF,MAAAw3B,OAEAh3B,YAAA,EACAC,cAAA,IAEAs2B,EAzNA,CA0NCD,EAAAl2B,SACDnB,EAAAmB,QAAAm2B,qCCjOAx3B,OAAAC,eAAAC,EAAA,cAA8CC,OAAA,IAC9C,IAAAC,EAAcC,EAAQ,QACtB+P,EAAgB/P,EAAQ,QACxBkE,EAAclE,EAAQ,QACtB63B,EAAgB73B,EAAQ,QACxB83B,EAAmB93B,EAAQ,QAC3B+3B,EAAgB/3B,EAAQ,QACxBg4B,EAAkBh4B,EAAQ,QAC1Bi4B,EAAkBj4B,EAAQ,QAC1Bk4B,EAAgBl4B,EAAQ,QACxBm4B,EAAgBn4B,EAAQ,QAMxBo4B,EAAA,SAAA32B,GAEA,SAAA22B,IACA,cAAA32B,KAAA4B,MAAA/C,KAAAgD,YAAAhD,KAgGA,OAlGAP,EAAA+B,UAAAs2B,EAAA32B,GAIA9B,OAAAC,eAAAw4B,EAAA53B,UAAA,QAIAC,IAAA,WACA,WAAAo3B,EAAA72B,QAAAV,KAAAC,UAEAK,YAAA,EACAC,cAAA,IAEAlB,OAAAC,eAAAw4B,EAAA53B,UAAA,YAIAC,IAAA,WACA,WAAAq3B,EAAA92B,QAAAV,KAAAC,UAEAK,YAAA,EACAC,cAAA,IAEAlB,OAAAC,eAAAw4B,EAAA53B,UAAA,QAIAC,IAAA,WACA,WAAAs3B,EAAA/2B,QAAAV,KAAAC,UAEAK,YAAA,EACAC,cAAA,IAEAlB,OAAAC,eAAAw4B,EAAA53B,UAAA,UAIAC,IAAA,WACA,WAAAu3B,EAAAh3B,QAAAV,KAAAC,UAEAK,YAAA,EACAC,cAAA,IAEAlB,OAAAC,eAAAw4B,EAAA53B,UAAA,WAIAC,IAAA,WACA,WAAAw3B,EAAAj3B,QAAAV,KAAAC,UAEAK,YAAA,EACAC,cAAA,IAEAlB,OAAAC,eAAAw4B,EAAA53B,UAAA,SAIAC,IAAA,WACA,WAAAy3B,EAAAl3B,QAAAV,KAAAC,UAEAK,YAAA,EACAC,cAAA,IAEAlB,OAAAC,eAAAw4B,EAAA53B,UAAA,SAIAC,IAAA,WACA,WAAA03B,EAAAn3B,QAAAV,KAAAC,UAEAK,YAAA,EACAC,cAAA,IAEAd,EAAAkB,WAAA,CACAiD,EAAAU,gBACAwzB,EAAA53B,UAAA,aACAT,EAAAkB,WAAA,CACAiD,EAAAU,gBACAwzB,EAAA53B,UAAA,iBACAT,EAAAkB,WAAA,CACAiD,EAAAU,gBACAwzB,EAAA53B,UAAA,aACAT,EAAAkB,WAAA,CACAiD,EAAAU,gBACAwzB,EAAA53B,UAAA,eACAT,EAAAkB,WAAA,CACAiD,EAAAU,gBACAwzB,EAAA53B,UAAA,gBACAT,EAAAkB,WAAA,CACAiD,EAAAU,gBACAwzB,EAAA53B,UAAA,cACAT,EAAAkB,WAAA,CACAiD,EAAAU,gBACAwzB,EAAA53B,UAAA,cACA43B,EAAAr4B,EAAAkB,WAAA,CACAiD,EAAAY,WACAszB,GACAA,EAnGA,CAoGCroB,EAAA/O,SACDnB,EAAAmB,QAAAo3B,qCCpHA,IAAA/oB,EAAAxD,OAAArL,UAAA6O,QACAgpB,EAAA,OAEAvoB,EAAAjQ,QAAA,CACAmB,QAAA,UACAkc,WAAA,CACAob,QAAA,SAAAx4B,GACA,OAAAuP,EAAAxN,KAAA/B,EAAAu4B,EAAA,MAEAE,QAAA,SAAAz4B,GACA,OAAAA,IAGAw4B,QAAA,UACAC,QAAA,8CCfA54B,OAAAC,eAAAC,EAAA,cAA8CC,OAAA,IAC9C,IAAAC,EAAcC,EAAQ,QACtBE,EAAsBF,EAAQ,QAC9B6Z,EAAmC7Z,EAAQ,QAO3Cw4B,EAAA,WAEA,SAAAA,EAAAn3B,EAAAhB,GACAC,KAAAF,MAAA,CAAsBiZ,IAAAhY,GACtBf,KAAAC,QAAAF,EAmHA,OAjHAV,OAAAC,eAAA44B,EAAAh4B,UAAA,YAEAC,IAAA,WACA,OAAAH,KAAAF,MAAAiZ,KAEAzY,YAAA,EACAC,cAAA,IAEAlB,OAAAC,eAAA44B,EAAAh4B,UAAA,MAIAC,IAAA,WACA,OAAAH,KAAAF,MAAAiZ,KAEAzY,YAAA,EACAC,cAAA,IAKA23B,EAAAh4B,UAAAoY,cAAA,WACA,OAAA7Y,EAAAkC,UAAA3B,UAAA,oBACA,OAAAP,EAAAmC,YAAA5B,KAAA,SAAA6B,GACA,SAAA7B,KAAAC,QAAAya,OAAAwK,KAAA5M,cAAAtY,YAOAk4B,EAAAh4B,UAAA8zB,WAAA,WACA,OAAAv0B,EAAAkC,UAAA3B,UAAA,oBACA,OAAAP,EAAAmC,YAAA5B,KAAA,SAAA6B,GACA,SAAA7B,KAAAC,QAAAya,OAAAtH,SAAA4gB,WAAAh0B,YAOAk4B,EAAAh4B,UAAA+Z,UAAA,WACA,OAAAxa,EAAAkC,UAAA3B,UAAA,oBACA,OAAAP,EAAAmC,YAAA5B,KAAA,SAAA6B,GACA,SAAA7B,KAAAC,QAAAya,OAAAlH,QAAA2kB,mBAAAn4B,YAOAk4B,EAAAh4B,UAAAk4B,aAAA,WACA,OAAA34B,EAAAkC,UAAA3B,UAAA,oBACA,OAAAP,EAAAmC,YAAA5B,KAAA,SAAA6B,GACA,SAAA7B,KAAAC,QAAAya,OAAAtH,SAAA8gB,oBAAAl0B,YAOAk4B,EAAAh4B,UAAA+pB,iBAAA,WACA,OAAAxqB,EAAAkC,UAAA3B,UAAA,oBACA,OAAAP,EAAAmC,YAAA5B,KAAA,SAAA6B,GACA,SAAA7B,KAAAC,QAAAya,OAAAtH,SAAAghB,wBAAAp0B,YAcAk4B,EAAAh4B,UAAAm4B,kBAAA,SAAAv3B,GACA,OAAArB,EAAAkC,UAAA3B,UAAA,oBACA,OAAAP,EAAAmC,YAAA5B,KAAA,SAAA6B,GACA,SAAA7B,KAAAC,QAAAya,OAAAtH,SAAAqhB,6BAAAz0B,KAAAc,SASAo3B,EAAAh4B,UAAAo4B,cAAA,SAAAx3B,GACA,OAAArB,EAAAkC,UAAA3B,UAAA,oBACA,IAAAmb,EACA,OAAA1b,EAAAmC,YAAA5B,KAAA,SAAA6B,GACA,OAAAA,EAAA8D,OACA,OAEA,OADA9D,EAAAuZ,KAAA1S,KAAA,UACA,GAAA1I,KAAAq4B,kBAAAv3B,IACA,uBAAAe,EAAAgE,QACA,OAEA,GADAsV,EAAAtZ,EAAAgE,OACAsV,aAAA5B,EAAA7Y,QACA,aAEA,MAAAya,EACA,uBAKA1b,EAAAkB,WAAA,CACAf,EAAAgB,eACAs3B,EAAAh4B,UAAA,kBACAg4B,EAvHA,GAyHA34B,EAAAmB,QAAAw3B,qCCnIA74B,OAAAC,eAAAC,EAAA,cAA8CC,OAAA,IAI9C,IAAA+4B,EAAA,WAEA,SAAAA,EAAAz4B,EAAA04B,GACAx4B,KAAAF,QACAE,KAAAy4B,gBAAAD,GAAA,IAAA91B,KA0DA,OAxDArD,OAAAC,eAAAi5B,EAAAr4B,UAAA,eAIAC,IAAA,WACA,OAAAH,KAAAF,MAAAykB,cAEAjkB,YAAA,EACAC,cAAA,IAEAlB,OAAAC,eAAAi5B,EAAAr4B,UAAA,gBAIAC,IAAA,WACA,OAAAH,KAAAF,MAAA6X,eAEArX,YAAA,EACAC,cAAA,IAEAlB,OAAAC,eAAAi5B,EAAAr4B,UAAA,cAOAC,IAAA,WACA,OAAAH,KAAAF,MAAA44B,WAGA,IAAAh2B,KAAA1C,KAAAy4B,gBAAAE,UAAA,IAAA34B,KAAAF,MAAA44B,YAFA,MAIAp4B,YAAA,EACAC,cAAA,IAEAlB,OAAAC,eAAAi5B,EAAAr4B,UAAA,aACAC,IAAA,WACA,QAAAH,KAAAF,MAAA44B,YAGAh2B,KAAAyd,MAAAngB,KAAAy4B,gBAAAE,UAAA,IAAA34B,KAAAF,MAAA44B,YAEAp4B,YAAA,EACAC,cAAA,IAEAlB,OAAAC,eAAAi5B,EAAAr4B,UAAA,SAIAC,IAAA,WACA,OAAAH,KAAAF,MAAAmR,MAAApC,MAAA,MAEAvO,YAAA,EACAC,cAAA,IAEAg4B,EA9DA,GAgEAh5B,EAAAmB,QAAA63B,qCCpEAl5B,OAAAC,eAAAC,EAAA,cAA8CC,OAAA,IAE9C,IAAAqF,EAAqBnF,EAAQ,QAC7BH,EAAAwR,kBAAAlM,EAAAkM,kBACAxR,EAAAmB,QAAAmE,EAAAnE,QACA,IAAAiU,EAAoBjV,EAAQ,QAC5BH,EAAA8nB,YAAA1S,EAAAjU,QACA,IAAAkkB,EAA6BllB,EAAQ,QACrCH,EAAAiqB,qBAAA5E,EAAAlkB,QACA,IAAAkU,EAA4BlV,EAAQ,QACpCH,EAAAq5B,oBAAAhkB,EAAAlU,QACA,IAAA6Y,EAAmC7Z,EAAQ,QAC3CH,EAAA+qB,2BAAA/Q,EAAA7Y,QACA,IAAAshB,EAA2BtiB,EAAQ,QACnCH,EAAAyf,mBAAAgD,EAAAthB,QACA,IAAA8T,EAA2B9U,EAAQ,QACnCH,EAAA8kB,mBAAA7P,EAAA9T,QACA,IAAA+T,EAAgC/U,EAAQ,QACxCH,EAAAs5B,wBAAApkB,EAAA/T,QACA,IAAA6T,EAAoB7U,EAAQ,QAC5BH,EAAAg5B,YAAAhkB,EAAA7T,QACA,IAAA2T,EAAkB3U,EAAQ,QAC1BH,EAAAu5B,UAAAzkB,EAAA3T,QACA,IAAAkC,EAAqBlD,EAAQ,QAC7BH,EAAAk3B,aAAA7zB,EAAAlC,QACA,IAAA4T,EAAsB5U,EAAQ,QAC9BH,EAAAulB,cAAAxQ,EAAA5T,QACAnB,EAAAmW,oBAAApB,EAAAoB,oBACAnW,EAAAsW,eAAAvB,EAAAuB,eACAtW,EAAAyW,eAAA1B,EAAA0B,eACA,IAAAnD,EAAgBnT,EAAQ,QACxBH,EAAAs3B,QAAAhkB,EAAAnS,QACA,IAAAmzB,EAAsBn0B,EAAQ,QAC9BH,EAAA0f,cAAA4U,EAAAnzB,QACA,IAAAk2B,EAA2Bl3B,EAAQ,QACnCH,EAAA24B,mBAAAtB,EAAAl2B,QACA,IAAAizB,EAA4Bj0B,EAAQ,QACpCH,EAAAuD,oBAAA6wB,EAAAjzB,QACA,IAAAq4B,EAAqBr5B,EAAQ,QAC7BH,EAAAkoB,aAAAsR,EAAAr4B,QACA,IAAAkzB,EAA0Bl0B,EAAQ,QAClCH,EAAAqe,kBAAAgW,EAAAlzB,QACA,IAAAoS,EAAepT,EAAQ,QACvBH,EAAAy5B,OAAAlmB,EAAApS,QACAnB,EAAA05B,WAAAnmB,EAAAmmB,WACA,IAAArD,EAAqBl2B,EAAQ,QAC7BH,EAAAuZ,aAAA8c,EAAAl1B,QACA,IAAAi1B,EAAqBj2B,EAAQ,QAC7BH,EAAA25B,aAAAvD,EAAAj1B,QACA,IAAAy4B,EAAuBz5B,EAAQ,QAC/BH,EAAAskB,eAAAsV,EAAAz4B,QACA,IAAAmC,EAAanD,EAAQ,QACrBH,EAAA65B,KAAAv2B,EAAAnC,QACA,IAAA24B,EAAkB35B,EAAQ,QAC1BH,EAAA+5B,UAAAD,EAAA34B,QACA,IAAA64B,EAAmB75B,EAAQ,QAC3BH,EAAAi6B,WAAAD,EAAA74B,QACA,IAAA+4B,EAAyB/5B,EAAQ,QACjCH,EAAAm6B,iBAAAD,EAAA/4B,QACA,IAAAiP,EAA8BjQ,EAAQ,QACtCH,EAAAo6B,sBAAAhqB,EAAAjP,QACA,IAAAk5B,EAA6Bl6B,EAAQ,QACrCH,EAAAs6B,qBAAAD,EAAAl5B,QACA,IAAAo5B,EAAkCp6B,EAAQ,QAC1CH,EAAAw6B,0BAAAD,EAAAp5B,QACA,IAAAgP,EAAkBhQ,EAAQ,QAC1BH,EAAAy6B,UAAAtqB,EAAAhP,QACA,IAAAu5B,EAAkBv6B,EAAQ,QAC1BH,EAAA2U,UAAA+lB,EAAAv5B,QACA,IAAAohB,EAAoBpiB,EAAQ,QAC5BH,EAAAgiB,YAAAO,EAAAphB,QACAnB,EAAA+hB,gBAAAQ,EAAAR,gBACA,IAAA8O,EAAoB1wB,EAAQ,QAC5BH,EAAA0C,YAAAmuB,EAAA1vB,QACA,IAAAyvB,EAA4BzwB,EAAQ,QACpCH,EAAAo1B,oBAAAxE,EAAAzvB,QACA,IAAAwvB,EAAkBxwB,EAAQ,QAC1BH,EAAAma,UAAAwW,EAAAxvB,QACAnB,EAAAia,qBAAA0W,EAAA1W,qBACAja,EAAAka,cAAAyW,EAAAzW,cACA,IAAA5H,EAAmBnS,EAAQ,QAC3BH,EAAA2oB,WAAArW,EAAAnR,QACA,IAAAw5B,EAAsBx6B,EAAQ,QAC9BH,EAAAmqB,cAAAwQ,EAAAx5B,QACA,IAAA+oB,EAAqB/pB,EAAQ,QAC7BH,EAAAM,aAAA4pB,EAAA/oB,QACA,IAAAf,EAAyBD,EAAQ,QACjCH,EAAAwY,iBAAApY,EAAAe,QACA,IAAAoR,EAAkBpS,EAAQ,QAC1BH,EAAAsB,cAAAiR,EAAAjR,cACAtB,EAAAyB,gBAAA8Q,EAAA9Q,mDC1FA3B,OAAAC,eAAAC,EAAA,cAA8CC,OAAA,IAC9C,IAAAC,EAAcC,EAAQ,QACtB+P,EAAgB/P,EAAQ,QACxBkE,EAAclE,EAAQ,QACtBw6B,EAAsBx6B,EAAQ,QAC9BmF,EAAqBnF,EAAQ,QAC7BoS,EAAkBpS,EAAQ,QAY1By6B,EAAA,SAAAh5B,GAEA,SAAAg5B,IACA,cAAAh5B,KAAA4B,MAAA/C,KAAAgD,YAAAhD,KA0DA,OA5DAP,EAAA+B,UAAA24B,EAAAh5B,GAOAg5B,EAAAj6B,UAAAk6B,gBAAA,WACA,OAAA36B,EAAAkC,UAAA3B,UAAA,oBACA,IAAAoB,EACA,OAAA3B,EAAAmC,YAAA5B,KAAA,SAAA6B,GACA,OAAAA,EAAA8D,OACA,gBAAA3F,KAAAC,QAAA6Q,QAAA,CACArH,IAAA,oDACAG,KAAA/E,EAAAkM,kBAAA+G,UAEA,OAEA,OADA1W,EAAAS,EAAAgE,OACA,OAAAq0B,EAAAx5B,QAAAU,EAAAi5B,WAAAr6B,KAAAC,gBAWAk6B,EAAAj6B,UAAAo6B,iBAAA,SAAA/hB,EAAAgiB,GAEA,YADA,IAAAA,IAAuCA,GAAA,GACvC96B,EAAAkC,UAAA3B,UAAA,oBACA,IAAAoB,EAAAo5B,EAAA34B,EAAA6D,EACA,OAAAjG,EAAAmC,YAAA5B,KAAA,SAAAuR,GACA,OAAAA,EAAA5L,OACA,gBAAA3F,KAAAC,QAAA6Q,QAAA,CACArH,IAAA,+CAAAqI,EAAAjR,cAAA0X,GAAA,WACA3O,KAAA/E,EAAAkM,kBAAA+G,UAEA,OAGA,OAFA1W,EAAAmQ,EAAA1L,OACA20B,EAAA,IAAAN,EAAAx5B,QAAAU,EAAAi5B,WAAAr6B,KAAAC,SACAs6B,GACA70B,GAAA7D,EAAA24B,GAAA5Q,OACA,GAAA5pB,KAAAo6B,oBAFA,MAGA,gBAAA10B,EAAA3C,MAAAlB,EAAA,CAAA0P,EAAA1L,UACA,gBAAA20B,SAKA/6B,EAAAkB,WAAA,CACAiD,EAAAW,OAAA,OACA41B,EAAAj6B,UAAA,wBACAT,EAAAkB,WAAA,CACAiD,EAAAW,OAAA,OACA41B,EAAAj6B,UAAA,yBACAi6B,EAAA16B,EAAAkB,WAAA,CACAiD,EAAAY,WACA21B,GACAA,EA7DA,CA8DC1qB,EAAA/O,SACDnB,EAAAmB,QAAAy5B,qCCjFA96B,OAAAC,eAAAC,EAAA,cAA8CC,OAAA,IAC9C,IAAAC,EAAcC,EAAQ,QACtBkD,EAAqBlD,EAAQ,QAC7BmT,EAAgBnT,EAAQ,QAIxBg6B,EAAA,SAAAv4B,GAEA,SAAAu4B,IACA,cAAAv4B,KAAA4B,MAAA/C,KAAAgD,YAAAhD,KAYA,OAdAP,EAAA+B,UAAAk4B,EAAAv4B,GAIA9B,OAAAC,eAAAo6B,EAAAx5B,UAAA,WAIAC,IAAA,WACA,WAAA0S,EAAAnS,QAAAV,KAAAF,MAAAyY,QAAAvY,KAAAC,UAEAK,YAAA,EACAC,cAAA,IAEAm5B,EAfA,CAgBC92B,EAAAlC,SACDnB,EAAAmB,QAAAg5B,qCCxBAr6B,OAAAC,eAAAC,EAAA,cAA8CC,OAAA,IAC9C,IAAAC,EAAcC,EAAQ,QACtBE,EAAsBF,EAAQ,QAC9BmT,EAAgBnT,EAAQ,SAKxB,SAAAu5B,GAIAA,EAAA,eAIAA,EAAA,uBAIAA,EAAA,iBAIAA,EAAA,cAhBA,CAiBC15B,EAAA05B,aAAA15B,EAAA05B,WAAA,KAID,IAAAD,EAAA,WAEA,SAAAA,EAAAl5B,EAAAC,GACAC,KAAAF,QACAE,KAAAC,QAAAF,EAiHA,OA/GAV,OAAAC,eAAA05B,EAAA94B,UAAA,MAIAC,IAAA,WACA,OAAAH,KAAAF,MAAAiZ,KAEAzY,YAAA,EACAC,cAAA,IAEAlB,OAAAC,eAAA05B,EAAA94B,UAAA,QAIAC,IAAA,WACA,OAAAH,KAAAF,MAAA0iB,MAEAliB,YAAA,EACAC,cAAA,IAEAlB,OAAAC,eAAA05B,EAAA94B,UAAA,WAIAC,IAAA,WACA,OAAAH,KAAAF,MAAA26B,SAEAn6B,YAAA,EACAC,cAAA,IAEAlB,OAAAC,eAAA05B,EAAA94B,UAAA,eAIAC,IAAA,WACA,OAAAH,KAAAF,MAAA46B,cAEAp6B,YAAA,EACAC,cAAA,IAEAlB,OAAAC,eAAA05B,EAAA94B,UAAA,cAIAC,IAAA,WACA,OAAAH,KAAAF,MAAA66B,aAEAr6B,YAAA,EACAC,cAAA,IAEAlB,OAAAC,eAAA05B,EAAA94B,UAAA,SAIAC,IAAA,WACA,OAAAH,KAAAF,MAAA86B,OAEAt6B,YAAA,EACAC,cAAA,IAEAlB,OAAAC,eAAA05B,EAAA94B,UAAA,aAIAC,IAAA,WACA,WAAAuC,KAAA1C,KAAAF,MAAA4E,aAEApE,YAAA,EACAC,cAAA,IAEAlB,OAAAC,eAAA05B,EAAA94B,UAAA,cAIAC,IAAA,WACA,OAAAH,KAAAF,MAAA+6B,aAEAv6B,YAAA,EACAC,cAAA,IAEAlB,OAAAC,eAAA05B,EAAA94B,UAAA,QAIAC,IAAA,WACA,OAAAH,KAAAF,MAAAg7B,aAEAx6B,YAAA,EACAC,cAAA,IAOAy4B,EAAA94B,UAAA66B,cAAA,SAAAC,GACA,OAAAh7B,KAAAF,MAAAm7B,QAAAD,IAEA37B,OAAAC,eAAA05B,EAAA94B,UAAA,WAIAC,IAAA,WACA,WAAA0S,EAAAnS,QAAAV,KAAAF,MAAAyY,QAAAvY,KAAAC,UAEAK,YAAA,EACAC,cAAA,IAEAd,EAAAkB,WAAA,CACAf,EAAAgB,eACAo4B,EAAA94B,UAAA,kBACA84B,EArHA,GAuHAz5B,EAAAmB,QAAAs4B,qCCjJA,SAAAp4B,EAAAggB,EAAAvR,GAGAhQ,OAAAC,eAAAshB,EAAAvR,EAAA,CACAlP,IAAA,aAIAkI,IAAA,SAAAkY,GAEAlhB,OAAAC,eAAAU,KAAAqP,EAAA,CACA7P,MAAA+gB,EACA7Z,UAAA,EACApG,YAAA,KAGAA,YAAA,IAnBAjB,OAAAC,eAAAC,EAAA,cAA8CC,OAAA,IAsB9CD,EAAAqB,mDCtBAvB,OAAAC,eAAAC,EAAA,cAA8CC,OAAA,IAI9C,IAAAs5B,EAAA,WAEA,SAAAA,EAAAh5B,GACAE,KAAAF,QACAE,KAAAy4B,gBAAA,IAAA/1B,KAmEA,OAjEArD,OAAAC,eAAAw5B,EAAA54B,UAAA,YAIAC,IAAA,WACA,OAAAH,KAAAF,MAAA0W,MAAAxW,KAAAF,MAAA0X,UAAA,MAEAlX,YAAA,EACAC,cAAA,IAEAlB,OAAAC,eAAAw5B,EAAA54B,UAAA,UAIAC,IAAA,WACA,OAAAH,KAAAF,MAAA0W,MAAAxW,KAAAF,MAAA0D,QAAA,MAEAlD,YAAA,EACAC,cAAA,IAEAlB,OAAAC,eAAAw5B,EAAA54B,UAAA,YAIAC,IAAA,WACA,OAAAH,KAAAF,MAAA0W,MAAAxW,KAAAF,MAAA2D,UAAA,MAEAnD,YAAA,EACAC,cAAA,IAEAlB,OAAAC,eAAAw5B,EAAA54B,UAAA,UAIAC,IAAA,WACA,OAAAH,KAAAF,MAAA0W,MAAAxW,KAAAF,MAAAo7B,cAAA91B,OAAA,IAEA9E,YAAA,EACAC,cAAA,IAEAlB,OAAAC,eAAAw5B,EAAA54B,UAAA,SAIAC,IAAA,WACA,OAAAH,KAAAF,MAAA0W,OAEAlW,YAAA,EACAC,cAAA,IAEAlB,OAAAC,eAAAw5B,EAAA54B,UAAA,cAMAC,IAAA,WACA,OAAAH,KAAAF,MAAA0W,OAAAxW,KAAAF,MAAA44B,WAGA,IAAAh2B,KAAA1C,KAAAy4B,gBAAAE,UAAA,IAAA34B,KAAAF,MAAA44B,YAFA,MAIAp4B,YAAA,EACAC,cAAA,IAEAu4B,EAvEA,GAyEAv5B,EAAAmB,QAAAo4B,qCC7EAz5B,OAAAC,eAAAC,EAAA,cAA8CC,OAAA,IAC9C,IAAAC,EAAcC,EAAQ,QACtB+P,EAAgB/P,EAAQ,QACxBmF,EAAqBnF,EAAQ,QAC7Bk6B,EAA6Bl6B,EAAQ,QAYrCy7B,EAAA,SAAAh6B,GAEA,SAAAg6B,IACA,cAAAh6B,KAAA4B,MAAA/C,KAAAgD,YAAAhD,KAiCA,OAnCAP,EAAA+B,UAAA25B,EAAAh6B,GASAg6B,EAAAj7B,UAAAk7B,eAAA,SAAAzqB,GAEA,YADA,IAAAA,IAAgCA,EAAA,IAChClR,EAAAkC,UAAA3B,UAAA,oBACA,IAAA6B,EAAAw5B,EAAA31B,EAAAgN,EAAAtB,EAAAkqB,EAAAjvB,EACA,OAAA5M,EAAAmC,YAAA5B,KAAA,SAAAuR,GACA,OAAAA,EAAA5L,OACA,OAEA,OADA9D,EAAA8O,EAAA0qB,aAAA,IAAAx5B,EAAA,GAAAA,EAAA6D,EAAAiL,EAAA+B,cAAA,IAAAhN,EAAA,MAAAA,EAAA0L,EAAAT,EAAAS,UAAAkqB,EAAA3qB,EAAA2qB,cACA,GAAAt7B,KAAAC,QAAA6Q,QAAA,CACAlH,KAAA/E,EAAAkM,kBAAAC,MACAvH,IAAA,mBACAwH,MAAA,YACAC,MAAA,CACAmqB,QAAAxzB,WACA6K,SACAlB,WAAAJ,IAAA6K,mBAAAxV,EACAjD,QAAA83B,MAGA,OAEA,OADAjvB,EAAAkF,EAAA1L,OACA,OAAA+zB,EAAAl5B,QAAA2L,EAAArM,KAAAC,gBAKAk7B,EApCA,CAqCC1rB,EAAA/O,SACDnB,EAAAmB,QAAAy6B,qCCtDA97B,OAAAC,eAAAC,EAAA,cAA8CC,OAAA,IAC9C,IAAAC,EAAcC,EAAQ,QACtBE,EAAsBF,EAAQ,QAI9Bq6B,EAAA,WAEA,SAAAA,EAAAj6B,EAAAC,GACAC,KAAAF,QACAE,KAAAC,QAAAF,EAuDA,OArDAV,OAAAC,eAAAy6B,EAAA75B,UAAA,UAIAC,IAAA,WACA,OAAAH,KAAAF,MAAA0D,SAEAlD,YAAA,EACAC,cAAA,IAEAlB,OAAAC,eAAAy6B,EAAA75B,UAAA,mBAIAC,IAAA,WACA,OAAAH,KAAAF,MAAA2D,WAEAnD,YAAA,EACAC,cAAA,IAEAlB,OAAAC,eAAAy6B,EAAA75B,UAAA,QAIAC,IAAA,WACA,OAAAH,KAAAF,MAAAy7B,MAEAj7B,YAAA,EACAC,cAAA,IAEAlB,OAAAC,eAAAy6B,EAAA75B,UAAA,UAIAC,IAAA,WACA,OAAAH,KAAAF,MAAA07B,OAEAl7B,YAAA,EACAC,cAAA,IAKAw5B,EAAA75B,UAAAkC,QAAA,WACA,OAAA3C,EAAAkC,UAAA3B,UAAA,oBACA,OAAAP,EAAAmC,YAAA5B,KAAA,SAAA6B,GACA,SAAA7B,KAAAC,QAAA6B,MAAAO,MAAAC,YAAAtC,KAAAF,MAAA0D,eAIA/D,EAAAkB,WAAA,CACAf,EAAAgB,eACAm5B,EAAA75B,UAAA,kBACA65B,EA3DA,GA6DAx6B,EAAAmB,QAAAq5B,qCClEA,IAAA5xB,EAAA9I,OAAAa,UAAAkI,eACA0D,EAAAD,MAAAC,QAEA2vB,EAAA,WAEA,IADA,IAAAC,EAAA,GACAzuB,EAAA,EAAmBA,EAAA,MAASA,EAC5ByuB,EAAAhzB,KAAA,MAAAuE,EAAA,WAAAA,EAAApF,SAAA,KAAA2G,eAGA,OAAAktB,EANA,GASAC,EAAA,SAAAC,GACA,MAAAA,EAAAv2B,OAAA,GACA,IAAAw2B,EAAAD,EAAA3M,MACA3nB,EAAAu0B,EAAAv0B,IAAAu0B,EAAAC,MAEA,GAAAhwB,EAAAxE,GAAA,CAGA,IAFA,IAAAy0B,EAAA,GAEAzM,EAAA,EAA2BA,EAAAhoB,EAAAjC,SAAgBiqB,EAC3C,qBAAAhoB,EAAAgoB,IACAyM,EAAArzB,KAAApB,EAAAgoB,IAIAuM,EAAAv0B,IAAAu0B,EAAAC,MAAAC,KAKAC,EAAA,SAAAC,EAAA71B,GAEA,IADA,IAAAkB,EAAAlB,KAAAyrB,aAAAxyB,OAAAkH,OAAA,SACA0G,EAAA,EAAmBA,EAAAgvB,EAAA52B,SAAmB4H,EACtC,qBAAAgvB,EAAAhvB,KACA3F,EAAA2F,GAAAgvB,EAAAhvB,IAIA,OAAA3F,GAGAmsB,EAAA,SAAAA,EAAA7S,EAAAqb,EAAA71B,GACA,IAAA61B,EACA,OAAArb,EAGA,qBAAAqb,EAAA,CACA,GAAAnwB,EAAA8U,GACAA,EAAAlY,KAAAuzB,OACS,KAAArb,GAAA,kBAAAA,EAKT,OAAAA,EAAAqb,IAJA71B,MAAAyrB,cAAAzrB,EAAAirB,mBAAAlpB,EAAA5G,KAAAlC,OAAAa,UAAA+7B,MACArb,EAAAqb,IAAA,GAMA,OAAArb,EAGA,IAAAA,GAAA,kBAAAA,EACA,OAAAA,GAAAxJ,OAAA6kB,GAGA,IAAAC,EAAAtb,EAKA,OAJA9U,EAAA8U,KAAA9U,EAAAmwB,KACAC,EAAAF,EAAApb,EAAAxa,IAGA0F,EAAA8U,IAAA9U,EAAAmwB,IACAA,EAAA3zB,QAAA,SAAAuzB,EAAA5uB,GACA,GAAA9E,EAAA5G,KAAAqf,EAAA3T,GAAA,CACA,IAAAkvB,EAAAvb,EAAA3T,GACAkvB,GAAA,kBAAAA,GAAAN,GAAA,kBAAAA,EACAjb,EAAA3T,GAAAwmB,EAAA0I,EAAAN,EAAAz1B,GAEAwa,EAAAlY,KAAAmzB,QAGAjb,EAAA3T,GAAA4uB,IAGAjb,GAGAvhB,OAAAe,KAAA67B,GAAAzY,OAAA,SAAA4Y,EAAA/sB,GACA,IAAA7P,EAAAy8B,EAAA5sB,GAOA,OALAlH,EAAA5G,KAAA66B,EAAA/sB,GACA+sB,EAAA/sB,GAAAokB,EAAA2I,EAAA/sB,GAAA7P,EAAA4G,GAEAg2B,EAAA/sB,GAAA7P,EAEA48B,GACKF,IAGLhT,EAAA,SAAAtI,EAAAqb,GACA,OAAA58B,OAAAe,KAAA67B,GAAAzY,OAAA,SAAA4Y,EAAA/sB,GAEA,OADA+sB,EAAA/sB,GAAA4sB,EAAA5sB,GACA+sB,GACKxb,IAGL1S,EAAA,SAAA4jB,EAAAP,EAAAlV,GACA,IAAAggB,EAAAvK,EAAA/iB,QAAA,WACA,kBAAAsN,EAEA,OAAAggB,EAAAttB,QAAA,iBAAmDutB,UAGnD,IACA,OAAAttB,mBAAAqtB,GACK,MAAAp1B,GACL,OAAAo1B,IAIA7f,EAAA,SAAAsV,EAAAyK,EAAAlgB,GAGA,OAAAyV,EAAAzsB,OACA,OAAAysB,EAGA,IAAA0K,EAAA,kBAAA1K,IAAAvmB,OAAAumB,GAEA,kBAAAzV,EACA,OAAAogB,OAAAD,GAAAztB,QAAA,kBAAoD,SAAAgjB,GACpD,eAAApJ,SAAAoJ,EAAA1kB,MAAA,eAKA,IADA,IAAAqvB,EAAA,GACAzvB,EAAA,EAAmBA,EAAAuvB,EAAAn3B,SAAmB4H,EAAA,CACtC,IAAAygB,EAAA8O,EAAAG,WAAA1vB,GAGA,KAAAygB,GACA,KAAAA,GACA,KAAAA,GACA,MAAAA,GACAA,GAAA,IAAAA,GAAA,IACAA,GAAA,IAAAA,GAAA,IACAA,GAAA,IAAAA,GAAA,IAEAgP,GAAAF,EAAA3J,OAAA5lB,GAIAygB,EAAA,IACAgP,GAAAjB,EAAA/N,GAIAA,EAAA,KACAgP,GAAAjB,EAAA,IAAA/N,GAAA,GAAA+N,EAAA,OAAA/N,GAIAA,EAAA,OAAAA,GAAA,MACAgP,GAAAjB,EAAA,IAAA/N,GAAA,IAAA+N,EAAA,IAAA/N,GAAA,MAAA+N,EAAA,OAAA/N,IAIAzgB,GAAA,EACAygB,EAAA,aAAAA,IAAA,QAAA8O,EAAAG,WAAA1vB,IACAyvB,GAAAjB,EAAA,IAAA/N,GAAA,IACA+N,EAAA,IAAA/N,GAAA,OACA+N,EAAA,IAAA/N,GAAA,MACA+N,EAAA,OAAA/N,IAGA,OAAAgP,GAGAhJ,EAAA,SAAAl0B,GAIA,IAHA,IAAAo8B,EAAA,EAAkBt0B,IAAA,CAAO4nB,EAAA1vB,GAAWs8B,KAAA,MACpCc,EAAA,GAEA3vB,EAAA,EAAmBA,EAAA2uB,EAAAv2B,SAAkB4H,EAKrC,IAJA,IAAA4uB,EAAAD,EAAA3uB,GACA3F,EAAAu0B,EAAAv0B,IAAAu0B,EAAAC,MAEA17B,EAAAf,OAAAe,KAAAkH,GACAgoB,EAAA,EAAuBA,EAAAlvB,EAAAiF,SAAiBiqB,EAAA,CACxC,IAAAjgB,EAAAjP,EAAAkvB,GACA/O,EAAAjZ,EAAA+H,GACA,kBAAAkR,GAAA,OAAAA,IAAA,IAAAqc,EAAAh1B,QAAA2Y,KACAqb,EAAAlzB,KAAA,CAA4BpB,MAAAw0B,KAAAzsB,IAC5ButB,EAAAl0B,KAAA6X,IAOA,OAFAob,EAAAC,GAEAp8B,GAGA8zB,EAAA,SAAAhsB,GACA,0BAAAjI,OAAAa,UAAA2H,SAAAtG,KAAA+F,IAGA6V,EAAA,SAAA7V,GACA,SAAAA,GAAA,kBAAAA,OAIAA,EAAAkgB,aAAAlgB,EAAAkgB,YAAArK,UAAA7V,EAAAkgB,YAAArK,SAAA7V,KAGAirB,EAAA,SAAA9M,EAAAC,GACA,SAAAtO,OAAAqO,EAAAC,IAGAlW,EAAAjQ,QAAA,CACAy8B,gBACA9S,SACAqJ,UACAmB,UACAxlB,SACAsO,SACAW,WACAmW,WACAG,4CCnOAp0B,OAAAC,eAAAC,EAAA,cAA8CC,OAAA,IAC9C,IAAAC,EAAcC,EAAQ,QACtBmT,EAAgBnT,EAAQ,QACxBE,EAAsBF,EAAQ,QAI9B85B,EAAA,WAEA,SAAAA,EAAA15B,EAAAC,GACAC,KAAAF,QACAE,KAAAC,QAAAF,EAmCA,OAjCAV,OAAAC,eAAAk6B,EAAAt5B,UAAA,cAIAC,IAAA,WACA,WAAAuC,KAAA1C,KAAAF,MAAA4E,aAEApE,YAAA,EACAC,cAAA,IAEAlB,OAAAC,eAAAk6B,EAAAt5B,UAAA,oBAIAC,IAAA,WACA,OAAAH,KAAAF,MAAAof,eAEA5e,YAAA,EACAC,cAAA,IAEAlB,OAAAC,eAAAk6B,EAAAt5B,UAAA,WAIAC,IAAA,WACA,WAAA0S,EAAAnS,QAAAV,KAAAF,MAAAyY,QAAAvY,KAAAC,UAEAK,YAAA,EACAC,cAAA,IAEAd,EAAAkB,WAAA,CACAf,EAAAgB,eACA44B,EAAAt5B,UAAA,kBACAs5B,EAvCA,GAyCAj6B,EAAAmB,QAAA84B,qCChDAn6B,OAAAC,eAAAC,EAAA,cAA8CC,OAAA,IAC9C,IAAAC,EAAcC,EAAQ,QACtB+P,EAAgB/P,EAAQ,QACxBmF,EAAqBnF,EAAQ,QAC7Bu6B,EAAkBv6B,EAAQ,QAC1BiQ,EAA8BjQ,EAAQ,QAYtCm9B,EAAA,SAAA17B,GAEA,SAAA07B,IACA,cAAA17B,KAAA4B,MAAA/C,KAAAgD,YAAAhD,KA2HA,OA7HAP,EAAA+B,UAAAq7B,EAAA17B,GASA07B,EAAA38B,UAAA48B,cAAA,SAAA7sB,GACA,OAAAxQ,EAAAkC,UAAA3B,UAAA,oBACA,OAAAP,EAAAmC,YAAA5B,KAAA,SAAA6B,GACA,SAAA7B,KAAA+8B,UAAA,KAAA9sB,SASA4sB,EAAA38B,UAAA88B,gBAAA,SAAA9W,GACA,OAAAzmB,EAAAkC,UAAA3B,UAAA,oBACA,OAAAP,EAAAmC,YAAA5B,KAAA,SAAA6B,GACA,SAAA7B,KAAA+8B,UAAA,OAAA7W,SASA2W,EAAA38B,UAAAyhB,YAAA,SAAA5gB,GACA,OAAAtB,EAAAkC,UAAA3B,UAAA,oBACA,IAAA0hB,EACA,OAAAjiB,EAAAmC,YAAA5B,KAAA,SAAA6B,GACA,OAAAA,EAAA8D,OACA,gBAAA3F,KAAA+8B,UAAA,KAAAh8B,IACA,OAEA,OADA2gB,EAAA7f,EAAAgE,OACA,GAAA6b,EAAArc,OAAAqc,EAAA,eAUAmb,EAAA38B,UAAA+8B,cAAA,SAAAx8B,GACA,OAAAhB,EAAAkC,UAAA3B,UAAA,oBACA,IAAA0hB,EACA,OAAAjiB,EAAAmC,YAAA5B,KAAA,SAAA6B,GACA,OAAAA,EAAA8D,OACA,gBAAA3F,KAAA+8B,UAAA,OAAAt8B,IACA,OAEA,OADAihB,EAAA7f,EAAAgE,OACA,GAAA6b,EAAArc,OAAAqc,EAAA,eAQAmb,EAAA38B,UAAAg9B,YAAA,SAAAtrB,GAEA,YADA,IAAAA,IAAoCA,EAAA,IACpCnS,EAAAkC,UAAA3B,UAAA,oBACA,IAAAoiB,EAAAC,EAAA/Q,EAAAjF,EACA/K,EAAAtB,KACA,OAAAP,EAAAmC,YAAA5B,KAAA,SAAA6B,GACA,OAAAA,EAAA8D,OACA,OAEA,OADAyc,EAAAxQ,EAAAwQ,MAAAC,EAAAzQ,EAAAyQ,OAAA/Q,EAAAM,EAAAN,MACA,GAAAtR,KAAAC,QAAA6Q,QAAA,CACAlH,KAAA/E,EAAAkM,kBAAAC,MACAvH,IAAA,YACAyH,MAAA,CACAkR,QACAC,SACA3Q,MAAAJ,MAGA,OAEA,OADAjF,EAAAxK,EAAAgE,OACA,IACAzE,KAAAiL,EAAAjL,KAAA0C,IAAA,SAAA1C,GAAuE,WAAA64B,EAAAv5B,QAAAU,EAAAE,EAAArB,WACvE0R,OAAAtF,EAAAuF,YAAAvF,EAAAuF,WAAAD,eASAkrB,EAAA38B,UAAAi9B,qBAAA,WACA,IAAA77B,EAAAtB,KACA,WAAA2P,EAAAjP,QAAA,CACA+I,IAAA,aACSzJ,KAAAC,QAAA,SAAAmB,GAAiC,WAAA64B,EAAAv5B,QAAAU,EAAAE,EAAArB,YAE1C48B,EAAA38B,UAAA68B,UAAA,SAAA/sB,EAAAuC,GACA,OAAA9S,EAAAkC,UAAA3B,UAAA,oBACA,IAAAqM,EACAxK,EACAP,EAAAtB,KACA,OAAAP,EAAAmC,YAAA5B,KAAA,SAAA0F,GACA,OAAAA,EAAAC,OACA,gBAAA3F,KAAAC,QAAA6Q,QAAA,CACAlH,KAAA/E,EAAAkM,kBAAAC,MACAvH,IAAA,QACAyH,OAAArP,EAAA,GACAA,EAAAmO,GAAAuC,EACA1Q,MAEA,OAEA,OADAwK,EAAA3G,EAAAG,OACA,GAAAwG,EAAAjL,KAAA0C,IAAA,SAAAic,GAAgF,WAAAka,EAAAv5B,QAAAqf,EAAAze,EAAArB,kBAKhF48B,EA9HA,CA+HCptB,EAAA/O,SACDnB,EAAAmB,QAAAm8B,qCCjJAx9B,OAAAC,eAAAC,EAAA,cAA8CC,OAAA,IAC9C,IAAAC,EAAcC,EAAQ,QACtBE,EAAsBF,EAAQ,QAE9B09B,EAAA,WACA,SAAAA,EAAAr9B,GACAC,KAAAC,QAAAF,EAKA,OAHAN,EAAAkB,WAAA,CACAf,EAAAgB,eACAw8B,EAAAl9B,UAAA,kBACAk9B,EAPA,GASA79B,EAAAmB,QAAA08B,qCCbA/9B,OAAAC,eAAAC,EAAA,cAA8CC,OAAA,IAC9C,IAAAC,EAAcC,EAAQ,QACtBiQ,EAA8BjQ,EAAQ,QAItC29B,EAAA,SAAAl8B,GAEA,SAAAk8B,IACA,cAAAl8B,KAAA4B,MAAA/C,KAAAgD,YAAAhD,KAwBA,OA1BAP,EAAA+B,UAAA67B,EAAAl8B,GAOAk8B,EAAAn9B,UAAAo9B,cAAA,WACA,OAAA79B,EAAAkC,UAAA3B,UAAA,oBACA,IAAAoB,EAAAS,EACA,OAAApC,EAAAmC,YAAA5B,KAAA,SAAA0F,GACA,OAAAA,EAAAC,OACA,OAEA,OADA9D,EAAA7B,KAAAu9B,aACA17B,EAAA,MACA,GAAA7B,KAAAw9B,WAAA,CAA8DtsB,MAAA,CAASQ,MAAA,IAAA0Q,WAAA3b,MACvE,OACA5E,EAAA6D,EAAAG,OACAH,EAAAC,MAAA,EACA,OAEA,OADAvE,EAAAS,EACA,GAAAT,EAAA4vB,aAKAqM,EA3BA,CA4BC1tB,EAAAjP,SACDnB,EAAAmB,QAAA28B,qCCnCAh+B,OAAAC,eAAAC,EAAA,cAA8CC,OAAA,IAC9C,IAAAC,EAAcC,EAAQ,QACtBkE,EAAclE,EAAQ,QACtB+P,EAAgB/P,EAAQ,QACxBy5B,EAAuBz5B,EAAQ,QAC/BmD,EAAanD,EAAQ,QACrBmlB,EAAoBnlB,EAAQ,QAC5BoS,EAAkBpS,EAAQ,QAC1Bq5B,EAAqBr5B,EAAQ,QAC7B+5B,EAAyB/5B,EAAQ,QACjC6Z,EAAmC7Z,EAAQ,QAC3C65B,EAAmB75B,EAAQ,QAC3B25B,EAAkB35B,EAAQ,QAC1BklB,EAA6BllB,EAAQ,QACrCkV,EAA4BlV,EAAQ,QAYpC+9B,EAAA,SAAAt8B,GAEA,SAAAs8B,IACA,IAAAn8B,EAAA,OAAAH,KAAA4B,MAAA/C,KAAAgD,YAAAhD,KAEA,OADAsB,EAAAo8B,iBAAA,IAAA9d,IACAte,EAyaA,OA7aA7B,EAAA+B,UAAAi8B,EAAAt8B,GASAs8B,EAAAv9B,UAAAya,MAAA,WACA,OAAAlb,EAAAkC,UAAA3B,UAAA,oBACA,IAAA6B,EACA,OAAApC,EAAAmC,YAAA5B,KAAA,SAAA0F,GACA,OAAAA,EAAAC,OACA,OAEA,OADA9D,EAAAs3B,EAAAz4B,QAAAyW,KACA,GAAAnX,KAAAC,QAAA6Q,QAAA,CAAmErH,IAAA,OAAAwH,MAAA,eACnE,oBAAApP,EAAAkB,MAAAo2B,EAAAz4B,QAAA,QAAAgF,EAAAG,OAAA7F,KAAAC,kBAUAw9B,EAAAv9B,UAAAkC,QAAA,SAAAsB,GACA,OAAAjE,EAAAkC,UAAA3B,UAAA,oBACA,IAAAoxB,EACA,OAAA3xB,EAAAmC,YAAA5B,KAAA,SAAA6B,GACA,OAAAA,EAAA8D,OACA,gBAAA3F,KAAAC,QAAA6Q,QAAA,CAAuErH,IAAA,SAAAqI,EAAAjR,cAAA6C,MACvE,OAEA,GADA0tB,EAAAvvB,EAAAgE,QACAurB,EACA,UAAAxM,EAAAlkB,QAAA,oCAEA,aAAAmC,EAAAnC,QAAA0wB,EAAApxB,KAAAC,gBAUAw9B,EAAAv9B,UAAA2wB,cAAA,SAAAnO,GACA,OAAAjjB,EAAAkC,UAAA3B,UAAA,oBACA,IAAAqC,EAAAvB,EACA,OAAArB,EAAAmC,YAAA5B,KAAA,SAAA6B,GACA,OAAAA,EAAA8D,OACA,OAGA,OADA3F,KAAA29B,kBACA39B,KAAA09B,iBAAAv1B,IAAAua,GACA,GAAA1iB,KAAA09B,iBAAAv9B,IAAAuiB,GAAAljB,OAEA,GAAAQ,KAAAC,QAAA6Q,QAAA,CAAmErH,IAAA,QAAAyH,MAAA,CAAuByI,MAAA+I,MAC1F,OAEA,OADArgB,EAAAR,EAAAgE,OAAAxD,MACA,IAAAA,EAAAgD,OACA,UAEAvE,EAAA,IAAA+B,EAAAnC,QAAA2B,EAAA,GAAArC,KAAAC,SACAD,KAAA09B,iBAAAr1B,IAAAqa,EAAA,CACAljB,MAAAsB,EACAof,QAAAxd,KAAAyd,MAAA,OAEA,GAAArf,UAUA28B,EAAAv9B,UAAAwwB,gBAAA,SAAAC,GACA,OAAAlxB,EAAAkC,UAAA3B,UAAA,oBACA,IAAA49B,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA57B,EACAf,EAAAtB,KACA,OAAAP,EAAAmC,YAAA5B,KAAA,SAAA6B,GACA,OAAAA,EAAA8D,OACA,OAUA,OATA3F,KAAA29B,kBACAhN,IAAA7sB,IAAA,SAAArD,GAAmE,OAAAA,EAAAgL,gBACnEmyB,EAAA/xB,MAAAqyB,KAAAl+B,KAAA09B,iBAAA70B,WAAA3E,OAAA,SAAArC,GACA,IAAA6D,EAAAjG,EAAA+oB,OAAA3mB,EAAA,GAAAwN,EAAA3J,EAAA,GACA,OAAAirB,EAAAhM,SAAAtV,KAEAwuB,EAAAhZ,EAAA0E,gBAAAqU,GACAE,EAAAjZ,EAAAkE,UAAA8U,EAAA,SAAA9d,GAA8F,OAAAA,EAAAvgB,QAC9Fu+B,EAAApN,EAAAzsB,OAAA,SAAAzD,GAAoE,QAAAA,KAAAq9B,KACpEC,EAAA14B,OAGA,GAAArF,KAAAC,QAAA6Q,QAAA,CAAmErH,IAAA,QAAAyH,MAAA,CAAuByI,MAAAokB,EAAA5wB,KAAA,SAF1F,GAAA2wB,GAGA,OAQA,OAPAE,EAAAn8B,EAAAgE,OACAo4B,EAAAD,EAAA37B,MAAAyB,IAAA,SAAA1C,GAAwE,WAAAyB,EAAAnC,QAAAU,EAAAE,EAAArB,WACxEg+B,EAAA31B,QAAA,SAAAxH,GAA0D,OAAAQ,EAAAo8B,iBAAAr1B,IAAAvH,EAAAL,KAAA,CAC1DjB,MAAAsB,EACAof,QAAAxd,KAAAyd,MAAA,SAEA9d,EAAAwiB,EAAAE,QAAAkZ,EAAA,QACA,GAAAx+B,EAAAsQ,SAAA,GAAiE+tB,EAAAz7B,UAUjEo7B,EAAAv9B,UAAAi+B,cAAA,SAAAr9B,GACA,OAAArB,EAAAkC,UAAA3B,UAAA,oBACA,IAAA0D,EAAAtC,EACA,OAAA3B,EAAAmC,YAAA5B,KAAA,SAAA6B,GACA,OAAAA,EAAA8D,OACA,OAEA,OADAjC,EAAAoO,EAAAjR,cAAAC,GACA,GAAAd,KAAAC,QAAA6Q,QAAA,CAAmErH,IAAA,SAAA/F,EAAA,UAAAuN,MAAA,wBACnE,OAEA,OADA7P,EAAAS,EAAAgE,OACA,OAAAkzB,EAAAr4B,QAAAU,EAAAg9B,sBAWAX,EAAAv9B,UAAAm+B,oBAAA,SAAAv9B,EAAAw9B,GACA,OAAA7+B,EAAAkC,UAAA3B,UAAA,oBACA,IAAA0D,EAAAkN,EAAA/O,EAAAsZ,EACA,OAAA1b,EAAAmC,YAAA5B,KAAA,SAAA0F,GACA,OAAAA,EAAAC,OACA,OACAjC,EAAAoO,EAAAjR,cAAAC,GACA8P,EAAAkB,EAAAjR,cAAAy9B,GACA54B,EAAAC,MAAA,EACA,OAGA,OAFAD,EAAA0V,KAAA1S,KAAA,UACA7G,EAAA43B,EAAA/4B,QAAAyW,KACA,GAAAnX,KAAAC,QAAA6Q,QAAA,CACArH,IAAA,SAAA/F,EAAA,kBAAAkN,EACAK,MAAA,wBAEA,oBAAApP,EAAAkB,MAAA02B,EAAA/4B,QAAA,QAAAgF,EAAAG,OACA7F,KAAAC,YACA,OAEA,GADAkb,EAAAzV,EAAAG,OACAsV,aAAAvG,EAAAlU,QAAA,CACA,SAAAya,EAAAkI,WACA,eAEA,SAAAlI,EAAAkI,WACA,UAAA9J,EAAA7Y,QAAAkQ,GAGA,MAAAuK,EACA,uBAcAsiB,EAAAv9B,UAAAq+B,oBAAA,SAAAz9B,EAAAoS,EAAA5B,EAAAqB,EAAAwhB,GAEA,YADA,IAAA7iB,IAA+BA,EAAA,IAC/B7R,EAAAkC,UAAA3B,UAAA,oBACA,IAAA0D,EAAAwN,EAAA9P,EACAE,EAAAtB,KACA,OAAAP,EAAAmC,YAAA5B,KAAA,SAAA6B,GACA,OAAAA,EAAA8D,OACA,OAaA,OAZAjC,EAAAoO,EAAAjR,cAAAC,GACAoQ,EAAA,GACAgC,IACAhC,EAAAiC,SAAAD,EAAA,GAAA5B,GAAAzJ,YAEAqJ,EAAAI,QAAAzJ,WACA8K,IACAzB,EAAAstB,OAAA7rB,GAEAwhB,IACAjjB,EAAA8a,UAAAmI,GAEA,GAAAn0B,KAAAC,QAAA6Q,QAAA,CACArH,IAAA,SAAA/F,EAAA,oBAAAwN,WAEA,OAEA,OADA9P,EAAAS,EAAAgE,OACA,GAAAzE,EAAAmZ,QAAAzW,IAAA,SAAA0W,GAAkF,WAAA+e,EAAA74B,QAAA8Z,EAAAlZ,EAAArB,kBAWlFw9B,EAAAv9B,UAAAu+B,mBAAA,SAAA39B,EAAAyX,GACA,OAAA9Y,EAAAkC,UAAA3B,UAAA,oBACA,IAAA0D,EAAAkN,EAAAxP,EAAAwmB,EACA,OAAAnoB,EAAAmC,YAAA5B,KAAA,SAAA6B,GACA,OAAAA,EAAA8D,OACA,OACAjC,EAAAoO,EAAAjR,cAAAC,GACA8P,EAAAkB,EAAAjR,cAAA0X,GACA1W,EAAA8D,MAAA,EACA,OAEA,OADA9D,EAAAuZ,KAAA1S,KAAA,UACA,GAAA1I,KAAAC,QAAA6Q,QAAA,CAAmErH,IAAA,SAAA/F,EAAA,qBAAAkN,KACnE,OAEA,OADAxP,EAAAS,EAAAgE,OACA,OAAA0zB,EAAA74B,QAAAU,EAAApB,KAAAC,UACA,OAEA,GADA2nB,EAAA/lB,EAAAgE,OACA+hB,aAAAhT,EAAAlU,SACA,MAAAknB,EAAAvE,WACA,eAGA,MAAAuE,EACA,uBAYA6V,EAAAv9B,UAAA0a,cAAA,SAAA9Z,EAAAyX,EAAA2G,GACA,OAAAzf,EAAAkC,UAAA3B,UAAA,oBACA,IAAA0D,EAAAkN,EAAAxP,EACA,OAAA3B,EAAAmC,YAAA5B,KAAA,SAAA6B,GACA,OAAAA,EAAA8D,OACA,OAGA,OAFAjC,EAAAoO,EAAAjR,cAAAC,GACA8P,EAAAkB,EAAAjR,cAAA0X,GACA,GAAAvY,KAAAC,QAAA6Q,QAAA,CACArH,IAAA,SAAA/F,EAAA,qBAAAkN,EACA5F,OAAA,MACAiG,MAAA,oBACA/H,KAAA,CAAuCgW,cAAAwf,QAAAxf,GAAArX,eAEvC,OAEA,OADAzG,EAAAS,EAAAgE,OACA,OAAA0zB,EAAA74B,QAAAU,EAAApB,KAAAC,gBAWAw9B,EAAAv9B,UAAA4a,gBAAA,SAAAha,EAAAyX,GACA,OAAA9Y,EAAAkC,UAAA3B,UAAA,oBACA,IAAA0D,EAAAkN,EACA,OAAAnR,EAAAmC,YAAA5B,KAAA,SAAA6B,GACA,OAAAA,EAAA8D,OACA,OAGA,OAFAjC,EAAAoO,EAAAjR,cAAAC,GACA8P,EAAAkB,EAAAjR,cAAA0X,GACA,GAAAvY,KAAAC,QAAA6Q,QAAA,CACArH,IAAA,SAAA/F,EAAA,qBAAAkN,EACAK,MAAA,oBACAjG,OAAA,YAEA,OAEA,OADAnJ,EAAAgE,OACA,UAYA43B,EAAAv9B,UAAAy+B,gBAAA,SAAA79B,EAAAoS,EAAA5B,GAEA,YADA,IAAAA,IAA+BA,EAAA,IAC/B7R,EAAAkC,UAAA3B,UAAA,oBACA,IAAA0D,EAAAwN,EAAA9P,EACAE,EAAAtB,KACA,OAAAP,EAAAmC,YAAA5B,KAAA,SAAA6B,GACA,OAAAA,EAAA8D,OACA,OAMA,OALAjC,EAAAoO,EAAAjR,cAAAC,GACAoQ,EAAA,CAAiCI,QAAAzJ,YACjCqL,IACAhC,EAAAiC,SAAAD,EAAA,GAAA5B,GAAAzJ,YAEA,GAAA7H,KAAAC,QAAA6Q,QAAA,CACArH,IAAA,SAAA/F,EAAA,UAAAwN,QAAAD,MAAA,sBAEA,OAEA,OADA7P,EAAAS,EAAAgE,OACA,GAAAzE,EAAAw9B,OAAA96B,IAAA,SAAA+6B,GAAgF,WAAAxF,EAAA34B,QAAAm+B,EAAAv9B,EAAArB,kBAWhFw9B,EAAAv9B,UAAA+jB,UAAA,SAAAnjB,EAAAojB,GACA,OAAAzkB,EAAAkC,UAAA3B,UAAA,oBACA,IAAA0D,EAAAo7B,EAAA19B,EACA,OAAA3B,EAAAmC,YAAA5B,KAAA,SAAA6B,GACA,OAAAA,EAAA8D,OACA,OAGA,OAFAjC,EAAAoO,EAAAjR,cAAAC,GACAg+B,EAAAhtB,EAAAjR,cAAAqjB,GACA,GAAAlkB,KAAAC,QAAA6Q,QAAA,CACArH,IAAA,SAAA/F,EAAA,WAAAo7B,EACA9zB,OAAA,MACAiG,MAAA,sBAEA,OAEA,OADA7P,EAAAS,EAAAgE,OACA,OAAAwzB,EAAA34B,QAAAU,EAAApB,KAAAC,gBAWAw9B,EAAAv9B,UAAAikB,YAAA,SAAArjB,EAAAsjB,GACA,OAAA3kB,EAAAkC,UAAA3B,UAAA,oBACA,IAAA0D,EAAAq7B,EACA,OAAAt/B,EAAAmC,YAAA5B,KAAA,SAAA6B,GACA,OAAAA,EAAA8D,OACA,OAGA,OAFAjC,EAAAoO,EAAAjR,cAAAC,GACAi+B,EAAAjtB,EAAAjR,cAAAujB,GACA,GAAApkB,KAAAC,QAAA6Q,QAAA,CACArH,IAAA,SAAA/F,EAAA,WAAAq7B,EACA/zB,OAAA,SACAiG,MAAA,sBAEA,OAEA,OADApP,EAAAgE,OACA,UAKA43B,EAAAv9B,UAAAy9B,gBAAA,WACA,IAAAr8B,EAAAtB,KACAmgB,EAAAzd,KAAAyd,MACAngB,KAAA09B,iBAAAp1B,QAAA,SAAAiY,EAAAlR,GACAkR,EAAAL,QAAAC,GACA7e,EAAAo8B,iBAAAjd,OAAApR,MAIA5P,EAAAkB,WAAA,CACAiD,EAAAW,OAAA,OACAk5B,EAAAv9B,UAAA,cACAT,EAAAkB,WAAA,CACAiD,EAAAW,OAAA,OACAk5B,EAAAv9B,UAAA,gBACAT,EAAAkB,WAAA,CACAiD,EAAAW,OAAA,OACAk5B,EAAAv9B,UAAA,sBACAT,EAAAkB,WAAA,CACAiD,EAAAW,OAAA,OACAk5B,EAAAv9B,UAAA,4BACAT,EAAAkB,WAAA,CACAiD,EAAAW,OAAA,MACAk5B,EAAAv9B,UAAA,4BACAT,EAAAkB,WAAA,CACAiD,EAAAW,OAAA,MACAk5B,EAAAv9B,UAAA,2BACAT,EAAAkB,WAAA,CACAiD,EAAAsd,YAAA,yBACAtd,EAAAsd,YAAA,yBACAuc,EAAAv9B,UAAA,sBACAT,EAAAkB,WAAA,CACAiD,EAAAsd,YAAA,yBACAtd,EAAAsd,YAAA,yBACAuc,EAAAv9B,UAAA,wBACAT,EAAAkB,WAAA,CACAiD,EAAAW,OAAA,OACAk5B,EAAAv9B,UAAA,wBACAT,EAAAkB,WAAA,CACAiD,EAAAsd,YAAA,sBACAuc,EAAAv9B,UAAA,kBACAT,EAAAkB,WAAA,CACAiD,EAAAsd,YAAA,sBACAuc,EAAAv9B,UAAA,oBACAu9B,EAAAh+B,EAAAkB,WAAA,CACAiD,EAAAY,WACAi5B,GACAA,EA9aA,CA+aChuB,EAAA/O,SACDnB,EAAAmB,QAAA+8B,qCC1cAp+B,OAAAC,eAAAC,EAAA,cAA8CC,OAAA,IAC9C,IAAAC,EAAcC,EAAQ,QACtBkE,EAAclE,EAAQ,QACtBuiB,EAAmBviB,EAAQ,QAI3Bw5B,EAAA,WAEA,SAAAA,EAAAp5B,GACAE,KAAAF,QAkCA,OAhCAT,OAAAC,eAAA45B,EAAAh5B,UAAA,eAIAC,IAAA,WACA,OAAA8hB,EAAAvE,QAAAre,OAAAuJ,OAAA5I,KAAAF,MAAAk/B,YAEA1+B,YAAA,EACAC,cAAA,IAEAlB,OAAAC,eAAA45B,EAAAh5B,UAAA,yBAIAC,IAAA,WACA,WAAAyf,IAAAqC,EAAAvE,QAAAre,OAAAwJ,QAAA7I,KAAAF,MAAAk/B,UAAAl7B,IAAA,SAAAjC,GACA,IAAA6D,EAAAjG,EAAA+oB,OAAA3mB,EAAA,GAAAyH,EAAA5D,EAAA,GAAAwgB,EAAAxgB,EAAA,GACA,OAAAwgB,EAAApiB,IAAA,SAAArD,GAAkD,OAAAA,EAAA6I,UAGlDhJ,YAAA,EACAC,cAAA,IAEAd,EAAAkB,WAAA,CACAiD,EAAAU,gBACA40B,EAAAh5B,UAAA,oBACAT,EAAAkB,WAAA,CACAiD,EAAAU,gBACA40B,EAAAh5B,UAAA,8BACAg5B,EAAAz5B,EAAAkB,WAAA,CACAiD,EAAAY,WACA00B,GACAA,EArCA,GAuCA35B,EAAAmB,QAAAw4B,qCC9CA75B,OAAAC,eAAAC,EAAA,cAA8CC,OAAA,IAC9C,IAAAC,EAAcC,EAAQ,QACtBE,EAAsBF,EAAQ,QAC9BmF,EAAqBnF,EAAQ,QAK7Bm5B,EAAA,WAWA,SAAAA,EAAAoG,EAAA7oB,GACApW,KAAAkF,cAAAkR,EAAApR,aACAhF,KAAAk/B,cAAA9oB,EAAAM,aACA1W,KAAAm/B,eAAAF,EACAj/B,KAAAo/B,eAAAhpB,EAAAipB,OACAr/B,KAAAs/B,WAAAlpB,EAAAmpB,UA+GA,OAnGA1G,EAAA34B,UAAAiF,eAAA,SAAAC,GACA,OAAA3F,EAAAkC,UAAA3B,UAAA,oBACA,IAAAw/B,EAAAlpB,EAAA6J,EAAAsf,EACAn+B,EAAAtB,KACA,OAAAP,EAAAmC,YAAA5B,KAAA,SAAA6B,GACA,OAAAA,EAAA8D,OACA,OAIA,MAHA,kBAAAP,IACAA,IAAAyJ,MAAA,MAEA,GAAA7O,KAAAm/B,eAAAh6B,kBACA,OAEA,OADAq6B,EAAA39B,EAAAgE,OACA25B,GAAAp6B,KAAAsf,KAAA,SAAAzT,GAAkF,OAAA3P,EAAAo+B,cAAA/a,SAAA1T,KAClF,GAAAjR,KAAAm/B,eAAAh6B,eAAAC,IADiI,MAEjI,OAGA,GAFAkR,EAAAzU,EAAAgE,OAEAyQ,IAAAkpB,EACA,SAAAlpB,GAEAzU,EAAA8D,MAAA,EACA,OAEA,GAAA65B,EACA,GAAAx/B,KAAAo/B,gBAEA,GADAjf,EAAA,IAAAzd,KACAyd,EAAAngB,KAAAo/B,eACA,SAAAI,QAGA,IAAAA,EAAAh6B,UACA,SAAAg6B,GAGA,SAAAx/B,KAAAyF,WACA,OAEA,OADAg6B,EAAA59B,EAAAgE,OACA25B,EACA,GAAAC,GAGA,GAAAz/B,KAAAm/B,eAAAh6B,eAAAC,UAQAyzB,EAAA34B,UAAAuF,QAAA,WACA,OAAAhG,EAAAkC,UAAA3B,UAAA,oBACA,IAAAqW,EACA,OAAA5W,EAAAmC,YAAA5B,KAAA,SAAA6B,GACA,OAAAA,EAAA8D,OACA,gBAAAd,EAAAnE,QAAA+V,mBAAAzW,KAAA+E,SAAA/E,KAAAkF,cAAAlF,KAAAk/B,gBACA,OAQA,OAPA7oB,EAAAxU,EAAAgE,OACA7F,KAAA8F,eAAAuQ,GACArW,KAAAk/B,cAAA7oB,EAAAK,aACA1W,KAAAo/B,oBAAA34B,EACAzG,KAAAs/B,YACAt/B,KAAAs/B,WAAAjpB,GAEA,GAAAA,SAMAwiB,EAAA34B,UAAA4F,eAAA,SAAAC,GACA/F,KAAAm/B,eAAAr5B,eAAAC,IAEA1G,OAAAC,eAAAu5B,EAAA34B,UAAA,YAIAC,IAAA,WACA,OAAAH,KAAAm/B,eAAAp6B,UAEAzE,YAAA,EACAC,cAAA,IAEAlB,OAAAC,eAAAu5B,EAAA34B,UAAA,iBAIAC,IAAA,WACA,OAAAH,KAAAm/B,eAAAO,eAEAp/B,YAAA,EACAC,cAAA,IAEAd,EAAAkB,WAAA,CACAf,EAAAgB,eACAi4B,EAAA34B,UAAA,wBACAT,EAAAkB,WAAA,CACAf,EAAAgB,eACAi4B,EAAA34B,UAAA,wBACA24B,EA/HA,GAiIAt5B,EAAAmB,QAAAm4B,qCCzIAx5B,OAAAC,eAAAC,EAAA,cAA8CC,OAAA,IAC9C,IAAAC,EAAcC,EAAQ,QACtBoS,EAAkBpS,EAAQ,QAC1BkE,EAAclE,EAAQ,QACtB+P,EAAgB/P,EAAQ,QACxBoT,EAAepT,EAAQ,QAYvBigC,EAAA,SAAAx+B,GAEA,SAAAw+B,IACA,cAAAx+B,KAAA4B,MAAA/C,KAAAgD,YAAAhD,KAiIA,OAnIAP,EAAA+B,UAAAm+B,EAAAx+B,GASAw+B,EAAAz/B,UAAAi4B,mBAAA,SAAA5f,GACA,OAAA9Y,EAAAkC,UAAA3B,UAAA,oBACA,IAAA4Q,EAAAxP,EACA,OAAA3B,EAAAmC,YAAA5B,KAAA,SAAA6B,GACA,OAAAA,EAAA8D,OACA,OAEA,OADAiL,EAAAkB,EAAAjR,cAAA0X,GACA,GAAAvY,KAAAC,QAAA6Q,QAAA,CAAmErH,IAAA,WAAAmH,KACnE,OAEA,OADAxP,EAAAS,EAAAgE,OACA,GAAAzE,EAAAw+B,OAAA,IAAA9sB,EAAApS,QAAAU,EAAAw+B,OAAA5/B,KAAAC,SAAA,YAeA0/B,EAAAz/B,UAAAiiB,WAAA,SAAA/O,EAAAoP,EAAAqd,EAAAj2B,EAAAsJ,EAAA5B,GAEA,YADA,IAAAA,IAA+BA,EAAA,IAC/B7R,EAAAkC,UAAA3B,UAAA,oBACA,IAAAkR,EAAA9P,EACAE,EAAAtB,KACA,OAAAP,EAAAmC,YAAA5B,KAAA,SAAA6B,GACA,OAAAA,EAAA8D,OACA,OAiBA,OAhBAuL,EAAA,CAAiCI,QAAAzJ,YACjCuL,IACAlC,EAAAqH,QAAA,kBAAAnF,MAAAjG,KAAA,MAEAqV,IACAtR,EAAAsR,QAEAqd,IACA3uB,EAAA6lB,qBAAA8I,GAEAj2B,IACAsH,EAAA4pB,YAAAlxB,GAEAsJ,IACAhC,EAAAiC,SAAAD,EAAA,GAAA5B,GAAAzJ,YAEA,GAAA7H,KAAAC,QAAA6Q,QAAA,CAAmErH,IAAA,UAAAyH,WACnE,OAEA,OADA9P,EAAAS,EAAAgE,OACA,GAAAzE,EAAAoS,QAAA1P,IAAA,SAAA2P,GAAsF,WAAAX,EAAApS,QAAA+S,EAAAnS,EAAArB,kBAWtF0/B,EAAAz/B,UAAA4/B,cAAA,SAAA5sB,EAAA5B,GACA,OAAA7R,EAAAkC,UAAA3B,UAAA,oBACA,OAAAP,EAAAmC,YAAA5B,KAAA,SAAA6B,GACA,SAAA7B,KAAAmiB,gBAAA1b,gBAAAqM,EAAAmmB,WAAA8G,IAAA7sB,EAAA5B,SAUAquB,EAAAz/B,UAAA8/B,kBAAA,SAAA9sB,EAAA5B,GACA,OAAA7R,EAAAkC,UAAA3B,UAAA,oBACA,OAAAP,EAAAmC,YAAA5B,KAAA,SAAA6B,GACA,SAAA7B,KAAAmiB,gBAAA1b,gBAAAqM,EAAAmmB,WAAAgH,KAAA/sB,EAAA5B,SAWAquB,EAAAz/B,UAAAggC,mBAAA,SAAAt2B,EAAAsJ,EAAA5B,GAEA,YADA,IAAAA,IAA+BA,EAAA,IAC/B7R,EAAAkC,UAAA3B,UAAA,oBACA,IAAAkR,EAAA9P,EACAE,EAAAtB,KACA,OAAAP,EAAAmC,YAAA5B,KAAA,SAAA6B,GACA,OAAAA,EAAA8D,OACA,OAQA,OAPAuL,EAAA,CAAiCI,QAAAzJ,YACjC+B,IACAsH,EAAAtH,QAEAsJ,IACAhC,EAAAiC,SAAAD,EAAA,GAAA5B,GAAAzJ,YAEA,GAAA7H,KAAAC,QAAA6Q,QAAA,CAAmErH,IAAA,mBAAAyH,QAAAD,MAAA,eACnE,OAEA,OADA7P,EAAAS,EAAAgE,OACA,GAAAzE,EAAAoS,QAAA1P,IAAA,SAAA2P,GAAsF,WAAAX,EAAApS,QAAA+S,EAAAnS,EAAArB,kBAKtFR,EAAAkB,WAAA,CACAiD,EAAAW,OAAA,KACAo7B,EAAAz/B,UAAA,2BACAT,EAAAkB,WAAA,CACAiD,EAAAW,OAAA,KACAo7B,EAAAz/B,UAAA,2BACAy/B,EAAAlgC,EAAAkB,WAAA,CACAiD,EAAAY,WACAm7B,GACAA,EApIA,CAqIClwB,EAAA/O,SACDnB,EAAAmB,QAAAi/B,qCCvJAtgC,OAAAC,eAAAC,EAAA,cAA8CC,OAAA,IAC9C,IAAAC,EAAcC,EAAQ,QACtBE,EAAsBF,EAAQ,QAC9Bk3B,EAA2Bl3B,EAAQ,QACnC6Z,EAAmC7Z,EAAQ,QAI3C05B,EAAA,WAEA,SAAAA,EAAAt5B,EAAAC,GACAC,KAAAF,QACAE,KAAAC,QAAAF,EA4PA,OA1PAV,OAAAC,eAAA85B,EAAAl5B,UAAA,YAEAC,IAAA,WACA,OAAAH,KAAAF,MAAAiZ,KAEAzY,YAAA,EACAC,cAAA,IAEAlB,OAAAC,eAAA85B,EAAAl5B,UAAA,MAIAC,IAAA,WACA,OAAAH,KAAAF,MAAAiZ,KAEAzY,YAAA,EACAC,cAAA,IAEAlB,OAAAC,eAAA85B,EAAAl5B,UAAA,OAIAC,IAAA,WACA,OAAAH,KAAAF,MAAAqgC,KAEA7/B,YAAA,EACAC,cAAA,IAEAlB,OAAAC,eAAA85B,EAAAl5B,UAAA,gBAIAC,IAAA,WACA,WAAAuC,KAAA1C,KAAAF,MAAA4E,aAEApE,YAAA,EACAC,cAAA,IAEAlB,OAAAC,eAAA85B,EAAAl5B,UAAA,cAIAC,IAAA,WACA,WAAAuC,KAAA1C,KAAAF,MAAAi1B,aAEAz0B,YAAA,EACAC,cAAA,IAEAlB,OAAAC,eAAA85B,EAAAl5B,UAAA,QAIAC,IAAA,WACA,OAAAH,KAAAF,MAAAW,MAEAH,YAAA,EACAC,cAAA,IAEAlB,OAAAC,eAAA85B,EAAAl5B,UAAA,eAIAC,IAAA,WACA,OAAAH,KAAAF,MAAA8Z,cAEAtZ,YAAA,EACAC,cAAA,IAEAlB,OAAAC,eAAA85B,EAAAl5B,UAAA,WAIAC,IAAA,WACA,OAAAH,KAAAF,MAAAm1B,MAEA30B,YAAA,EACAC,cAAA,IAEAlB,OAAAC,eAAA85B,EAAAl5B,UAAA,QAIAC,IAAA,WACA,OAAAH,KAAAF,MAAA8J,MAEAtJ,YAAA,EACAC,cAAA,IAKA64B,EAAAl5B,UAAA8zB,WAAA,WACA,OAAAv0B,EAAAkC,UAAA3B,UAAA,oBACA,OAAAP,EAAAmC,YAAA5B,KAAA,SAAA6B,GACA,SAAA7B,KAAAC,QAAAya,OAAAtH,SAAA4gB,WAAAh0B,YAOAo5B,EAAAl5B,UAAAkgC,sBAAA,WACA,WAAAxJ,EAAAl2B,QAAAV,KAAAF,MAAAiZ,IAAA/Y,KAAAC,UAKAm5B,EAAAl5B,UAAA+Z,UAAA,WACA,OAAAxa,EAAAkC,UAAA3B,UAAA,oBACA,OAAAP,EAAAmC,YAAA5B,KAAA,SAAA6B,GACA,SAAA7B,KAAAogC,wBAAAnmB,kBAcAmf,EAAAl5B,UAAA6a,kBAAA,SAAAxC,GACA,OAAA9Y,EAAAkC,UAAA3B,UAAA,oBACA,OAAAP,EAAAmC,YAAA5B,KAAA,SAAA6B,GACA,SAAA7B,KAAAC,QAAAya,OAAArY,MAAAg8B,oBAAAr+B,KAAAuY,SASA6gB,EAAAl5B,UAAAgb,eAAA,SAAA3C,GACA,OAAA9Y,EAAAkC,UAAA3B,UAAA,oBACA,IAAAmb,EACA,OAAA1b,EAAAmC,YAAA5B,KAAA,SAAA6B,GACA,OAAAA,EAAA8D,OACA,OAEA,OADA9D,EAAAuZ,KAAA1S,KAAA,UACA,GAAA1I,KAAA+a,kBAAAxC,IACA,uBAAA1W,EAAAgE,QACA,OAEA,GADAsV,EAAAtZ,EAAAgE,OACAsV,aAAA5B,EAAA7Y,QACA,aAEA,MAAAya,EACA,uBAaAie,EAAAl5B,UAAAia,WAAA,SAAAjH,EAAA5B,EAAAqB,EAAAwhB,GACA,OAAA10B,EAAAkC,UAAA3B,UAAA,oBACA,OAAAP,EAAAmC,YAAA5B,KAAA,SAAA6B,GACA,SAAA7B,KAAAC,QAAAya,OAAArY,MAAAk8B,oBAAAv+B,KAAAkT,EAAA5B,EAAAqB,EAAAwhB,SASAiF,EAAAl5B,UAAAka,YAAA,SAAA7B,GACA,OAAA9Y,EAAAkC,UAAA3B,UAAA,oBACA,OAAAP,EAAAmC,YAAA5B,KAAA,SAAA6B,GACA,SAAA7B,KAAAC,QAAAya,OAAArY,MAAAo8B,mBAAAz+B,KAAAuY,SASA6gB,EAAAl5B,UAAAqa,QAAA,SAAAhC,GACA,OAAA9Y,EAAAkC,UAAA3B,UAAA,oBACA,IAAA4nB,EACA,OAAAnoB,EAAAmC,YAAA5B,KAAA,SAAA6B,GACA,OAAAA,EAAA8D,OACA,OAEA,OADA9D,EAAAuZ,KAAA1S,KAAA,UACA,GAAA1I,KAAAoa,YAAA7B,IACA,uBAAA1W,EAAAgE,QACA,OAEA,MADA+hB,EAAA/lB,EAAAgE,OACA+hB,EACA,uBAQAwR,EAAAl5B,UAAAsa,OAAA,WACA,OAAA/a,EAAAkC,UAAA3B,UAAA,oBACA,IAAAya,EACA,OAAAhb,EAAAmC,YAAA5B,KAAA,SAAA6B,GACA,OAAAA,EAAA8D,OACA,gBAAA3F,KAAAC,QAAAya,OAAArY,MAAAsY,SACA,OAEA,OADAF,EAAA5Y,EAAAgE,OACA,GAAA4U,EAAAG,cAAA5a,aAQAo5B,EAAAl5B,UAAA2a,SAAA,WACA,OAAApb,EAAAkC,UAAA3B,UAAA,oBACA,IAAAya,EACA,OAAAhb,EAAAmC,YAAA5B,KAAA,SAAA6B,GACA,OAAAA,EAAA8D,OACA,gBAAA3F,KAAAC,QAAAya,OAAArY,MAAAsY,SACA,OAEA,OADAF,EAAA5Y,EAAAgE,OACA,GAAA4U,EAAAK,gBAAA9a,aAQAo5B,EAAAl5B,UAAAmgC,UAAA,WACA,OAAA5gC,EAAAkC,UAAA3B,UAAA,oBACA,OAAAP,EAAAmC,YAAA5B,KAAA,SAAA6B,GACA,SAAA7B,KAAAC,QAAAya,OAAArY,MAAA87B,cAAAn+B,YAIAP,EAAAkB,WAAA,CACAf,EAAAgB,eACAw4B,EAAAl5B,UAAA,kBACAk5B,EAhQA,GAkQA75B,EAAAmB,QAAA04B,qCC1QA/5B,OAAAC,eAAAC,EAAA,cAA8CC,OAAA,IAC9C,IAAAC,EAAcC,EAAQ,QACtBmF,EAAqBnF,EAAQ,QAC7BE,EAAsBF,EAAQ,QAa9Bi6B,EAAA,WAEA,SAAAA,EAAA2G,EAAAvgC,EAAAwgC,GACAvgC,KAAAsgC,eACAtgC,KAAAugC,UACAvgC,KAAAC,QAAAF,EA6GA,OA3GAV,OAAAC,eAAAq6B,EAAAz5B,UAAA,WAMAC,IAAA,WACA,OAAAH,KAAAu9B,aAAAv9B,KAAAu9B,aAAAn8B,UAAAqF,GAEAnG,YAAA,EACAC,cAAA,IAKAo5B,EAAAz5B,UAAAsgC,QAAA,WACA,OAAA/gC,EAAAkC,UAAA3B,UAAA,oBACA,IAAAqM,EACA,OAAA5M,EAAAmC,YAAA5B,KAAA,SAAA6B,GACA,OAAAA,EAAA8D,OACA,gBAAA3F,KAAAw9B,cACA,OAEA,OADAnxB,EAAAxK,EAAAgE,OACAwG,EAAAjL,KAAAiE,OAGA,GAAArF,KAAAygC,eAAAp0B,IAFA,aAcAstB,EAAAz5B,UAAAwgC,OAAA,WACA,OAAAjhC,EAAAkC,UAAA3B,UAAA,oBACA,IAAAqM,EAAAjL,EACA,OAAA3B,EAAAmC,YAAA5B,KAAA,SAAA6B,GACA,OAAAA,EAAA8D,OACA,OACA3F,KAAA2gC,QACAt0B,EAAA,GACAxK,EAAA8D,MAAA,EACA,gBAAA3F,KAAAwgC,WACA,OAEA,GADAp/B,EAAAS,EAAAgE,QACAzE,EAAAiE,OACA,YAEAgH,EAAA3D,KAAA3F,MAAAsJ,EAAA5M,EAAAke,SAAAvc,IACAS,EAAA8D,MAAA,EACA,OACA,GAAA3F,KAAA4gC,eAAA,YACA/+B,EAAA8D,MAAA,EACA,OAEA,OADA3F,KAAA2gC,QACA,GAAAt0B,SAKAhN,OAAAC,eAAAq6B,EAAAz5B,UAAA,iBAMAC,IAAA,WACA,OAAAH,KAAA4gC,gBAEAtgC,YAAA,EACAC,cAAA,IAOAo5B,EAAAz5B,UAAAygC,MAAA,WACA3gC,KAAA4gC,oBAAAn6B,GAGAkzB,EAAAz5B,UAAAs9B,WAAA,SAAAqD,GAEA,YADA,IAAAA,IAA2CA,EAAA,IAC3CphC,EAAAkC,UAAA3B,UAAA,oBACA,OAAAP,EAAAmC,YAAA5B,KAAA,SAAA6B,GACA,SAAA7B,KAAAC,QAAA6Q,QAAArR,EAAAsQ,SAAA,CAA6EnG,KAAA/E,EAAAkM,kBAAAC,OAA+ChR,KAAAsgC,aAAAO,EAAA,CAAyC3vB,MAAAzR,EAAAsQ,SAAA,GAA2B/P,KAAAsgC,aAAApvB,MAAA,CAA4BkR,MAAApiB,KAAA4gC,eAAAlvB,MAAA,OAA2CmvB,EAAA3vB,gBAKvQyoB,EAAAz5B,UAAAugC,eAAA,SAAAp0B,GACA,IAAA/K,EAAAtB,KAGA,OAFAA,KAAA4gC,eAAAv0B,EAAAuF,WAAAvF,EAAAuF,WAAAD,YAAAlL,EACAzG,KAAAu9B,aAAAlxB,EACAA,EAAAjL,KAAAoiB,OAAA,SAAA4Y,EAAA0E,GACA,IAAA7X,EAAA3nB,EAAAi/B,QAAAO,GACA,OAAAj1B,MAAAC,QAAAmd,GAAAxpB,EAAAke,SAAAye,EAAAnT,GAAAxpB,EAAAke,SAAAye,EAAA,CAAAnT,KACS,KAETxpB,EAAAkB,WAAA,CACAf,EAAAgB,eACA+4B,EAAAz5B,UAAA,kBACAy5B,EAlHA,GAoHAp6B,EAAAmB,QAAAi5B,EACA,oBAAA7yB,QAAA,kBAAAA,OAAA0oB,eACAnwB,OAAAC,eAAAq6B,EAAAz5B,UAAA4G,OAAA0oB,cAAA,CACAhwB,MAAA,WACA,OAAAC,EAAAgtB,iBAAAzsB,KAAAgD,UAAA,WACA,IAAA5B,EACA,OAAA3B,EAAAmC,YAAA5B,KAAA,SAAA6B,GACA,OAAAA,EAAA8D,OACA,OACA3F,KAAA2gC,QACA9+B,EAAA8D,MAAA,EACA,OAEA,SAAAlG,EAAA+sB,QAAAxsB,KAAAwgC,YACA,OAEA,OADAp/B,EAAAS,EAAAgE,OACAzE,EAAAiE,OAGA,GAAA5F,EAAAsnB,SAAAtnB,EAAAitB,iBAAAjtB,EAAAktB,cAAAvrB,EAAA0F,OAAAgC,gBAFA,MAGA,gBAAArJ,EAAA+sB,QAAAzpB,WAAA,GAAAlB,EAAAgE,UACA,OAEA,OADAhE,EAAAgE,OACA,MACA,4DC5JAxG,OAAAC,eAAAC,EAAA,cAA8CC,OAAA,IAC9C,IAAAC,EAAcC,EAAQ,QACtBE,EAAsBF,EAAQ,QAI9BqhC,EAAA,WAEA,SAAAA,EAAAjhC,EAAAC,GACAC,KAAAF,QACAE,KAAAC,QAAAF,EAmCA,OAjCAV,OAAAC,eAAAyhC,EAAA7gC,UAAA,YAIAC,IAAA,WACA,OAAAH,KAAAF,MAAAw2B,OAEAh2B,YAAA,EACAC,cAAA,IAEAlB,OAAAC,eAAAyhC,EAAA7gC,UAAA,eAIAC,IAAA,WACA,OAAAH,KAAAF,MAAAyI,UAEAjI,YAAA,EACAC,cAAA,IAEAlB,OAAAC,eAAAyhC,EAAA7gC,UAAA,cAIAC,IAAA,WACA,WAAAuC,KAAA1C,KAAAF,MAAAkhC,aAEA1gC,YAAA,EACAC,cAAA,IAEAd,EAAAkB,WAAA,CACAf,EAAAgB,eACAmgC,EAAA7gC,UAAA,kBACA6gC,EAvCA,GAyCAxhC,EAAAmB,QAAAqgC,qCC/CA1hC,OAAAC,eAAAC,EAAA,cAA8CC,OAAA,IAC9C,IAAAC,EAAcC,EAAQ,QACtBqf,EAAoBrf,EAAQ,QAI5Bk5B,EAAA,SAAAz3B,GAIA,SAAAy3B,EAAAvV,EAAA9Z,EAAAL,GACA,IAAA5H,EAAAH,EAAAI,KAAAvB,KAAA,gCAAAqjB,EAAA,KAAA9Z,EAAA,cAAA6E,KAAA0I,UAAA5N,EAAA,UAAAlJ,KAGA,OAFAsB,EAAA2/B,YAAA5d,EACA/hB,EAAA4/B,MAAAh4B,EACA5H,EAgBA,OAvBA7B,EAAA+B,UAAAo3B,EAAAz3B,GASA9B,OAAAC,eAAAs5B,EAAA14B,UAAA,cACAC,IAAA,WACA,OAAAH,KAAAihC,aAEA3gC,YAAA,EACAC,cAAA,IAEAlB,OAAAC,eAAAs5B,EAAA14B,UAAA,QACAC,IAAA,WACA,OAAAH,KAAAkhC,OAEA5gC,YAAA,EACAC,cAAA,IAEAq4B,EAxBA,CAyBC7Z,EAAAre,SACDnB,EAAAmB,QAAAk4B,qCChCAv5B,OAAAC,eAAAC,EAAA,cAA8CC,OAAA,IAC9C,IAAAC,EAAcC,EAAQ,QACtBE,EAAsBF,EAAQ,QAC9Bo6B,EAAkCp6B,EAAQ,QAC1CkE,EAAclE,EAAQ,QAItBm6B,EAAA,WAEA,SAAAA,EAAA/5B,EAAAC,GACAC,KAAAF,QACAE,KAAAC,QAAAF,EAgCA,OA9BAV,OAAAC,eAAAu6B,EAAA35B,UAAA,WAIAC,IAAA,WACA,IAAAmB,EAAAtB,KACA,OAAAA,KAAAF,MAAAsB,KAAA0C,IAAA,SAAAic,GAAyD,WAAA+Z,EAAAp5B,QAAAqf,EAAAze,EAAArB,YAEzDK,YAAA,EACAC,cAAA,IAEAlB,OAAAC,eAAAu6B,EAAA35B,UAAA,cAIAC,IAAA,WACA,OAAAH,KAAAF,MAAAkxB,OAEA1wB,YAAA,EACAC,cAAA,IAEAd,EAAAkB,WAAA,CACAf,EAAAgB,eACAi5B,EAAA35B,UAAA,kBACAT,EAAAkB,WAAA,CACAiD,EAAAU,gBACAu1B,EAAA35B,UAAA,gBACA25B,EAAAp6B,EAAAkB,WAAA,CACAiD,EAAAY,WACAq1B,GACAA,EApCA,GAsCAt6B,EAAAmB,QAAAm5B,qCC9CAx6B,OAAAC,eAAAC,EAAA,cAA8CC,OAAA,IAC9C,IAAAC,EAAcC,EAAQ,QACtBE,EAAsBF,EAAQ,QAC9BmD,EAAanD,EAAQ,QAIrB45B,EAAA,WAEA,SAAAA,EAAAx5B,EAAAC,GACAC,KAAAF,QACAE,KAAAC,QAAAF,EAeA,OAbAV,OAAAC,eAAAg6B,EAAAp5B,UAAA,eAIAC,IAAA,WACA,WAAA0C,EAAAnC,QAAAV,KAAAF,MAAAgB,KAAAd,KAAAC,UAEAK,YAAA,EACAC,cAAA,IAEAd,EAAAkB,WAAA,CACAf,EAAAgB,eACA04B,EAAAp5B,UAAA,kBACAo5B,EAnBA,GAqBA/5B,EAAAmB,QAAA44B,qCC5BAj6B,OAAAC,eAAAC,EAAA,cAA8CC,OAAA,IAC9C,IAAAC,EAAcC,EAAQ,QACtBE,EAAsBF,EAAQ,QAC9Bs6B,EAAA,WAEA,SAAAA,EAAAl6B,EAAAC,GACAC,KAAAF,QACAE,KAAAC,QAAAF,EAyLA,OAvLAV,OAAAC,eAAA06B,EAAA95B,UAAA,MAIAC,IAAA,WACA,OAAAH,KAAAF,MAAAiB,IAEAT,YAAA,EACAC,cAAA,IAEAlB,OAAAC,eAAA06B,EAAA95B,UAAA,OAIAC,IAAA,WACA,OAAAH,KAAAF,MAAA2J,KAEAnJ,YAAA,EACAC,cAAA,IAEAlB,OAAAC,eAAA06B,EAAA95B,UAAA,YAIAC,IAAA,WACA,OAAAH,KAAAF,MAAAqhC,WAEA7gC,YAAA,EACAC,cAAA,IAEAlB,OAAAC,eAAA06B,EAAA95B,UAAA,iBAIAC,IAAA,WACA,OAAAH,KAAAF,MAAAoD,gBAEA5C,YAAA,EACAC,cAAA,IAEAlB,OAAAC,eAAA06B,EAAA95B,UAAA,0BAIAC,IAAA,WACA,OAAAH,KAAAF,MAAAqD,kBAEA7C,YAAA,EACAC,cAAA,IAKAy5B,EAAA95B,UAAAkD,eAAA,WACA,OAAA3D,EAAAkC,UAAA3B,UAAA,oBACA,OAAAP,EAAAmC,YAAA5B,KAAA,SAAA6B,GACA,SAAA7B,KAAAC,QAAA6B,MAAAO,MAAAC,YAAAtC,KAAAF,MAAAoD,sBAIA7D,OAAAC,eAAA06B,EAAA95B,UAAA,aAIAC,IAAA,WACA,OAAAH,KAAAF,MAAAshC,YAEA9gC,YAAA,EACAC,cAAA,IAEAlB,OAAAC,eAAA06B,EAAA95B,UAAA,sBAIAC,IAAA,WACA,OAAAH,KAAAF,MAAAuhC,cAEA/gC,YAAA,EACAC,cAAA,IAKAy5B,EAAA95B,UAAAohC,WAAA,WACA,OAAA7hC,EAAAkC,UAAA3B,UAAA,oBACA,OAAAP,EAAAmC,YAAA5B,KAAA,SAAA6B,GACA,SAAA7B,KAAAC,QAAA6B,MAAAO,MAAAC,YAAAtC,KAAAF,MAAAshC,kBAIA/hC,OAAAC,eAAA06B,EAAA95B,UAAA,WAIAC,IAAA,WACA,OAAAH,KAAAF,MAAA8jB,UAEAtjB,YAAA,EACAC,cAAA,IAKAy5B,EAAA95B,UAAAwB,SAAA,WACA,OAAAjC,EAAAkC,UAAA3B,UAAA,oBACA,OAAAP,EAAAmC,YAAA5B,KAAA,SAAA6B,GACA,SAAA7B,KAAAC,QAAA6B,MAAAC,OAAAC,aAAAhC,KAAAF,MAAA8jB,gBAIAvkB,OAAAC,eAAA06B,EAAA95B,UAAA,UAIAC,IAAA,WACA,OAAAH,KAAAF,MAAA0hB,SAEAlhB,YAAA,EACAC,cAAA,IAKAy5B,EAAA95B,UAAAuhB,QAAA,WACA,OAAAhiB,EAAAkC,UAAA3B,UAAA,oBACA,OAAAP,EAAAmC,YAAA5B,KAAA,SAAA6B,GACA,SAAA7B,KAAAC,QAAA6B,MAAA4f,MAAAC,YAAA3hB,KAAAF,MAAA0hB,eAIAniB,OAAAC,eAAA06B,EAAA95B,UAAA,YAIAC,IAAA,WACA,OAAAH,KAAAF,MAAA2S,UAEAnS,YAAA,EACAC,cAAA,IAEAlB,OAAAC,eAAA06B,EAAA95B,UAAA,SAIAC,IAAA,WACA,OAAAH,KAAAF,MAAAsY,OAEA9X,YAAA,EACAC,cAAA,IAEAlB,OAAAC,eAAA06B,EAAA95B,UAAA,SAIAC,IAAA,WACA,OAAAH,KAAAF,MAAAka,YAEA1Z,YAAA,EACAC,cAAA,IAEAlB,OAAAC,eAAA06B,EAAA95B,UAAA,gBAIAC,IAAA,WACA,WAAAuC,KAAA1C,KAAAF,MAAA4E,aAEApE,YAAA,EACAC,cAAA,IAEAlB,OAAAC,eAAA06B,EAAA95B,UAAA,gBAIAC,IAAA,WACA,OAAAH,KAAAF,MAAA+hB,eAEAvhB,YAAA,EACAC,cAAA,IAEAd,EAAAkB,WAAA,CACAf,EAAAgB,eACAo5B,EAAA95B,UAAA,kBACA85B,EA7LA,GA+LAz6B,EAAAmB,QAAAs5B","file":"js/home~unitetv.15f2b2d6.js","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar ChatBadgeVersion_1 = require(\"./ChatBadgeVersion\");\nvar NonEnumerable_1 = require(\"../../Toolkit/Decorators/NonEnumerable\");\n/**\n * A set of badges.\n */\nvar ChatBadgeSet = /** @class */ (function () {\n    /** @private */\n    function ChatBadgeSet(_data, client) {\n        this._data = _data;\n        this._client = client;\n    }\n    Object.defineProperty(ChatBadgeSet.prototype, \"versionNames\", {\n        /**\n         * Names of all versions of the badge set.\n         */\n        get: function () {\n            return Object.keys(this._data.versions);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Gets a specific version of a badge by name.\n     *\n     * @param name The name of the version.\n     */\n    ChatBadgeSet.prototype.getVersion = function (name) {\n        return new ChatBadgeVersion_1.default(this._data.versions[name], this._client);\n    };\n    tslib_1.__decorate([\n        NonEnumerable_1.NonEnumerable\n    ], ChatBadgeSet.prototype, \"_client\", void 0);\n    return ChatBadgeSet;\n}());\nexports.default = ChatBadgeSet;\n//# sourceMappingURL=ChatBadgeSet.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Extracts the user ID from an argument that is possibly an object containing that ID.\n *\n * @param user The user ID or object.\n */\nfunction extractUserId(user) {\n    return typeof user === 'string' ? user : user.id;\n}\nexports.extractUserId = extractUserId;\n/**\n * Extracts the user name from an argument that is possibly an object containing that name.\n *\n * @param user The user name or object.\n */\nfunction extractUserName(user) {\n    return typeof user === 'string' ? user : user.name;\n}\nexports.extractUserName = extractUserName;\n//# sourceMappingURL=UserTools.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar HelixStreamMarker_1 = require(\"./HelixStreamMarker\");\nvar HelixStreamMarkerWithVideo = /** @class */ (function (_super) {\n    tslib_1.__extends(HelixStreamMarkerWithVideo, _super);\n    /** @private */\n    function HelixStreamMarkerWithVideo(data, _videoId, client) {\n        var _this = _super.call(this, data, client) || this;\n        _this._videoId = _videoId;\n        return _this;\n    }\n    Object.defineProperty(HelixStreamMarkerWithVideo.prototype, \"url\", {\n        /**\n         * The URL of the video, which will start playing at the position of the stream marker.\n         */\n        get: function () {\n            return this._data.URL;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(HelixStreamMarkerWithVideo.prototype, \"videoId\", {\n        /**\n         * The ID of the video.\n         */\n        get: function () {\n            return this._videoId;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Retrieves the video data of the video the marker was set in.\n     */\n    HelixStreamMarkerWithVideo.prototype.getVideo = function () {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            return tslib_1.__generator(this, function (_a) {\n                return [2 /*return*/, this._client.helix.videos.getVideoById(this._videoId)];\n            });\n        });\n    };\n    return HelixStreamMarkerWithVideo;\n}(HelixStreamMarker_1.default));\nexports.default = HelixStreamMarkerWithVideo;\n//# sourceMappingURL=HelixStreamMarkerWithVideo.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar NonEnumerable_1 = require(\"../../../Toolkit/Decorators/NonEnumerable\");\n/**\n * A relation of a user following a broadcaster.\n */\nvar HelixFollow = /** @class */ (function () {\n    /** @private */\n    function HelixFollow(/** @private */ _data, client) {\n        this._data = _data;\n        this._client = client;\n    }\n    Object.defineProperty(HelixFollow.prototype, \"userId\", {\n        /**\n         * The user ID of the following user.\n         */\n        get: function () {\n            return this._data.from_id;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(HelixFollow.prototype, \"userDisplayName\", {\n        /**\n         * The display name of the following user.\n         */\n        get: function () {\n            return this._data.from_name;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Retrieves the data of the following user.\n     */\n    HelixFollow.prototype.getUser = function () {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            return tslib_1.__generator(this, function (_a) {\n                return [2 /*return*/, this._client.helix.users.getUserById(this._data.from_id)];\n            });\n        });\n    };\n    Object.defineProperty(HelixFollow.prototype, \"followedUserId\", {\n        /**\n         * The user ID of the followed broadcaster.\n         */\n        get: function () {\n            return this._data.to_id;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(HelixFollow.prototype, \"followedUserDisplayName\", {\n        /**\n         * The display name of the followed user.\n         */\n        get: function () {\n            return this._data.to_name;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Retrieves the data of the followed broadcaster.\n     */\n    HelixFollow.prototype.getFollowedUser = function () {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            return tslib_1.__generator(this, function (_a) {\n                return [2 /*return*/, this._client.helix.users.getUserById(this._data.to_id)];\n            });\n        });\n    };\n    Object.defineProperty(HelixFollow.prototype, \"followDate\", {\n        /**\n         * The date when the user followed the broadcaster.\n         */\n        get: function () {\n            return new Date(this._data.followed_at);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    tslib_1.__decorate([\n        NonEnumerable_1.NonEnumerable\n    ], HelixFollow.prototype, \"_client\", void 0);\n    return HelixFollow;\n}());\nexports.default = HelixFollow;\n//# sourceMappingURL=HelixFollow.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar Subscription_1 = require(\"../Subscription\");\nvar User_1 = require(\"../User/User\");\n/**\n * A relation of a user subscribing to a previously given channel.\n */\nvar ChannelSubscription = /** @class */ (function (_super) {\n    tslib_1.__extends(ChannelSubscription, _super);\n    function ChannelSubscription() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Object.defineProperty(ChannelSubscription.prototype, \"user\", {\n        /**\n         * The user subscribing to the given channel.\n         */\n        get: function () {\n            return new User_1.default(this._data.user, this._client);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return ChannelSubscription;\n}(Subscription_1.default));\nexports.default = ChannelSubscription;\n//# sourceMappingURL=ChannelSubscription.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar NonEnumerable_1 = require(\"../../../Toolkit/Decorators/NonEnumerable\");\n/**\n * A (paid) subscription of a user to a broadcaster.\n */\nvar HelixSubscription = /** @class */ (function () {\n    /** @private */\n    function HelixSubscription(_data, client) {\n        this._data = _data;\n        this._client = client;\n    }\n    Object.defineProperty(HelixSubscription.prototype, \"broadcasterId\", {\n        /**\n         * The user ID of the broadcaster.\n         */\n        get: function () {\n            return this._data.broadcaster_id;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(HelixSubscription.prototype, \"broadcasterDisplayName\", {\n        /**\n         * The display name of the broadcaster.\n         */\n        get: function () {\n            return this._data.broadcaster_name;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Retrieves more data about the broadcaster.\n     */\n    HelixSubscription.prototype.getBroadcaster = function () {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            return tslib_1.__generator(this, function (_a) {\n                return [2 /*return*/, this._client.helix.users.getUserById(this.broadcasterId)];\n            });\n        });\n    };\n    Object.defineProperty(HelixSubscription.prototype, \"isGift\", {\n        /**\n         * Whether the subscription has been gifted by another user.\n         */\n        get: function () {\n            return this._data.is_gift;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(HelixSubscription.prototype, \"tier\", {\n        /**\n         * The tier of the subscription.\n         */\n        get: function () {\n            return this._data.tier;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(HelixSubscription.prototype, \"userId\", {\n        /**\n         * The user ID of the subscribed user.\n         */\n        get: function () {\n            return this._data.user_id;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(HelixSubscription.prototype, \"userDisplayName\", {\n        /**\n         * The display name of the subscribed user.\n         */\n        get: function () {\n            return this._data.user_name;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Retrieves more data about the subscribed user.\n     */\n    HelixSubscription.prototype.getUser = function () {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            return tslib_1.__generator(this, function (_a) {\n                return [2 /*return*/, this._client.helix.users.getUserById(this.userId)];\n            });\n        });\n    };\n    tslib_1.__decorate([\n        NonEnumerable_1.NonEnumerable\n    ], HelixSubscription.prototype, \"_client\", void 0);\n    return HelixSubscription;\n}());\nexports.default = HelixSubscription;\n//# sourceMappingURL=HelixSubscription.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar NonEnumerable_1 = require(\"../../../Toolkit/Decorators/NonEnumerable\");\nvar ChatEmote_1 = require(\"./ChatEmote\");\nvar Cache_1 = require(\"../../../Toolkit/Decorators/Cache\");\n/**\n * A list of emotes.\n */\nvar ChatEmoteList = /** @class */ (function () {\n    /** @private */\n    function ChatEmoteList(_data, client) {\n        this._data = _data;\n        this._client = client;\n    }\n    Object.defineProperty(ChatEmoteList.prototype, \"emotes\", {\n        /**\n         * A list of all emotes in the list.\n         */\n        get: function () {\n            var _this = this;\n            return this._data.map(function (emote) { return new ChatEmote_1.default(emote, _this._client); });\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Gets all emotes from the list that are from a given emote set.\n     *\n     * @param setId\n     */\n    ChatEmoteList.prototype.getAllFromSet = function (setId) {\n        var _this = this;\n        return this._data.filter(function (emote) { return emote.emoticon_set === setId; }).map(function (emote) { return new ChatEmote_1.default(emote, _this._client); });\n    };\n    /**\n     * Finds a single emote by its ID.\n     *\n     * @param id\n     */\n    ChatEmoteList.prototype.getById = function (id) {\n        var data = this._data.find(function (emote) { return emote.id === id; });\n        return data ? new ChatEmote_1.default(data, this._client) : null;\n    };\n    tslib_1.__decorate([\n        NonEnumerable_1.NonEnumerable\n    ], ChatEmoteList.prototype, \"_client\", void 0);\n    tslib_1.__decorate([\n        Cache_1.CachedGetter()\n    ], ChatEmoteList.prototype, \"emotes\", null);\n    tslib_1.__decorate([\n        Cache_1.Cached()\n    ], ChatEmoteList.prototype, \"getAllFromSet\", null);\n    tslib_1.__decorate([\n        Cache_1.Cached()\n    ], ChatEmoteList.prototype, \"getById\", null);\n    ChatEmoteList = tslib_1.__decorate([\n        Cache_1.Cacheable\n    ], ChatEmoteList);\n    return ChatEmoteList;\n}());\nexports.default = ChatEmoteList;\n//# sourceMappingURL=ChatEmoteList.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar NonEnumerable_1 = require(\"../../../Toolkit/Decorators/NonEnumerable\");\nvar HelixStreamMarker = /** @class */ (function () {\n    /** @private */\n    function HelixStreamMarker(/** @private */ _data, client) {\n        this._data = _data;\n        this._client = client;\n    }\n    Object.defineProperty(HelixStreamMarker.prototype, \"id\", {\n        /**\n         * The ID of the marker.\n         */\n        get: function () {\n            return this._data.id;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(HelixStreamMarker.prototype, \"creationDate\", {\n        /**\n         * The date and time when the marker was created.\n         */\n        get: function () {\n            return new Date(this._data.created_at);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(HelixStreamMarker.prototype, \"description\", {\n        /**\n         * The description of the marker.\n         */\n        get: function () {\n            return this._data.description;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(HelixStreamMarker.prototype, \"positionInSeconds\", {\n        /**\n         * The position in the stream when the marker was created, in seconds.\n         */\n        get: function () {\n            return this._data.position_seconds;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    tslib_1.__decorate([\n        NonEnumerable_1.NonEnumerable\n    ], HelixStreamMarker.prototype, \"_client\", void 0);\n    return HelixStreamMarker;\n}());\nexports.default = HelixStreamMarker;\n//# sourceMappingURL=HelixStreamMarker.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar NonEnumerable_1 = require(\"../Toolkit/Decorators/NonEnumerable\");\nvar TwitchClient_1 = require(\"../TwitchClient\");\n/**\n * An auth provider that retrieve tokens using client credentials.\n */\nvar ClientCredentialsAuthProvider = /** @class */ (function () {\n    /**\n     * Creates a new auth provider to receive an application token with using the client ID and secret.\n     *\n     * You don't usually have to create this manually. You should use `TwitchClient.withClientCredentials` instead.\n     *\n     * @param clientId The client ID of your application.\n     * @param clientSecret The client secret of your application.\n     *\n     * You need to obtain one using one of the [Twitch OAuth flows](https://dev.twitch.tv/docs/authentication/getting-tokens-oauth/).\n     */\n    function ClientCredentialsAuthProvider(clientId, clientSecret) {\n        this._clientId = clientId;\n        this._clientSecret = clientSecret;\n    }\n    /**\n     * Retrieves an access token.\n     *\n     * If any scopes are provided, this throws. The client credentials flow does not support scopes.\n     *\n     * @param scopes The requested scopes.\n     */\n    ClientCredentialsAuthProvider.prototype.getAccessToken = function (scopes) {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            return tslib_1.__generator(this, function (_a) {\n                if (scopes && scopes.length > 0) {\n                    throw new Error('The client credentials flow does not support scopes');\n                }\n                if (!this._token || this._token.isExpired) {\n                    return [2 /*return*/, this.refresh()];\n                }\n                return [2 /*return*/, this._token];\n            });\n        });\n    };\n    /**\n     * Retrieves a new app access token.\n     */\n    ClientCredentialsAuthProvider.prototype.refresh = function () {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            var _a;\n            return tslib_1.__generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0:\n                        _a = this;\n                        return [4 /*yield*/, TwitchClient_1.default.getAppAccessToken(this._clientId, this._clientSecret)];\n                    case 1: return [2 /*return*/, _a._token = _b.sent()];\n                }\n            });\n        });\n    };\n    /** @private */\n    ClientCredentialsAuthProvider.prototype.setAccessToken = function (token) {\n        this._token = token;\n    };\n    Object.defineProperty(ClientCredentialsAuthProvider.prototype, \"clientId\", {\n        /**\n         * The client ID.\n         */\n        get: function () {\n            return this._clientId;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ClientCredentialsAuthProvider.prototype, \"currentScopes\", {\n        /**\n         * The scopes that are currently available using the access token.\n         */\n        get: function () {\n            return [];\n        },\n        enumerable: true,\n        configurable: true\n    });\n    tslib_1.__decorate([\n        NonEnumerable_1.NonEnumerable\n    ], ClientCredentialsAuthProvider.prototype, \"_clientId\", void 0);\n    tslib_1.__decorate([\n        NonEnumerable_1.NonEnumerable\n    ], ClientCredentialsAuthProvider.prototype, \"_clientSecret\", void 0);\n    tslib_1.__decorate([\n        NonEnumerable_1.NonEnumerable\n    ], ClientCredentialsAuthProvider.prototype, \"_token\", void 0);\n    return ClientCredentialsAuthProvider;\n}());\nexports.default = ClientCredentialsAuthProvider;\n//# sourceMappingURL=ClientCredentialsAuthProvider.js.map","(function (self) {\n  'use strict';\n\n  function fetchPonyfill(options) {\n    var Promise = options && options.Promise || self.Promise;\n    var XMLHttpRequest = options && options.XMLHttpRequest || self.XMLHttpRequest;\n    var global = self;\n\n    return (function () {\n      var self = Object.create(global, {\n        fetch: {\n          value: undefined,\n          writable: true\n        }\n      });\n\n      (function(self) {\n        'use strict';\n\n        if (self.fetch) {\n          return\n        }\n\n        var support = {\n          searchParams: 'URLSearchParams' in self,\n          iterable: 'Symbol' in self && 'iterator' in Symbol,\n          blob: 'FileReader' in self && 'Blob' in self && (function() {\n            try {\n              new Blob()\n              return true\n            } catch(e) {\n              return false\n            }\n          })(),\n          formData: 'FormData' in self,\n          arrayBuffer: 'ArrayBuffer' in self\n        }\n\n        if (support.arrayBuffer) {\n          var viewClasses = [\n            '[object Int8Array]',\n            '[object Uint8Array]',\n            '[object Uint8ClampedArray]',\n            '[object Int16Array]',\n            '[object Uint16Array]',\n            '[object Int32Array]',\n            '[object Uint32Array]',\n            '[object Float32Array]',\n            '[object Float64Array]'\n          ]\n\n          var isDataView = function(obj) {\n            return obj && DataView.prototype.isPrototypeOf(obj)\n          }\n\n          var isArrayBufferView = ArrayBuffer.isView || function(obj) {\n            return obj && viewClasses.indexOf(Object.prototype.toString.call(obj)) > -1\n          }\n        }\n\n        function normalizeName(name) {\n          if (typeof name !== 'string') {\n            name = String(name)\n          }\n          if (/[^a-z0-9\\-#$%&'*+.\\^_`|~]/i.test(name)) {\n            throw new TypeError('Invalid character in header field name')\n          }\n          return name.toLowerCase()\n        }\n\n        function normalizeValue(value) {\n          if (typeof value !== 'string') {\n            value = String(value)\n          }\n          return value\n        }\n\n        // Build a destructive iterator for the value list\n        function iteratorFor(items) {\n          var iterator = {\n            next: function() {\n              var value = items.shift()\n              return {done: value === undefined, value: value}\n            }\n          }\n\n          if (support.iterable) {\n            iterator[Symbol.iterator] = function() {\n              return iterator\n            }\n          }\n\n          return iterator\n        }\n\n        function Headers(headers) {\n          this.map = {}\n\n          if (headers instanceof Headers) {\n            headers.forEach(function(value, name) {\n              this.append(name, value)\n            }, this)\n          } else if (Array.isArray(headers)) {\n            headers.forEach(function(header) {\n              this.append(header[0], header[1])\n            }, this)\n          } else if (headers) {\n            Object.getOwnPropertyNames(headers).forEach(function(name) {\n              this.append(name, headers[name])\n            }, this)\n          }\n        }\n\n        Headers.prototype.append = function(name, value) {\n          name = normalizeName(name)\n          value = normalizeValue(value)\n          var oldValue = this.map[name]\n          this.map[name] = oldValue ? oldValue+','+value : value\n        }\n\n        Headers.prototype['delete'] = function(name) {\n          delete this.map[normalizeName(name)]\n        }\n\n        Headers.prototype.get = function(name) {\n          name = normalizeName(name)\n          return this.has(name) ? this.map[name] : null\n        }\n\n        Headers.prototype.has = function(name) {\n          return this.map.hasOwnProperty(normalizeName(name))\n        }\n\n        Headers.prototype.set = function(name, value) {\n          this.map[normalizeName(name)] = normalizeValue(value)\n        }\n\n        Headers.prototype.forEach = function(callback, thisArg) {\n          for (var name in this.map) {\n            if (this.map.hasOwnProperty(name)) {\n              callback.call(thisArg, this.map[name], name, this)\n            }\n          }\n        }\n\n        Headers.prototype.keys = function() {\n          var items = []\n          this.forEach(function(value, name) { items.push(name) })\n          return iteratorFor(items)\n        }\n\n        Headers.prototype.values = function() {\n          var items = []\n          this.forEach(function(value) { items.push(value) })\n          return iteratorFor(items)\n        }\n\n        Headers.prototype.entries = function() {\n          var items = []\n          this.forEach(function(value, name) { items.push([name, value]) })\n          return iteratorFor(items)\n        }\n\n        if (support.iterable) {\n          Headers.prototype[Symbol.iterator] = Headers.prototype.entries\n        }\n\n        function consumed(body) {\n          if (body.bodyUsed) {\n            return Promise.reject(new TypeError('Already read'))\n          }\n          body.bodyUsed = true\n        }\n\n        function fileReaderReady(reader) {\n          return new Promise(function(resolve, reject) {\n            reader.onload = function() {\n              resolve(reader.result)\n            }\n            reader.onerror = function() {\n              reject(reader.error)\n            }\n          })\n        }\n\n        function readBlobAsArrayBuffer(blob) {\n          var reader = new FileReader()\n          var promise = fileReaderReady(reader)\n          reader.readAsArrayBuffer(blob)\n          return promise\n        }\n\n        function readBlobAsText(blob) {\n          var reader = new FileReader()\n          var promise = fileReaderReady(reader)\n          reader.readAsText(blob)\n          return promise\n        }\n\n        function readArrayBufferAsText(buf) {\n          var view = new Uint8Array(buf)\n          var chars = new Array(view.length)\n\n          for (var i = 0; i < view.length; i++) {\n            chars[i] = String.fromCharCode(view[i])\n          }\n          return chars.join('')\n        }\n\n        function bufferClone(buf) {\n          if (buf.slice) {\n            return buf.slice(0)\n          } else {\n            var view = new Uint8Array(buf.byteLength)\n            view.set(new Uint8Array(buf))\n            return view.buffer\n          }\n        }\n\n        function Body() {\n          this.bodyUsed = false\n\n          this._initBody = function(body) {\n            this._bodyInit = body\n            if (!body) {\n              this._bodyText = ''\n            } else if (typeof body === 'string') {\n              this._bodyText = body\n            } else if (support.blob && Blob.prototype.isPrototypeOf(body)) {\n              this._bodyBlob = body\n            } else if (support.formData && FormData.prototype.isPrototypeOf(body)) {\n              this._bodyFormData = body\n            } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n              this._bodyText = body.toString()\n            } else if (support.arrayBuffer && support.blob && isDataView(body)) {\n              this._bodyArrayBuffer = bufferClone(body.buffer)\n              // IE 10-11 can't handle a DataView body.\n              this._bodyInit = new Blob([this._bodyArrayBuffer])\n            } else if (support.arrayBuffer && (ArrayBuffer.prototype.isPrototypeOf(body) || isArrayBufferView(body))) {\n              this._bodyArrayBuffer = bufferClone(body)\n            } else {\n              throw new Error('unsupported BodyInit type')\n            }\n\n            if (!this.headers.get('content-type')) {\n              if (typeof body === 'string') {\n                this.headers.set('content-type', 'text/plain;charset=UTF-8')\n              } else if (this._bodyBlob && this._bodyBlob.type) {\n                this.headers.set('content-type', this._bodyBlob.type)\n              } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n                this.headers.set('content-type', 'application/x-www-form-urlencoded;charset=UTF-8')\n              }\n            }\n          }\n\n          if (support.blob) {\n            this.blob = function() {\n              var rejected = consumed(this)\n              if (rejected) {\n                return rejected\n              }\n\n              if (this._bodyBlob) {\n                return Promise.resolve(this._bodyBlob)\n              } else if (this._bodyArrayBuffer) {\n                return Promise.resolve(new Blob([this._bodyArrayBuffer]))\n              } else if (this._bodyFormData) {\n                throw new Error('could not read FormData body as blob')\n              } else {\n                return Promise.resolve(new Blob([this._bodyText]))\n              }\n            }\n\n            this.arrayBuffer = function() {\n              if (this._bodyArrayBuffer) {\n                return consumed(this) || Promise.resolve(this._bodyArrayBuffer)\n              } else {\n                return this.blob().then(readBlobAsArrayBuffer)\n              }\n            }\n          }\n\n          this.text = function() {\n            var rejected = consumed(this)\n            if (rejected) {\n              return rejected\n            }\n\n            if (this._bodyBlob) {\n              return readBlobAsText(this._bodyBlob)\n            } else if (this._bodyArrayBuffer) {\n              return Promise.resolve(readArrayBufferAsText(this._bodyArrayBuffer))\n            } else if (this._bodyFormData) {\n              throw new Error('could not read FormData body as text')\n            } else {\n              return Promise.resolve(this._bodyText)\n            }\n          }\n\n          if (support.formData) {\n            this.formData = function() {\n              return this.text().then(decode)\n            }\n          }\n\n          this.json = function() {\n            return this.text().then(JSON.parse)\n          }\n\n          return this\n        }\n\n        // HTTP methods whose capitalization should be normalized\n        var methods = ['DELETE', 'GET', 'HEAD', 'OPTIONS', 'POST', 'PUT']\n\n        function normalizeMethod(method) {\n          var upcased = method.toUpperCase()\n          return (methods.indexOf(upcased) > -1) ? upcased : method\n        }\n\n        function Request(input, options) {\n          options = options || {}\n          var body = options.body\n\n          if (input instanceof Request) {\n            if (input.bodyUsed) {\n              throw new TypeError('Already read')\n            }\n            this.url = input.url\n            this.credentials = input.credentials\n            if (!options.headers) {\n              this.headers = new Headers(input.headers)\n            }\n            this.method = input.method\n            this.mode = input.mode\n            if (!body && input._bodyInit != null) {\n              body = input._bodyInit\n              input.bodyUsed = true\n            }\n          } else {\n            this.url = String(input)\n          }\n\n          this.credentials = options.credentials || this.credentials || 'omit'\n          if (options.headers || !this.headers) {\n            this.headers = new Headers(options.headers)\n          }\n          this.method = normalizeMethod(options.method || this.method || 'GET')\n          this.mode = options.mode || this.mode || null\n          this.referrer = null\n\n          if ((this.method === 'GET' || this.method === 'HEAD') && body) {\n            throw new TypeError('Body not allowed for GET or HEAD requests')\n          }\n          this._initBody(body)\n        }\n\n        Request.prototype.clone = function() {\n          return new Request(this, { body: this._bodyInit })\n        }\n\n        function decode(body) {\n          var form = new FormData()\n          body.trim().split('&').forEach(function(bytes) {\n            if (bytes) {\n              var split = bytes.split('=')\n              var name = split.shift().replace(/\\+/g, ' ')\n              var value = split.join('=').replace(/\\+/g, ' ')\n              form.append(decodeURIComponent(name), decodeURIComponent(value))\n            }\n          })\n          return form\n        }\n\n        function parseHeaders(rawHeaders) {\n          var headers = new Headers()\n          // Replace instances of \\r\\n and \\n followed by at least one space or horizontal tab with a space\n          // https://tools.ietf.org/html/rfc7230#section-3.2\n          var preProcessedHeaders = rawHeaders.replace(/\\r?\\n[\\t ]+/g, ' ')\n          preProcessedHeaders.split(/\\r?\\n/).forEach(function(line) {\n            var parts = line.split(':')\n            var key = parts.shift().trim()\n            if (key) {\n              var value = parts.join(':').trim()\n              headers.append(key, value)\n            }\n          })\n          return headers\n        }\n\n        Body.call(Request.prototype)\n\n        function Response(bodyInit, options) {\n          if (!options) {\n            options = {}\n          }\n\n          this.type = 'default'\n          this.status = options.status === undefined ? 200 : options.status\n          this.ok = this.status >= 200 && this.status < 300\n          this.statusText = 'statusText' in options ? options.statusText : 'OK'\n          this.headers = new Headers(options.headers)\n          this.url = options.url || ''\n          this._initBody(bodyInit)\n        }\n\n        Body.call(Response.prototype)\n\n        Response.prototype.clone = function() {\n          return new Response(this._bodyInit, {\n            status: this.status,\n            statusText: this.statusText,\n            headers: new Headers(this.headers),\n            url: this.url\n          })\n        }\n\n        Response.error = function() {\n          var response = new Response(null, {status: 0, statusText: ''})\n          response.type = 'error'\n          return response\n        }\n\n        var redirectStatuses = [301, 302, 303, 307, 308]\n\n        Response.redirect = function(url, status) {\n          if (redirectStatuses.indexOf(status) === -1) {\n            throw new RangeError('Invalid status code')\n          }\n\n          return new Response(null, {status: status, headers: {location: url}})\n        }\n\n        self.Headers = Headers\n        self.Request = Request\n        self.Response = Response\n\n        self.fetch = function(input, init) {\n          return new Promise(function(resolve, reject) {\n            var request = new Request(input, init)\n            var xhr = new XMLHttpRequest()\n\n            xhr.onload = function() {\n              var options = {\n                status: xhr.status,\n                statusText: xhr.statusText,\n                headers: parseHeaders(xhr.getAllResponseHeaders() || '')\n              }\n              options.url = 'responseURL' in xhr ? xhr.responseURL : options.headers.get('X-Request-URL')\n              var body = 'response' in xhr ? xhr.response : xhr.responseText\n              resolve(new Response(body, options))\n            }\n\n            xhr.onerror = function() {\n              reject(new TypeError('Network request failed'))\n            }\n\n            xhr.ontimeout = function() {\n              reject(new TypeError('Network request failed'))\n            }\n\n            xhr.open(request.method, request.url, true)\n\n            if (request.credentials === 'include') {\n              xhr.withCredentials = true\n            } else if (request.credentials === 'omit') {\n              xhr.withCredentials = false\n            }\n\n            if ('responseType' in xhr && support.blob) {\n              xhr.responseType = 'blob'\n            }\n\n            request.headers.forEach(function(value, name) {\n              xhr.setRequestHeader(name, value)\n            })\n\n            xhr.send(typeof request._bodyInit === 'undefined' ? null : request._bodyInit)\n          })\n        }\n        self.fetch.polyfill = true\n      })(typeof self !== 'undefined' ? self : this);\n\n\n      return {\n        fetch: self.fetch,\n        Headers: self.Headers,\n        Request: self.Request,\n        Response: self.Response\n      };\n    }());\n  }\n\n  if (typeof define === 'function' && define.amd) {\n    define(function () {\n      return fetchPonyfill;\n    });\n  } else if (typeof exports === 'object') {\n    module.exports = fetchPonyfill;\n  } else {\n    self.fetchPonyfill = fetchPonyfill;\n  }\n}(typeof self !== 'undefined' ? self : typeof global !== 'undefined' ? global : this));\n\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar BaseAPI_1 = require(\"../../BaseAPI\");\nvar TwitchClient_1 = require(\"../../../TwitchClient\");\nvar HelixClip_1 = require(\"./HelixClip\");\nvar HelixPaginatedRequest_1 = require(\"../HelixPaginatedRequest\");\n/**\n * The Helix API methods that deal with clips.\n *\n * Can be accessed using `client.helix.clips` on a {@TwitchClient} instance.\n *\n * ## Example\n * ```ts\n * const client = await TwitchClient.withCredentials(clientId, accessToken);\n * const clipId = await client.helix.clips.createClip({ channelId: '125328655' });\n * ```\n */\nvar HelixClipAPI = /** @class */ (function (_super) {\n    tslib_1.__extends(HelixClipAPI, _super);\n    function HelixClipAPI() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * Retrieves the latest clips for the specified broadcaster.\n     *\n     * @param userId The broadcaster's user ID.\n     * @param filter\n     *\n     * @expandParams\n     */\n    HelixClipAPI.prototype.getClipsForBroadcaster = function (userId, filter) {\n        if (filter === void 0) { filter = {}; }\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            return tslib_1.__generator(this, function (_a) {\n                return [2 /*return*/, this._getClips(tslib_1.__assign({}, filter, { filterType: 'broadcaster_id', ids: userId }))];\n            });\n        });\n    };\n    /**\n     * Creates a paginator for the latest clips for the specified broadcaster.\n     *\n     * @param userId The broadcaster's user ID.\n     * @param filter\n     *\n     * @expandParams\n     */\n    HelixClipAPI.prototype.getClipsForBroadcasterPaginated = function (userId, filter) {\n        if (filter === void 0) { filter = {}; }\n        return this._getClipsPaginated(tslib_1.__assign({}, filter, { filterType: 'broadcaster_id', ids: userId }));\n    };\n    /**\n     * Retrieves the latest clips for the specified game.\n     *\n     * @param gameId The game ID.\n     * @param filter\n     *\n     * @expandParams\n     */\n    HelixClipAPI.prototype.getClipsForGame = function (gameId, filter) {\n        if (filter === void 0) { filter = {}; }\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            return tslib_1.__generator(this, function (_a) {\n                return [2 /*return*/, this._getClips(tslib_1.__assign({}, filter, { filterType: 'game_id', ids: gameId }))];\n            });\n        });\n    };\n    /**\n     * Creates a paginator for the latest clips for the specified game.\n     *\n     * @param gameId The game ID.\n     * @param filter\n     *\n     * @expandParams\n     */\n    HelixClipAPI.prototype.getClipsForGamePaginated = function (gameId, filter) {\n        if (filter === void 0) { filter = {}; }\n        return this._getClipsPaginated(tslib_1.__assign({}, filter, { filterType: 'game_id', ids: gameId }));\n    };\n    /**\n     * Retrieves the clips identified by the given IDs.\n     *\n     * @param ids The clip IDs.\n     */\n    HelixClipAPI.prototype.getClipsByIds = function (ids) {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            var result;\n            return tslib_1.__generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this._getClips({\n                            filterType: 'id',\n                            ids: ids\n                        })];\n                    case 1:\n                        result = _a.sent();\n                        return [2 /*return*/, result.data];\n                }\n            });\n        });\n    };\n    /**\n     * Retrieves the clip identified by the given ID.\n     *\n     * @param id The clip ID.\n     */\n    HelixClipAPI.prototype.getClipById = function (id) {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            var clips;\n            return tslib_1.__generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this.getClipsByIds([id])];\n                    case 1:\n                        clips = _a.sent();\n                        return [2 /*return*/, clips.length ? clips[0] : null];\n                }\n            });\n        });\n    };\n    /**\n     * Creates a clip of a running stream.\n     *\n     * Returns the ID of the clip.\n     *\n     * @expandParams\n     */\n    HelixClipAPI.prototype.createClip = function (params) {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            var channelId, _a, createAfterDelay, result;\n            return tslib_1.__generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0:\n                        channelId = params.channelId, _a = params.createAfterDelay, createAfterDelay = _a === void 0 ? false : _a;\n                        return [4 /*yield*/, this._client.callAPI({\n                                type: TwitchClient_1.TwitchAPICallType.Helix,\n                                url: 'clips',\n                                method: 'POST',\n                                scope: 'clips:edit',\n                                query: {\n                                    broadcaster_id: channelId,\n                                    has_delay: createAfterDelay.toString()\n                                }\n                            })];\n                    case 1:\n                        result = _b.sent();\n                        return [2 /*return*/, result.data[0].id];\n                }\n            });\n        });\n    };\n    HelixClipAPI.prototype._getClips = function (params) {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            var filterType, ids, startDate, endDate, _a, limit, result;\n            var _b;\n            var _this = this;\n            return tslib_1.__generator(this, function (_c) {\n                switch (_c.label) {\n                    case 0:\n                        filterType = params.filterType, ids = params.ids, startDate = params.startDate, endDate = params.endDate, _a = params.limit, limit = _a === void 0 ? 20 : _a;\n                        return [4 /*yield*/, this._client.callAPI({\n                                type: TwitchClient_1.TwitchAPICallType.Helix,\n                                url: 'clips',\n                                query: (_b = {},\n                                    _b[filterType] = ids,\n                                    _b.started_at = startDate,\n                                    _b.ended_at = endDate,\n                                    _b.first = limit.toString(),\n                                    _b)\n                            })];\n                    case 1:\n                        result = _c.sent();\n                        return [2 /*return*/, {\n                                data: result.data.map(function (data) { return new HelixClip_1.default(data, _this._client); }),\n                                cursor: result.pagination && result.pagination.cursor\n                            }];\n                }\n            });\n        });\n    };\n    HelixClipAPI.prototype._getClipsPaginated = function (params) {\n        var _a;\n        var _this = this;\n        var filterType = params.filterType, ids = params.ids, startDate = params.startDate, endDate = params.endDate;\n        return new HelixPaginatedRequest_1.default({\n            url: 'clips',\n            query: (_a = {},\n                _a[filterType] = ids,\n                _a.started_at = startDate,\n                _a.ended_at = endDate,\n                _a)\n        }, this._client, function (data) { return new HelixClip_1.default(data, _this._client); });\n    };\n    return HelixClipAPI;\n}(BaseAPI_1.default));\nexports.default = HelixClipAPI;\n//# sourceMappingURL=HelixClipAPI.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar BaseAPI_1 = require(\"../../BaseAPI\");\nvar TwitchClient_1 = require(\"../../../TwitchClient\");\nvar HelixVideo_1 = require(\"./HelixVideo\");\nvar UserTools_1 = require(\"../../../Toolkit/UserTools\");\nvar HelixPaginatedRequest_1 = require(\"../HelixPaginatedRequest\");\n/**\n * The Helix API methods that deal with videos.\n *\n * Can be accessed using `client.helix.videos` on a {@TwitchClient} instance.\n *\n * ## Example\n * ```ts\n * const client = await TwitchClient.withCredentials(clientId, accessToken);\n * const videos = await client.helix.videos.getVideosByUser('125328655');\n * ```\n */\nvar HelixVideoAPI = /** @class */ (function (_super) {\n    tslib_1.__extends(HelixVideoAPI, _super);\n    function HelixVideoAPI() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * Retrieves the video data for the given list of video IDs.\n     *\n     * @param ids The video IDs you want to look up.\n     */\n    HelixVideoAPI.prototype.getVideosByIds = function (ids) {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            var result;\n            return tslib_1.__generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this._getVideos('id', ids)];\n                    case 1:\n                        result = _a.sent();\n                        return [2 /*return*/, result.data];\n                }\n            });\n        });\n    };\n    /**\n     * Retrieves the video data for the given video ID.\n     *\n     * @param id The video ID you want to look up.\n     */\n    HelixVideoAPI.prototype.getVideoById = function (id) {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            var videos;\n            return tslib_1.__generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this.getVideosByIds(id)];\n                    case 1:\n                        videos = _a.sent();\n                        return [2 /*return*/, videos.length ? videos[0] : null];\n                }\n            });\n        });\n    };\n    /**\n     * Retrieves the videos of the given user.\n     *\n     * @param user The user you want to retrieve videos from.\n     * @param filter Additional filters for the result set.\n     */\n    HelixVideoAPI.prototype.getVideosByUser = function (user, filter) {\n        if (filter === void 0) { filter = {}; }\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            var userId;\n            return tslib_1.__generator(this, function (_a) {\n                userId = UserTools_1.extractUserId(user);\n                return [2 /*return*/, this._getVideos('user_id', userId, filter)];\n            });\n        });\n    };\n    /**\n     * Creates a paginator for videos of the given user.\n     *\n     * @param user The user you want to retrieve videos from.\n     * @param filter Additional filters for the result set.\n     */\n    HelixVideoAPI.prototype.getVideosByUserPaginated = function (user, filter) {\n        if (filter === void 0) { filter = {}; }\n        var userId = UserTools_1.extractUserId(user);\n        return this._getVideosPaginated('user_id', userId, filter);\n    };\n    /**\n     * Retrieves the videos of the given game.\n     *\n     * @param gameId The game you want to retrieve videos from.\n     * @param filter Additional filters for the result set.\n     */\n    HelixVideoAPI.prototype.getVideosByGame = function (gameId, filter) {\n        if (filter === void 0) { filter = {}; }\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            return tslib_1.__generator(this, function (_a) {\n                return [2 /*return*/, this._getVideos('game_id', gameId, filter)];\n            });\n        });\n    };\n    /**\n     * Creates a paginator for videos of the given game.\n     *\n     * @param gameId The game you want to retrieve videos from.\n     * @param filter Additional filters for the result set.\n     */\n    HelixVideoAPI.prototype.getVideosByGamePaginated = function (gameId, filter) {\n        if (filter === void 0) { filter = {}; }\n        return this._getVideosPaginated('game_id', gameId, filter);\n    };\n    HelixVideoAPI.prototype._getVideos = function (filterType, filterValues, filter) {\n        if (filter === void 0) { filter = {}; }\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            var result;\n            var _this = this;\n            return tslib_1.__generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this._client.callAPI({\n                            url: 'videos',\n                            type: TwitchClient_1.TwitchAPICallType.Helix,\n                            query: HelixVideoAPI._makeVideosQuery(filterType, filterValues, filter)\n                        })];\n                    case 1:\n                        result = _a.sent();\n                        return [2 /*return*/, {\n                                data: result.data.map(function (data) { return new HelixVideo_1.default(data, _this._client); }),\n                                cursor: result.pagination && result.pagination.cursor\n                            }];\n                }\n            });\n        });\n    };\n    HelixVideoAPI.prototype._getVideosPaginated = function (filterType, filterValues, filter) {\n        var _this = this;\n        if (filter === void 0) { filter = {}; }\n        return new HelixPaginatedRequest_1.default({\n            url: 'videos',\n            query: HelixVideoAPI._makeVideosQuery(filterType, filterValues, filter)\n        }, this._client, function (data) { return new HelixVideo_1.default(data, _this._client); });\n    };\n    HelixVideoAPI._makeVideosQuery = function (filterType, filterValues, filter) {\n        var _a;\n        if (filter === void 0) { filter = {}; }\n        var language = filter.language, period = filter.period, orderBy = filter.orderBy, type = filter.type;\n        return _a = {},\n            _a[filterType] = filterValues,\n            _a.language = language,\n            _a.period = period,\n            _a.sort = orderBy,\n            _a.type = type,\n            _a;\n    };\n    return HelixVideoAPI;\n}(BaseAPI_1.default));\nexports.default = HelixVideoAPI;\n//# sourceMappingURL=HelixVideoAPI.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar Cache_1 = require(\"../../../Toolkit/Decorators/Cache\");\nvar BaseAPI_1 = require(\"../../BaseAPI\");\nvar Channel_1 = require(\"../Channel/Channel\");\nvar Stream_1 = require(\"../Stream/Stream\");\n/**\n * The API methods that deal with searching.\n *\n * Can be accessed using `client.kraken.search` on a {@TwitchClient} instance.\n *\n * ## Example\n * ```ts\n * const client = await TwitchClient.withCredentials(clientId, accessToken);\n * const channel = await client.kraken.search.searchStreams('Hearthstone');\n * ```\n */\nvar SearchAPI = /** @class */ (function (_super) {\n    tslib_1.__extends(SearchAPI, _super);\n    function SearchAPI() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * Retrieves a list of channels that match the given search term.\n     *\n     * @param term The term you want to search for.\n     * @param page The result page you want to retrieve.\n     * @param limit The number of results you want to retrieve.\n     */\n    SearchAPI.prototype.searchChannels = function (term, page, limit) {\n        if (limit === void 0) { limit = 25; }\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            var query, data;\n            var _this = this;\n            return tslib_1.__generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        query = { query: term, limit: limit.toString() };\n                        if (page) {\n                            query.offset = ((page - 1) * limit).toString();\n                        }\n                        return [4 /*yield*/, this._client.callAPI({ url: 'search/channels', query: query })];\n                    case 1:\n                        data = _a.sent();\n                        return [2 /*return*/, data.channels.map(function (channelData) { return new Channel_1.default(channelData, _this._client); })];\n                }\n            });\n        });\n    };\n    /**\n     * Retrieves a list of streams that match the given search term.\n     *\n     * @param term The term you want to search for.\n     * @param page The result page you want to retrieve.\n     * @param limit The number of results you want to retrieve.\n     * @param hls Whether you want only HLS or only non-HLS (RTMP) streams. If not set, finds both types of streams.\n     */\n    SearchAPI.prototype.searchStreams = function (term, page, limit, hls) {\n        if (limit === void 0) { limit = 25; }\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            var query, data;\n            var _this = this;\n            return tslib_1.__generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        query = { query: term, limit: limit.toString() };\n                        if (page) {\n                            query.offset = ((page - 1) * limit).toString();\n                        }\n                        if (hls !== undefined) {\n                            query.hls = hls.toString();\n                        }\n                        return [4 /*yield*/, this._client.callAPI({ url: 'search/streams', query: query })];\n                    case 1:\n                        data = _a.sent();\n                        return [2 /*return*/, data.streams.map(function (streamData) { return new Stream_1.default(streamData, _this._client); })];\n                }\n            });\n        });\n    };\n    tslib_1.__decorate([\n        Cache_1.Cached(300)\n    ], SearchAPI.prototype, \"searchChannels\", null);\n    tslib_1.__decorate([\n        Cache_1.Cached(300)\n    ], SearchAPI.prototype, \"searchStreams\", null);\n    SearchAPI = tslib_1.__decorate([\n        Cache_1.Cacheable\n    ], SearchAPI);\n    return SearchAPI;\n}(BaseAPI_1.default));\nexports.default = SearchAPI;\n//# sourceMappingURL=SearchAPI.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar BaseAPI_1 = require(\"../../BaseAPI\");\nvar Cache_1 = require(\"../../../Toolkit/Decorators/Cache\");\nvar Team_1 = require(\"./Team\");\nvar TeamWithUsers_1 = require(\"./TeamWithUsers\");\n/**\n * The API methods that deal with teams.\n *\n * Can be accessed using `client.kraken.teams` on a {@TwitchClient} instance.\n *\n * ## Example\n * ```ts\n * const client = await TwitchClient.withCredentials(clientId, accessToken);\n * const team = await client.kraken.teams.getTeamByName('staff');\n * ```\n */\nvar TeamAPI = /** @class */ (function (_super) {\n    tslib_1.__extends(TeamAPI, _super);\n    function TeamAPI() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * Get a list of teams.\n     *\n     * @param page The result page you want to retrieve.\n     * @param limit The number of results you want to retrieve.\n     */\n    TeamAPI.prototype.getTeams = function (page, limit) {\n        if (limit === void 0) { limit = 25; }\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            var query, data;\n            var _this = this;\n            return tslib_1.__generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        query = {};\n                        if (page) {\n                            query.offset = ((page - 1) * limit).toString();\n                        }\n                        query.limit = limit.toString();\n                        return [4 /*yield*/, this._client.callAPI({\n                                url: 'teams', query: query\n                            })];\n                    case 1:\n                        data = _a.sent();\n                        return [2 /*return*/, data.teams.map(function (team) { return new Team_1.default(team, _this._client); })];\n                }\n            });\n        });\n    };\n    /**\n     * Retrieves the team data for the given team name.\n     *\n     * @param team The team name you want to look up.\n     */\n    TeamAPI.prototype.getTeamByName = function (team) {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            var teamData;\n            return tslib_1.__generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this._client.callAPI({ url: \"teams/\" + team })];\n                    case 1:\n                        teamData = _a.sent();\n                        return [2 /*return*/, new TeamWithUsers_1.default(teamData, this._client)];\n                }\n            });\n        });\n    };\n    tslib_1.__decorate([\n        Cache_1.Cached(3600)\n    ], TeamAPI.prototype, \"getTeams\", null);\n    tslib_1.__decorate([\n        Cache_1.Cached(3600)\n    ], TeamAPI.prototype, \"getTeamByName\", null);\n    TeamAPI = tslib_1.__decorate([\n        Cache_1.Cacheable\n    ], TeamAPI);\n    return TeamAPI;\n}(BaseAPI_1.default));\nexports.default = TeamAPI;\n//# sourceMappingURL=TeamAPI.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar NonEnumerable_1 = require(\"../../../Toolkit/Decorators/NonEnumerable\");\n/**\n * A game as displayed on Twitch.\n */\nvar HelixGame = /** @class */ (function () {\n    /** @private */\n    function HelixGame(_data, client) {\n        this._data = _data;\n        this._client = client;\n    }\n    Object.defineProperty(HelixGame.prototype, \"id\", {\n        /**\n         * The ID of the game.\n         */\n        get: function () {\n            return this._data.id;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(HelixGame.prototype, \"name\", {\n        /**\n         * The name of the game.\n         */\n        get: function () {\n            return this._data.name;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(HelixGame.prototype, \"boxArtUrl\", {\n        /**\n         * The URL of the box art of the game.\n         */\n        get: function () {\n            return this._data.box_art_url;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    tslib_1.__decorate([\n        NonEnumerable_1.NonEnumerable\n    ], HelixGame.prototype, \"_client\", void 0);\n    return HelixGame;\n}());\nexports.default = HelixGame;\n//# sourceMappingURL=HelixGame.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar qs = require(\"qs\");\nvar Cache_1 = require(\"./Toolkit/Decorators/Cache\");\nvar TokenInfo_1 = require(\"./API/TokenInfo\");\nvar CheermoteList_1 = require(\"./API/Kraken/Bits/CheermoteList\");\nvar AccessToken_1 = require(\"./API/AccessToken\");\nvar StaticAuthProvider_1 = require(\"./Auth/StaticAuthProvider\");\nvar RefreshableAuthProvider_1 = require(\"./Auth/RefreshableAuthProvider\");\nvar ClientCredentialsAuthProvider_1 = require(\"./Auth/ClientCredentialsAuthProvider\");\nvar ConfigError_1 = require(\"./Errors/ConfigError\");\nvar HTTPStatusCodeError_1 = require(\"./Errors/HTTPStatusCodeError\");\nvar KrakenAPIGroup_1 = require(\"./API/Kraken/KrakenAPIGroup\");\nvar HelixAPIGroup_1 = require(\"./API/Helix/HelixAPIGroup\");\nvar BadgesAPI_1 = require(\"./API/Badges/BadgesAPI\");\nvar UnsupportedAPI_1 = require(\"./API/Unsupported/UnsupportedAPI\");\nvar fetchPonyfill = require(\"fetch-ponyfill\");\nvar _a = fetchPonyfill(), fetch = _a.fetch, Headers = _a.Headers;\n/**\n * The endpoint to call, i.e. /kraken, /helix or a custom (potentially unsupported) endpoint.\n */\nvar TwitchAPICallType;\n(function (TwitchAPICallType) {\n    /**\n     * Call a Kraken API endpoint.\n     */\n    TwitchAPICallType[TwitchAPICallType[\"Kraken\"] = 0] = \"Kraken\";\n    /**\n     * Call a Helix API endpoint.\n     */\n    TwitchAPICallType[TwitchAPICallType[\"Helix\"] = 1] = \"Helix\";\n    /**\n     * Call a custom (potentially unsupported) endpoint.\n     */\n    TwitchAPICallType[TwitchAPICallType[\"Custom\"] = 2] = \"Custom\";\n})(TwitchAPICallType = exports.TwitchAPICallType || (exports.TwitchAPICallType = {}));\n/**\n * The main entry point of this library. Manages API calls and the use of access tokens in these.\n */\nvar TwitchClient = /** @class */ (function () {\n    /**\n     * Creates a new Twitch client instance.\n     *\n     * @param config Configuration for the client instance.\n     */\n    function TwitchClient(config) {\n        var authProvider = config.authProvider, restConfig = tslib_1.__rest(config, [\"authProvider\"]);\n        if (!authProvider) {\n            throw new ConfigError_1.default('No auth provider given');\n        }\n        this._config = tslib_1.__assign({ preAuth: false, cheermotes: {\n                defaultBackground: CheermoteList_1.CheermoteBackground.dark,\n                defaultState: CheermoteList_1.CheermoteState.animated,\n                defaultScale: CheermoteList_1.CheermoteScale.x1\n            }, authProvider: authProvider }, restConfig);\n        if (this._config.preAuth) {\n            // tslint:disable-next-line:no-floating-promises\n            authProvider.getAccessToken(this._config.initialScopes);\n        }\n    }\n    TwitchClient_1 = TwitchClient;\n    /**\n     * Creates a new instance with fixed credentials.\n     *\n     * @param clientId The client ID of your application.\n     * @param accessToken The access token to call the API with.\n     *\n     * You need to obtain one using one of the [Twitch OAuth flows](https://dev.twitch.tv/docs/authentication/getting-tokens-oauth/).\n     * @param scopes The scopes your supplied token has.\n     *\n     * If this argument is given, the scopes need to be correct, or weird things might happen. If it's not (i.e. it's `undefined`), we fetch the correct scopes for you.\n     *\n     * If you can't exactly say which scopes your token has, don't use this parameter/set it to `undefined`.\n     * @param refreshConfig Configuration to automatically refresh expired tokens.\n     * @param config Additional configuration to pass to the constructor.\n     *\n     * Note that if you provide a custom `authProvider`, this method will overwrite it. In this case, you should use the constructor directly.\n     */\n    TwitchClient.withCredentials = function (clientId, accessToken, scopes, refreshConfig, config) {\n        if (config === void 0) { config = {}; }\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            var tokenData, newToken, authProvider;\n            return tslib_1.__generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        if (!(!scopes && accessToken)) return [3 /*break*/, 6];\n                        return [4 /*yield*/, this.getTokenInfo(clientId, accessToken)];\n                    case 1:\n                        tokenData = _a.sent();\n                        if (!!tokenData.valid) return [3 /*break*/, 5];\n                        if (!refreshConfig) return [3 /*break*/, 4];\n                        return [4 /*yield*/, this.refreshAccessToken(clientId, refreshConfig.clientSecret, refreshConfig.refreshToken)];\n                    case 2:\n                        newToken = _a.sent();\n                        accessToken = newToken.accessToken;\n                        return [4 /*yield*/, this.getTokenInfo(clientId, accessToken)];\n                    case 3:\n                        tokenData = _a.sent();\n                        _a.label = 4;\n                    case 4:\n                        if (!tokenData.valid) {\n                            throw new ConfigError_1.default('Supplied an invalid access token to retrieve scopes with');\n                        }\n                        _a.label = 5;\n                    case 5:\n                        scopes = tokenData.scopes;\n                        _a.label = 6;\n                    case 6:\n                        authProvider = refreshConfig\n                            ? new RefreshableAuthProvider_1.default(new StaticAuthProvider_1.default(clientId, accessToken, scopes), refreshConfig)\n                            : new StaticAuthProvider_1.default(clientId, accessToken, scopes);\n                        return [2 /*return*/, new this(tslib_1.__assign({}, config, { authProvider: authProvider }))];\n                }\n            });\n        });\n    };\n    /**\n     * Creates a new instance with client credentials.\n     *\n     * @param clientId The client ID of your application.\n     * @param clientSecret The client secret of your application.\n     * @param config Additional configuration to pass to the constructor.\n     *\n     * Note that if you provide a custom `authProvider`, this method will overwrite it. In this case, you should use the constructor directly.\n     */\n    TwitchClient.withClientCredentials = function (clientId, clientSecret, config) {\n        if (config === void 0) { config = {}; }\n        var authProvider = clientSecret\n            ? new ClientCredentialsAuthProvider_1.default(clientId, clientSecret)\n            : new StaticAuthProvider_1.default(clientId);\n        return new this(tslib_1.__assign({}, config, { authProvider: authProvider }));\n    };\n    /**\n     * Makes a call to the Twitch API using given credetials.\n     *\n     * @param options The configuration of the call.\n     * @param clientId The client ID of your application.\n     * @param accessToken The access token to call the API with.\n     *\n     * You need to obtain one using one of the [Twitch OAuth flows](https://dev.twitch.tv/docs/authentication/getting-tokens-oauth/).\n     */\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    TwitchClient.callAPI = function (options, clientId, accessToken) {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            var url, params, headers, body, requestOptions, response, _a, _b, text;\n            return tslib_1.__generator(this, function (_c) {\n                switch (_c.label) {\n                    case 0:\n                        url = this._getUrl(options.url, options.type);\n                        params = qs.stringify(options.query, { arrayFormat: 'repeat' });\n                        headers = new Headers({\n                            Accept: \"application/vnd.twitchtv.v\" + (options.version || 5) + \"+json\"\n                        });\n                        if (options.body) {\n                            body = qs.stringify(options.body);\n                            headers.append('Content-Type', 'application/x-www-form-urlencoded');\n                        }\n                        else if (options.jsonBody) {\n                            body = JSON.stringify(options.jsonBody);\n                            headers.append('Content-Type', 'application/json');\n                        }\n                        if (clientId) {\n                            headers.append('Client-ID', clientId);\n                        }\n                        if (accessToken) {\n                            headers.append('Authorization', (options.type === TwitchAPICallType.Helix ? 'Bearer' : 'OAuth') + \" \" + accessToken);\n                        }\n                        requestOptions = {\n                            method: options.method || 'GET',\n                            headers: headers,\n                            body: body\n                        };\n                        return [4 /*yield*/, fetch(params ? url + \"?\" + params : url, requestOptions)];\n                    case 1:\n                        response = _c.sent();\n                        if (!!response.ok) return [3 /*break*/, 3];\n                        _a = HTTPStatusCodeError_1.default.bind;\n                        _b = [void 0, response.status, response.statusText];\n                        return [4 /*yield*/, response.json()];\n                    case 2: throw new (_a.apply(HTTPStatusCodeError_1.default, _b.concat([_c.sent()])))();\n                    case 3:\n                        if (response.status === 204) {\n                            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                            return [2 /*return*/, undefined]; // oof\n                        }\n                        return [4 /*yield*/, response.text()];\n                    case 4:\n                        text = _c.sent();\n                        if (!text) {\n                            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                            return [2 /*return*/, undefined]; // mega oof - twitch doesn't return a response when it should\n                        }\n                        return [2 /*return*/, JSON.parse(text)];\n                }\n            });\n        });\n    };\n    /**\n     * Retrieves an access token with your client credentials and an authorization code.\n     *\n     * @param clientId The client ID of your application.\n     * @param clientSecret The client secret of your application.\n     * @param code The authorization code.\n     * @param redirectUri The redirect URI. This serves no real purpose here, but must still match with the redirect URI you configured in the Twitch Developer dashboard.\n     */\n    TwitchClient.getAccessToken = function (clientId, clientSecret, code, redirectUri) {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            var _a;\n            return tslib_1.__generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0:\n                        _a = AccessToken_1.default.bind;\n                        return [4 /*yield*/, this.callAPI({\n                                url: 'oauth2/token',\n                                method: 'POST',\n                                query: {\n                                    grant_type: 'authorization_code',\n                                    client_id: clientId,\n                                    client_secret: clientSecret,\n                                    code: code,\n                                    redirect_uri: redirectUri\n                                }\n                            })];\n                    case 1: return [2 /*return*/, new (_a.apply(AccessToken_1.default, [void 0, _b.sent()]))()];\n                }\n            });\n        });\n    };\n    /**\n     * Retrieves an app access token with your client credentials.\n     *\n     * @param clientId The client ID of your application.\n     * @param clientSecret The client secret of your application.\n     * @param clientSecret\n     */\n    TwitchClient.getAppAccessToken = function (clientId, clientSecret) {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            var _a;\n            return tslib_1.__generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0:\n                        _a = AccessToken_1.default.bind;\n                        return [4 /*yield*/, this.callAPI({\n                                url: 'oauth2/token',\n                                method: 'POST',\n                                query: {\n                                    grant_type: 'client_credentials',\n                                    client_id: clientId,\n                                    client_secret: clientSecret\n                                }\n                            })];\n                    case 1: return [2 /*return*/, new (_a.apply(AccessToken_1.default, [void 0, _b.sent()]))()];\n                }\n            });\n        });\n    };\n    /**\n     * Refreshes an expired access token with your client credentials and the refresh token that was given by the initial authentication.\n     *\n     * @param clientId The client ID of your application.\n     * @param clientSecret The client secret of your application.\n     * @param refreshToken The refresh token.\n     */\n    TwitchClient.refreshAccessToken = function (clientId, clientSecret, refreshToken) {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            var _a;\n            return tslib_1.__generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0:\n                        _a = AccessToken_1.default.bind;\n                        return [4 /*yield*/, this.callAPI({\n                                url: 'oauth2/token',\n                                method: 'POST',\n                                query: {\n                                    grant_type: 'refresh_token',\n                                    client_id: clientId,\n                                    client_secret: clientSecret,\n                                    refresh_token: refreshToken\n                                }\n                            })];\n                    case 1: return [2 /*return*/, new (_a.apply(AccessToken_1.default, [void 0, _b.sent()]))()];\n                }\n            });\n        });\n    };\n    /**\n     * Retrieves information about an access token.\n     *\n     * @param clientId The client ID of your application.\n     * @param accessToken The access token to get the information of.\n     *\n     * You need to obtain one using one of the [Twitch OAuth flows](https://dev.twitch.tv/docs/authentication/getting-tokens-oauth/).\n     */\n    TwitchClient.getTokenInfo = function (clientId, accessToken) {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            var data;\n            return tslib_1.__generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this.callAPI({ url: '/' }, clientId, accessToken)];\n                    case 1:\n                        data = _a.sent();\n                        return [2 /*return*/, new TokenInfo_1.default(data.token)];\n                }\n            });\n        });\n    };\n    /**\n     * Retrieves information about your access token.\n     */\n    TwitchClient.prototype.getTokenInfo = function () {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            var data;\n            return tslib_1.__generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this.callAPI({ url: '/' })];\n                    case 1:\n                        data = _a.sent();\n                        return [2 /*return*/, new TokenInfo_1.default(data.token)];\n                }\n            });\n        });\n    };\n    /**\n     * Retrieves an access token for the authentication provider.\n     *\n     * @param scopes The scopes to request.\n     */\n    TwitchClient.prototype.getAccessToken = function (scopes) {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            return tslib_1.__generator(this, function (_a) {\n                return [2 /*return*/, this._config.authProvider.getAccessToken(scopes)];\n            });\n        });\n    };\n    /**\n     * Forces the authentication provider to refresh the access token, if possible.\n     */\n    TwitchClient.prototype.refreshAccessToken = function () {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            return tslib_1.__generator(this, function (_a) {\n                return [2 /*return*/, this._config.authProvider.refresh && this._config.authProvider.refresh()];\n            });\n        });\n    };\n    /**\n     * Makes a call to the Twitch API using your access token.\n     *\n     * @param options The configuration of the call.\n     */\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    TwitchClient.prototype.callAPI = function (options) {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            var authProvider, accessToken;\n            return tslib_1.__generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        authProvider = this._config.authProvider;\n                        return [4 /*yield*/, authProvider.getAccessToken(options.scope ? [options.scope] : undefined)];\n                    case 1:\n                        accessToken = _a.sent();\n                        if (!accessToken) {\n                            return [2 /*return*/, TwitchClient_1.callAPI(options, authProvider.clientId)];\n                        }\n                        if (!(accessToken.isExpired && authProvider.refresh)) return [3 /*break*/, 3];\n                        return [4 /*yield*/, authProvider.refresh()];\n                    case 2:\n                        accessToken = _a.sent();\n                        _a.label = 3;\n                    case 3: return [2 /*return*/, TwitchClient_1.callAPI(options, authProvider.clientId, accessToken.accessToken)];\n                }\n            });\n        });\n    };\n    Object.defineProperty(TwitchClient.prototype, \"kraken\", {\n        /**\n         * A group of Kraken API methods.\n         */\n        get: function () {\n            return new KrakenAPIGroup_1.default(this);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(TwitchClient.prototype, \"helix\", {\n        /**\n         * A group of Helix API methods.\n         */\n        get: function () {\n            return new HelixAPIGroup_1.default(this);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(TwitchClient.prototype, \"badges\", {\n        /**\n         * The API methods that deal with badges.\n         */\n        get: function () {\n            return new BadgesAPI_1.default(this);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(TwitchClient.prototype, \"unsupported\", {\n        /**\n         * Various API methods that are not officially supported by Twitch.\n         */\n        get: function () {\n            return new UnsupportedAPI_1.default(this);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    TwitchClient._getUrl = function (url, type) {\n        type = type === undefined ? TwitchAPICallType.Kraken : type;\n        switch (type) {\n            case TwitchAPICallType.Kraken:\n            case TwitchAPICallType.Helix:\n                var typeName = type === TwitchAPICallType.Kraken ? 'kraken' : 'helix';\n                return \"https://api.twitch.tv/\" + typeName + \"/\" + url.replace(/^\\//, '');\n            case TwitchAPICallType.Custom:\n                return url;\n            default:\n                return url; // wat\n        }\n    };\n    var TwitchClient_1;\n    tslib_1.__decorate([\n        Cache_1.CachedGetter()\n    ], TwitchClient.prototype, \"kraken\", null);\n    tslib_1.__decorate([\n        Cache_1.CachedGetter()\n    ], TwitchClient.prototype, \"helix\", null);\n    tslib_1.__decorate([\n        Cache_1.CachedGetter()\n    ], TwitchClient.prototype, \"badges\", null);\n    tslib_1.__decorate([\n        Cache_1.CachedGetter()\n    ], TwitchClient.prototype, \"unsupported\", null);\n    TwitchClient = TwitchClient_1 = tslib_1.__decorate([\n        Cache_1.Cacheable\n    ], TwitchClient);\n    return TwitchClient;\n}());\nexports.default = TwitchClient;\n//# sourceMappingURL=TwitchClient.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar NonEnumerable_1 = require(\"../../Toolkit/Decorators/NonEnumerable\");\n/**\n * A version of a badge.\n */\nvar ChatBadgeVersion = /** @class */ (function () {\n    /** @private */\n    function ChatBadgeVersion(_data, client) {\n        this._data = _data;\n        this._client = client;\n    }\n    Object.defineProperty(ChatBadgeVersion.prototype, \"clickAction\", {\n        /**\n         * The action to execute when the badge is clicked.\n         */\n        get: function () {\n            return this._data.click_action;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ChatBadgeVersion.prototype, \"clickUrl\", {\n        /**\n         * The URL to visit when the badge is clicked.\n         *\n         * Only applies if clickAction === 'visit_url'.\n         */\n        get: function () {\n            return this._data.click_url;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ChatBadgeVersion.prototype, \"description\", {\n        /**\n         * The description of the badge.\n         */\n        get: function () {\n            return this._data.description;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Gets an image URL for the given scale.\n     *\n     * @param scale The scale of the badge image.\n     */\n    ChatBadgeVersion.prototype.getImageUrl = function (scale) {\n        return this._data[\"image_url_\" + scale + \"x\"];\n    };\n    Object.defineProperty(ChatBadgeVersion.prototype, \"title\", {\n        /**\n         * The title of the badge.\n         */\n        get: function () {\n            return this._data.title;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    tslib_1.__decorate([\n        NonEnumerable_1.NonEnumerable\n    ], ChatBadgeVersion.prototype, \"_client\", void 0);\n    return ChatBadgeVersion;\n}());\nexports.default = ChatBadgeVersion;\n//# sourceMappingURL=ChatBadgeVersion.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar UserTools_1 = require(\"../../../Toolkit/UserTools\");\nvar Cache_1 = require(\"../../../Toolkit/Decorators/Cache\");\nvar CheermoteList_1 = require(\"./CheermoteList\");\nvar BaseAPI_1 = require(\"../../BaseAPI\");\n/**\n * The API methods that deal with Bits/Cheermotes.\n *\n * Can be accessed using `client.kraken.bits` on a {@TwitchClient} instance.\n *\n * ## Example\n * ```ts\n * const client = await TwitchClient.withCredentials(clientId, accessToken);\n * const cheermotes = await client.kraken.bits.getCheermotes();\n * ```\n */\nvar BitsAPI = /** @class */ (function (_super) {\n    tslib_1.__extends(BitsAPI, _super);\n    function BitsAPI() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * Retrieves global and channel cheermotes.\n     *\n     * @param channel The channel you want to retrieve the available cheermotes for.\n     * If not given, this method retrieves a list of globally available cheermotes.\n     * @param includeSponsored Whether to include sponsored cheermotes in the list.\n     */\n    BitsAPI.prototype.getCheermotes = function (channel, includeSponsored) {\n        if (includeSponsored === void 0) { includeSponsored = true; }\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            var query, data;\n            return tslib_1.__generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        query = {};\n                        if (channel) {\n                            query.channel_id = UserTools_1.extractUserId(channel);\n                        }\n                        if (includeSponsored) {\n                            query.include_sponsored = 'true';\n                        }\n                        return [4 /*yield*/, this._client.callAPI({ url: 'bits/actions', query: query })];\n                    case 1:\n                        data = _a.sent();\n                        return [2 /*return*/, new CheermoteList_1.default(data.actions, this._client)];\n                }\n            });\n        });\n    };\n    tslib_1.__decorate([\n        Cache_1.Cached(3600)\n    ], BitsAPI.prototype, \"getCheermotes\", null);\n    BitsAPI = tslib_1.__decorate([\n        Cache_1.Cacheable\n    ], BitsAPI);\n    return BitsAPI;\n}(BaseAPI_1.default));\nexports.default = BitsAPI;\n//# sourceMappingURL=BitsAPI.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar Team_1 = require(\"./Team\");\nvar User_1 = require(\"../User/User\");\nvar TeamWithUsers = /** @class */ (function (_super) {\n    tslib_1.__extends(TeamWithUsers, _super);\n    function TeamWithUsers() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * The list of users in the team.\n     */\n    TeamWithUsers.prototype.getUsers = function () {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            var _this = this;\n            return tslib_1.__generator(this, function (_a) {\n                return [2 /*return*/, this._data.users.map(function (data) { return new User_1.default(data, _this._client); })];\n            });\n        });\n    };\n    return TeamWithUsers;\n}(Team_1.default));\nexports.default = TeamWithUsers;\n//# sourceMappingURL=TeamWithUsers.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar Channel_1 = require(\"../Kraken/Channel/Channel\");\nvar NonEnumerable_1 = require(\"../../Toolkit/Decorators/NonEnumerable\");\n/**\n * An event held on a Twitch channel.\n */\nvar ChannelEvent = /** @class */ (function () {\n    /** @private */\n    function ChannelEvent(_data, client) {\n        this._data = _data;\n        this._client = client;\n    }\n    Object.defineProperty(ChannelEvent.prototype, \"id\", {\n        /**\n         * The ID of the event.\n         */\n        get: function () {\n            return this._data._id;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ChannelEvent.prototype, \"startDate\", {\n        /**\n         * The time when the event starts.\n         */\n        get: function () {\n            return new Date(this._data.start_time);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ChannelEvent.prototype, \"endDate\", {\n        /**\n         * The time when the event ends.\n         */\n        get: function () {\n            return new Date(this._data.end_time);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ChannelEvent.prototype, \"timeZoneId\", {\n        /**\n         * The ID of the timezone that the start and end times of the event are local to.\n         */\n        get: function () {\n            return this._data.time_zone_id;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ChannelEvent.prototype, \"title\", {\n        /**\n         * The title of the event.\n         */\n        get: function () {\n            return this._data.title;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ChannelEvent.prototype, \"description\", {\n        /**\n         * The description of the event.\n         */\n        get: function () {\n            return this._data.description;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ChannelEvent.prototype, \"language\", {\n        /**\n         * The language of the event.\n         */\n        get: function () {\n            return this._data.language;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ChannelEvent.prototype, \"channel\", {\n        /**\n         * The channel where the event is held.\n         */\n        get: function () {\n            return new Channel_1.default(this._data.channel, this._client);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Generates a URL to the cover image of the event with the given dimensions.\n     *\n     * @param width The width of the image.\n     * @param height The height of the image.\n     */\n    ChannelEvent.prototype.buildCoverImageUrl = function (width, height) {\n        return this._data.cover_image_url\n            .replace('{width}', width.toString())\n            .replace('{height}', height.toString());\n    };\n    tslib_1.__decorate([\n        NonEnumerable_1.NonEnumerable\n    ], ChannelEvent.prototype, \"_client\", void 0);\n    return ChannelEvent;\n}());\nexports.default = ChannelEvent;\n//# sourceMappingURL=ChannelEvent.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar NonEnumerable_1 = require(\"../../../Toolkit/Decorators/NonEnumerable\");\nvar NoSubscriptionProgramError_1 = require(\"../../../Errors/NoSubscriptionProgramError\");\n/**\n * The type of a broadcaster.\n */\nvar HelixBroadcasterType;\n(function (HelixBroadcasterType) {\n    /**\n     * A Twitch Partner.\n     */\n    HelixBroadcasterType[\"Partner\"] = \"partner\";\n    /**\n     * A Twitch Affiliate.\n     */\n    HelixBroadcasterType[\"Affiliate\"] = \"affiliate\";\n    /**\n     * A user that's neither a partner nor an affiliate.\n     */\n    HelixBroadcasterType[\"None\"] = \"\";\n})(HelixBroadcasterType = exports.HelixBroadcasterType || (exports.HelixBroadcasterType = {}));\n/**\n * The type of a user.\n */\nvar HelixUserType;\n(function (HelixUserType) {\n    /**\n     * A Twitch staff member.\n     */\n    HelixUserType[\"Staff\"] = \"staff\";\n    /**\n     * A Twitch administrator.\n     */\n    HelixUserType[\"Admin\"] = \"admin\";\n    /**\n     * A global moderator.\n     */\n    HelixUserType[\"GlobalMod\"] = \"global_mod\";\n    /**\n     * A user with no special permissions across Twitch.\n     */\n    HelixUserType[\"None\"] = \"\";\n})(HelixUserType = exports.HelixUserType || (exports.HelixUserType = {}));\n/**\n * A Twitch user.\n */\nvar HelixUser = /** @class */ (function () {\n    /** @private */\n    function HelixUser(/** @private */ _data, client) {\n        this._data = _data;\n        this._client = client;\n    }\n    Object.defineProperty(HelixUser.prototype, \"cacheKey\", {\n        /** @private */\n        get: function () {\n            return this._data.id;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(HelixUser.prototype, \"id\", {\n        /**\n         * The ID of the user.\n         */\n        get: function () {\n            return this._data.id;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(HelixUser.prototype, \"name\", {\n        /**\n         * The user name of the user.\n         */\n        get: function () {\n            return this._data.login;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(HelixUser.prototype, \"displayName\", {\n        /**\n         * The display name of the user.\n         */\n        get: function () {\n            return this._data.display_name;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(HelixUser.prototype, \"description\", {\n        /**\n         * The description of the user.\n         */\n        get: function () {\n            return this._data.description;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(HelixUser.prototype, \"type\", {\n        /**\n         * The type of the user.\n         */\n        get: function () {\n            return this._data.type;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(HelixUser.prototype, \"broadcasterType\", {\n        /**\n         * The type of the user.\n         */\n        get: function () {\n            return this._data.broadcaster_type;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(HelixUser.prototype, \"profilePictureUrl\", {\n        /**\n         * The URL to the profile picture of the user.\n         */\n        get: function () {\n            return this._data.profile_image_url;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(HelixUser.prototype, \"offlinePlaceholderUrl\", {\n        /**\n         * The URL to the offline video placeholder of the user.\n         */\n        get: function () {\n            return this._data.offline_image_url;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(HelixUser.prototype, \"views\", {\n        /**\n         * The total number of views of the user's channel.\n         */\n        get: function () {\n            return this._data.view_count;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Retrieves the channel's stream data.\n     */\n    HelixUser.prototype.getStream = function () {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            return tslib_1.__generator(this, function (_a) {\n                return [2 /*return*/, this._client.helix.streams.getStreamByUserId(this)];\n            });\n        });\n    };\n    /**\n     * Retrieves a list of broadcasters the user follows.\n     */\n    HelixUser.prototype.getFollows = function () {\n        return this._client.helix.users.getFollows({ user: this });\n    };\n    /**\n     * Retrieves the follow data of the user to the given broadcaster.\n     *\n     * @param broadcaster The broadcaster to check the follow to.\n     */\n    HelixUser.prototype.getFollowTo = function (broadcaster) {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            var params, result;\n            return tslib_1.__generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        params = {\n                            user: this.id,\n                            followedUser: broadcaster\n                        };\n                        return [4 /*yield*/, this._client.helix.users.getFollows(params)];\n                    case 1:\n                        result = (_a.sent()).data;\n                        return [2 /*return*/, result.length ? result[0] : null];\n                }\n            });\n        });\n    };\n    /**\n     * Checks whether the user is following the given broadcaster.\n     *\n     * @param broadcaster The broadcaster to check the user's follow to.\n     */\n    HelixUser.prototype.follows = function (broadcaster) {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            return tslib_1.__generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this.getFollowTo(broadcaster)];\n                    case 1: return [2 /*return*/, (_a.sent()) !== null];\n                }\n            });\n        });\n    };\n    /**\n     * Follows the broadcaster.\n     */\n    HelixUser.prototype.follow = function () {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            var currentUser;\n            return tslib_1.__generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this._client.kraken.users.getMe()];\n                    case 1:\n                        currentUser = _a.sent();\n                        return [2 /*return*/, currentUser.followChannel(this)];\n                }\n            });\n        });\n    };\n    /**\n     * Unfollows the broadcaster.\n     */\n    HelixUser.prototype.unfollow = function () {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            var currentUser;\n            return tslib_1.__generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this._client.kraken.users.getMe()];\n                    case 1:\n                        currentUser = _a.sent();\n                        return [2 /*return*/, currentUser.unfollowChannel(this)];\n                }\n            });\n        });\n    };\n    /**\n     * Retrieves the subscription data for the user to the given broadcaster, or `null` if the user is not subscribed.\n     *\n     * @param broadcaster The broadcaster you want to get the subscription data for.\n     */\n    HelixUser.prototype.getSubscriptionTo = function (broadcaster) {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            return tslib_1.__generator(this, function (_a) {\n                return [2 /*return*/, this._client.helix.subscriptions.getSubscriptionForUser(broadcaster, this)];\n            });\n        });\n    };\n    /**\n     * Checks whether the user is subscribed to the given broadcaster.\n     *\n     * @param broadcaster The broadcaster you want to check the subscription for.\n     */\n    HelixUser.prototype.isSubscribedTo = function (broadcaster) {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            var e_1;\n            return tslib_1.__generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        _a.trys.push([0, 2, , 3]);\n                        return [4 /*yield*/, this.getSubscriptionTo(broadcaster)];\n                    case 1: return [2 /*return*/, (_a.sent()) !== null];\n                    case 2:\n                        e_1 = _a.sent();\n                        if (e_1 instanceof NoSubscriptionProgramError_1.default) {\n                            return [2 /*return*/, false];\n                        }\n                        throw e_1;\n                    case 3: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    tslib_1.__decorate([\n        NonEnumerable_1.NonEnumerable\n    ], HelixUser.prototype, \"_client\", void 0);\n    return HelixUser;\n}());\nexports.default = HelixUser;\n//# sourceMappingURL=HelixUser.js.map","'use strict';\n\nvar utils = require('./utils');\nvar formats = require('./formats');\nvar has = Object.prototype.hasOwnProperty;\n\nvar arrayPrefixGenerators = {\n    brackets: function brackets(prefix) { // eslint-disable-line func-name-matching\n        return prefix + '[]';\n    },\n    comma: 'comma',\n    indices: function indices(prefix, key) { // eslint-disable-line func-name-matching\n        return prefix + '[' + key + ']';\n    },\n    repeat: function repeat(prefix) { // eslint-disable-line func-name-matching\n        return prefix;\n    }\n};\n\nvar isArray = Array.isArray;\nvar push = Array.prototype.push;\nvar pushToArray = function (arr, valueOrArray) {\n    push.apply(arr, isArray(valueOrArray) ? valueOrArray : [valueOrArray]);\n};\n\nvar toISO = Date.prototype.toISOString;\n\nvar defaults = {\n    addQueryPrefix: false,\n    allowDots: false,\n    charset: 'utf-8',\n    charsetSentinel: false,\n    delimiter: '&',\n    encode: true,\n    encoder: utils.encode,\n    encodeValuesOnly: false,\n    formatter: formats.formatters[formats['default']],\n    // deprecated\n    indices: false,\n    serializeDate: function serializeDate(date) { // eslint-disable-line func-name-matching\n        return toISO.call(date);\n    },\n    skipNulls: false,\n    strictNullHandling: false\n};\n\nvar stringify = function stringify( // eslint-disable-line func-name-matching\n    object,\n    prefix,\n    generateArrayPrefix,\n    strictNullHandling,\n    skipNulls,\n    encoder,\n    filter,\n    sort,\n    allowDots,\n    serializeDate,\n    formatter,\n    encodeValuesOnly,\n    charset\n) {\n    var obj = object;\n    if (typeof filter === 'function') {\n        obj = filter(prefix, obj);\n    } else if (obj instanceof Date) {\n        obj = serializeDate(obj);\n    } else if (generateArrayPrefix === 'comma' && isArray(obj)) {\n        obj = obj.join(',');\n    }\n\n    if (obj === null) {\n        if (strictNullHandling) {\n            return encoder && !encodeValuesOnly ? encoder(prefix, defaults.encoder, charset) : prefix;\n        }\n\n        obj = '';\n    }\n\n    if (typeof obj === 'string' || typeof obj === 'number' || typeof obj === 'boolean' || utils.isBuffer(obj)) {\n        if (encoder) {\n            var keyValue = encodeValuesOnly ? prefix : encoder(prefix, defaults.encoder, charset);\n            return [formatter(keyValue) + '=' + formatter(encoder(obj, defaults.encoder, charset))];\n        }\n        return [formatter(prefix) + '=' + formatter(String(obj))];\n    }\n\n    var values = [];\n\n    if (typeof obj === 'undefined') {\n        return values;\n    }\n\n    var objKeys;\n    if (isArray(filter)) {\n        objKeys = filter;\n    } else {\n        var keys = Object.keys(obj);\n        objKeys = sort ? keys.sort(sort) : keys;\n    }\n\n    for (var i = 0; i < objKeys.length; ++i) {\n        var key = objKeys[i];\n\n        if (skipNulls && obj[key] === null) {\n            continue;\n        }\n\n        if (isArray(obj)) {\n            pushToArray(values, stringify(\n                obj[key],\n                typeof generateArrayPrefix === 'function' ? generateArrayPrefix(prefix, key) : prefix,\n                generateArrayPrefix,\n                strictNullHandling,\n                skipNulls,\n                encoder,\n                filter,\n                sort,\n                allowDots,\n                serializeDate,\n                formatter,\n                encodeValuesOnly,\n                charset\n            ));\n        } else {\n            pushToArray(values, stringify(\n                obj[key],\n                prefix + (allowDots ? '.' + key : '[' + key + ']'),\n                generateArrayPrefix,\n                strictNullHandling,\n                skipNulls,\n                encoder,\n                filter,\n                sort,\n                allowDots,\n                serializeDate,\n                formatter,\n                encodeValuesOnly,\n                charset\n            ));\n        }\n    }\n\n    return values;\n};\n\nvar normalizeStringifyOptions = function normalizeStringifyOptions(opts) {\n    if (!opts) {\n        return defaults;\n    }\n\n    if (opts.encoder !== null && opts.encoder !== undefined && typeof opts.encoder !== 'function') {\n        throw new TypeError('Encoder has to be a function.');\n    }\n\n    var charset = opts.charset || defaults.charset;\n    if (typeof opts.charset !== 'undefined' && opts.charset !== 'utf-8' && opts.charset !== 'iso-8859-1') {\n        throw new TypeError('The charset option must be either utf-8, iso-8859-1, or undefined');\n    }\n\n    var format = formats['default'];\n    if (typeof opts.format !== 'undefined') {\n        if (!has.call(formats.formatters, opts.format)) {\n            throw new TypeError('Unknown format option provided.');\n        }\n        format = opts.format;\n    }\n    var formatter = formats.formatters[format];\n\n    var filter = defaults.filter;\n    if (typeof opts.filter === 'function' || isArray(opts.filter)) {\n        filter = opts.filter;\n    }\n\n    return {\n        addQueryPrefix: typeof opts.addQueryPrefix === 'boolean' ? opts.addQueryPrefix : defaults.addQueryPrefix,\n        allowDots: typeof opts.allowDots === 'undefined' ? defaults.allowDots : !!opts.allowDots,\n        charset: charset,\n        charsetSentinel: typeof opts.charsetSentinel === 'boolean' ? opts.charsetSentinel : defaults.charsetSentinel,\n        delimiter: typeof opts.delimiter === 'undefined' ? defaults.delimiter : opts.delimiter,\n        encode: typeof opts.encode === 'boolean' ? opts.encode : defaults.encode,\n        encoder: typeof opts.encoder === 'function' ? opts.encoder : defaults.encoder,\n        encodeValuesOnly: typeof opts.encodeValuesOnly === 'boolean' ? opts.encodeValuesOnly : defaults.encodeValuesOnly,\n        filter: filter,\n        formatter: formatter,\n        serializeDate: typeof opts.serializeDate === 'function' ? opts.serializeDate : defaults.serializeDate,\n        skipNulls: typeof opts.skipNulls === 'boolean' ? opts.skipNulls : defaults.skipNulls,\n        sort: typeof opts.sort === 'function' ? opts.sort : null,\n        strictNullHandling: typeof opts.strictNullHandling === 'boolean' ? opts.strictNullHandling : defaults.strictNullHandling\n    };\n};\n\nmodule.exports = function (object, opts) {\n    var obj = object;\n    var options = normalizeStringifyOptions(opts);\n\n    var objKeys;\n    var filter;\n\n    if (typeof options.filter === 'function') {\n        filter = options.filter;\n        obj = filter('', obj);\n    } else if (isArray(options.filter)) {\n        filter = options.filter;\n        objKeys = filter;\n    }\n\n    var keys = [];\n\n    if (typeof obj !== 'object' || obj === null) {\n        return '';\n    }\n\n    var arrayFormat;\n    if (opts && opts.arrayFormat in arrayPrefixGenerators) {\n        arrayFormat = opts.arrayFormat;\n    } else if (opts && 'indices' in opts) {\n        arrayFormat = opts.indices ? 'indices' : 'repeat';\n    } else {\n        arrayFormat = 'indices';\n    }\n\n    var generateArrayPrefix = arrayPrefixGenerators[arrayFormat];\n\n    if (!objKeys) {\n        objKeys = Object.keys(obj);\n    }\n\n    if (options.sort) {\n        objKeys.sort(options.sort);\n    }\n\n    for (var i = 0; i < objKeys.length; ++i) {\n        var key = objKeys[i];\n\n        if (options.skipNulls && obj[key] === null) {\n            continue;\n        }\n        pushToArray(keys, stringify(\n            obj[key],\n            key,\n            generateArrayPrefix,\n            options.strictNullHandling,\n            options.skipNulls,\n            options.encode ? options.encoder : null,\n            options.filter,\n            options.sort,\n            options.allowDots,\n            options.serializeDate,\n            options.formatter,\n            options.encodeValuesOnly,\n            options.charset\n        ));\n    }\n\n    var joined = keys.join(options.delimiter);\n    var prefix = options.addQueryPrefix === true ? '?' : '';\n\n    if (options.charsetSentinel) {\n        if (options.charset === 'iso-8859-1') {\n            // encodeURIComponent('&#10003;'), the \"numeric entity\" representation of a checkmark\n            prefix += 'utf8=%26%2310003%3B&';\n        } else {\n            // encodeURIComponent('✓')\n            prefix += 'utf8=%E2%9C%93&';\n        }\n    }\n\n    return joined.length > 0 ? prefix + joined : '';\n};\n","'use strict';\n\nvar stringify = require('./stringify');\nvar parse = require('./parse');\nvar formats = require('./formats');\n\nmodule.exports = {\n    formats: formats,\n    parse: parse,\n    stringify: stringify\n};\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\n/** @private */\nfunction flatten(arr) {\n    var _a;\n    return (_a = []).concat.apply(_a, tslib_1.__spread(arr));\n}\nexports.flatten = flatten;\n//# sourceMappingURL=ArrayTools.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar Channel_1 = require(\"./Channel\");\n/**\n * A channel you have extended privileges for, i.e. the channel of the currently authenticated user.\n */\nvar PrivilegedChannel = /** @class */ (function (_super) {\n    tslib_1.__extends(PrivilegedChannel, _super);\n    function PrivilegedChannel() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Object.defineProperty(PrivilegedChannel.prototype, \"streamKey\", {\n        /**\n         * The channel's stream key.\n         */\n        get: function () {\n            return this._data.stream_key;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PrivilegedChannel.prototype, \"email\", {\n        /**\n         * The channel's email address.\n         */\n        get: function () {\n            return this._data.email;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Retrieves the list of editors of the channel.\n     */\n    PrivilegedChannel.prototype.getEditors = function () {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            return tslib_1.__generator(this, function (_a) {\n                return [2 /*return*/, this._client.kraken.channels.getChannelEditors(this)];\n            });\n        });\n    };\n    /**\n     * Starts a commercial in the channel.\n     *\n     * @param length The length of the commercial.\n     */\n    PrivilegedChannel.prototype.startCommercial = function (length) {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            return tslib_1.__generator(this, function (_a) {\n                return [2 /*return*/, this._client.kraken.channels.startChannelCommercial(this, length)];\n            });\n        });\n    };\n    /**\n     * Resets the given channel's stream key.\n     */\n    PrivilegedChannel.prototype.resetStreamKey = function () {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            var channelData, streamKey;\n            return tslib_1.__generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this._client.kraken.channels.resetChannelStreamKey(this)];\n                    case 1:\n                        channelData = _a.sent();\n                        streamKey = channelData.stream_key;\n                        this._data.stream_key = streamKey;\n                        return [2 /*return*/, streamKey];\n                }\n            });\n        });\n    };\n    return PrivilegedChannel;\n}(Channel_1.default));\nexports.default = PrivilegedChannel;\n//# sourceMappingURL=PrivilegedChannel.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar BaseAPI_1 = require(\"../../BaseAPI\");\nvar Cache_1 = require(\"../../../Toolkit/Decorators/Cache\");\nvar UserTools_1 = require(\"../../../Toolkit/UserTools\");\nvar ChatEmoteList_1 = require(\"./ChatEmoteList\");\nvar ChatRoom_1 = require(\"./ChatRoom\");\n/**\n * The API methods that deal with chat and chatrooms.\n *\n * Can be accessed using `client.kraken.chat` on a {@TwitchClient} instance.\n *\n * ## Example\n * ```ts\n * const client = await TwitchClient.withCredentials(clientId, accessToken);\n * const channel = await client.kraken.chat.getBadges('125328655');\n * ```\n */\nvar ChatAPI = /** @class */ (function (_super) {\n    tslib_1.__extends(ChatAPI, _super);\n    function ChatAPI() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * Retrieves a list of emotes for a given list of enote set IDs.\n     *\n     * @param emotesets The list of emote set IDs, either as array of strings or as a comma separated string.\n     */\n    ChatAPI.prototype.getEmotesBySets = function (emotesets) {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            var data;\n            return tslib_1.__generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        if (typeof emotesets !== 'string') {\n                            emotesets = emotesets.join(',');\n                        }\n                        return [4 /*yield*/, this._client.callAPI({\n                                url: 'chat/emoticon_images',\n                                query: {\n                                    emotesets: emotesets\n                                }\n                            })];\n                    case 1:\n                        data = _a.sent();\n                        return [2 /*return*/, new ChatEmoteList_1.default(data.emoticons, this._client)];\n                }\n            });\n        });\n    };\n    /**\n     * Retrieves a list of chat rooms for a given channel.\n     *\n     * @param channel The channel to retrieve the chat rooms of.\n     */\n    ChatAPI.prototype.getChatRoomsForChannel = function (channel) {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            var data;\n            var _this = this;\n            return tslib_1.__generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this._client.callAPI({\n                            url: \"chat/\" + UserTools_1.extractUserId(channel) + \"/rooms\"\n                        })];\n                    case 1:\n                        data = _a.sent();\n                        return [2 /*return*/, data.rooms.map(function (room) { return new ChatRoom_1.default(room, _this._client); })];\n                }\n            });\n        });\n    };\n    tslib_1.__decorate([\n        Cache_1.Cached(3600)\n    ], ChatAPI.prototype, \"getEmotesBySets\", null);\n    tslib_1.__decorate([\n        Cache_1.Cached(3600)\n    ], ChatAPI.prototype, \"getChatRoomsForChannel\", null);\n    ChatAPI = tslib_1.__decorate([\n        Cache_1.Cacheable\n    ], ChatAPI);\n    return ChatAPI;\n}(BaseAPI_1.default));\nexports.default = ChatAPI;\n//# sourceMappingURL=ChatAPI.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar CustomError_1 = require(\"./CustomError\");\n/**\n * Thrown whenever you try something that requires your own stream to be live.\n */\nvar StreamNotLiveError = /** @class */ (function (_super) {\n    tslib_1.__extends(StreamNotLiveError, _super);\n    function StreamNotLiveError() {\n        return _super.call(this, 'Your stream needs to be live to do this') || this;\n    }\n    return StreamNotLiveError;\n}(CustomError_1.default));\nexports.default = StreamNotLiveError;\n//# sourceMappingURL=StreamNotLiveError.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar User_1 = require(\"../User/User\");\nvar NonEnumerable_1 = require(\"../../../Toolkit/Decorators/NonEnumerable\");\n/**\n * A relation of a user following a previously given channel.\n */\nvar ChannelFollow = /** @class */ (function () {\n    /** @private */\n    function ChannelFollow(_data, client) {\n        this._data = _data;\n        this._client = client;\n    }\n    Object.defineProperty(ChannelFollow.prototype, \"user\", {\n        /**\n         * The user following the given channel.\n         */\n        get: function () {\n            return new User_1.default(this._data.user, this._client);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ChannelFollow.prototype, \"hasNotifications\", {\n        /**\n         * Whether the user has notifications enabled for the channel.\n         */\n        get: function () {\n            return this._data.notifications;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ChannelFollow.prototype, \"followDate\", {\n        /**\n         * The date when the user followed.\n         */\n        get: function () {\n            return new Date(this._data.created_at);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    tslib_1.__decorate([\n        NonEnumerable_1.NonEnumerable\n    ], ChannelFollow.prototype, \"_client\", void 0);\n    return ChannelFollow;\n}());\nexports.default = ChannelFollow;\n//# sourceMappingURL=ChannelFollow.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\n/** @private */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction createCacheKey(propName, params, prefix) {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    function createSingleCacheKey(param) {\n        // noinspection FallThroughInSwitchStatementJS\n        switch (typeof param) {\n            case 'undefined': {\n                return '';\n            }\n            case 'object': {\n                if (param === null) {\n                    return '';\n                }\n                if ('cacheKey' in param) {\n                    return param.cacheKey;\n                }\n                var objKey = JSON.stringify(param);\n                if (objKey !== '{}') {\n                    return objKey;\n                }\n            }\n            // fallthrough\n            default: {\n                return param.toString();\n            }\n        }\n    }\n    return tslib_1.__spread([propName], params.map(createSingleCacheKey)).join('/') + (prefix ? '/' : '');\n}\nexports.createCacheKey = createCacheKey;\n/** @private */\nfunction Cacheable(cls) {\n    return /** @class */ (function (_super) {\n        tslib_1.__extends(class_1, _super);\n        function class_1() {\n            var _this = _super !== null && _super.apply(this, arguments) || this;\n            _this.cache = new Map;\n            return _this;\n        }\n        class_1.prototype.getFromCache = function (cacheKey) {\n            this._cleanCache();\n            if (this.cache.has(cacheKey)) {\n                var entry = this.cache.get(cacheKey);\n                if (entry) {\n                    return entry.value;\n                }\n            }\n            return undefined;\n        };\n        class_1.prototype.setCache = function (cacheKey, value, timeInSeconds) {\n            this.cache.set(cacheKey, {\n                value: value, expires: Date.now() + (timeInSeconds * 1000)\n            });\n        };\n        class_1.prototype.removeFromCache = function (cacheKey, prefix) {\n            var _this = this;\n            var internalCacheKey;\n            if (typeof cacheKey === 'string') {\n                internalCacheKey = cacheKey;\n                if (!internalCacheKey.endsWith('/')) {\n                    internalCacheKey += '/';\n                }\n            }\n            else {\n                var propName = cacheKey.shift();\n                internalCacheKey = createCacheKey(propName, cacheKey, prefix);\n            }\n            if (prefix) {\n                this.cache.forEach(function (val, key) {\n                    if (key.startsWith(internalCacheKey)) {\n                        _this.cache.delete(key);\n                    }\n                });\n            }\n            else {\n                this.cache.delete(internalCacheKey);\n            }\n        };\n        class_1.prototype._cleanCache = function () {\n            var _this = this;\n            var now = Date.now();\n            this.cache.forEach(function (val, key) {\n                if (val.expires < now) {\n                    _this.cache.delete(key);\n                }\n            });\n        };\n        return class_1;\n    }(cls));\n}\nexports.Cacheable = Cacheable;\n/** @private */\nfunction Cached(timeInSeconds, cacheFailures) {\n    if (timeInSeconds === void 0) { timeInSeconds = Infinity; }\n    if (cacheFailures === void 0) { cacheFailures = false; }\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    return function (target, propName, descriptor) {\n        var origFn = descriptor.value;\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        descriptor.value = function () {\n            var params = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                params[_i] = arguments[_i];\n            }\n            return tslib_1.__awaiter(this, void 0, void 0, function () {\n                var cacheKey, cachedValue, result;\n                return tslib_1.__generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0:\n                            cacheKey = createCacheKey(propName, params);\n                            cachedValue = this.getFromCache(cacheKey);\n                            if (cachedValue) {\n                                return [2 /*return*/, cachedValue];\n                            }\n                            return [4 /*yield*/, origFn.apply(this, params)];\n                        case 1:\n                            result = _a.sent();\n                            if (result != null || cacheFailures) {\n                                this.setCache(cacheKey, result, timeInSeconds);\n                            }\n                            return [2 /*return*/, result];\n                    }\n                });\n            });\n        };\n        return descriptor;\n    };\n}\nexports.Cached = Cached;\n/** @private */\nfunction CachedGetter(timeInSeconds) {\n    if (timeInSeconds === void 0) { timeInSeconds = Infinity; }\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    return function (target, propName, descriptor) {\n        if (descriptor.get) {\n            var origFn_1 = descriptor.get;\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            descriptor.get = function () {\n                var params = [];\n                for (var _i = 0; _i < arguments.length; _i++) {\n                    params[_i] = arguments[_i];\n                }\n                var cacheKey = createCacheKey(propName, params);\n                var cachedValue = this.getFromCache(cacheKey);\n                if (cachedValue) {\n                    return cachedValue;\n                }\n                var result = origFn_1.apply(this, params);\n                this.setCache(cacheKey, result, timeInSeconds);\n                return result;\n            };\n        }\n        return descriptor;\n    };\n}\nexports.CachedGetter = CachedGetter;\n/** @private */\nfunction ClearsCache(cacheName, numberOfArguments) {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    return function (target, propName, descriptor) {\n        var origFn = descriptor.value;\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        descriptor.value = function () {\n            var params = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                params[_i] = arguments[_i];\n            }\n            return tslib_1.__awaiter(this, void 0, void 0, function () {\n                var result, args;\n                return tslib_1.__generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4 /*yield*/, origFn.apply(this, params)];\n                        case 1:\n                            result = _a.sent();\n                            args = numberOfArguments === undefined ? params.slice() : params.slice(0, numberOfArguments);\n                            this.removeFromCache(tslib_1.__spread([cacheName], args), true);\n                            return [2 /*return*/, result];\n                    }\n                });\n            });\n        };\n        return descriptor;\n    };\n}\nexports.ClearsCache = ClearsCache;\n//# sourceMappingURL=Cache.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar NonEnumerable_1 = require(\"../../../Toolkit/Decorators/NonEnumerable\");\n/**\n * The type of a stream.\n */\nvar HelixStreamType;\n(function (HelixStreamType) {\n    /**\n     * Returned by Twitch in case of an error.\n     */\n    HelixStreamType[\"None\"] = \"\";\n    /**\n     * A live stream.\n     */\n    HelixStreamType[\"Live\"] = \"live\";\n    /**\n     * A vodcast.\n     *\n     * Currently not supported by Twitch - but one can only hope and leave it in here.\n     */\n    HelixStreamType[\"Vodcast\"] = \"vodcast\";\n})(HelixStreamType = exports.HelixStreamType || (exports.HelixStreamType = {}));\n/**\n * A Twitch stream.\n */\nvar HelixStream = /** @class */ (function () {\n    /** @private */\n    function HelixStream(_data, client) {\n        this._data = _data;\n        this._client = client;\n    }\n    Object.defineProperty(HelixStream.prototype, \"id\", {\n        /**\n         * The stream ID.\n         */\n        get: function () {\n            return this._data.id;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(HelixStream.prototype, \"userId\", {\n        /**\n         * The user ID.\n         */\n        get: function () {\n            return this._data.user_id;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(HelixStream.prototype, \"userDisplayName\", {\n        /**\n         * The user's display name.\n         */\n        get: function () {\n            return this._data.user_name;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Retrieves information about the user broadcasting the stream.\n     */\n    HelixStream.prototype.getUser = function () {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            return tslib_1.__generator(this, function (_a) {\n                return [2 /*return*/, this._client.helix.users.getUserById(this._data.user_id)];\n            });\n        });\n    };\n    Object.defineProperty(HelixStream.prototype, \"gameId\", {\n        /**\n         * The game ID.\n         */\n        get: function () {\n            return this._data.game_id;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Retrieves information about the game that is being played on this stream.\n     */\n    HelixStream.prototype.getGame = function () {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            return tslib_1.__generator(this, function (_a) {\n                return [2 /*return*/, this._client.helix.games.getGameById(this._data.game_id)];\n            });\n        });\n    };\n    Object.defineProperty(HelixStream.prototype, \"type\", {\n        /**\n         * The type of the stream.\n         */\n        get: function () {\n            return this._data.type;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(HelixStream.prototype, \"title\", {\n        /**\n         * The title of the stream.\n         */\n        get: function () {\n            return this._data.title;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(HelixStream.prototype, \"viewers\", {\n        /**\n         * The number of viewers the stream currently has.\n         */\n        get: function () {\n            return this._data.viewer_count;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(HelixStream.prototype, \"startDate\", {\n        /**\n         * The time when the stream started.\n         */\n        get: function () {\n            return new Date(this._data.started_at);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(HelixStream.prototype, \"language\", {\n        /**\n         * The language of the stream.\n         */\n        get: function () {\n            return this._data.language;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(HelixStream.prototype, \"thumbnailUrl\", {\n        /**\n         * The URL of the thumbnail of the stream.\n         */\n        get: function () {\n            return this._data.thumbnail_url;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    tslib_1.__decorate([\n        NonEnumerable_1.NonEnumerable\n    ], HelixStream.prototype, \"_client\", void 0);\n    return HelixStream;\n}());\nexports.default = HelixStream;\n//# sourceMappingURL=HelixStream.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar BaseAPI_1 = require(\"../../BaseAPI\");\nvar HelixStream_1 = require(\"./HelixStream\");\nvar TwitchClient_1 = require(\"../../../TwitchClient\");\nvar HelixPaginatedRequest_1 = require(\"../HelixPaginatedRequest\");\nvar UserTools_1 = require(\"../../../Toolkit/UserTools\");\nvar HelixStreamMarkerWithVideo_1 = require(\"./HelixStreamMarkerWithVideo\");\nvar HelixStreamMarker_1 = require(\"./HelixStreamMarker\");\nvar StreamNotLiveError_1 = require(\"../../../Errors/StreamNotLiveError\");\nvar HTTPStatusCodeError_1 = require(\"../../../Errors/HTTPStatusCodeError\");\nvar ArrayTools_1 = require(\"../../../Toolkit/ArrayTools\");\n/**\n * The Helix API methods that deal with streams.\n *\n * Can be accessed using `client.helix.streams` on a {@TwitchClient} instance.\n *\n * ## Example\n * ```ts\n * const client = await TwitchClient.withCredentials(clientId, accessToken);\n * const stream = await client.helix.streams.getStreamByUserId('125328655');\n * ```\n */\nvar HelixStreamAPI = /** @class */ (function (_super) {\n    tslib_1.__extends(HelixStreamAPI, _super);\n    function HelixStreamAPI() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * Retrieves a list of streams.\n     *\n     * @expandParams\n     */\n    HelixStreamAPI.prototype.getStreams = function (filter) {\n        if (filter === void 0) { filter = {}; }\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            var result;\n            var _this = this;\n            return tslib_1.__generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this._client.callAPI({\n                            url: 'streams',\n                            type: TwitchClient_1.TwitchAPICallType.Helix,\n                            query: {\n                                after: filter.after,\n                                before: filter.before,\n                                first: filter.limit,\n                                community_id: filter.community,\n                                game_id: filter.game,\n                                language: filter.language,\n                                type: filter.type,\n                                user_id: filter.userId,\n                                user_login: filter.userName\n                            }\n                        })];\n                    case 1:\n                        result = _a.sent();\n                        return [2 /*return*/, {\n                                data: result.data.map(function (streamData) { return new HelixStream_1.default(streamData, _this._client); }),\n                                cursor: result.pagination && result.pagination.cursor\n                            }];\n                }\n            });\n        });\n    };\n    /**\n     * Creates a paginator for streams.\n     *\n     * @expandParams\n     */\n    HelixStreamAPI.prototype.getStreamsPaginated = function (filter) {\n        var _this = this;\n        if (filter === void 0) { filter = {}; }\n        return new HelixPaginatedRequest_1.default({\n            url: 'streams',\n            query: {\n                community_id: filter.community,\n                game_id: filter.game,\n                language: filter.language,\n                type: filter.type,\n                user_id: filter.userId,\n                user_login: filter.userName\n            }\n        }, this._client, function (data) { return new HelixStream_1.default(data, _this._client); });\n    };\n    /**\n     * Retrieves the current stream for the given user name.\n     *\n     * @param user The user name to retrieve the stream for.\n     */\n    HelixStreamAPI.prototype.getStreamByUserName = function (user) {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            var result;\n            return tslib_1.__generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this.getStreams({ userName: UserTools_1.extractUserName(user) })];\n                    case 1:\n                        result = _a.sent();\n                        return [2 /*return*/, result.data.length ? result.data[0] : null];\n                }\n            });\n        });\n    };\n    /**\n     * Retrieves the current stream for the given user ID.\n     *\n     * @param user The user ID to retrieve the stream for.\n     */\n    HelixStreamAPI.prototype.getStreamByUserId = function (user) {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            var result;\n            return tslib_1.__generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this.getStreams({ userId: UserTools_1.extractUserId(user) })];\n                    case 1:\n                        result = _a.sent();\n                        return [2 /*return*/, result.data.length ? result.data[0] : null];\n                }\n            });\n        });\n    };\n    /**\n     * Retrieves a list of all stream markers for an user.\n     *\n     * @param user The user to list the stream markers for.\n     */\n    HelixStreamAPI.prototype.getStreamMarkersForUser = function (user) {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            return tslib_1.__generator(this, function (_a) {\n                return [2 /*return*/, this._getStreamMarkers('user_id', UserTools_1.extractUserId(user))];\n            });\n        });\n    };\n    /**\n     * Creates a paginator for all stream markers for an user.\n     *\n     * @param user The user to list the stream markers for.\n     */\n    HelixStreamAPI.prototype.getStreamMarkersForUserPaginated = function (user) {\n        return this._getStreamMarkersPaginated('user_id', UserTools_1.extractUserId(user));\n    };\n    /**\n     * Retrieves a list of all stream markers for a video.\n     *\n     * @param videoId The video to list the stream markers for.\n     */\n    HelixStreamAPI.prototype.getStreamMarkersForVideo = function (videoId) {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            return tslib_1.__generator(this, function (_a) {\n                return [2 /*return*/, this._getStreamMarkers('video_id', videoId)];\n            });\n        });\n    };\n    /**\n     * Creates a paginator for all stream markers for a video.\n     *\n     * @param videoId The video to list the stream markers for.\n     */\n    HelixStreamAPI.prototype.getStreamMarkersForVideoPaginated = function (videoId) {\n        return this._getStreamMarkersPaginated('video_id', videoId);\n    };\n    /**\n     * Creates a new stream marker.\n     *\n     * Only works while your stream is live.\n     */\n    HelixStreamAPI.prototype.createStreamMarker = function () {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            var result, e_1;\n            return tslib_1.__generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        _a.trys.push([0, 2, , 3]);\n                        return [4 /*yield*/, this._client.callAPI({\n                                url: 'streams/markers',\n                                method: 'POST',\n                                type: TwitchClient_1.TwitchAPICallType.Helix,\n                                scope: 'user:edit:broadcast'\n                            })];\n                    case 1:\n                        result = _a.sent();\n                        return [2 /*return*/, new HelixStreamMarker_1.default(result.data[0], this._client)];\n                    case 2:\n                        e_1 = _a.sent();\n                        if ((e_1 instanceof HTTPStatusCodeError_1.default) && e_1.statusCode === 404) {\n                            throw new StreamNotLiveError_1.default();\n                        }\n                        throw e_1;\n                    case 3: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    HelixStreamAPI.prototype._getStreamMarkers = function (queryType, id) {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            var result;\n            var _a;\n            return tslib_1.__generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0: return [4 /*yield*/, this._client.callAPI({\n                            url: 'streams/markers',\n                            type: TwitchClient_1.TwitchAPICallType.Helix,\n                            query: (_a = {},\n                                _a[queryType] = id,\n                                _a),\n                            scope: 'user:read:broadcast'\n                        })];\n                    case 1:\n                        result = _b.sent();\n                        return [2 /*return*/, {\n                                data: ArrayTools_1.flatten(result.data.map(HelixStreamAPI._mapGetStreamMarkersResult.bind(this._client))),\n                                cursor: result.pagination && result.pagination.cursor\n                            }];\n                }\n            });\n        });\n    };\n    HelixStreamAPI.prototype._getStreamMarkersPaginated = function (queryType, id) {\n        var _a;\n        return new HelixPaginatedRequest_1.default({\n            url: 'streams/markers',\n            query: (_a = {},\n                _a[queryType] = id,\n                _a),\n            scope: 'user:read:broadcast'\n        }, this._client, HelixStreamAPI._mapGetStreamMarkersResult.bind(this._client));\n    };\n    HelixStreamAPI._mapGetStreamMarkersResult = function (data) {\n        var _this = this;\n        return data.videos.reduce(function (result, video) { return tslib_1.__spread(result, video.markers.map(function (marker) { return new HelixStreamMarkerWithVideo_1.default(marker, video.video_id, _this); })); }, []);\n    };\n    return HelixStreamAPI;\n}(BaseAPI_1.default));\nexports.default = HelixStreamAPI;\n//# sourceMappingURL=HelixStreamAPI.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar User_1 = require(\"./User\");\n/**\n * A user you have extended privileges for, i.e. the currently authenticated user.\n *\n * @inheritDoc\n */\nvar PrivilegedUser = /** @class */ (function (_super) {\n    tslib_1.__extends(PrivilegedUser, _super);\n    function PrivilegedUser() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Object.defineProperty(PrivilegedUser.prototype, \"email\", {\n        /**\n         * The user's email address.\n         */\n        get: function () {\n            return this._data.email;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PrivilegedUser.prototype, \"isEmailVerified\", {\n        /**\n         * Whether the user's email address is verified.\n         */\n        get: function () {\n            return this._data.email_verified;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PrivilegedUser.prototype, \"hasEmailNotifications\", {\n        /**\n         * Whether the user has email notifications enabled.\n         */\n        get: function () {\n            return this._data.notifications.email;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PrivilegedUser.prototype, \"hasPushNotifications\", {\n        /**\n         * Whether the user has push notifications enabled.\n         */\n        get: function () {\n            return this._data.notifications.push;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PrivilegedUser.prototype, \"isPartnered\", {\n        /**\n         * Whether the user is partnered.\n         */\n        get: function () {\n            return this._data.partnered;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PrivilegedUser.prototype, \"hasTwitter\", {\n        /**\n         * Whether the user has a Twitter account connected.\n         */\n        get: function () {\n            return this._data.twitter_connected;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Follows a channel.\n     *\n     * @param channel The channel to follow.\n     * @param notifications Whether the user will receive notifications.\n     */\n    PrivilegedUser.prototype.followChannel = function (channel, notifications) {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            return tslib_1.__generator(this, function (_a) {\n                return [2 /*return*/, this._client.kraken.users.followChannel(this, channel, notifications)];\n            });\n        });\n    };\n    /**\n     * Unfollows a channel.\n     *\n     * @param channel The channel to unfollow.\n     */\n    PrivilegedUser.prototype.unfollowChannel = function (channel) {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            return tslib_1.__generator(this, function (_a) {\n                return [2 /*return*/, this._client.kraken.users.unfollowChannel(this, channel)];\n            });\n        });\n    };\n    /**\n     * Blocks a user.\n     *\n     * @param userToBlock The user to block.\n     */\n    PrivilegedUser.prototype.blockUser = function (userToBlock) {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            return tslib_1.__generator(this, function (_a) {\n                return [2 /*return*/, this._client.kraken.users.blockUser(this, userToBlock)];\n            });\n        });\n    };\n    /**\n     * Unblocks a user.\n     *\n     * @param userToUnblock The user to unblock.\n     */\n    PrivilegedUser.prototype.unblockUser = function (userToUnblock) {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            return tslib_1.__generator(this, function (_a) {\n                return [2 /*return*/, this._client.kraken.users.unblockUser(this, userToUnblock)];\n            });\n        });\n    };\n    return PrivilegedUser;\n}(User_1.default));\nexports.default = PrivilegedUser;\n//# sourceMappingURL=PrivilegedUser.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar NonEnumerable_1 = require(\"../Toolkit/Decorators/NonEnumerable\");\nvar AccessToken_1 = require(\"../API/AccessToken\");\nvar TwitchClient_1 = require(\"../TwitchClient\");\n/**\n * An auth provider that always returns the same initially given credentials.\n *\n * You are advised to roll your own auth provider that can handle scope upgrades,\n * or to plan ahead and supply only access tokens that account for all scopes\n * you will ever need.\n */\nvar StaticAuthProvider = /** @class */ (function () {\n    /**\n     * Creates a new auth provider with static credentials.\n     *\n     * You don't usually have to create this manually. You should use `TwitchClient.withCredentials` instead.\n     *\n     * @param clientId The client ID.\n     * @param accessToken The access token to provide.\n     *\n     * You need to obtain one using one of the [Twitch OAuth flows](https://dev.twitch.tv/docs/authentication/getting-tokens-oauth/).\n     * @param scopes The scopes this token has.\n     */\n    function StaticAuthProvider(clientId, accessToken, scopes) {\n        this._clientId = clientId || '';\n        if (accessToken) {\n            this._accessToken = new AccessToken_1.default({ access_token: accessToken, scope: scopes ? scopes.join(' ') : '', refresh_token: '' });\n            this._scopes = scopes;\n        }\n    }\n    /**\n     * Retrieves an access token.\n     *\n     * If the current access token does not have the requested scopes, this method throws.\n     * This makes supplying an access token with the correct scopes from the beginning necessary.\n     *\n     * @param scopes The requested scopes.\n     */\n    StaticAuthProvider.prototype.getAccessToken = function (scopes) {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            var tokenInfo;\n            var _this = this;\n            return tslib_1.__generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        if (!(scopes && scopes.length > 0)) return [3 /*break*/, 3];\n                        if (!!this._scopes) return [3 /*break*/, 2];\n                        if (!this._accessToken) {\n                            throw new Error('Auth provider has not been initialized with a token yet and is requesting scopes');\n                        }\n                        return [4 /*yield*/, TwitchClient_1.default.getTokenInfo(this._clientId, this._accessToken.accessToken)];\n                    case 1:\n                        tokenInfo = _a.sent();\n                        if (!tokenInfo.valid) {\n                            throw new Error('Auth provider has been initialized with an invalid token');\n                        }\n                        this._scopes = tokenInfo.scopes;\n                        _a.label = 2;\n                    case 2:\n                        if (typeof scopes === 'string') {\n                            scopes = scopes.split(' ');\n                        }\n                        if (scopes.some(function (scope) { return !_this._scopes.includes(scope); })) {\n                            throw new Error(\"This token does not have the requested scopes (\" + scopes.join(', ') + \") and can not be upgraded\");\n                        }\n                        _a.label = 3;\n                    case 3: return [2 /*return*/, this._accessToken || null];\n                }\n            });\n        });\n    };\n    /** @private */\n    StaticAuthProvider.prototype.setAccessToken = function (token) {\n        this._accessToken = token;\n    };\n    Object.defineProperty(StaticAuthProvider.prototype, \"clientId\", {\n        /**\n         * The client ID.\n         */\n        get: function () {\n            return this._clientId;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(StaticAuthProvider.prototype, \"currentScopes\", {\n        /**\n         * The scopes that are currently available using the access token.\n         */\n        get: function () {\n            return this._scopes || [];\n        },\n        enumerable: true,\n        configurable: true\n    });\n    tslib_1.__decorate([\n        NonEnumerable_1.NonEnumerable\n    ], StaticAuthProvider.prototype, \"_clientId\", void 0);\n    tslib_1.__decorate([\n        NonEnumerable_1.NonEnumerable\n    ], StaticAuthProvider.prototype, \"_accessToken\", void 0);\n    return StaticAuthProvider;\n}());\nexports.default = StaticAuthProvider;\n//# sourceMappingURL=StaticAuthProvider.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar NonEnumerable_1 = require(\"../../../Toolkit/Decorators/NonEnumerable\");\nvar HellFreezesOverError_1 = require(\"../../../Errors/HellFreezesOverError\");\nvar ObjectTools_1 = require(\"../../../Toolkit/ObjectTools\");\n/**\n * The type of background a cheermote is supposed to appear on.\n *\n * We will supply a fitting graphic that does not show any artifacts\n * on the given type of background.\n */\nvar CheermoteBackground;\n(function (CheermoteBackground) {\n    /**\n     * A dark background.\n     *\n     * Cheermotes might show artifacts on bright backgrounds.\n     */\n    CheermoteBackground[\"dark\"] = \"dark\";\n    /**\n     * A bright background.\n     *\n     * Cheermotes might show artifacts on dark backgrounds.\n     */\n    CheermoteBackground[\"light\"] = \"light\";\n})(CheermoteBackground = exports.CheermoteBackground || (exports.CheermoteBackground = {}));\n/**\n * The state of a cheermote, i.e. whether it's animated or not.\n */\nvar CheermoteState;\n(function (CheermoteState) {\n    /**\n     * The cheermote should be animated.\n     */\n    CheermoteState[\"animated\"] = \"animated\";\n    /**\n     * The cheermote should not be animated.\n     */\n    CheermoteState[\"static\"] = \"static\";\n})(CheermoteState = exports.CheermoteState || (exports.CheermoteState = {}));\n/**\n * The scale of the cheermote, which usually relates to the pixel density of the device in use.\n */\nvar CheermoteScale;\n(function (CheermoteScale) {\n    /**\n     * The cheermote should not be scaled.\n     */\n    CheermoteScale[\"x1\"] = \"1\";\n    /**\n     * The cheermote should be scaled 1.5x.\n     */\n    CheermoteScale[\"x1_5\"] = \"1.5\";\n    /**\n     * The cheermote should be scaled 2x.\n     */\n    CheermoteScale[\"x2\"] = \"2\";\n    /**\n     * The cheermote should be scaled 3x.\n     */\n    CheermoteScale[\"x3\"] = \"3\";\n    /**\n     * The cheermote should be scaled 4x.\n     */\n    CheermoteScale[\"x4\"] = \"4\";\n})(CheermoteScale = exports.CheermoteScale || (exports.CheermoteScale = {}));\n/**\n * A list of cheermotes you can use globally or in a specific channel, depending on how you fetched the list.\n */\nvar CheermoteList = /** @class */ (function () {\n    /** @private */\n    function CheermoteList(data, client) {\n        this._client = client;\n        this._data = ObjectTools_1.indexBy(data, function (action) { return action.prefix.toLowerCase(); });\n    }\n    /**\n     * Gets the URL and color needed to properly represent a cheer of the given amount of bits with the given prefix.\n     *\n     * @param name The name/prefix of the cheermote.\n     * @param bits The amount of bits cheered.\n     * @param format The format of the cheermote you want to request.\n     */\n    CheermoteList.prototype.getCheermoteDisplayInfo = function (name, bits, format) {\n        if (format === void 0) { format = {}; }\n        name = name.toLowerCase();\n        var cheermoteDefaults = this._client._config.cheermotes;\n        var fullOptions = tslib_1.__assign({ background: cheermoteDefaults.defaultBackground, state: cheermoteDefaults.defaultState, scale: cheermoteDefaults.defaultScale }, format);\n        var tiers = this._data[name].tiers;\n        var correctTier = tiers.sort(function (a, b) { return b.min_bits - a.min_bits; }).find(function (tier) { return tier.min_bits <= bits; });\n        if (!correctTier) {\n            throw new HellFreezesOverError_1.default(\"Cheermote \\\"\" + name + \"\\\" does not have an applicable tier for \" + bits + \" bits\");\n        }\n        return {\n            url: correctTier.images[fullOptions.background][fullOptions.state][fullOptions.scale],\n            color: correctTier.color\n        };\n    };\n    /**\n     * Gets all possible cheermote names.\n     */\n    CheermoteList.prototype.getPossibleNames = function () {\n        return Object.keys(this._data);\n    };\n    /**\n     * Parses all the cheermotes out of a message.\n     *\n     * @param message The message.\n     */\n    CheermoteList.prototype.parseMessage = function (message) {\n        var result = [];\n        var names = this.getPossibleNames();\n        // TODO fix this regex so it works in firefox, which does not support lookbehind\n        var re = new RegExp('(?<=^|\\\\s)([a-z]+)(\\\\d+)(?=\\\\s|$)', 'gi');\n        var match;\n        // eslint-disable-next-line no-cond-assign\n        while (match = re.exec(message)) {\n            var name_1 = match[1].toLowerCase();\n            if (names.includes(name_1)) {\n                var amount = Number(match[2]);\n                result.push({\n                    name: name_1,\n                    amount: amount,\n                    position: match.index,\n                    length: match[0].length,\n                    displayInfo: this.getCheermoteDisplayInfo(name_1, amount)\n                });\n            }\n        }\n        return result;\n    };\n    /**\n     * Transforms all the cheermotes in a message and returns an array of all the message parts.\n     *\n     * @param message The message.\n     * @param transformer A function that transforms a message part into an arbitrary structure.\n     */\n    CheermoteList.prototype.transformCheerMessage = function (message, transformer) {\n        var e_1, _a;\n        var result = [];\n        var currentPosition = 0;\n        try {\n            for (var _b = tslib_1.__values(this.parseMessage(message)), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var foundCheermote = _c.value;\n                if (currentPosition < foundCheermote.position) {\n                    result.push(message.substring(currentPosition, foundCheermote.position));\n                }\n                result.push(transformer(foundCheermote));\n                currentPosition = foundCheermote.position + foundCheermote.length;\n            }\n        }\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n            }\n            finally { if (e_1) throw e_1.error; }\n        }\n        if (currentPosition < message.length) {\n            result.push(message.substr(currentPosition));\n        }\n        return result;\n    };\n    tslib_1.__decorate([\n        NonEnumerable_1.NonEnumerable\n    ], CheermoteList.prototype, \"_client\", void 0);\n    return CheermoteList;\n}());\nexports.default = CheermoteList;\n//# sourceMappingURL=CheermoteList.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar CustomError_1 = require(\"./CustomError\");\n/**\n * Thrown whenever you try using invalid values in the client configuration.\n */\nvar ConfigError = /** @class */ (function (_super) {\n    tslib_1.__extends(ConfigError, _super);\n    function ConfigError() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    return ConfigError;\n}(CustomError_1.default));\nexports.default = ConfigError;\n//# sourceMappingURL=ConfigError.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\n/** @private */\nvar CustomError = /** @class */ (function (_super) {\n    tslib_1.__extends(CustomError, _super);\n    function CustomError() {\n        var params = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            params[_i] = arguments[_i];\n        }\n        var _this = _super.apply(this, tslib_1.__spread(params)) || this;\n        if (Error.captureStackTrace) {\n            Error.captureStackTrace(_this, _this.constructor);\n        }\n        return _this;\n    }\n    Object.defineProperty(CustomError.prototype, \"name\", {\n        get: function () {\n            return this.constructor.name;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return CustomError;\n}(Error));\nexports.default = CustomError;\n//# sourceMappingURL=CustomError.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar Cache_1 = require(\"../../../Toolkit/Decorators/Cache\");\n/**\n * A list of emotes, grouped into emote sets, that a user can use.\n */\nvar EmoteSetList = /** @class */ (function () {\n    /** @private */\n    function EmoteSetList(_data) {\n        this._data = _data;\n    }\n    /**\n     * Finds the emote ID for the given emote code.\n     *\n     * @param emoteCode The emote code to check for.\n     */\n    EmoteSetList.prototype.findEmoteId = function (emoteCode) {\n        var e_1, _a, e_2, _b;\n        try {\n            for (var _c = tslib_1.__values(Object.values(this._data)), _d = _c.next(); !_d.done; _d = _c.next()) {\n                var emoteSet = _d.value;\n                try {\n                    for (var emoteSet_1 = (e_2 = void 0, tslib_1.__values(emoteSet)), emoteSet_1_1 = emoteSet_1.next(); !emoteSet_1_1.done; emoteSet_1_1 = emoteSet_1.next()) {\n                        var emote = emoteSet_1_1.value;\n                        if ((new RegExp(emote.code)).test(emoteCode)) {\n                            return emote.id;\n                        }\n                    }\n                }\n                catch (e_2_1) { e_2 = { error: e_2_1 }; }\n                finally {\n                    try {\n                        if (emoteSet_1_1 && !emoteSet_1_1.done && (_b = emoteSet_1.return)) _b.call(emoteSet_1);\n                    }\n                    finally { if (e_2) throw e_2.error; }\n                }\n            }\n        }\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n        finally {\n            try {\n                if (_d && !_d.done && (_a = _c.return)) _a.call(_c);\n            }\n            finally { if (e_1) throw e_1.error; }\n        }\n        return undefined;\n    };\n    tslib_1.__decorate([\n        Cache_1.Cached(Infinity, true)\n    ], EmoteSetList.prototype, \"findEmoteId\", null);\n    EmoteSetList = tslib_1.__decorate([\n        Cache_1.Cacheable\n    ], EmoteSetList);\n    return EmoteSetList;\n}());\nexports.default = EmoteSetList;\n//# sourceMappingURL=EmoteSetList.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar NonEnumerable_1 = require(\"../../../Toolkit/Decorators/NonEnumerable\");\nvar HellFreezesOverError_1 = require(\"../../../Errors/HellFreezesOverError\");\nvar Cache_1 = require(\"../../../Toolkit/Decorators/Cache\");\n/**\n * A video on Twitch.\n */\nvar HelixVideo = /** @class */ (function () {\n    /** @private */\n    function HelixVideo(_data, client) {\n        this._data = _data;\n        this._client = client;\n    }\n    Object.defineProperty(HelixVideo.prototype, \"id\", {\n        /**\n         * The ID of the video.\n         */\n        get: function () {\n            return this._data.id;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(HelixVideo.prototype, \"userId\", {\n        /**\n         * The ID of the user who created the video.\n         */\n        get: function () {\n            return this._data.user_id;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(HelixVideo.prototype, \"userDisplayName\", {\n        /**\n         * The display name of the user who created the video.\n         */\n        get: function () {\n            return this._data.user_name;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Retrieves information about the user who created the video.\n     */\n    HelixVideo.prototype.getUser = function () {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            return tslib_1.__generator(this, function (_a) {\n                return [2 /*return*/, this._client.helix.users.getUserById(this._data.user_id)];\n            });\n        });\n    };\n    Object.defineProperty(HelixVideo.prototype, \"title\", {\n        /**\n         * The title of the video.\n         */\n        get: function () {\n            return this._data.title;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(HelixVideo.prototype, \"description\", {\n        /**\n         * The description of the video.\n         */\n        get: function () {\n            return this._data.description;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(HelixVideo.prototype, \"creationDate\", {\n        /**\n         * The date when the video was created.\n         */\n        get: function () {\n            return new Date(this._data.created_at);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(HelixVideo.prototype, \"publishDate\", {\n        /**\n         * The date when the video was published.\n         */\n        get: function () {\n            return new Date(this._data.published_at);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(HelixVideo.prototype, \"url\", {\n        /**\n         * The URL of the video.\n         */\n        get: function () {\n            return this._data.url;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(HelixVideo.prototype, \"thumbnailUrl\", {\n        /**\n         * The URL of the thumbnail of the video.\n         */\n        get: function () {\n            return this._data.thumbnail_url;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(HelixVideo.prototype, \"isPublic\", {\n        /**\n         * Whether the video is public or not.\n         */\n        get: function () {\n            return this._data.viewable === 'public';\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(HelixVideo.prototype, \"views\", {\n        /**\n         * The number of views of the video.\n         */\n        get: function () {\n            return this._data.view_count;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(HelixVideo.prototype, \"language\", {\n        /**\n         * The language of the video.\n         */\n        get: function () {\n            return this._data.language;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(HelixVideo.prototype, \"type\", {\n        /**\n         * The type of the video.\n         */\n        get: function () {\n            return this._data.type;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(HelixVideo.prototype, \"duration\", {\n        /**\n         * The duration of the video, as formatted by Twitch.\n         */\n        get: function () {\n            return this._data.duration;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(HelixVideo.prototype, \"durationInSeconds\", {\n        /**\n         * The duration of the video, in seconds.\n         */\n        get: function () {\n            var parts = this._data.duration.match(/\\d+[hms]/g);\n            if (!parts) {\n                throw new HellFreezesOverError_1.default(\"Could not parse duration string: \" + this._data.duration);\n            }\n            return parts.map(function (part) {\n                var partialMatch = part.match(/(\\d+)([hms])/);\n                if (!partialMatch) {\n                    throw new HellFreezesOverError_1.default(\"Could not parse partial duration string: \" + part);\n                }\n                var _a = tslib_1.__read(partialMatch, 3), num = _a[1], unit = _a[2];\n                return parseInt(num, 10) * { h: 3600, m: 60, s: 1 }[unit];\n            }).reduce(function (a, b) { return a + b; });\n        },\n        enumerable: true,\n        configurable: true\n    });\n    tslib_1.__decorate([\n        NonEnumerable_1.NonEnumerable\n    ], HelixVideo.prototype, \"_client\", void 0);\n    tslib_1.__decorate([\n        Cache_1.CachedGetter()\n    ], HelixVideo.prototype, \"durationInSeconds\", null);\n    HelixVideo = tslib_1.__decorate([\n        Cache_1.Cacheable\n    ], HelixVideo);\n    return HelixVideo;\n}());\nexports.default = HelixVideo;\n//# sourceMappingURL=HelixVideo.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\n/** @private */\nfunction mapObject(obj, fn) {\n    // eslint-disable-next-line @typescript-eslint/no-object-literal-type-assertion\n    var mapped = Object.entries(obj).map(function (_a) {\n        var _b;\n        var _c = tslib_1.__read(_a, 2), key = _c[0], value = _c[1];\n        return (_b = {}, _b[key] = fn(value, key), _b);\n    });\n    return Object.assign.apply(Object, tslib_1.__spread([{}], mapped));\n}\nexports.mapObject = mapObject;\n/** @private */\nfunction objectFromArray(arr, fn) {\n    return Object.assign.apply(Object, tslib_1.__spread([{}], arr.map(fn)));\n}\nexports.objectFromArray = objectFromArray;\n/** @private */\nfunction indexBy(arr, keyFn) {\n    if (typeof keyFn !== 'function') {\n        var key_1 = keyFn;\n        keyFn = (function (value) { return value[key_1].toString(); });\n    }\n    return objectFromArray(arr, function (val) {\n        var _a;\n        return (_a = {}, _a[keyFn(val)] = val, _a);\n    });\n}\nexports.indexBy = indexBy;\n/** @private */\nfunction forEachObjectEntry(obj, fn) {\n    Object.entries(obj).forEach(function (_a) {\n        var _b = tslib_1.__read(_a, 2), key = _b[0], value = _b[1];\n        return fn(value, key);\n    });\n}\nexports.forEachObjectEntry = forEachObjectEntry;\n/** @private */\nfunction entriesToObject(obj) {\n    return objectFromArray(obj, function (_a) {\n        var _b;\n        var _c = tslib_1.__read(_a, 2), key = _c[0], val = _c[1];\n        return (_b = {}, _b[key] = val, _b);\n    });\n}\nexports.entriesToObject = entriesToObject;\n//# sourceMappingURL=ObjectTools.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar CustomError_1 = require(\"./CustomError\");\n/**\n * These are the kind of errors that should never happen.\n *\n * If you see one thrown, please file a bug in the GitHub issue tracker.\n */\nvar HellFreezesOverError = /** @class */ (function (_super) {\n    tslib_1.__extends(HellFreezesOverError, _super);\n    function HellFreezesOverError(message) {\n        return _super.call(this, message + \" - this should never happen, please file a bug in the GitHub issue tracker\") || this;\n    }\n    return HellFreezesOverError;\n}(CustomError_1.default));\nexports.default = HellFreezesOverError;\n//# sourceMappingURL=HellFreezesOverError.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar NonEnumerable_1 = require(\"../../Toolkit/Decorators/NonEnumerable\");\nvar ChatBadgeSet_1 = require(\"./ChatBadgeSet\");\n/**\n * A list of badge sets.\n */\nvar ChatBadgeList = /** @class */ (function () {\n    /** @private */\n    function ChatBadgeList(_data, client) {\n        this._data = _data;\n        this._client = client;\n    }\n    Object.defineProperty(ChatBadgeList.prototype, \"badgeSetNames\", {\n        /**\n         * Names of all badge sets in the list.\n         */\n        get: function () {\n            return Object.keys(this._data);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Gets a specific badge set by name.\n     *\n     * @param name The name of the badge set.\n     */\n    ChatBadgeList.prototype.getBadgeSet = function (name) {\n        return new ChatBadgeSet_1.default(this._data[name], this._client);\n    };\n    /** @private */\n    ChatBadgeList.prototype._merge = function (additionalData) {\n        if (additionalData instanceof ChatBadgeList) {\n            additionalData = additionalData._data;\n        }\n        return new ChatBadgeList(tslib_1.__assign({}, this._data, additionalData), this._client);\n    };\n    tslib_1.__decorate([\n        NonEnumerable_1.NonEnumerable\n    ], ChatBadgeList.prototype, \"_client\", void 0);\n    return ChatBadgeList;\n}());\nexports.default = ChatBadgeList;\n//# sourceMappingURL=ChatBadgeList.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar BaseAPI_1 = require(\"../../BaseAPI\");\nvar __1 = require(\"../../..\");\nvar HelixPaginatedRequest_1 = require(\"../HelixPaginatedRequest\");\nvar HelixSubscription_1 = require(\"./HelixSubscription\");\n/**\n * The Helix API methods that deal with subscriptions.\n *\n * Can be accessed using `client.helix.subscriptions` on a {@TwitchClient} instance.\n *\n * ## Example\n * ```ts\n * const client = await TwitchClient.withCredentials(clientId, accessToken);\n * const subscriptions = await client.helix.subscriptions.getSubscriptionsForUsers('61369223', '125328655');\n * ```\n */\nvar HelixSubscriptionAPI = /** @class */ (function (_super) {\n    tslib_1.__extends(HelixSubscriptionAPI, _super);\n    function HelixSubscriptionAPI() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * Retrieves a list of all subscriptions to a given broadcaster.\n     *\n     * @param broadcaster The broadcaster to list subscriptions to.\n     */\n    HelixSubscriptionAPI.prototype.getSubscriptions = function (broadcaster) {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            var result;\n            var _this = this;\n            return tslib_1.__generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this._client.callAPI({\n                            url: 'subscriptions',\n                            query: {\n                                broadcaster_id: __1.extractUserId(broadcaster)\n                            }\n                        })];\n                    case 1:\n                        result = _a.sent();\n                        return [2 /*return*/, {\n                                data: result.data.map(function (data) { return new HelixSubscription_1.default(data, _this._client); }),\n                                cursor: result.pagination && result.pagination.cursor\n                            }];\n                }\n            });\n        });\n    };\n    /**\n     * Creates a paginator for all subscriptions to a given broadcaster.\n     *\n     * @param broadcaster The broadcaster to list subscriptions to.\n     */\n    HelixSubscriptionAPI.prototype.getSubscriptionsPaginated = function (broadcaster) {\n        var _this = this;\n        return new HelixPaginatedRequest_1.default({\n            url: 'subscriptions',\n            query: {\n                broadcaster_id: __1.extractUserId(broadcaster)\n            }\n        }, this._client, function (data) { return new HelixSubscription_1.default(data, _this._client); });\n    };\n    /**\n     * Retrieves the subset of the given user list that is subscribed to the given broadcaster.\n     *\n     * @param broadcaster The broadcaster to find subscriptions to.\n     * @param users The users that should be checked for subscriptions.\n     */\n    HelixSubscriptionAPI.prototype.getSubscriptionsForUsers = function (broadcaster, users) {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            var result;\n            var _this = this;\n            return tslib_1.__generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this._client.callAPI({\n                            url: 'subscriptions',\n                            type: __1.TwitchAPICallType.Helix,\n                            query: {\n                                broadcaster_id: __1.extractUserId(broadcaster),\n                                user_id: users.map(__1.extractUserId)\n                            }\n                        })];\n                    case 1:\n                        result = _a.sent();\n                        return [2 /*return*/, result.data.map(function (data) { return new HelixSubscription_1.default(data, _this._client); })];\n                }\n            });\n        });\n    };\n    /**\n     * Retrieves the subscription data for a given user to a given broadcaster.\n     *\n     * @param broadcaster The broadcaster to check.\n     * @param user The user to check.\n     */\n    HelixSubscriptionAPI.prototype.getSubscriptionForUser = function (broadcaster, user) {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            var list;\n            return tslib_1.__generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this.getSubscriptionsForUsers(broadcaster, [user])];\n                    case 1:\n                        list = _a.sent();\n                        return [2 /*return*/, list.length ? list[0] : null];\n                }\n            });\n        });\n    };\n    return HelixSubscriptionAPI;\n}(BaseAPI_1.default));\nexports.default = HelixSubscriptionAPI;\n//# sourceMappingURL=HelixSubscriptionAPI.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar NonEnumerable_1 = require(\"../../../Toolkit/Decorators/NonEnumerable\");\n/**\n * A chat emote.\n */\nvar ChatEmote = /** @class */ (function () {\n    /** @private */\n    function ChatEmote(_data, client) {\n        this._data = _data;\n        this._client = client;\n    }\n    Object.defineProperty(ChatEmote.prototype, \"id\", {\n        /**\n         * The emote ID.\n         */\n        get: function () {\n            return this._data.id;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ChatEmote.prototype, \"code\", {\n        /**\n         * The emote code, i.e. how you write it in chat.\n         */\n        get: function () {\n            return this._data.code;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ChatEmote.prototype, \"setId\", {\n        /**\n         * The ID of the emote set.\n         */\n        get: function () {\n            return this._data.emoticon_set;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    tslib_1.__decorate([\n        NonEnumerable_1.NonEnumerable\n    ], ChatEmote.prototype, \"_client\", void 0);\n    return ChatEmote;\n}());\nexports.default = ChatEmote;\n//# sourceMappingURL=ChatEmote.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar CustomError_1 = require(\"./CustomError\");\n/**\n * Thrown whenever you try accessing a subscription-related resource\n * (for example {@ChannelAPI#getChannelSubscriptions})\n * and the given channel does not have a subscription program.\n */\nvar NoSubscriptionProgramError = /** @class */ (function (_super) {\n    tslib_1.__extends(NoSubscriptionProgramError, _super);\n    function NoSubscriptionProgramError(channelId) {\n        return _super.call(this, \"Channel \" + channelId + \" does not have a subscription program\") || this;\n    }\n    return NoSubscriptionProgramError;\n}(CustomError_1.default));\nexports.default = NoSubscriptionProgramError;\n//# sourceMappingURL=NoSubscriptionProgramError.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar BaseAPI_1 = require(\"../../BaseAPI\");\nvar UserTools_1 = require(\"../../../Toolkit/UserTools\");\nvar TwitchClient_1 = require(\"../../../TwitchClient\");\nvar HelixPaginatedRequestWithTotal_1 = require(\"../HelixPaginatedRequestWithTotal\");\nvar HelixWebHookSubscription_1 = require(\"./HelixWebHookSubscription\");\n/**\n * The API methods that deal with WebHooks.\n *\n * Can be accessed using `client.helix.webHooks` on a {@TwitchClient} instance.\n *\n * ## Example\n * ```ts\n * const client = await TwitchClient.withCredentials(clientId, accessToken);\n * const accepted = await client.helix.webHooks.subscribeHook('https://api.twitch.tv/helix/streams?user_id=125328655', 'https://example.com');\n * ```\n */\nvar HelixWebHooksAPI = /** @class */ (function (_super) {\n    tslib_1.__extends(HelixWebHooksAPI, _super);\n    function HelixWebHooksAPI() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * Retrieves the current WebHook subscriptions for the current client.\n     *\n     * Requires an app access token to work; does not work with user tokens.\n     */\n    HelixWebHooksAPI.prototype.getSubscriptions = function () {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            var _this = this;\n            return tslib_1.__generator(this, function (_a) {\n                return [2 /*return*/, new HelixPaginatedRequestWithTotal_1.default({\n                        url: 'webhooks/subscriptions'\n                    }, this._client, function (data) { return new HelixWebHookSubscription_1.default(data, _this._client); })];\n            });\n        });\n    };\n    /**\n     * Sends an arbitrary request to subscribe to or unsubscribe from an event.\n     *\n     * @expandParams\n     */\n    HelixWebHooksAPI.prototype.sendHubRequest = function (options) {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            var mode, callbackUrl, topicUrl, _a, validityInSeconds, secret, scope;\n            return tslib_1.__generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0:\n                        mode = options.mode, callbackUrl = options.callbackUrl, topicUrl = options.topicUrl, _a = options.validityInSeconds, validityInSeconds = _a === void 0 ? 3600 : _a, secret = options.secret, scope = options.scope;\n                        return [4 /*yield*/, this._client.callAPI({\n                                url: 'webhooks/hub',\n                                type: TwitchClient_1.TwitchAPICallType.Helix,\n                                method: 'POST',\n                                scope: scope,\n                                jsonBody: {\n                                    'hub.mode': mode,\n                                    'hub.topic': topicUrl,\n                                    'hub.callback': callbackUrl,\n                                    'hub.lease_seconds': validityInSeconds.toString(),\n                                    'hub.secret': secret\n                                }\n                            })];\n                    case 1:\n                        _b.sent();\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Subscribes to events representing a user following other users.\n     *\n     * @expandParams\n     *\n     * @param user The user for which to get notifications about the users they will follow.\n     * @param options\n     */\n    HelixWebHooksAPI.prototype.subscribeToUserFollowsFrom = function (user, options) {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            return tslib_1.__generator(this, function (_a) {\n                return [2 /*return*/, this._sendUserFollowsHubRequest('subscribe', 'from', user, options)];\n            });\n        });\n    };\n    /**\n     * Subscribes to events representing a user being followed by other users.\n     *\n     * @expandParams\n     *\n     * @param user The user for which to get notifications about the users they will be followed by.\n     * @param options\n     */\n    HelixWebHooksAPI.prototype.subscribeToUserFollowsTo = function (user, options) {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            return tslib_1.__generator(this, function (_a) {\n                return [2 /*return*/, this._sendUserFollowsHubRequest('subscribe', 'to', user, options)];\n            });\n        });\n    };\n    /**\n     * Unsubscribes from events representing a user following other users.\n     *\n     * @expandParams\n     *\n     * @param user The user for which to not get any more notifications about the users they will follow.\n     * @param options\n     */\n    HelixWebHooksAPI.prototype.unsubscribeFromUserFollowsFrom = function (user, options) {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            return tslib_1.__generator(this, function (_a) {\n                return [2 /*return*/, this._sendUserFollowsHubRequest('unsubscribe', 'from', user, options)];\n            });\n        });\n    };\n    /**\n     * Unsubscribes from events representing a user being followed by other users.\n     *\n     * @expandParams\n     *\n     * @param user The user for which to not get any more notifications about the users they will be followed by.\n     * @param options\n     */\n    HelixWebHooksAPI.prototype.unsubscribeFromUserFollowsTo = function (user, options) {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            return tslib_1.__generator(this, function (_a) {\n                return [2 /*return*/, this._sendUserFollowsHubRequest('unsubscribe', 'to', user, options)];\n            });\n        });\n    };\n    /**\n     * Subscribes to events representing a stream changing, e.g. going live, offline or changing its title.\n     *\n     * @expandParams\n     *\n     * @param user The user for which to get notifications about their streams changing.\n     * @param options\n     */\n    HelixWebHooksAPI.prototype.subscribeToStreamChanges = function (user, options) {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            return tslib_1.__generator(this, function (_a) {\n                return [2 /*return*/, this._sendStreamChangeHubRequest('subscribe', user, options)];\n            });\n        });\n    };\n    /**\n     * Unsubscribes from events representing a stream changing, e.g. going live, offline or changing its title.\n     *\n     * @expandParams\n     *\n     * @param user The user for which not to get any more notifications about their streams changing.\n     * @param options\n     */\n    HelixWebHooksAPI.prototype.unsubscribeFromStreamChanges = function (user, options) {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            return tslib_1.__generator(this, function (_a) {\n                return [2 /*return*/, this._sendStreamChangeHubRequest('unsubscribe', user, options)];\n            });\n        });\n    };\n    /**\n     * Subscribes to events representing a user changing a public setting or their email address.\n     *\n     * @expandParams\n     *\n     * @param user The user for which to get notifications about changing a setting.\n     * @param options\n     * @param withEmail Whether to subscribe to email address changes. This adds the necessary scope to read the email address to the request.\n     */\n    HelixWebHooksAPI.prototype.subscribeToUserChanges = function (user, options, withEmail) {\n        if (withEmail === void 0) { withEmail = false; }\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            return tslib_1.__generator(this, function (_a) {\n                return [2 /*return*/, this._sendUserChangeHubRequest('subscribe', user, options, withEmail)];\n            });\n        });\n    };\n    /**\n     * Unsubscribes from events representing a user changing a public setting or their email address.\n     *\n     * @expandParams\n     *\n     * @param user The user for which not to get any more notifications about changing a setting.\n     * @param options\n     */\n    HelixWebHooksAPI.prototype.unsubscribeFromUserChanges = function (user, options) {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            return tslib_1.__generator(this, function (_a) {\n                return [2 /*return*/, this._sendUserChangeHubRequest('unsubscribe', user, options)];\n            });\n        });\n    };\n    HelixWebHooksAPI.prototype._sendUserFollowsHubRequest = function (mode, direction, user, options) {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            var userId;\n            return tslib_1.__generator(this, function (_a) {\n                userId = UserTools_1.extractUserId(user);\n                return [2 /*return*/, this.sendHubRequest(tslib_1.__assign({ mode: mode, topicUrl: \"https://api.twitch.tv/helix/users/follows?first=1&\" + direction + \"_id=\" + userId }, options))];\n            });\n        });\n    };\n    HelixWebHooksAPI.prototype._sendStreamChangeHubRequest = function (mode, user, options) {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            var userId;\n            return tslib_1.__generator(this, function (_a) {\n                userId = UserTools_1.extractUserId(user);\n                return [2 /*return*/, this.sendHubRequest(tslib_1.__assign({ mode: mode, topicUrl: \"https://api.twitch.tv/helix/streams?user_id=\" + userId }, options))];\n            });\n        });\n    };\n    HelixWebHooksAPI.prototype._sendUserChangeHubRequest = function (mode, user, options, withEmail) {\n        if (withEmail === void 0) { withEmail = false; }\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            var userId;\n            return tslib_1.__generator(this, function (_a) {\n                userId = UserTools_1.extractUserId(user);\n                return [2 /*return*/, this.sendHubRequest(tslib_1.__assign({ mode: mode, topicUrl: \"https://api.twitch.tv/helix/users?id=\" + userId, scope: withEmail ? 'user:read:email' : undefined }, options))];\n            });\n        });\n    };\n    return HelixWebHooksAPI;\n}(BaseAPI_1.default));\nexports.default = HelixWebHooksAPI;\n//# sourceMappingURL=HelixWebHooksAPI.js.map","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar BaseAPI_1 = require(\"../../BaseAPI\");\nvar HelixUser_1 = require(\"./HelixUser\");\nvar HelixPrivilegedUser_1 = require(\"./HelixPrivilegedUser\");\nvar UserTools_1 = require(\"../../../Toolkit/UserTools\");\nvar HelixFollow_1 = require(\"./HelixFollow\");\nvar TwitchClient_1 = require(\"../../../TwitchClient\");\nvar HelixPaginatedRequestWithTotal_1 = require(\"../HelixPaginatedRequestWithTotal\");\nvar HellFreezesOverError_1 = require(\"../../../Errors/HellFreezesOverError\");\n/** @private */\nvar UserLookupType;\n(function (UserLookupType) {\n    UserLookupType[\"Id\"] = \"id\";\n    UserLookupType[\"Login\"] = \"login\";\n})(UserLookupType = exports.UserLookupType || (exports.UserLookupType = {}));\n/**\n * The Helix API methods that deal with users.\n *\n * Can be accessed using `client.helix.users` on a {@TwitchClient} instance.\n *\n * ## Example\n * ```ts\n * const client = await TwitchClient.withCredentials(clientId, accessToken);\n * const user = await client.helix.users.getUserById('125328655');\n * ```\n */\nvar HelixUserAPI = /** @class */ (function (_super) {\n    tslib_1.__extends(HelixUserAPI, _super);\n    function HelixUserAPI() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * Retrieves the user data for the given list of user IDs.\n     *\n     * @param userIds The user IDs you want to look up.\n     */\n    HelixUserAPI.prototype.getUsersByIds = function (userIds) {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            return tslib_1.__generator(this, function (_a) {\n                return [2 /*return*/, this._getUsers(UserLookupType.Id, userIds.map(UserTools_1.extractUserId))];\n            });\n        });\n    };\n    /**\n     * Retrieves the user data for the given list of user names.\n     *\n     * @param userNames The user names you want to look up.\n     */\n    HelixUserAPI.prototype.getUsersByNames = function (userNames) {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            return tslib_1.__generator(this, function (_a) {\n                return [2 /*return*/, this._getUsers(UserLookupType.Login, userNames.map(UserTools_1.extractUserName))];\n            });\n        });\n    };\n    /**\n     * Retrieves the user data for the given user ID.\n     *\n     * @param userId The user ID you want to look up.\n     */\n    HelixUserAPI.prototype.getUserById = function (userId) {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            var users;\n            return tslib_1.__generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this._getUsers(UserLookupType.Id, UserTools_1.extractUserId(userId))];\n                    case 1:\n                        users = _a.sent();\n                        return [2 /*return*/, users.length ? users[0] : null];\n                }\n            });\n        });\n    };\n    /**\n     * Retrieves the user data for the given user name.\n     *\n     * @param userName The user name you want to look up.\n     */\n    HelixUserAPI.prototype.getUserByName = function (userName) {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            var users;\n            return tslib_1.__generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this._getUsers(UserLookupType.Login, UserTools_1.extractUserName(userName))];\n                    case 1:\n                        users = _a.sent();\n                        return [2 /*return*/, users.length ? users[0] : null];\n                }\n            });\n        });\n    };\n    /**\n     * Retrieves the user data of the currently authenticated user.\n     *\n     * @param withEmail Whether you need the user's email address.\n     */\n    HelixUserAPI.prototype.getMe = function (withEmail) {\n        if (withEmail === void 0) { withEmail = false; }\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            var result;\n            return tslib_1.__generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this._client.callAPI({\n                            type: TwitchClient_1.TwitchAPICallType.Helix,\n                            url: 'users',\n                            scope: withEmail ? 'user:read:email' : ''\n                        })];\n                    case 1:\n                        result = _a.sent();\n                        if (!result.data || !result.data.length) {\n                            throw new HellFreezesOverError_1.default('Could not get authenticated user');\n                        }\n                        return [2 /*return*/, new HelixPrivilegedUser_1.default(result.data[0], this._client)];\n                }\n            });\n        });\n    };\n    /**\n     * Updates the currently authenticated user's data.\n     *\n     * @param data The data to update.\n     */\n    HelixUserAPI.prototype.updateUser = function (data) {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            var result;\n            return tslib_1.__generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this._client.callAPI({\n                            type: TwitchClient_1.TwitchAPICallType.Helix,\n                            url: 'users',\n                            method: 'PUT',\n                            scope: 'user:edit',\n                            query: {\n                                description: data.description\n                            }\n                        })];\n                    case 1:\n                        result = _a.sent();\n                        return [2 /*return*/, new HelixPrivilegedUser_1.default(result.data[0], this._client)];\n                }\n            });\n        });\n    };\n    /**\n     * Retrieves a list of follow relations.\n     *\n     * @param filter Several filtering and pagination parameters. See the {@HelixFollowFilter} documentation.\n     */\n    HelixUserAPI.prototype.getFollows = function (filter) {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            var query, result;\n            var _this = this;\n            return tslib_1.__generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        query = HelixUserAPI._makeFollowsQuery(filter);\n                        return [4 /*yield*/, this._client.callAPI({\n                                url: 'users/follows',\n                                type: TwitchClient_1.TwitchAPICallType.Helix,\n                                query: query\n                            })];\n                    case 1:\n                        result = _a.sent();\n                        return [2 /*return*/, {\n                                data: result.data.map(function (data) { return new HelixFollow_1.default(data, _this._client); }),\n                                cursor: result.pagination.cursor,\n                                total: result.total\n                            }];\n                }\n            });\n        });\n    };\n    /**\n     * Creates a paginator for follow relations.\n     *\n     * @param filter Several filtering and pagination parameters. See the {@HelixFollowFilter} documentation.\n     */\n    HelixUserAPI.prototype.getFollowsPaginated = function (filter) {\n        var _this = this;\n        var query = HelixUserAPI._makeFollowsQuery(filter);\n        return new HelixPaginatedRequestWithTotal_1.default({\n            url: 'users/follows',\n            query: query\n        }, this._client, function (data) { return new HelixFollow_1.default(data, _this._client); });\n    };\n    HelixUserAPI._makeFollowsQuery = function (filter) {\n        var query = {};\n        var hasUserIdParam = false;\n        if (filter.user) {\n            query.from_id = UserTools_1.extractUserId(filter.user);\n            hasUserIdParam = true;\n        }\n        if (filter.followedUser) {\n            query.to_id = UserTools_1.extractUserId(filter.followedUser);\n            hasUserIdParam = true;\n        }\n        if (!hasUserIdParam) {\n            throw new TypeError('At least one of user and followedUser have to be set');\n        }\n        return query;\n    };\n    HelixUserAPI.prototype._getUsers = function (lookupType, param) {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            var query, result;\n            var _a;\n            var _this = this;\n            return tslib_1.__generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0:\n                        query = (_a = {}, _a[lookupType] = param, _a);\n                        return [4 /*yield*/, this._client.callAPI({\n                                type: TwitchClient_1.TwitchAPICallType.Helix,\n                                url: 'users',\n                                query: query\n                            })];\n                    case 1:\n                        result = _b.sent();\n                        return [2 /*return*/, result.data.map(function (userData) { return new HelixUser_1.default(userData, _this._client); })];\n                }\n            });\n        });\n    };\n    return HelixUserAPI;\n}(BaseAPI_1.default));\nexports.default = HelixUserAPI;\n//# sourceMappingURL=HelixUserAPI.js.map","'use strict';\n\nvar utils = require('./utils');\n\nvar has = Object.prototype.hasOwnProperty;\n\nvar defaults = {\n    allowDots: false,\n    allowPrototypes: false,\n    arrayLimit: 20,\n    charset: 'utf-8',\n    charsetSentinel: false,\n    comma: false,\n    decoder: utils.decode,\n    delimiter: '&',\n    depth: 5,\n    ignoreQueryPrefix: false,\n    interpretNumericEntities: false,\n    parameterLimit: 1000,\n    parseArrays: true,\n    plainObjects: false,\n    strictNullHandling: false\n};\n\nvar interpretNumericEntities = function (str) {\n    return str.replace(/&#(\\d+);/g, function ($0, numberStr) {\n        return String.fromCharCode(parseInt(numberStr, 10));\n    });\n};\n\n// This is what browsers will submit when the ✓ character occurs in an\n// application/x-www-form-urlencoded body and the encoding of the page containing\n// the form is iso-8859-1, or when the submitted form has an accept-charset\n// attribute of iso-8859-1. Presumably also with other charsets that do not contain\n// the ✓ character, such as us-ascii.\nvar isoSentinel = 'utf8=%26%2310003%3B'; // encodeURIComponent('&#10003;')\n\n// These are the percent-encoded utf-8 octets representing a checkmark, indicating that the request actually is utf-8 encoded.\nvar charsetSentinel = 'utf8=%E2%9C%93'; // encodeURIComponent('✓')\n\nvar parseValues = function parseQueryStringValues(str, options) {\n    var obj = {};\n    var cleanStr = options.ignoreQueryPrefix ? str.replace(/^\\?/, '') : str;\n    var limit = options.parameterLimit === Infinity ? undefined : options.parameterLimit;\n    var parts = cleanStr.split(options.delimiter, limit);\n    var skipIndex = -1; // Keep track of where the utf8 sentinel was found\n    var i;\n\n    var charset = options.charset;\n    if (options.charsetSentinel) {\n        for (i = 0; i < parts.length; ++i) {\n            if (parts[i].indexOf('utf8=') === 0) {\n                if (parts[i] === charsetSentinel) {\n                    charset = 'utf-8';\n                } else if (parts[i] === isoSentinel) {\n                    charset = 'iso-8859-1';\n                }\n                skipIndex = i;\n                i = parts.length; // The eslint settings do not allow break;\n            }\n        }\n    }\n\n    for (i = 0; i < parts.length; ++i) {\n        if (i === skipIndex) {\n            continue;\n        }\n        var part = parts[i];\n\n        var bracketEqualsPos = part.indexOf(']=');\n        var pos = bracketEqualsPos === -1 ? part.indexOf('=') : bracketEqualsPos + 1;\n\n        var key, val;\n        if (pos === -1) {\n            key = options.decoder(part, defaults.decoder, charset);\n            val = options.strictNullHandling ? null : '';\n        } else {\n            key = options.decoder(part.slice(0, pos), defaults.decoder, charset);\n            val = options.decoder(part.slice(pos + 1), defaults.decoder, charset);\n        }\n\n        if (val && options.interpretNumericEntities && charset === 'iso-8859-1') {\n            val = interpretNumericEntities(val);\n        }\n\n        if (val && options.comma && val.indexOf(',') > -1) {\n            val = val.split(',');\n        }\n\n        if (has.call(obj, key)) {\n            obj[key] = utils.combine(obj[key], val);\n        } else {\n            obj[key] = val;\n        }\n    }\n\n    return obj;\n};\n\nvar parseObject = function (chain, val, options) {\n    var leaf = val;\n\n    for (var i = chain.length - 1; i >= 0; --i) {\n        var obj;\n        var root = chain[i];\n\n        if (root === '[]' && options.parseArrays) {\n            obj = [].concat(leaf);\n        } else {\n            obj = options.plainObjects ? Object.create(null) : {};\n            var cleanRoot = root.charAt(0) === '[' && root.charAt(root.length - 1) === ']' ? root.slice(1, -1) : root;\n            var index = parseInt(cleanRoot, 10);\n            if (!options.parseArrays && cleanRoot === '') {\n                obj = { 0: leaf };\n            } else if (\n                !isNaN(index)\n                && root !== cleanRoot\n                && String(index) === cleanRoot\n                && index >= 0\n                && (options.parseArrays && index <= options.arrayLimit)\n            ) {\n                obj = [];\n                obj[index] = leaf;\n            } else {\n                obj[cleanRoot] = leaf;\n            }\n        }\n\n        leaf = obj;\n    }\n\n    return leaf;\n};\n\nvar parseKeys = function parseQueryStringKeys(givenKey, val, options) {\n    if (!givenKey) {\n        return;\n    }\n\n    // Transform dot notation to bracket notation\n    var key = options.allowDots ? givenKey.replace(/\\.([^.[]+)/g, '[$1]') : givenKey;\n\n    // The regex chunks\n\n    var brackets = /(\\[[^[\\]]*])/;\n    var child = /(\\[[^[\\]]*])/g;\n\n    // Get the parent\n\n    var segment = brackets.exec(key);\n    var parent = segment ? key.slice(0, segment.index) : key;\n\n    // Stash the parent if it exists\n\n    var keys = [];\n    if (parent) {\n        // If we aren't using plain objects, optionally prefix keys that would overwrite object prototype properties\n        if (!options.plainObjects && has.call(Object.prototype, parent)) {\n            if (!options.allowPrototypes) {\n                return;\n            }\n        }\n\n        keys.push(parent);\n    }\n\n    // Loop through children appending to the array until we hit depth\n\n    var i = 0;\n    while ((segment = child.exec(key)) !== null && i < options.depth) {\n        i += 1;\n        if (!options.plainObjects && has.call(Object.prototype, segment[1].slice(1, -1))) {\n            if (!options.allowPrototypes) {\n                return;\n            }\n        }\n        keys.push(segment[1]);\n    }\n\n    // If there's a remainder, just add whatever is left\n\n    if (segment) {\n        keys.push('[' + key.slice(segment.index) + ']');\n    }\n\n    return parseObject(keys, val, options);\n};\n\nvar normalizeParseOptions = function normalizeParseOptions(opts) {\n    if (!opts) {\n        return defaults;\n    }\n\n    if (opts.decoder !== null && opts.decoder !== undefined && typeof opts.decoder !== 'function') {\n        throw new TypeError('Decoder has to be a function.');\n    }\n\n    if (typeof opts.charset !== 'undefined' && opts.charset !== 'utf-8' && opts.charset !== 'iso-8859-1') {\n        throw new Error('The charset option must be either utf-8, iso-8859-1, or undefined');\n    }\n    var charset = typeof opts.charset === 'undefined' ? defaults.charset : opts.charset;\n\n    return {\n        allowDots: typeof opts.allowDots === 'undefined' ? defaults.allowDots : !!opts.allowDots,\n        allowPrototypes: typeof opts.allowPrototypes === 'boolean' ? opts.allowPrototypes : defaults.allowPrototypes,\n        arrayLimit: typeof opts.arrayLimit === 'number' ? opts.arrayLimit : defaults.arrayLimit,\n        charset: charset,\n        charsetSentinel: typeof opts.charsetSentinel === 'boolean' ? opts.charsetSentinel : defaults.charsetSentinel,\n        comma: typeof opts.comma === 'boolean' ? opts.comma : defaults.comma,\n        decoder: typeof opts.decoder === 'function' ? opts.decoder : defaults.decoder,\n        delimiter: typeof opts.delimiter === 'string' || utils.isRegExp(opts.delimiter) ? opts.delimiter : defaults.delimiter,\n        depth: typeof opts.depth === 'number' ? opts.depth : defaults.depth,\n        ignoreQueryPrefix: opts.ignoreQueryPrefix === true,\n        interpretNumericEntities: typeof opts.interpretNumericEntities === 'boolean' ? opts.interpretNumericEntities : defaults.interpretNumericEntities,\n        parameterLimit: typeof opts.parameterLimit === 'number' ? opts.parameterLimit : defaults.parameterLimit,\n        parseArrays: opts.parseArrays !== false,\n        plainObjects: typeof opts.plainObjects === 'boolean' ? opts.plainObjects : defaults.plainObjects,\n        strictNullHandling: typeof opts.strictNullHandling === 'boolean' ? opts.strictNullHandling : defaults.strictNullHandling\n    };\n};\n\nmodule.exports = function (str, opts) {\n    var options = normalizeParseOptions(opts);\n\n    if (str === '' || str === null || typeof str === 'undefined') {\n        return options.plainObjects ? Object.create(null) : {};\n    }\n\n    var tempObj = typeof str === 'string' ? parseValues(str, options) : str;\n    var obj = options.plainObjects ? Object.create(null) : {};\n\n    // Iterate over the keys and setup the new object\n\n    var keys = Object.keys(tempObj);\n    for (var i = 0; i < keys.length; ++i) {\n        var key = keys[i];\n        var newObj = parseKeys(key, tempObj[key], options);\n        obj = utils.merge(obj, newObj, options);\n    }\n\n    return utils.compact(obj);\n};\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar Cache_1 = require(\"../../../Toolkit/Decorators/Cache\");\nvar BaseAPI_1 = require(\"../../BaseAPI\");\nvar Channel_1 = require(\"./Channel\");\nvar UserTools_1 = require(\"../../../Toolkit/UserTools\");\nvar ChannelSubscription_1 = require(\"./ChannelSubscription\");\nvar NoSubscriptionProgramError_1 = require(\"../../../Errors/NoSubscriptionProgramError\");\nvar PrivilegedChannel_1 = require(\"./PrivilegedChannel\");\nvar User_1 = require(\"../User/User\");\nvar ChannelFollow_1 = require(\"./ChannelFollow\");\nvar HTTPStatusCodeError_1 = require(\"../../../Errors/HTTPStatusCodeError\");\n/**\n * The API methods that deal with channels.\n *\n * Can be accessed using `client.kraken.channels` on a {@TwitchClient} instance.\n *\n * ## Example\n * ```ts\n * const client = await TwitchClient.withCredentials(clientId, accessToken);\n * const channel = await client.kraken.channels.getMyChannel();\n * ```\n */\nvar ChannelAPI = /** @class */ (function (_super) {\n    tslib_1.__extends(ChannelAPI, _super);\n    function ChannelAPI() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * Gets the channel the client is logged in to.\n     */\n    ChannelAPI.prototype.getMyChannel = function () {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            var _a;\n            return tslib_1.__generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0:\n                        _a = PrivilegedChannel_1.default.bind;\n                        return [4 /*yield*/, this._client.callAPI({ url: 'channel', scope: 'channel_read' })];\n                    case 1: return [2 /*return*/, new (_a.apply(PrivilegedChannel_1.default, [void 0, _b.sent(), this._client]))()];\n                }\n            });\n        });\n    };\n    /**\n     * Retrieves the channel for the given user.\n     *\n     * @param user The user you want to retrieve the channel for.\n     */\n    ChannelAPI.prototype.getChannel = function (user) {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            var _a;\n            return tslib_1.__generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0:\n                        _a = Channel_1.default.bind;\n                        return [4 /*yield*/, this._client.callAPI({ url: \"channels/\" + UserTools_1.extractUserId(user) })];\n                    case 1: return [2 /*return*/, new (_a.apply(Channel_1.default, [void 0, _b.sent(), this._client]))()];\n                }\n            });\n        });\n    };\n    /**\n     * Updates the given channel with the given data.\n     *\n     * @param channel The channel you want to update.\n     * @param data The updated channel data.\n     */\n    ChannelAPI.prototype.updateChannel = function (channel, data) {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            var channelId;\n            return tslib_1.__generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        channelId = UserTools_1.extractUserId(channel);\n                        return [4 /*yield*/, this._client.callAPI({\n                                url: \"channels/\" + channelId,\n                                method: 'PUT',\n                                jsonBody: { channel: data },\n                                scope: 'channel_editor'\n                            })];\n                    case 1:\n                        _a.sent();\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Retrieves the list of users that have editor rights to the given channel.\n     *\n     * @param channel The channel you want to retrieve the list of editors for.\n     */\n    ChannelAPI.prototype.getChannelEditors = function (channel) {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            var channelId, data;\n            var _this = this;\n            return tslib_1.__generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        channelId = UserTools_1.extractUserId(channel);\n                        return [4 /*yield*/, this._client.callAPI({\n                                url: \"channels/\" + channelId + \"/editors\",\n                                scope: 'channel_read'\n                            })];\n                    case 1:\n                        data = _a.sent();\n                        return [2 /*return*/, data.users.map(function (userData) { return new User_1.default(userData, _this._client); })];\n                }\n            });\n        });\n    };\n    /**\n     * Retrieves the list of followers of the given channel.\n     *\n     * @param channel The channel you want to retrieve the list of followers of.\n     * @param page The result page you want to retrieve.\n     * @param limit The number of results you want to retrieve.\n     * @param orderDirection The direction to order in - ascending or descending.\n     */\n    ChannelAPI.prototype.getChannelFollowers = function (channel, page, limit, orderDirection) {\n        if (limit === void 0) { limit = 25; }\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            var channelId, query, data;\n            var _this = this;\n            return tslib_1.__generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        channelId = UserTools_1.extractUserId(channel);\n                        query = { limit: limit.toString() };\n                        if (page) {\n                            query.offset = ((page - 1) * limit).toString();\n                        }\n                        if (orderDirection) {\n                            query.direction = orderDirection;\n                        }\n                        return [4 /*yield*/, this._client.callAPI({\n                                url: \"channels/\" + channelId + \"/follows\",\n                                query: query\n                            })];\n                    case 1:\n                        data = _a.sent();\n                        return [2 /*return*/, data.follows.map(function (follow) { return new ChannelFollow_1.default(follow, _this._client); })];\n                }\n            });\n        });\n    };\n    /**\n     * Retrieves the list of subscribers of the given channel.\n     *\n     * @param channel The channel you want to retrieve the list of subscribers of.\n     * @param page The result page you want to retrieve.\n     * @param limit The number of results you want to retrieve.\n     * @param orderDirection The direction to order in - ascending or descending.\n     */\n    ChannelAPI.prototype.getChannelSubscriptions = function (channel, page, limit, orderDirection) {\n        if (limit === void 0) { limit = 25; }\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            var data;\n            var _this = this;\n            return tslib_1.__generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this._getChannelSubscriptions(channel, page, limit, orderDirection)];\n                    case 1:\n                        data = _a.sent();\n                        return [2 /*return*/, data.subscriptions.map(function (sub) { return new ChannelSubscription_1.default(sub, _this._client); })];\n                }\n            });\n        });\n    };\n    /**\n     * Retrieves the total number of subscribers for the given channel.\n     *\n     * @param channel The channel you want to retrieve the number of subscribers for.\n     */\n    ChannelAPI.prototype.getChannelSubscriptionCount = function (channel) {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            var data;\n            return tslib_1.__generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this._getChannelSubscriptions(channel, 0, 1)];\n                    case 1:\n                        data = _a.sent();\n                        return [2 /*return*/, data._total];\n                }\n            });\n        });\n    };\n    /**\n     * Retrieves the subscription data for the given user to a given channel.\n     *\n     * Throws if the channel doesn't have a subscription program or the user is not subscribed to it.\n     *\n     * This method requires access to the channel. If you only have access to the user,\n     * use {@UserAPI#getSubscriptionData} instead.\n     *\n     * @param channel The channel to check the subscription to.\n     * @param byUser The user to check the subscription for.\n     */\n    ChannelAPI.prototype.getChannelSubscriptionByUser = function (channel, byUser) {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            var channelId, userId, _a, e_1;\n            return tslib_1.__generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0:\n                        channelId = UserTools_1.extractUserId(channel);\n                        userId = UserTools_1.extractUserId(byUser);\n                        _b.label = 1;\n                    case 1:\n                        _b.trys.push([1, 3, , 4]);\n                        _a = ChannelSubscription_1.default.bind;\n                        return [4 /*yield*/, this._client.callAPI({\n                                url: \"channels/\" + channelId + \"/subscriptions/\" + userId,\n                                scope: 'channel_check_subscription'\n                            })];\n                    case 2: return [2 /*return*/, new (_a.apply(ChannelSubscription_1.default, [void 0, _b.sent(),\n                            this._client]))()];\n                    case 3:\n                        e_1 = _b.sent();\n                        if (e_1 instanceof HTTPStatusCodeError_1.default) {\n                            if (e_1.statusCode === 404) {\n                                return [2 /*return*/, null];\n                            }\n                            else if (e_1.statusCode === 422) {\n                                throw new NoSubscriptionProgramError_1.default(channelId);\n                            }\n                        }\n                        throw e_1;\n                    case 4: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Starts a commercial in the given channel.\n     *\n     * @param channel The channel to start the commercial in.\n     * @param length The length of the commercial.\n     */\n    ChannelAPI.prototype.startChannelCommercial = function (channel, length) {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            var channelId;\n            return tslib_1.__generator(this, function (_a) {\n                channelId = UserTools_1.extractUserId(channel);\n                return [2 /*return*/, this._client.callAPI({\n                        url: \"channels/\" + channelId + \"/commercial\",\n                        method: 'POST',\n                        jsonBody: { length: length },\n                        scope: 'channel_commercial'\n                    })];\n            });\n        });\n    };\n    /**\n     * Resets the given channel's stream key.\n     *\n     * @param channel The channel to reset the stream key for.\n     */\n    ChannelAPI.prototype.resetChannelStreamKey = function (channel) {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            var channelId;\n            return tslib_1.__generator(this, function (_a) {\n                channelId = UserTools_1.extractUserId(channel);\n                return [2 /*return*/, this._client.callAPI({\n                        url: \"channels/\" + channelId + \"/stream_key\",\n                        method: 'DELETE',\n                        scope: 'channel_stream'\n                    })];\n            });\n        });\n    };\n    ChannelAPI.prototype._getChannelSubscriptions = function (channel, page, limit, orderDirection) {\n        if (limit === void 0) { limit = 25; }\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            var channelId, query, e_2;\n            return tslib_1.__generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        channelId = UserTools_1.extractUserId(channel);\n                        query = { limit: limit.toString() };\n                        if (page) {\n                            query.offset = ((page - 1) * limit).toString();\n                        }\n                        if (orderDirection) {\n                            query.direction = orderDirection;\n                        }\n                        _a.label = 1;\n                    case 1:\n                        _a.trys.push([1, 3, , 4]);\n                        return [4 /*yield*/, this._client.callAPI({\n                                url: \"channels/\" + channelId + \"/subscriptions\",\n                                query: query,\n                                scope: 'channel_subscriptions'\n                            })];\n                    case 2: return [2 /*return*/, _a.sent()];\n                    case 3:\n                        e_2 = _a.sent();\n                        if (e_2 instanceof HTTPStatusCodeError_1.default && e_2.statusCode === 422) {\n                            throw new NoSubscriptionProgramError_1.default(channelId);\n                        }\n                        throw e_2;\n                    case 4: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    tslib_1.__decorate([\n        Cache_1.Cached(3600)\n    ], ChannelAPI.prototype, \"getMyChannel\", null);\n    tslib_1.__decorate([\n        Cache_1.Cached(3600)\n    ], ChannelAPI.prototype, \"getChannel\", null);\n    tslib_1.__decorate([\n        Cache_1.ClearsCache('getChannel', 1)\n    ], ChannelAPI.prototype, \"updateChannel\", null);\n    tslib_1.__decorate([\n        Cache_1.Cached(3600)\n    ], ChannelAPI.prototype, \"getChannelEditors\", null);\n    tslib_1.__decorate([\n        Cache_1.Cached(30)\n    ], ChannelAPI.prototype, \"getChannelFollowers\", null);\n    tslib_1.__decorate([\n        Cache_1.Cached(30)\n    ], ChannelAPI.prototype, \"getChannelSubscriptions\", null);\n    tslib_1.__decorate([\n        Cache_1.Cached(30)\n    ], ChannelAPI.prototype, \"getChannelSubscriptionCount\", null);\n    tslib_1.__decorate([\n        Cache_1.Cached(3600)\n    ], ChannelAPI.prototype, \"getChannelSubscriptionByUser\", null);\n    tslib_1.__decorate([\n        Cache_1.ClearsCache('getMyChannel')\n    ], ChannelAPI.prototype, \"resetChannelStreamKey\", null);\n    ChannelAPI = tslib_1.__decorate([\n        Cache_1.Cacheable\n    ], ChannelAPI);\n    return ChannelAPI;\n}(BaseAPI_1.default));\nexports.default = ChannelAPI;\n//# sourceMappingURL=ChannelAPI.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar HelixUser_1 = require(\"./HelixUser\");\n/**\n * A user you have extended privilges for, i.e. yourself.\n */\nvar HelixPrivilegedUser = /** @class */ (function (_super) {\n    tslib_1.__extends(HelixPrivilegedUser, _super);\n    function HelixPrivilegedUser() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Object.defineProperty(HelixPrivilegedUser.prototype, \"email\", {\n        /**\n         * The email address of the user.\n         */\n        get: function () {\n            return this._data.email;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Changes the description of the user.\n     *\n     * @param description The new description.\n     */\n    HelixPrivilegedUser.prototype.setDescription = function (description) {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            return tslib_1.__generator(this, function (_a) {\n                return [2 /*return*/, this._client.helix.users.updateUser({ description: description })];\n            });\n        });\n    };\n    return HelixPrivilegedUser;\n}(HelixUser_1.default));\nexports.default = HelixPrivilegedUser;\n//# sourceMappingURL=HelixPrivilegedUser.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar NonEnumerable_1 = require(\"../../../Toolkit/Decorators/NonEnumerable\");\n/**\n * A Twitch team.\n */\nvar Team = /** @class */ (function () {\n    /** @private */\n    function Team(/** @private */ _data, client) {\n        this._data = _data;\n        this._client = client;\n    }\n    Object.defineProperty(Team.prototype, \"id\", {\n        /**\n         * The ID of the team.\n         */\n        get: function () {\n            return this._data._id;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Team.prototype, \"background\", {\n        /**\n         * The background url of the team.\n         */\n        get: function () {\n            return this._data.background;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Team.prototype, \"banner\", {\n        /**\n         * The banner url of the team.\n         */\n        get: function () {\n            return this._data.banner;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Team.prototype, \"creationDate\", {\n        /**\n         * The date when the team was created.\n         */\n        get: function () {\n            return new Date(this._data.created_at);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Team.prototype, \"updateDate\", {\n        /**\n         * The last date when the team changed anything.\n         */\n        get: function () {\n            return new Date(this._data.updated_at);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Team.prototype, \"name\", {\n        /**\n         * The name of the team.\n         */\n        get: function () {\n            return this._data.name;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Team.prototype, \"info\", {\n        /**\n         * The info of the team.\n         */\n        get: function () {\n            return this._data.info;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Team.prototype, \"displayName\", {\n        /**\n         * The display name of the team.\n         */\n        get: function () {\n            return this._data.display_name;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Team.prototype, \"logoUrl\", {\n        /**\n         * The URL to the profile picture of the team.\n         */\n        get: function () {\n            return this._data.logo;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Team.prototype.getUsers = function () {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            var team;\n            return tslib_1.__generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this._client.kraken.teams.getTeamByName(this.name)];\n                    case 1:\n                        team = _a.sent();\n                        return [2 /*return*/, team.getUsers()];\n                }\n            });\n        });\n    };\n    tslib_1.__decorate([\n        NonEnumerable_1.NonEnumerable\n    ], Team.prototype, \"_client\", void 0);\n    return Team;\n}());\nexports.default = Team;\n//# sourceMappingURL=Team.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar BaseAPI_1 = require(\"../BaseAPI\");\nvar Cache_1 = require(\"../../Toolkit/Decorators/Cache\");\nvar HelixBitsAPI_1 = require(\"./Bits/HelixBitsAPI\");\nvar HelixClipAPI_1 = require(\"./Clip/HelixClipAPI\");\nvar HelixGameAPI_1 = require(\"./Game/HelixGameAPI\");\nvar HelixStreamAPI_1 = require(\"./Stream/HelixStreamAPI\");\nvar HelixSubscriptionAPI_1 = require(\"./Subscriptions/HelixSubscriptionAPI\");\nvar HelixUserAPI_1 = require(\"./User/HelixUserAPI\");\nvar HelixVideoAPI_1 = require(\"./Video/HelixVideoAPI\");\nvar HelixWebHooksAPI_1 = require(\"./WebHooks/HelixWebHooksAPI\");\n/**\n * Groups all API calls available in Helix a.k.a. the \"New Twitch API\".\n *\n * Can be accessed using {@TwitchClient#helix}.\n */\nvar HelixAPIGroup = /** @class */ (function (_super) {\n    tslib_1.__extends(HelixAPIGroup, _super);\n    function HelixAPIGroup() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Object.defineProperty(HelixAPIGroup.prototype, \"bits\", {\n        /**\n         * The Helix bits API methods.\n         */\n        get: function () {\n            return new HelixBitsAPI_1.default(this._client);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(HelixAPIGroup.prototype, \"clips\", {\n        /**\n         * The Helix clips API methods.\n         */\n        get: function () {\n            return new HelixClipAPI_1.default(this._client);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(HelixAPIGroup.prototype, \"games\", {\n        /**\n         * The Helix game API methods.\n         */\n        get: function () {\n            return new HelixGameAPI_1.default(this._client);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(HelixAPIGroup.prototype, \"streams\", {\n        /**\n         * The Helix stream API methods.\n         */\n        get: function () {\n            return new HelixStreamAPI_1.default(this._client);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(HelixAPIGroup.prototype, \"subscriptions\", {\n        /**\n         * The Helix subscription API methods.\n         */\n        get: function () {\n            return new HelixSubscriptionAPI_1.default(this._client);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(HelixAPIGroup.prototype, \"users\", {\n        /**\n         * The Helix user API methods.\n         */\n        get: function () {\n            return new HelixUserAPI_1.default(this._client);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(HelixAPIGroup.prototype, \"webHooks\", {\n        /**\n         * The Helix WebHook API methods.\n         */\n        get: function () {\n            return new HelixWebHooksAPI_1.default(this._client);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(HelixAPIGroup.prototype, \"videos\", {\n        /**\n         * The Helix video API methods.\n         */\n        get: function () {\n            return new HelixVideoAPI_1.default(this._client);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    tslib_1.__decorate([\n        Cache_1.CachedGetter()\n    ], HelixAPIGroup.prototype, \"bits\", null);\n    tslib_1.__decorate([\n        Cache_1.CachedGetter()\n    ], HelixAPIGroup.prototype, \"clips\", null);\n    tslib_1.__decorate([\n        Cache_1.CachedGetter()\n    ], HelixAPIGroup.prototype, \"games\", null);\n    tslib_1.__decorate([\n        Cache_1.CachedGetter()\n    ], HelixAPIGroup.prototype, \"streams\", null);\n    tslib_1.__decorate([\n        Cache_1.CachedGetter()\n    ], HelixAPIGroup.prototype, \"subscriptions\", null);\n    tslib_1.__decorate([\n        Cache_1.CachedGetter()\n    ], HelixAPIGroup.prototype, \"users\", null);\n    tslib_1.__decorate([\n        Cache_1.CachedGetter()\n    ], HelixAPIGroup.prototype, \"webHooks\", null);\n    tslib_1.__decorate([\n        Cache_1.CachedGetter()\n    ], HelixAPIGroup.prototype, \"videos\", null);\n    HelixAPIGroup = tslib_1.__decorate([\n        Cache_1.Cacheable\n    ], HelixAPIGroup);\n    return HelixAPIGroup;\n}(BaseAPI_1.default));\nexports.default = HelixAPIGroup;\n//# sourceMappingURL=HelixAPIGroup.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar Cache_1 = require(\"../../Toolkit/Decorators/Cache\");\nvar BaseAPI_1 = require(\"../BaseAPI\");\nvar ChattersList_1 = require(\"./ChattersList\");\nvar UserTools_1 = require(\"../../Toolkit/UserTools\");\nvar ChannelEvent_1 = require(\"./ChannelEvent\");\nvar TwitchClient_1 = require(\"../../TwitchClient\");\n/**\n * Different API methods that are not officially supported by Twitch.\n *\n * Can be accessed using `client.unsupported` on a {@TwitchClient} instance.\n *\n * ## Example\n * ```ts\n * const client = await TwitchClient.withCredentials(clientId, accessToken);\n * const events = await client.unsupported.getEvents('125328655');\n * ```\n */\nvar UnsupportedAPI = /** @class */ (function (_super) {\n    tslib_1.__extends(UnsupportedAPI, _super);\n    function UnsupportedAPI() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * Retrieves a list of chatters in the Twitch chat of the given channel.\n     *\n     * **WARNING**: In contrast to most other methods, this takes a channel *name*, not a user ID.\n     *\n     * @param channel The channel to retrieve the chatters for.\n     */\n    UnsupportedAPI.prototype.getChatters = function (channel) {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            var channelName, data;\n            return tslib_1.__generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        channelName = UserTools_1.extractUserName(channel);\n                        return [4 /*yield*/, this._client.callAPI({\n                                url: \"https://tmi.twitch.tv/group/user/\" + channelName + \"/chatters\",\n                                type: TwitchClient_1.TwitchAPICallType.Custom\n                            })];\n                    case 1:\n                        data = _a.sent();\n                        return [2 /*return*/, new ChattersList_1.default(data)];\n                }\n            });\n        });\n    };\n    /**\n     * Retrieves a list of event planned for the given channel.\n     *\n     * @param channel The channel to retrieve the events for.\n     */\n    UnsupportedAPI.prototype.getEvents = function (channel) {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            var channelId, data;\n            var _this = this;\n            return tslib_1.__generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        channelId = UserTools_1.extractUserId(channel);\n                        return [4 /*yield*/, this._client.callAPI({ url: \"channels/\" + channelId + \"/events\" })];\n                    case 1:\n                        data = _a.sent();\n                        return [2 /*return*/, data.events.map(function (event) { return new ChannelEvent_1.default(event, _this._client); })];\n                }\n            });\n        });\n    };\n    tslib_1.__decorate([\n        Cache_1.Cached(60)\n    ], UnsupportedAPI.prototype, \"getChatters\", null);\n    tslib_1.__decorate([\n        Cache_1.Cached(60)\n    ], UnsupportedAPI.prototype, \"getEvents\", null);\n    UnsupportedAPI = tslib_1.__decorate([\n        Cache_1.Cacheable\n    ], UnsupportedAPI);\n    return UnsupportedAPI;\n}(BaseAPI_1.default));\nexports.default = UnsupportedAPI;\n//# sourceMappingURL=UnsupportedAPI.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\n/** @private */\nvar NonEnumerable_1 = require(\"../../../Toolkit/Decorators/NonEnumerable\");\nvar ChatRoom = /** @class */ (function () {\n    /** @private */\n    function ChatRoom(_data, client) {\n        this._data = _data;\n        this._client = client;\n    }\n    Object.defineProperty(ChatRoom.prototype, \"id\", {\n        /**\n         * The ID of the chat room.\n         */\n        get: function () {\n            return this._data._id;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ChatRoom.prototype, \"ownerId\", {\n        /**\n         * The user ID of the chat room owner.\n         */\n        get: function () {\n            return this._data.owner_id;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Retrieves the user data of the chat room owner.\n     */\n    ChatRoom.prototype.getOwner = function () {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            return tslib_1.__generator(this, function (_a) {\n                return [2 /*return*/, this._client.kraken.users.getUser(this._data.owner_id)];\n            });\n        });\n    };\n    Object.defineProperty(ChatRoom.prototype, \"name\", {\n        /**\n         * The name of the chat room.\n         */\n        get: function () {\n            return this._data.name;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ChatRoom.prototype, \"topic\", {\n        /**\n         * The topic of the chat room.\n         */\n        get: function () {\n            return this._data.topic;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ChatRoom.prototype, \"isPreviewable\", {\n        /**\n         * Whether the chat room is previewable.\n         */\n        get: function () {\n            return this._data.is_previewable;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ChatRoom.prototype, \"minRole\", {\n        /**\n         * The minimum role allowed to enter this chat room.\n         */\n        get: function () {\n            return this._data.minimum_allowed_role;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ChatRoom.prototype, \"ircName\", {\n        /**\n         * The name of the IRC channel that corresponds to this chat room.\n         */\n        get: function () {\n            return \"#chatrooms:\" + this._data.owner_id + \":\" + this._data._id;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    tslib_1.__decorate([\n        NonEnumerable_1.NonEnumerable\n    ], ChatRoom.prototype, \"_client\", void 0);\n    return ChatRoom;\n}());\nexports.default = ChatRoom;\n//# sourceMappingURL=ChatRoom.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar NonEnumerable_1 = require(\"../../Toolkit/Decorators/NonEnumerable\");\n/**\n * A subscription to a Twitch channel.\n */\nvar Subscription = /** @class */ (function () {\n    /** @private */\n    function Subscription(/** @private */ _data, client) {\n        this._data = _data;\n        this._client = client;\n    }\n    Object.defineProperty(Subscription.prototype, \"id\", {\n        /**\n         * The ID of the subscription.\n         */\n        get: function () {\n            return this._data._id;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Subscription.prototype, \"subPlan\", {\n        /**\n         * The identifier of the subscription plan.\n         */\n        get: function () {\n            return this._data.sub_plan;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Subscription.prototype, \"subPlanName\", {\n        /**\n         * The name of the subscription plan.\n         */\n        get: function () {\n            return this._data.sub_plan_name;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Subscription.prototype, \"startDate\", {\n        /**\n         * The date when the subscription was started.\n         */\n        get: function () {\n            return new Date(this._data.created_at);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    tslib_1.__decorate([\n        NonEnumerable_1.NonEnumerable\n    ], Subscription.prototype, \"_client\", void 0);\n    return Subscription;\n}());\nexports.default = Subscription;\n//# sourceMappingURL=Subscription.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar ChannelPlaceholder_1 = require(\"./ChannelPlaceholder\");\n/**\n * A Twitch Channel.\n */\nvar Channel = /** @class */ (function (_super) {\n    tslib_1.__extends(Channel, _super);\n    /** @private */\n    function Channel(data, client) {\n        var _this = _super.call(this, data._id, client) || this;\n        _this._data = data;\n        return _this;\n    }\n    // override parent's method so we avoid the API/cache request here if someone wrongly assumes this is a placeholder\n    /** @private */\n    Channel.prototype.getChannel = function () {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            return tslib_1.__generator(this, function (_a) {\n                return [2 /*return*/, this];\n            });\n        });\n    };\n    /**\n     * Updates the game, title or delay of a channel or toggles the channel feed.\n     */\n    Channel.prototype.update = function (data) {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            return tslib_1.__generator(this, function (_a) {\n                return [2 /*return*/, this._client.kraken.channels.updateChannel(this, data)];\n            });\n        });\n    };\n    Object.defineProperty(Channel.prototype, \"name\", {\n        /**\n         * The name of the channel.\n         */\n        get: function () {\n            return this._data.name;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Channel.prototype, \"displayName\", {\n        /**\n         * The display name of the channel, with proper capitalization or as Asian script.\n         */\n        get: function () {\n            return this._data.display_name;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Channel.prototype, \"broadcasterLanguage\", {\n        /**\n         * The broadcaster's language.\n         */\n        get: function () {\n            return this._data.broadcaster_language;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Channel.prototype, \"broadcasterType\", {\n        /**\n         * The broadcaster's type, i.e. \"partner\", \"affiliate\" or \"\" (empty string, so neither of them).\n         */\n        get: function () {\n            return this._data.broadcaster_type;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Channel.prototype, \"creationDate\", {\n        /**\n         * The date when the channel was created.\n         */\n        get: function () {\n            return new Date(this._data.created_at);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Channel.prototype, \"description\", {\n        /**\n         * The description of the channel.\n         */\n        get: function () {\n            return this._data.description;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Channel.prototype, \"followers\", {\n        /**\n         * The number of people following the channel.\n         */\n        get: function () {\n            return this._data.followers;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Channel.prototype, \"game\", {\n        /**\n         * The game that is currently being played on the channel (or was played when it was last online).\n         */\n        get: function () {\n            return this._data.game;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Channel.prototype, \"language\", {\n        /**\n         * The language of the channel.\n         */\n        get: function () {\n            return this._data.language;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Channel.prototype, \"logo\", {\n        /**\n         * The URL to the logo of the channel.\n         */\n        get: function () {\n            return this._data.logo;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Channel.prototype, \"isMature\", {\n        /**\n         * Whether the channel is flagged as suitable for mature audiences only.\n         */\n        get: function () {\n            return this._data.mature;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Channel.prototype, \"isPartner\", {\n        /**\n         * Whether the channel is partnered.\n         */\n        get: function () {\n            return this._data.partner;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Channel.prototype, \"profileBanner\", {\n        /**\n         * The URL to the profile's banner image.\n         */\n        get: function () {\n            return this._data.profile_banner;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Channel.prototype, \"profileBannerBackgroundColor\", {\n        /**\n         * The background color of the profile's banner.\n         */\n        get: function () {\n            return this._data.profile_banner_background_color;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Channel.prototype, \"status\", {\n        /**\n         * The current status message (i.e. the title) of the channel.\n         */\n        get: function () {\n            return this._data.status;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Channel.prototype, \"updateDate\", {\n        /**\n         * The date when the channel was last updated.\n         */\n        get: function () {\n            return new Date(this._data.updated_at);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Channel.prototype, \"url\", {\n        /**\n         * The URL to the channel.\n         */\n        get: function () {\n            return this._data.url;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Channel.prototype, \"videoBanner\", {\n        /**\n         * The URL to the channel's video banner, i.e. the offline image.\n         */\n        get: function () {\n            return this._data.video_banner;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Channel.prototype, \"views\", {\n        /**\n         * The total number of views of the channel.\n         */\n        get: function () {\n            return this._data.views;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return Channel;\n}(ChannelPlaceholder_1.default));\nexports.default = Channel;\n//# sourceMappingURL=Channel.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar BaseAPI_1 = require(\"../BaseAPI\");\nvar Cache_1 = require(\"../../Toolkit/Decorators/Cache\");\nvar BitsAPI_1 = require(\"./Bits/BitsAPI\");\nvar ChannelAPI_1 = require(\"./Channel/ChannelAPI\");\nvar ChatAPI_1 = require(\"./Chat/ChatAPI\");\nvar SearchAPI_1 = require(\"./Search/SearchAPI\");\nvar StreamAPI_1 = require(\"./Stream/StreamAPI\");\nvar UserAPI_1 = require(\"./User/UserAPI\");\nvar TeamAPI_1 = require(\"./Team/TeamAPI\");\n/**\n * Groups all API calls available in Kraken v5.\n *\n * Can be accessed using {@TwitchClient#kraken}.\n */\nvar KrakenAPIGroup = /** @class */ (function (_super) {\n    tslib_1.__extends(KrakenAPIGroup, _super);\n    function KrakenAPIGroup() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Object.defineProperty(KrakenAPIGroup.prototype, \"bits\", {\n        /**\n         * The API methods that deal with bits.\n         */\n        get: function () {\n            return new BitsAPI_1.default(this._client);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(KrakenAPIGroup.prototype, \"channels\", {\n        /**\n         * The API methods that deal with channels.\n         */\n        get: function () {\n            return new ChannelAPI_1.default(this._client);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(KrakenAPIGroup.prototype, \"chat\", {\n        /**\n         * The API methods that deal with chat.\n         */\n        get: function () {\n            return new ChatAPI_1.default(this._client);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(KrakenAPIGroup.prototype, \"search\", {\n        /**\n         * The API methods that deal with searching.\n         */\n        get: function () {\n            return new SearchAPI_1.default(this._client);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(KrakenAPIGroup.prototype, \"streams\", {\n        /**\n         * The API methods that deal with streams.\n         */\n        get: function () {\n            return new StreamAPI_1.default(this._client);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(KrakenAPIGroup.prototype, \"users\", {\n        /**\n         * The API methods that deal with users.\n         */\n        get: function () {\n            return new UserAPI_1.default(this._client);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(KrakenAPIGroup.prototype, \"teams\", {\n        /**\n         * The API methods that deal with teams.\n         */\n        get: function () {\n            return new TeamAPI_1.default(this._client);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    tslib_1.__decorate([\n        Cache_1.CachedGetter()\n    ], KrakenAPIGroup.prototype, \"bits\", null);\n    tslib_1.__decorate([\n        Cache_1.CachedGetter()\n    ], KrakenAPIGroup.prototype, \"channels\", null);\n    tslib_1.__decorate([\n        Cache_1.CachedGetter()\n    ], KrakenAPIGroup.prototype, \"chat\", null);\n    tslib_1.__decorate([\n        Cache_1.CachedGetter()\n    ], KrakenAPIGroup.prototype, \"search\", null);\n    tslib_1.__decorate([\n        Cache_1.CachedGetter()\n    ], KrakenAPIGroup.prototype, \"streams\", null);\n    tslib_1.__decorate([\n        Cache_1.CachedGetter()\n    ], KrakenAPIGroup.prototype, \"users\", null);\n    tslib_1.__decorate([\n        Cache_1.CachedGetter()\n    ], KrakenAPIGroup.prototype, \"teams\", null);\n    KrakenAPIGroup = tslib_1.__decorate([\n        Cache_1.Cacheable\n    ], KrakenAPIGroup);\n    return KrakenAPIGroup;\n}(BaseAPI_1.default));\nexports.default = KrakenAPIGroup;\n//# sourceMappingURL=KrakenAPIGroup.js.map","'use strict';\n\nvar replace = String.prototype.replace;\nvar percentTwenties = /%20/g;\n\nmodule.exports = {\n    'default': 'RFC3986',\n    formatters: {\n        RFC1738: function (value) {\n            return replace.call(value, percentTwenties, '+');\n        },\n        RFC3986: function (value) {\n            return value;\n        }\n    },\n    RFC1738: 'RFC1738',\n    RFC3986: 'RFC3986'\n};\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar NonEnumerable_1 = require(\"../../../Toolkit/Decorators/NonEnumerable\");\nvar NoSubscriptionProgramError_1 = require(\"../../../Errors/NoSubscriptionProgramError\");\n/**\n * A placeholder for a channel.\n *\n * This is used for example when you only have retrieved user data, but not channel data.\n * This can do anything you can do with only a channel ID, as it's equivalent to the user ID.\n */\nvar ChannelPlaceholder = /** @class */ (function () {\n    /** @private */\n    function ChannelPlaceholder(id, client) {\n        this._data = { _id: id };\n        this._client = client;\n    }\n    Object.defineProperty(ChannelPlaceholder.prototype, \"cacheKey\", {\n        /** @private */\n        get: function () {\n            return this._data._id;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ChannelPlaceholder.prototype, \"id\", {\n        /**\n         * The ID of the channel.\n         */\n        get: function () {\n            return this._data._id;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Retrieves the list of cheermotes you can use in the channel.\n     */\n    ChannelPlaceholder.prototype.getCheermotes = function () {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            return tslib_1.__generator(this, function (_a) {\n                return [2 /*return*/, this._client.kraken.bits.getCheermotes(this)];\n            });\n        });\n    };\n    /**\n     * Retrieves the channel data.\n     */\n    ChannelPlaceholder.prototype.getChannel = function () {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            return tslib_1.__generator(this, function (_a) {\n                return [2 /*return*/, this._client.kraken.channels.getChannel(this)];\n            });\n        });\n    };\n    /**\n     * Retrieves the channel's stream data.\n     */\n    ChannelPlaceholder.prototype.getStream = function () {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            return tslib_1.__generator(this, function (_a) {\n                return [2 /*return*/, this._client.kraken.streams.getStreamByChannel(this)];\n            });\n        });\n    };\n    /**\n     * Retrieves the channel's followers.\n     */\n    ChannelPlaceholder.prototype.getFollowers = function () {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            return tslib_1.__generator(this, function (_a) {\n                return [2 /*return*/, this._client.kraken.channels.getChannelFollowers(this)];\n            });\n        });\n    };\n    /**\n     * Retrieves the channel's subscribers.\n     */\n    ChannelPlaceholder.prototype.getSubscriptions = function () {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            return tslib_1.__generator(this, function (_a) {\n                return [2 /*return*/, this._client.kraken.channels.getChannelSubscriptions(this)];\n            });\n        });\n    };\n    /**\n     * Retrieves the subscription data for the given user to the channel.\n     *\n     * Throws if the channel doesn't have a subscription program or the user is not subscribed to it.\n     *\n     * This method requires access to the channel. If you only have access to the user,\n     * use {@User#getSubscriptionTo} instead.\n     *\n     * @param user The user you want to get the subscription data for.\n     */\n    ChannelPlaceholder.prototype.getSubscriptionBy = function (user) {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            return tslib_1.__generator(this, function (_a) {\n                return [2 /*return*/, this._client.kraken.channels.getChannelSubscriptionByUser(this, user)];\n            });\n        });\n    };\n    /**\n     * Checks whether the given user is subscribed to the channel.\n     *\n     * @param user The user you want to check the subscription for.\n     */\n    ChannelPlaceholder.prototype.hasSubscriber = function (user) {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            var e_1;\n            return tslib_1.__generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        _a.trys.push([0, 2, , 3]);\n                        return [4 /*yield*/, this.getSubscriptionBy(user)];\n                    case 1: return [2 /*return*/, (_a.sent()) !== null];\n                    case 2:\n                        e_1 = _a.sent();\n                        if (e_1 instanceof NoSubscriptionProgramError_1.default) {\n                            return [2 /*return*/, false];\n                        }\n                        throw e_1;\n                    case 3: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    tslib_1.__decorate([\n        NonEnumerable_1.NonEnumerable\n    ], ChannelPlaceholder.prototype, \"_client\", void 0);\n    return ChannelPlaceholder;\n}());\nexports.default = ChannelPlaceholder;\n//# sourceMappingURL=ChannelPlaceholder.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Represents the data of an OAuth access token returned by Twitch.\n */\nvar AccessToken = /** @class */ (function () {\n    /** @private */\n    function AccessToken(_data, obtainmentDate) {\n        this._data = _data;\n        this._obtainmentDate = obtainmentDate || new Date();\n    }\n    Object.defineProperty(AccessToken.prototype, \"accessToken\", {\n        /**\n         * The access token which is necessary for every request to the Twitch API.\n         */\n        get: function () {\n            return this._data.access_token;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AccessToken.prototype, \"refreshToken\", {\n        /**\n         * The refresh token which is necessary to refresh the access token once it expires.\n         */\n        get: function () {\n            return this._data.refresh_token;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AccessToken.prototype, \"expiryDate\", {\n        /**\n         * The time when the access token will expire.\n         *\n         * May be `null`, in which case the token does not expire.\n         * This can only be the case with very old Client IDs.\n         */\n        get: function () {\n            if (!this._data.expires_in) {\n                return null;\n            }\n            return new Date(this._obtainmentDate.getTime() + this._data.expires_in * 1000);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AccessToken.prototype, \"isExpired\", {\n        get: function () {\n            if (!this._data.expires_in) {\n                return false;\n            }\n            return Date.now() > (this._obtainmentDate.getTime() + this._data.expires_in * 1000);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AccessToken.prototype, \"scope\", {\n        /**\n         * The scope the access token is valid for, i.e. what this token enables you to do.\n         */\n        get: function () {\n            return this._data.scope.split(' ');\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return AccessToken;\n}());\nexports.default = AccessToken;\n//# sourceMappingURL=AccessToken.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/* eslint-disable filenames/match-exported */\nvar TwitchClient_1 = require(\"./TwitchClient\");\nexports.TwitchAPICallType = TwitchClient_1.TwitchAPICallType;\nexports.default = TwitchClient_1.default;\nvar ConfigError_1 = require(\"./Errors/ConfigError\");\nexports.ConfigError = ConfigError_1.default;\nvar HellFreezesOverError_1 = require(\"./Errors/HellFreezesOverError\");\nexports.HellFreezesOverError = HellFreezesOverError_1.default;\nvar HTTPStatusCodeError_1 = require(\"./Errors/HTTPStatusCodeError\");\nexports.HTTPStatusCodeError = HTTPStatusCodeError_1.default;\nvar NoSubscriptionProgramError_1 = require(\"./Errors/NoSubscriptionProgramError\");\nexports.NoSubscriptionProgramError = NoSubscriptionProgramError_1.default;\nvar StreamNotLiveError_1 = require(\"./Errors/StreamNotLiveError\");\nexports.StreamNotLiveError = StreamNotLiveError_1.default;\nvar StaticAuthProvider_1 = require(\"./Auth/StaticAuthProvider\");\nexports.StaticAuthProvider = StaticAuthProvider_1.default;\nvar RefreshableAuthProvider_1 = require(\"./Auth/RefreshableAuthProvider\");\nexports.RefreshableAuthProvider = RefreshableAuthProvider_1.default;\nvar AccessToken_1 = require(\"./API/AccessToken\");\nexports.AccessToken = AccessToken_1.default;\nvar TokenInfo_1 = require(\"./API/TokenInfo\");\nexports.TokenInfo = TokenInfo_1.default;\nvar Subscription_1 = require(\"./API/Kraken/Subscription\");\nexports.Subscription = Subscription_1.default;\nvar CheermoteList_1 = require(\"./API/Kraken/Bits/CheermoteList\");\nexports.CheermoteList = CheermoteList_1.default;\nexports.CheermoteBackground = CheermoteList_1.CheermoteBackground;\nexports.CheermoteState = CheermoteList_1.CheermoteState;\nexports.CheermoteScale = CheermoteList_1.CheermoteScale;\nvar Channel_1 = require(\"./API/Kraken/Channel/Channel\");\nexports.Channel = Channel_1.default;\nvar ChannelFollow_1 = require(\"./API/Kraken/Channel/ChannelFollow\");\nexports.ChannelFollow = ChannelFollow_1.default;\nvar ChannelPlaceholder_1 = require(\"./API/Kraken/Channel/ChannelPlaceholder\");\nexports.ChannelPlaceholder = ChannelPlaceholder_1.default;\nvar ChannelSubscription_1 = require(\"./API/Kraken/Channel/ChannelSubscription\");\nexports.ChannelSubscription = ChannelSubscription_1.default;\nvar EmoteSetList_1 = require(\"./API/Kraken/Channel/EmoteSetList\");\nexports.EmoteSetList = EmoteSetList_1.default;\nvar PrivilegedChannel_1 = require(\"./API/Kraken/Channel/PrivilegedChannel\");\nexports.PrivilegedChannel = PrivilegedChannel_1.default;\nvar Stream_1 = require(\"./API/Kraken/Stream/Stream\");\nexports.Stream = Stream_1.default;\nexports.StreamType = Stream_1.StreamType;\nvar ChannelEvent_1 = require(\"./API/Unsupported/ChannelEvent\");\nexports.ChannelEvent = ChannelEvent_1.default;\nvar ChattersList_1 = require(\"./API/Unsupported/ChattersList\");\nexports.ChattersList = ChattersList_1.default;\nvar PrivilegedUser_1 = require(\"./API/Kraken/User/PrivilegedUser\");\nexports.PrivilegedUser = PrivilegedUser_1.default;\nvar User_1 = require(\"./API/Kraken/User/User\");\nexports.User = User_1.default;\nvar UserBlock_1 = require(\"./API/Kraken/User/UserBlock\");\nexports.UserBlock = UserBlock_1.default;\nvar UserFollow_1 = require(\"./API/Kraken/User/UserFollow\");\nexports.UserFollow = UserFollow_1.default;\nvar UserSubscription_1 = require(\"./API/Kraken/User/UserSubscription\");\nexports.UserSubscription = UserSubscription_1.default;\nvar HelixPaginatedRequest_1 = require(\"./API/Helix/HelixPaginatedRequest\");\nexports.HelixPaginatedRequest = HelixPaginatedRequest_1.default;\nvar HelixBitsLeaderboard_1 = require(\"./API/Helix/Bits/HelixBitsLeaderboard\");\nexports.HelixBitsLeaderboard = HelixBitsLeaderboard_1.default;\nvar HelixBitsLeaderboardEntry_1 = require(\"./API/Helix/Bits/HelixBitsLeaderboardEntry\");\nexports.HelixBitsLeaderboardEntry = HelixBitsLeaderboardEntry_1.default;\nvar HelixClip_1 = require(\"./API/Helix/Clip/HelixClip\");\nexports.HelixClip = HelixClip_1.default;\nvar HelixGame_1 = require(\"./API/Helix/Game/HelixGame\");\nexports.HelixGame = HelixGame_1.default;\nvar HelixStream_1 = require(\"./API/Helix/Stream/HelixStream\");\nexports.HelixStream = HelixStream_1.default;\nexports.HelixStreamType = HelixStream_1.HelixStreamType;\nvar HelixFollow_1 = require(\"./API/Helix/User/HelixFollow\");\nexports.HelixFollow = HelixFollow_1.default;\nvar HelixPrivilegedUser_1 = require(\"./API/Helix/User/HelixPrivilegedUser\");\nexports.HelixPrivilegedUser = HelixPrivilegedUser_1.default;\nvar HelixUser_1 = require(\"./API/Helix/User/HelixUser\");\nexports.HelixUser = HelixUser_1.default;\nexports.HelixBroadcasterType = HelixUser_1.HelixBroadcasterType;\nexports.HelixUserType = HelixUser_1.HelixUserType;\nvar HelixVideo_1 = require(\"./API/Helix/Video/HelixVideo\");\nexports.HelixVideo = HelixVideo_1.default;\nvar ChatBadgeList_1 = require(\"./API/Badges/ChatBadgeList\");\nexports.ChatBadgeList = ChatBadgeList_1.default;\nvar ChatBadgeSet_1 = require(\"./API/Badges/ChatBadgeSet\");\nexports.ChatBadgeSet = ChatBadgeSet_1.default;\nvar ChatBadgeVersion_1 = require(\"./API/Badges/ChatBadgeVersion\");\nexports.ChatBadgeVersion = ChatBadgeVersion_1.default;\nvar UserTools_1 = require(\"./Toolkit/UserTools\");\nexports.extractUserId = UserTools_1.extractUserId;\nexports.extractUserName = UserTools_1.extractUserName;\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar BaseAPI_1 = require(\"../BaseAPI\");\nvar Cache_1 = require(\"../../Toolkit/Decorators/Cache\");\nvar ChatBadgeList_1 = require(\"./ChatBadgeList\");\nvar TwitchClient_1 = require(\"../../TwitchClient\");\nvar UserTools_1 = require(\"../../Toolkit/UserTools\");\n/**\n * The API methods that deal with badges.\n *\n * Can be accessed using `client.badges` on a {@TwitchClient} instance.\n *\n * ## Example\n * ```ts\n * const client = await TwitchClient.withCredentials(clientId, accessToken);\n * const cheermotes = await client.badges.getGlobalBadges();\n * ```\n */\nvar BadgesAPI = /** @class */ (function (_super) {\n    tslib_1.__extends(BadgesAPI, _super);\n    function BadgesAPI() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * Retrieves all globally applicable chat badges.\n     */\n    BadgesAPI.prototype.getGlobalBadges = function () {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            var data;\n            return tslib_1.__generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this._client.callAPI({\n                            url: 'https://badges.twitch.tv/v1/badges/global/display',\n                            type: TwitchClient_1.TwitchAPICallType.Custom\n                        })];\n                    case 1:\n                        data = _a.sent();\n                        return [2 /*return*/, new ChatBadgeList_1.default(data.badge_sets, this._client)];\n                }\n            });\n        });\n    };\n    /**\n     * Retrieves all applicable chat badges for a given channel.\n     *\n     * @param channel The channel to retrieve the chat badges for.\n     * @param includeGlobal Whether to include global badges in the result list.\n     */\n    BadgesAPI.prototype.getChannelBadges = function (channel, includeGlobal) {\n        if (includeGlobal === void 0) { includeGlobal = true; }\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            var data, channelBadges, _a, _b;\n            return tslib_1.__generator(this, function (_c) {\n                switch (_c.label) {\n                    case 0: return [4 /*yield*/, this._client.callAPI({\n                            url: \"https://badges.twitch.tv/v1/badges/channels/\" + UserTools_1.extractUserId(channel) + \"/display\",\n                            type: TwitchClient_1.TwitchAPICallType.Custom\n                        })];\n                    case 1:\n                        data = _c.sent();\n                        channelBadges = new ChatBadgeList_1.default(data.badge_sets, this._client);\n                        if (!includeGlobal) return [3 /*break*/, 3];\n                        _b = (_a = channelBadges)._merge;\n                        return [4 /*yield*/, this.getGlobalBadges()];\n                    case 2: return [2 /*return*/, _b.apply(_a, [_c.sent()])];\n                    case 3: return [2 /*return*/, channelBadges];\n                }\n            });\n        });\n    };\n    tslib_1.__decorate([\n        Cache_1.Cached(3600)\n    ], BadgesAPI.prototype, \"getGlobalBadges\", null);\n    tslib_1.__decorate([\n        Cache_1.Cached(3600)\n    ], BadgesAPI.prototype, \"getChannelBadges\", null);\n    BadgesAPI = tslib_1.__decorate([\n        Cache_1.Cacheable\n    ], BadgesAPI);\n    return BadgesAPI;\n}(BaseAPI_1.default));\nexports.default = BadgesAPI;\n//# sourceMappingURL=BadgesAPI.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar Subscription_1 = require(\"../Subscription\");\nvar Channel_1 = require(\"../Channel/Channel\");\n/**\n * A relation of a previously given user subscribing to a channel.\n */\nvar UserSubscription = /** @class */ (function (_super) {\n    tslib_1.__extends(UserSubscription, _super);\n    function UserSubscription() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Object.defineProperty(UserSubscription.prototype, \"channel\", {\n        /**\n         * The subscribed channel.\n         */\n        get: function () {\n            return new Channel_1.default(this._data.channel, this._client);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return UserSubscription;\n}(Subscription_1.default));\nexports.default = UserSubscription;\n//# sourceMappingURL=UserSubscription.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar NonEnumerable_1 = require(\"../../../Toolkit/Decorators/NonEnumerable\");\nvar Channel_1 = require(\"../Channel/Channel\");\n/**\n * The type of a stream.\n */\nvar StreamType;\n(function (StreamType) {\n    /**\n     * A live stream.\n     */\n    StreamType[\"Live\"] = \"live\";\n    /**\n     * An upload to the channel (VoD) that is streamed live for the first time.\n     */\n    StreamType[\"Premiere\"] = \"premiere\";\n    /**\n     * A rerun of a past live stream.\n     */\n    StreamType[\"ReRun\"] = \"rerun\";\n    /**\n     * All types of streams. Used for filtering.\n     */\n    StreamType[\"All\"] = \"all\";\n})(StreamType = exports.StreamType || (exports.StreamType = {}));\n/**\n * A Twitch stream.\n */\nvar Stream = /** @class */ (function () {\n    /** @private */\n    function Stream(_data, client) {\n        this._data = _data;\n        this._client = client;\n    }\n    Object.defineProperty(Stream.prototype, \"id\", {\n        /**\n         * The ID of the stream.\n         */\n        get: function () {\n            return this._data._id;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Stream.prototype, \"game\", {\n        /**\n         * The game played on the stream.\n         */\n        get: function () {\n            return this._data.game;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Stream.prototype, \"viewers\", {\n        /**\n         * The current number of concurrent viewers.\n         */\n        get: function () {\n            return this._data.viewers;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Stream.prototype, \"videoHeight\", {\n        /**\n         * The height of the stream video.\n         */\n        get: function () {\n            return this._data.video_height;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Stream.prototype, \"averageFPS\", {\n        /**\n         * The average FPS (frames per second) that are shown on the stream.\n         */\n        get: function () {\n            return this._data.average_fps;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Stream.prototype, \"delay\", {\n        /**\n         * The delay of the stream, in seconds.\n         */\n        get: function () {\n            return this._data.delay;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Stream.prototype, \"startDate\", {\n        /**\n         * The time when the stream started.\n         */\n        get: function () {\n            return new Date(this._data.created_at);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Stream.prototype, \"isPlaylist\", {\n        /**\n         * Whether the stream is running a playlist.\n         */\n        get: function () {\n            return this._data.is_playlist;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Stream.prototype, \"type\", {\n        /**\n         * The type of the stream.\n         */\n        get: function () {\n            return this._data.stream_type;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Gets the URL of a preview image for the stream\n     *\n     * @param size The size of the image.\n     */\n    Stream.prototype.getPreviewUrl = function (size) {\n        return this._data.preview[size];\n    };\n    Object.defineProperty(Stream.prototype, \"channel\", {\n        /**\n         * The channel where the stream is shown.\n         */\n        get: function () {\n            return new Channel_1.default(this._data.channel, this._client);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    tslib_1.__decorate([\n        NonEnumerable_1.NonEnumerable\n    ], Stream.prototype, \"_client\", void 0);\n    return Stream;\n}());\nexports.default = Stream;\n//# sourceMappingURL=Stream.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/** @private */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction NonEnumerable(target, key) {\n    // first property defined in prototype, that's why we use getters/setters\n    // (otherwise assignment in object will override property in prototype)\n    Object.defineProperty(target, key, {\n        get: function () {\n            return;\n        },\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        set: function (val) {\n            // here we have a reference to the instance and can set property directly to it\n            Object.defineProperty(this, key, {\n                value: val,\n                writable: true,\n                enumerable: false\n            });\n        },\n        enumerable: false\n    });\n}\nexports.NonEnumerable = NonEnumerable;\n//# sourceMappingURL=NonEnumerable.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Information about an access token.\n */\nvar TokenInfo = /** @class */ (function () {\n    /** @private */\n    function TokenInfo(_data) {\n        this._data = _data;\n        this._obtainmentDate = new Date();\n    }\n    Object.defineProperty(TokenInfo.prototype, \"clientId\", {\n        /**\n         * The client ID.\n         */\n        get: function () {\n            return this._data.valid ? this._data.client_id : null;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(TokenInfo.prototype, \"userId\", {\n        /**\n         * The ID of the authenticated user.\n         */\n        get: function () {\n            return this._data.valid ? this._data.user_id : null;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(TokenInfo.prototype, \"userName\", {\n        /**\n         * The user name of the authenticated user.\n         */\n        get: function () {\n            return this._data.valid ? this._data.user_name : null;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(TokenInfo.prototype, \"scopes\", {\n        /**\n         * The scopes for which this token is valid.\n         */\n        get: function () {\n            return this._data.valid ? this._data.authorization.scopes : [];\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(TokenInfo.prototype, \"valid\", {\n        /**\n         * Whether the token is valid or not.\n         */\n        get: function () {\n            return this._data.valid;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(TokenInfo.prototype, \"expiryDate\", {\n        /**\n         * The time when the token will expire.\n         *\n         * If this returns null, it means that the token is either invalid or never expires (happens with old client IDs).\n         */\n        get: function () {\n            if (!this._data.valid || !this._data.expires_in) {\n                return null;\n            }\n            return new Date(this._obtainmentDate.getTime() + this._data.expires_in * 1000);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return TokenInfo;\n}());\nexports.default = TokenInfo;\n//# sourceMappingURL=TokenInfo.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar BaseAPI_1 = require(\"../../BaseAPI\");\nvar TwitchClient_1 = require(\"../../../TwitchClient\");\nvar HelixBitsLeaderboard_1 = require(\"./HelixBitsLeaderboard\");\n/**\n * The Helix API methods that deal with bits.\n *\n * Can be accessed using `client.helix.bits` on a {@TwitchClient} instance.\n *\n * ## Example\n * ```ts\n * const client = await TwitchClient.withCredentials(clientId, accessToken);\n * const leaderboard = await client.helix.bits.getLeaderboard({ period: 'day' });\n * ```\n */\nvar HelixBitsAPI = /** @class */ (function (_super) {\n    tslib_1.__extends(HelixBitsAPI, _super);\n    function HelixBitsAPI() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * Gets a bits leaderboard of your channel.\n     *\n     * @expandParams\n     */\n    HelixBitsAPI.prototype.getLeaderboard = function (params) {\n        if (params === void 0) { params = {}; }\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            var _a, count, _b, period, startDate, contextUserId, result;\n            return tslib_1.__generator(this, function (_c) {\n                switch (_c.label) {\n                    case 0:\n                        _a = params.count, count = _a === void 0 ? 10 : _a, _b = params.period, period = _b === void 0 ? 'all' : _b, startDate = params.startDate, contextUserId = params.contextUserId;\n                        return [4 /*yield*/, this._client.callAPI({\n                                type: TwitchClient_1.TwitchAPICallType.Helix,\n                                url: 'bits/leaderboard',\n                                scope: 'bits:read',\n                                query: {\n                                    count: count.toString(),\n                                    period: period,\n                                    started_at: startDate ? startDate.toISOString() : undefined,\n                                    user_id: contextUserId\n                                }\n                            })];\n                    case 1:\n                        result = _c.sent();\n                        return [2 /*return*/, new HelixBitsLeaderboard_1.default(result, this._client)];\n                }\n            });\n        });\n    };\n    return HelixBitsAPI;\n}(BaseAPI_1.default));\nexports.default = HelixBitsAPI;\n//# sourceMappingURL=HelixBitsAPI.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar NonEnumerable_1 = require(\"../../../Toolkit/Decorators/NonEnumerable\");\n/**\n * A Bits leaderboard entry.\n */\nvar HelixBitsLeaderboardEntry = /** @class */ (function () {\n    /** @private */\n    function HelixBitsLeaderboardEntry(_data, client) {\n        this._data = _data;\n        this._client = client;\n    }\n    Object.defineProperty(HelixBitsLeaderboardEntry.prototype, \"userId\", {\n        /**\n         * The ID of the user on the leaderboard.\n         */\n        get: function () {\n            return this._data.user_id;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(HelixBitsLeaderboardEntry.prototype, \"userDisplayName\", {\n        /**\n         * The display name of the user on the leaderboard.\n         */\n        get: function () {\n            return this._data.user_name;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(HelixBitsLeaderboardEntry.prototype, \"rank\", {\n        /**\n         * The position of the user on the leaderboard.\n         */\n        get: function () {\n            return this._data.rank;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(HelixBitsLeaderboardEntry.prototype, \"amount\", {\n        /**\n         * The amount of bits used in the given period of time.\n         */\n        get: function () {\n            return this._data.score;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Retrieves the user that's on this place on the leaderboard.\n     */\n    HelixBitsLeaderboardEntry.prototype.getUser = function () {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            return tslib_1.__generator(this, function (_a) {\n                return [2 /*return*/, this._client.helix.users.getUserById(this._data.user_id)];\n            });\n        });\n    };\n    tslib_1.__decorate([\n        NonEnumerable_1.NonEnumerable\n    ], HelixBitsLeaderboardEntry.prototype, \"_client\", void 0);\n    return HelixBitsLeaderboardEntry;\n}());\nexports.default = HelixBitsLeaderboardEntry;\n//# sourceMappingURL=HelixBitsLeaderboardEntry.js.map","'use strict';\n\nvar has = Object.prototype.hasOwnProperty;\nvar isArray = Array.isArray;\n\nvar hexTable = (function () {\n    var array = [];\n    for (var i = 0; i < 256; ++i) {\n        array.push('%' + ((i < 16 ? '0' : '') + i.toString(16)).toUpperCase());\n    }\n\n    return array;\n}());\n\nvar compactQueue = function compactQueue(queue) {\n    while (queue.length > 1) {\n        var item = queue.pop();\n        var obj = item.obj[item.prop];\n\n        if (isArray(obj)) {\n            var compacted = [];\n\n            for (var j = 0; j < obj.length; ++j) {\n                if (typeof obj[j] !== 'undefined') {\n                    compacted.push(obj[j]);\n                }\n            }\n\n            item.obj[item.prop] = compacted;\n        }\n    }\n};\n\nvar arrayToObject = function arrayToObject(source, options) {\n    var obj = options && options.plainObjects ? Object.create(null) : {};\n    for (var i = 0; i < source.length; ++i) {\n        if (typeof source[i] !== 'undefined') {\n            obj[i] = source[i];\n        }\n    }\n\n    return obj;\n};\n\nvar merge = function merge(target, source, options) {\n    if (!source) {\n        return target;\n    }\n\n    if (typeof source !== 'object') {\n        if (isArray(target)) {\n            target.push(source);\n        } else if (target && typeof target === 'object') {\n            if ((options && (options.plainObjects || options.allowPrototypes)) || !has.call(Object.prototype, source)) {\n                target[source] = true;\n            }\n        } else {\n            return [target, source];\n        }\n\n        return target;\n    }\n\n    if (!target || typeof target !== 'object') {\n        return [target].concat(source);\n    }\n\n    var mergeTarget = target;\n    if (isArray(target) && !isArray(source)) {\n        mergeTarget = arrayToObject(target, options);\n    }\n\n    if (isArray(target) && isArray(source)) {\n        source.forEach(function (item, i) {\n            if (has.call(target, i)) {\n                var targetItem = target[i];\n                if (targetItem && typeof targetItem === 'object' && item && typeof item === 'object') {\n                    target[i] = merge(targetItem, item, options);\n                } else {\n                    target.push(item);\n                }\n            } else {\n                target[i] = item;\n            }\n        });\n        return target;\n    }\n\n    return Object.keys(source).reduce(function (acc, key) {\n        var value = source[key];\n\n        if (has.call(acc, key)) {\n            acc[key] = merge(acc[key], value, options);\n        } else {\n            acc[key] = value;\n        }\n        return acc;\n    }, mergeTarget);\n};\n\nvar assign = function assignSingleSource(target, source) {\n    return Object.keys(source).reduce(function (acc, key) {\n        acc[key] = source[key];\n        return acc;\n    }, target);\n};\n\nvar decode = function (str, decoder, charset) {\n    var strWithoutPlus = str.replace(/\\+/g, ' ');\n    if (charset === 'iso-8859-1') {\n        // unescape never throws, no try...catch needed:\n        return strWithoutPlus.replace(/%[0-9a-f]{2}/gi, unescape);\n    }\n    // utf-8\n    try {\n        return decodeURIComponent(strWithoutPlus);\n    } catch (e) {\n        return strWithoutPlus;\n    }\n};\n\nvar encode = function encode(str, defaultEncoder, charset) {\n    // This code was originally written by Brian White (mscdex) for the io.js core querystring library.\n    // It has been adapted here for stricter adherence to RFC 3986\n    if (str.length === 0) {\n        return str;\n    }\n\n    var string = typeof str === 'string' ? str : String(str);\n\n    if (charset === 'iso-8859-1') {\n        return escape(string).replace(/%u[0-9a-f]{4}/gi, function ($0) {\n            return '%26%23' + parseInt($0.slice(2), 16) + '%3B';\n        });\n    }\n\n    var out = '';\n    for (var i = 0; i < string.length; ++i) {\n        var c = string.charCodeAt(i);\n\n        if (\n            c === 0x2D // -\n            || c === 0x2E // .\n            || c === 0x5F // _\n            || c === 0x7E // ~\n            || (c >= 0x30 && c <= 0x39) // 0-9\n            || (c >= 0x41 && c <= 0x5A) // a-z\n            || (c >= 0x61 && c <= 0x7A) // A-Z\n        ) {\n            out += string.charAt(i);\n            continue;\n        }\n\n        if (c < 0x80) {\n            out = out + hexTable[c];\n            continue;\n        }\n\n        if (c < 0x800) {\n            out = out + (hexTable[0xC0 | (c >> 6)] + hexTable[0x80 | (c & 0x3F)]);\n            continue;\n        }\n\n        if (c < 0xD800 || c >= 0xE000) {\n            out = out + (hexTable[0xE0 | (c >> 12)] + hexTable[0x80 | ((c >> 6) & 0x3F)] + hexTable[0x80 | (c & 0x3F)]);\n            continue;\n        }\n\n        i += 1;\n        c = 0x10000 + (((c & 0x3FF) << 10) | (string.charCodeAt(i) & 0x3FF));\n        out += hexTable[0xF0 | (c >> 18)]\n            + hexTable[0x80 | ((c >> 12) & 0x3F)]\n            + hexTable[0x80 | ((c >> 6) & 0x3F)]\n            + hexTable[0x80 | (c & 0x3F)];\n    }\n\n    return out;\n};\n\nvar compact = function compact(value) {\n    var queue = [{ obj: { o: value }, prop: 'o' }];\n    var refs = [];\n\n    for (var i = 0; i < queue.length; ++i) {\n        var item = queue[i];\n        var obj = item.obj[item.prop];\n\n        var keys = Object.keys(obj);\n        for (var j = 0; j < keys.length; ++j) {\n            var key = keys[j];\n            var val = obj[key];\n            if (typeof val === 'object' && val !== null && refs.indexOf(val) === -1) {\n                queue.push({ obj: obj, prop: key });\n                refs.push(val);\n            }\n        }\n    }\n\n    compactQueue(queue);\n\n    return value;\n};\n\nvar isRegExp = function isRegExp(obj) {\n    return Object.prototype.toString.call(obj) === '[object RegExp]';\n};\n\nvar isBuffer = function isBuffer(obj) {\n    if (!obj || typeof obj !== 'object') {\n        return false;\n    }\n\n    return !!(obj.constructor && obj.constructor.isBuffer && obj.constructor.isBuffer(obj));\n};\n\nvar combine = function combine(a, b) {\n    return [].concat(a, b);\n};\n\nmodule.exports = {\n    arrayToObject: arrayToObject,\n    assign: assign,\n    combine: combine,\n    compact: compact,\n    decode: decode,\n    encode: encode,\n    isBuffer: isBuffer,\n    isRegExp: isRegExp,\n    merge: merge\n};\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar Channel_1 = require(\"../Channel/Channel\");\nvar NonEnumerable_1 = require(\"../../../Toolkit/Decorators/NonEnumerable\");\n/**\n * A relation of a previously given user following a channel.\n */\nvar UserFollow = /** @class */ (function () {\n    /** @private */\n    function UserFollow(_data, client) {\n        this._data = _data;\n        this._client = client;\n    }\n    Object.defineProperty(UserFollow.prototype, \"followDate\", {\n        /**\n         * The date when the user followed the channel.\n         */\n        get: function () {\n            return new Date(this._data.created_at);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(UserFollow.prototype, \"hasNotifications\", {\n        /**\n         * Whether the user has notifications enabled for the channel.\n         */\n        get: function () {\n            return this._data.notifications;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(UserFollow.prototype, \"channel\", {\n        /**\n         * The followed channel.\n         */\n        get: function () {\n            return new Channel_1.default(this._data.channel, this._client);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    tslib_1.__decorate([\n        NonEnumerable_1.NonEnumerable\n    ], UserFollow.prototype, \"_client\", void 0);\n    return UserFollow;\n}());\nexports.default = UserFollow;\n//# sourceMappingURL=UserFollow.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar BaseAPI_1 = require(\"../../BaseAPI\");\nvar TwitchClient_1 = require(\"../../../TwitchClient\");\nvar HelixGame_1 = require(\"./HelixGame\");\nvar HelixPaginatedRequest_1 = require(\"../HelixPaginatedRequest\");\n/**\n * The Helix API methods that deal with games.\n *\n * Can be accessed using `client.helix.games` on a {@TwitchClient} instance.\n *\n * ## Example\n * ```ts\n * const client = await TwitchClient.withCredentials(clientId, accessToken);\n * const game = await client.helix.games.getGameByName('Hearthstone');\n * ```\n */\nvar HelixGameAPI = /** @class */ (function (_super) {\n    tslib_1.__extends(HelixGameAPI, _super);\n    function HelixGameAPI() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * Retrieves the game data for the given list of game IDs.\n     *\n     * @param ids The game IDs you want to look up.\n     */\n    HelixGameAPI.prototype.getGamesByIds = function (ids) {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            return tslib_1.__generator(this, function (_a) {\n                return [2 /*return*/, this._getGames('id', ids)];\n            });\n        });\n    };\n    /**\n     * Retrieves the game data for the given list of game names.\n     *\n     * @param names The game names you want to look up.\n     */\n    HelixGameAPI.prototype.getGamesByNames = function (names) {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            return tslib_1.__generator(this, function (_a) {\n                return [2 /*return*/, this._getGames('name', names)];\n            });\n        });\n    };\n    /**\n     * Retrieves the game data for the given game ID.\n     *\n     * @param id The game ID you want to look up.\n     */\n    HelixGameAPI.prototype.getGameById = function (id) {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            var games;\n            return tslib_1.__generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this._getGames('id', id)];\n                    case 1:\n                        games = _a.sent();\n                        return [2 /*return*/, games.length ? games[0] : null];\n                }\n            });\n        });\n    };\n    /**\n     * Retrieves the game data for the given game name.\n     *\n     * @param name The game name you want to look up.\n     */\n    HelixGameAPI.prototype.getGameByName = function (name) {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            var games;\n            return tslib_1.__generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this._getGames('name', name)];\n                    case 1:\n                        games = _a.sent();\n                        return [2 /*return*/, games.length ? games[0] : null];\n                }\n            });\n        });\n    };\n    /**\n     * Retrieves a list of the most viewed games at the moment.\n     */\n    HelixGameAPI.prototype.getTopGames = function (pagination) {\n        if (pagination === void 0) { pagination = {}; }\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            var after, before, limit, result;\n            var _this = this;\n            return tslib_1.__generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        after = pagination.after, before = pagination.before, limit = pagination.limit;\n                        return [4 /*yield*/, this._client.callAPI({\n                                type: TwitchClient_1.TwitchAPICallType.Helix,\n                                url: 'games/top',\n                                query: {\n                                    after: after,\n                                    before: before,\n                                    first: limit\n                                }\n                            })];\n                    case 1:\n                        result = _a.sent();\n                        return [2 /*return*/, {\n                                data: result.data.map(function (data) { return new HelixGame_1.default(data, _this._client); }),\n                                cursor: result.pagination && result.pagination.cursor\n                            }];\n                }\n            });\n        });\n    };\n    /**\n     * Creates a paginator for the most viewed games at the moment.\n     */\n    HelixGameAPI.prototype.getTopGamesPaginated = function () {\n        var _this = this;\n        return new HelixPaginatedRequest_1.default({\n            url: 'games/top'\n        }, this._client, function (data) { return new HelixGame_1.default(data, _this._client); });\n    };\n    HelixGameAPI.prototype._getGames = function (filterType, filterValues) {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            var result;\n            var _a;\n            var _this = this;\n            return tslib_1.__generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0: return [4 /*yield*/, this._client.callAPI({\n                            type: TwitchClient_1.TwitchAPICallType.Helix,\n                            url: 'games',\n                            query: (_a = {},\n                                _a[filterType] = filterValues,\n                                _a)\n                        })];\n                    case 1:\n                        result = _b.sent();\n                        return [2 /*return*/, result.data.map(function (entry) { return new HelixGame_1.default(entry, _this._client); })];\n                }\n            });\n        });\n    };\n    return HelixGameAPI;\n}(BaseAPI_1.default));\nexports.default = HelixGameAPI;\n//# sourceMappingURL=HelixGameAPI.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar NonEnumerable_1 = require(\"../Toolkit/Decorators/NonEnumerable\");\n/** @private */\nvar BaseAPI = /** @class */ (function () {\n    function BaseAPI(client) {\n        this._client = client;\n    }\n    tslib_1.__decorate([\n        NonEnumerable_1.NonEnumerable\n    ], BaseAPI.prototype, \"_client\", void 0);\n    return BaseAPI;\n}());\nexports.default = BaseAPI;\n//# sourceMappingURL=BaseAPI.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar HelixPaginatedRequest_1 = require(\"./HelixPaginatedRequest\");\n/**\n * A special case of {@HelixPaginatedRequest} with support for fetching the total number of entities, whenever an endpoint supports it.\n */\nvar HelixPaginatedRequestWithTotal = /** @class */ (function (_super) {\n    tslib_1.__extends(HelixPaginatedRequestWithTotal, _super);\n    function HelixPaginatedRequestWithTotal() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * Retrieves and returns the total number of entities existing in the queried result set.\n     */\n    HelixPaginatedRequestWithTotal.prototype.getTotalCount = function () {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            var data, _a;\n            return tslib_1.__generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0:\n                        _a = this._currentData;\n                        if (_a) return [3 /*break*/, 2];\n                        return [4 /*yield*/, this._fetchData({ query: { first: '1', after: undefined } })];\n                    case 1:\n                        _a = (_b.sent());\n                        _b.label = 2;\n                    case 2:\n                        data = _a;\n                        return [2 /*return*/, data.total];\n                }\n            });\n        });\n    };\n    return HelixPaginatedRequestWithTotal;\n}(HelixPaginatedRequest_1.default));\nexports.default = HelixPaginatedRequestWithTotal;\n//# sourceMappingURL=HelixPaginatedRequestWithTotal.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar Cache_1 = require(\"../../../Toolkit/Decorators/Cache\");\nvar BaseAPI_1 = require(\"../../BaseAPI\");\nvar PrivilegedUser_1 = require(\"./PrivilegedUser\");\nvar User_1 = require(\"./User\");\nvar ObjectTools_1 = require(\"../../../Toolkit/ObjectTools\");\nvar UserTools_1 = require(\"../../../Toolkit/UserTools\");\nvar EmoteSetList_1 = require(\"../Channel/EmoteSetList\");\nvar UserSubscription_1 = require(\"./UserSubscription\");\nvar NoSubscriptionProgramError_1 = require(\"../../../Errors/NoSubscriptionProgramError\");\nvar UserFollow_1 = require(\"./UserFollow\");\nvar UserBlock_1 = require(\"./UserBlock\");\nvar HellFreezesOverError_1 = require(\"../../../Errors/HellFreezesOverError\");\nvar HTTPStatusCodeError_1 = require(\"../../../Errors/HTTPStatusCodeError\");\n/**\n * The API methods that deal with users.\n *\n * Can be accessed using `client.kraken.users` on a {@TwitchClient} instance.\n *\n * ## Example\n * ```ts\n * const client = await TwitchClient.withCredentials(clientId, accessToken);\n * const user = await client.kraken.users.getUser('125328655');\n * ```\n */\nvar UserAPI = /** @class */ (function (_super) {\n    tslib_1.__extends(UserAPI, _super);\n    function UserAPI() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this._userByNameCache = new Map;\n        return _this;\n    }\n    /**\n     * Retrieves the user data of the currently authenticated user.\n     */\n    UserAPI.prototype.getMe = function () {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            var _a;\n            return tslib_1.__generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0:\n                        _a = PrivilegedUser_1.default.bind;\n                        return [4 /*yield*/, this._client.callAPI({ url: 'user', scope: 'user_read' })];\n                    case 1: return [2 /*return*/, new (_a.apply(PrivilegedUser_1.default, [void 0, _b.sent(), this._client]))()];\n                }\n            });\n        });\n    };\n    /**\n     * Retrieves the user data for the given user ID.\n     *\n     * @param userId The user ID you want to look up.\n     */\n    UserAPI.prototype.getUser = function (userId) {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            var userData;\n            return tslib_1.__generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this._client.callAPI({ url: \"users/\" + UserTools_1.extractUserId(userId) })];\n                    case 1:\n                        userData = _a.sent();\n                        if (!userData) {\n                            throw new HellFreezesOverError_1.default('Could not get authenticated user');\n                        }\n                        return [2 /*return*/, new User_1.default(userData, this._client)];\n                }\n            });\n        });\n    };\n    /**\n     * Retrieves the user data for the given user name.\n     *\n     * @param userName The user name you want to look up.\n     */\n    UserAPI.prototype.getUserByName = function (userName) {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            var users, user;\n            return tslib_1.__generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        // not using the decorator's cache here as users-by-name is slightly more complex to cache\n                        this._cleanUserCache();\n                        if (this._userByNameCache.has(userName)) {\n                            return [2 /*return*/, this._userByNameCache.get(userName).value];\n                        }\n                        return [4 /*yield*/, this._client.callAPI({ url: 'users', query: { login: userName } })];\n                    case 1:\n                        users = (_a.sent()).users;\n                        if (users.length === 0) {\n                            return [2 /*return*/, null];\n                        }\n                        user = new User_1.default(users[0], this._client);\n                        this._userByNameCache.set(userName, {\n                            value: user,\n                            expires: Date.now() + 3600 * 1000\n                        });\n                        return [2 /*return*/, user];\n                }\n            });\n        });\n    };\n    /**\n     * Retrieves the user data for the given user names.\n     *\n     * @param userNames The user names you want to look up.\n     */\n    UserAPI.prototype.getUsersByNames = function (userNames) {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            var cachedEntries, cachedObject, cachedUsers, toFetch, usersData, usersArr, users;\n            var _this = this;\n            return tslib_1.__generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        this._cleanUserCache();\n                        userNames = userNames.map(function (name) { return name.toLowerCase(); });\n                        cachedEntries = Array.from(this._userByNameCache.entries()).filter(function (_a) {\n                            var _b = tslib_1.__read(_a, 1), key = _b[0];\n                            return userNames.includes(key);\n                        });\n                        cachedObject = ObjectTools_1.entriesToObject(cachedEntries);\n                        cachedUsers = ObjectTools_1.mapObject(cachedObject, function (entry) { return entry.value; });\n                        toFetch = userNames.filter(function (name) { return !(name in cachedUsers); });\n                        if (!toFetch.length) {\n                            return [2 /*return*/, cachedUsers];\n                        }\n                        return [4 /*yield*/, this._client.callAPI({ url: 'users', query: { login: toFetch.join(',') } })];\n                    case 1:\n                        usersData = _a.sent();\n                        usersArr = usersData.users.map(function (data) { return new User_1.default(data, _this._client); });\n                        usersArr.forEach(function (user) { return _this._userByNameCache.set(user.name, {\n                            value: user,\n                            expires: Date.now() + 3600 * 1000\n                        }); });\n                        users = ObjectTools_1.indexBy(usersArr, 'name');\n                        return [2 /*return*/, tslib_1.__assign({}, cachedUsers, users)];\n                }\n            });\n        });\n    };\n    /**\n     * Retrieves the emotes a given user can use.\n     *\n     * @param user The user you want to get emotes for.\n     */\n    UserAPI.prototype.getUserEmotes = function (user) {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            var userId, data;\n            return tslib_1.__generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        userId = UserTools_1.extractUserId(user);\n                        return [4 /*yield*/, this._client.callAPI({ url: \"users/\" + userId + \"/emotes\", scope: 'user_subscriptions' })];\n                    case 1:\n                        data = _a.sent();\n                        return [2 /*return*/, new EmoteSetList_1.default(data.emoticon_sets)];\n                }\n            });\n        });\n    };\n    /**\n     * Retrieves the subscription data for a given user to a given channel.\n     *\n     * @param user The user to retrieve the subscription data of.\n     * @param toChannel The channel you want to retrieve the subscription data to.\n     */\n    UserAPI.prototype.getSubscriptionData = function (user, toChannel) {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            var userId, channelId, _a, e_1;\n            return tslib_1.__generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0:\n                        userId = UserTools_1.extractUserId(user);\n                        channelId = UserTools_1.extractUserId(toChannel);\n                        _b.label = 1;\n                    case 1:\n                        _b.trys.push([1, 3, , 4]);\n                        _a = UserSubscription_1.default.bind;\n                        return [4 /*yield*/, this._client.callAPI({\n                                url: \"users/\" + userId + \"/subscriptions/\" + channelId,\n                                scope: 'user_subscriptions'\n                            })];\n                    case 2: return [2 /*return*/, new (_a.apply(UserSubscription_1.default, [void 0, _b.sent(),\n                            this._client]))()];\n                    case 3:\n                        e_1 = _b.sent();\n                        if (e_1 instanceof HTTPStatusCodeError_1.default) {\n                            if (e_1.statusCode === 404) {\n                                return [2 /*return*/, null];\n                            }\n                            else if (e_1.statusCode === 422) {\n                                throw new NoSubscriptionProgramError_1.default(channelId);\n                            }\n                        }\n                        throw e_1;\n                    case 4: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Get a list of channels a given user follows.\n     *\n     * @param user The user you want to retrieve the follows of.\n     * @param page The result page you want to retrieve.\n     * @param limit The number of results you want to retrieve.\n     * @param orderBy The field to order by.\n     * @param orderDirection The direction to order in - ascending or descending.\n     */\n    UserAPI.prototype.getFollowedChannels = function (user, page, limit, orderBy, orderDirection) {\n        if (limit === void 0) { limit = 25; }\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            var userId, query, data;\n            var _this = this;\n            return tslib_1.__generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        userId = UserTools_1.extractUserId(user);\n                        query = {};\n                        if (page) {\n                            query.offset = ((page - 1) * limit).toString();\n                        }\n                        query.limit = limit.toString();\n                        if (orderBy) {\n                            query.sortby = orderBy;\n                        }\n                        if (orderDirection) {\n                            query.direction = orderDirection;\n                        }\n                        return [4 /*yield*/, this._client.callAPI({\n                                url: \"users/\" + userId + \"/follows/channels\", query: query\n                            })];\n                    case 1:\n                        data = _a.sent();\n                        return [2 /*return*/, data.follows.map(function (follow) { return new UserFollow_1.default(follow, _this._client); })];\n                }\n            });\n        });\n    };\n    /**\n     * Get follow data for a given user to a given channel.\n     *\n     * @param user The user you want to retrieve follow data of.\n     * @param channel The channel you want to retrieve follow data to.\n     */\n    UserAPI.prototype.getFollowedChannel = function (user, channel) {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            var userId, channelId, data, e_2;\n            return tslib_1.__generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        userId = UserTools_1.extractUserId(user);\n                        channelId = UserTools_1.extractUserId(channel);\n                        _a.label = 1;\n                    case 1:\n                        _a.trys.push([1, 3, , 4]);\n                        return [4 /*yield*/, this._client.callAPI({ url: \"users/\" + userId + \"/follows/channels/\" + channelId })];\n                    case 2:\n                        data = _a.sent();\n                        return [2 /*return*/, new UserFollow_1.default(data, this._client)];\n                    case 3:\n                        e_2 = _a.sent();\n                        if (e_2 instanceof HTTPStatusCodeError_1.default) {\n                            if (e_2.statusCode === 404) {\n                                return [2 /*return*/, null];\n                            }\n                        }\n                        throw e_2;\n                    case 4: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Follows a given channel with a given user.\n     *\n     * @param user The user you want to follow with.\n     * @param channel The channel to follow.\n     * @param notifications Whether the user will receive notifications.\n     */\n    UserAPI.prototype.followChannel = function (user, channel, notifications) {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            var userId, channelId, data;\n            return tslib_1.__generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        userId = UserTools_1.extractUserId(user);\n                        channelId = UserTools_1.extractUserId(channel);\n                        return [4 /*yield*/, this._client.callAPI({\n                                url: \"users/\" + userId + \"/follows/channels/\" + channelId,\n                                method: 'PUT',\n                                scope: 'user_follows_edit',\n                                body: { notifications: Boolean(notifications).toString() }\n                            })];\n                    case 1:\n                        data = _a.sent();\n                        return [2 /*return*/, new UserFollow_1.default(data, this._client)];\n                }\n            });\n        });\n    };\n    /**\n     * Unfollows a given channel with a given user.\n     *\n     * @param user The user you want to unfollow with.\n     * @param channel The channel to unfollow.\n     */\n    UserAPI.prototype.unfollowChannel = function (user, channel) {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            var userId, channelId;\n            return tslib_1.__generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        userId = UserTools_1.extractUserId(user);\n                        channelId = UserTools_1.extractUserId(channel);\n                        return [4 /*yield*/, this._client.callAPI({\n                                url: \"users/\" + userId + \"/follows/channels/\" + channelId,\n                                scope: 'user_follows_edit',\n                                method: 'DELETE'\n                            })];\n                    case 1:\n                        _a.sent();\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Retrieves a list of users a given user has blocked.\n     *\n     * @param user The user you want to retrieve the block list of.\n     * @param page The result page you want to retrieve.\n     * @param limit The number of results you want to retrieve.\n     */\n    UserAPI.prototype.getBlockedUsers = function (user, page, limit) {\n        if (limit === void 0) { limit = 25; }\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            var userId, query, data;\n            var _this = this;\n            return tslib_1.__generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        userId = UserTools_1.extractUserId(user);\n                        query = { limit: limit.toString() };\n                        if (page) {\n                            query.offset = ((page - 1) * limit).toString();\n                        }\n                        return [4 /*yield*/, this._client.callAPI({\n                                url: \"users/\" + userId + \"/blocks\", query: query, scope: 'user_blocks_read'\n                            })];\n                    case 1:\n                        data = _a.sent();\n                        return [2 /*return*/, data.blocks.map(function (block) { return new UserBlock_1.default(block, _this._client); })];\n                }\n            });\n        });\n    };\n    /**\n     * Blocks a given user with another given user.\n     *\n     * @param user The user you want to block with.\n     * @param userToBlock The user to block.\n     */\n    UserAPI.prototype.blockUser = function (user, userToBlock) {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            var userId, userIdToBlock, data;\n            return tslib_1.__generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        userId = UserTools_1.extractUserId(user);\n                        userIdToBlock = UserTools_1.extractUserId(userToBlock);\n                        return [4 /*yield*/, this._client.callAPI({\n                                url: \"users/\" + userId + \"/blocks/\" + userIdToBlock,\n                                method: 'PUT',\n                                scope: 'user_blocks_edit'\n                            })];\n                    case 1:\n                        data = _a.sent();\n                        return [2 /*return*/, new UserBlock_1.default(data, this._client)];\n                }\n            });\n        });\n    };\n    /**\n     * Unblocks a given user with another given user.\n     *\n     * @param user The user you want to unblock with.\n     * @param userToUnblock The user to unblock.\n     */\n    UserAPI.prototype.unblockUser = function (user, userToUnblock) {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            var userId, userIdToUnblock;\n            return tslib_1.__generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        userId = UserTools_1.extractUserId(user);\n                        userIdToUnblock = UserTools_1.extractUserId(userToUnblock);\n                        return [4 /*yield*/, this._client.callAPI({\n                                url: \"users/\" + userId + \"/blocks/\" + userIdToUnblock,\n                                method: 'DELETE',\n                                scope: 'user_blocks_edit'\n                            })];\n                    case 1:\n                        _a.sent();\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    UserAPI.prototype._cleanUserCache = function () {\n        var _this = this;\n        var now = Date.now();\n        this._userByNameCache.forEach(function (val, key) {\n            if (val.expires < now) {\n                _this._userByNameCache.delete(key);\n            }\n        });\n    };\n    tslib_1.__decorate([\n        Cache_1.Cached(3600)\n    ], UserAPI.prototype, \"getMe\", null);\n    tslib_1.__decorate([\n        Cache_1.Cached(3600)\n    ], UserAPI.prototype, \"getUser\", null);\n    tslib_1.__decorate([\n        Cache_1.Cached(3600)\n    ], UserAPI.prototype, \"getUserEmotes\", null);\n    tslib_1.__decorate([\n        Cache_1.Cached(3600)\n    ], UserAPI.prototype, \"getSubscriptionData\", null);\n    tslib_1.__decorate([\n        Cache_1.Cached(300)\n    ], UserAPI.prototype, \"getFollowedChannels\", null);\n    tslib_1.__decorate([\n        Cache_1.Cached(300)\n    ], UserAPI.prototype, \"getFollowedChannel\", null);\n    tslib_1.__decorate([\n        Cache_1.ClearsCache('getFollowedChannels', 1),\n        Cache_1.ClearsCache('getFollowedChannel', 2)\n    ], UserAPI.prototype, \"followChannel\", null);\n    tslib_1.__decorate([\n        Cache_1.ClearsCache('getFollowedChannels', 1),\n        Cache_1.ClearsCache('getFollowedChannel', 2)\n    ], UserAPI.prototype, \"unfollowChannel\", null);\n    tslib_1.__decorate([\n        Cache_1.Cached(3600)\n    ], UserAPI.prototype, \"getBlockedUsers\", null);\n    tslib_1.__decorate([\n        Cache_1.ClearsCache('getBlockedUsers', 1)\n    ], UserAPI.prototype, \"blockUser\", null);\n    tslib_1.__decorate([\n        Cache_1.ClearsCache('getBlockedUsers', 1)\n    ], UserAPI.prototype, \"unblockUser\", null);\n    UserAPI = tslib_1.__decorate([\n        Cache_1.Cacheable\n    ], UserAPI);\n    return UserAPI;\n}(BaseAPI_1.default));\nexports.default = UserAPI;\n//# sourceMappingURL=UserAPI.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar Cache_1 = require(\"../../Toolkit/Decorators/Cache\");\nvar ArrayTools_1 = require(\"../../Toolkit/ArrayTools\");\n/**\n * A list of chatters in a Twitch chat.\n */\nvar ChattersList = /** @class */ (function () {\n    /** @private */\n    function ChattersList(_data) {\n        this._data = _data;\n    }\n    Object.defineProperty(ChattersList.prototype, \"allChatters\", {\n        /**\n         * A list of user names of all chatters in the chat.\n         */\n        get: function () {\n            return ArrayTools_1.flatten(Object.values(this._data.chatters));\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ChattersList.prototype, \"allChattersWithStatus\", {\n        /**\n         * A map of user names of all chatters in the chat, mapped to their status in the channel.\n         */\n        get: function () {\n            return new Map(ArrayTools_1.flatten(Object.entries(this._data.chatters).map(function (_a) {\n                var _b = tslib_1.__read(_a, 2), status = _b[0], names = _b[1];\n                return names.map(function (name) { return [name, status]; });\n            })));\n        },\n        enumerable: true,\n        configurable: true\n    });\n    tslib_1.__decorate([\n        Cache_1.CachedGetter()\n    ], ChattersList.prototype, \"allChatters\", null);\n    tslib_1.__decorate([\n        Cache_1.CachedGetter()\n    ], ChattersList.prototype, \"allChattersWithStatus\", null);\n    ChattersList = tslib_1.__decorate([\n        Cache_1.Cacheable\n    ], ChattersList);\n    return ChattersList;\n}());\nexports.default = ChattersList;\n//# sourceMappingURL=ChattersList.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar NonEnumerable_1 = require(\"../Toolkit/Decorators/NonEnumerable\");\nvar TwitchClient_1 = require(\"../TwitchClient\");\n/**\n * Enhances another auth provider with the ability to make use of refresh\n * tokens, automatically refreshing the access token whenever necessary.\n */\nvar RefreshableAuthProvider = /** @class */ (function () {\n    /**\n     * Creates a new auth provider based on the given one that can automatically\n     * refresh access tokens.\n     *\n     * You don't usually have to create this manually. You should use `TwitchClient.withCredentials`\n     * with the `refreshConfig` parameter instead.\n     *\n     * @param childProvider The base auth provider.\n     * @param refreshConfig The information necessary to automatically refresh an access token.\n     */\n    function RefreshableAuthProvider(childProvider, refreshConfig) {\n        this._clientSecret = refreshConfig.clientSecret;\n        this._refreshToken = refreshConfig.refreshToken;\n        this._childProvider = childProvider;\n        this._initialExpiry = refreshConfig.expiry;\n        this._onRefresh = refreshConfig.onRefresh;\n    }\n    /**\n     * Retrieves an access token.\n     *\n     * If the current access token does not have the requested scopes, the base auth\n     * provider is called.\n     *\n     * If the current access token is expired, automatically renew it.\n     *\n     * @param scopes The requested scopes.\n     */\n    RefreshableAuthProvider.prototype.getAccessToken = function (scopes) {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            var oldToken, newToken, now, refreshedToken;\n            var _this = this;\n            return tslib_1.__generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        if (typeof scopes === 'string') {\n                            scopes = scopes.split(' ');\n                        }\n                        return [4 /*yield*/, this._childProvider.getAccessToken()];\n                    case 1:\n                        oldToken = _a.sent();\n                        if (!(oldToken && scopes && scopes.some(function (scope) { return !_this.currentScopes.includes(scope); }))) return [3 /*break*/, 3];\n                        return [4 /*yield*/, this._childProvider.getAccessToken(scopes)];\n                    case 2:\n                        newToken = _a.sent();\n                        // ...but if the token doesn't change, carry on\n                        if (newToken !== oldToken) {\n                            return [2 /*return*/, newToken];\n                        }\n                        _a.label = 3;\n                    case 3:\n                        // if we don't have a current token, we just pass this and refresh right away\n                        if (oldToken) {\n                            if (this._initialExpiry) {\n                                now = new Date();\n                                if (now < this._initialExpiry) {\n                                    return [2 /*return*/, oldToken];\n                                }\n                            }\n                            else if (!oldToken.isExpired) {\n                                return [2 /*return*/, oldToken];\n                            }\n                        }\n                        return [4 /*yield*/, this.refresh()];\n                    case 4:\n                        refreshedToken = _a.sent();\n                        if (oldToken) {\n                            return [2 /*return*/, refreshedToken];\n                        }\n                        // need to check again for scopes after refreshing, in case a refresh token was passed without an access token\n                        return [2 /*return*/, this._childProvider.getAccessToken(scopes)];\n                }\n            });\n        });\n    };\n    /**\n     * Force a refresh of the access token.\n     */\n    RefreshableAuthProvider.prototype.refresh = function () {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            var tokenData;\n            return tslib_1.__generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, TwitchClient_1.default.refreshAccessToken(this.clientId, this._clientSecret, this._refreshToken)];\n                    case 1:\n                        tokenData = _a.sent();\n                        this.setAccessToken(tokenData);\n                        this._refreshToken = tokenData.refreshToken;\n                        this._initialExpiry = undefined;\n                        if (this._onRefresh) {\n                            this._onRefresh(tokenData);\n                        }\n                        return [2 /*return*/, tokenData];\n                }\n            });\n        });\n    };\n    /** @private */\n    RefreshableAuthProvider.prototype.setAccessToken = function (token) {\n        this._childProvider.setAccessToken(token);\n    };\n    Object.defineProperty(RefreshableAuthProvider.prototype, \"clientId\", {\n        /**\n         * The client ID.\n         */\n        get: function () {\n            return this._childProvider.clientId;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(RefreshableAuthProvider.prototype, \"currentScopes\", {\n        /**\n         * The scopes that are currently available using the access token.\n         */\n        get: function () {\n            return this._childProvider.currentScopes;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    tslib_1.__decorate([\n        NonEnumerable_1.NonEnumerable\n    ], RefreshableAuthProvider.prototype, \"_clientSecret\", void 0);\n    tslib_1.__decorate([\n        NonEnumerable_1.NonEnumerable\n    ], RefreshableAuthProvider.prototype, \"_refreshToken\", void 0);\n    return RefreshableAuthProvider;\n}());\nexports.default = RefreshableAuthProvider;\n//# sourceMappingURL=RefreshableAuthProvider.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar UserTools_1 = require(\"../../../Toolkit/UserTools\");\nvar Cache_1 = require(\"../../../Toolkit/Decorators/Cache\");\nvar BaseAPI_1 = require(\"../../BaseAPI\");\nvar Stream_1 = require(\"./Stream\");\n/**\n * The API methods that deal with streams.\n *\n * Can be accessed using `client.kraken.streams` on a {@TwitchClient} instance.\n *\n * ## Example\n * ```ts\n * const client = await TwitchClient.withCredentials(clientId, accessToken);\n * const stream = await client.kraken.streams.getStreamByChannel('125328655');\n * ```\n */\nvar StreamAPI = /** @class */ (function (_super) {\n    tslib_1.__extends(StreamAPI, _super);\n    function StreamAPI() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * Retrieves the current stream on the given channel.\n     *\n     * @param channel\n     */\n    StreamAPI.prototype.getStreamByChannel = function (channel) {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            var channelId, data;\n            return tslib_1.__generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        channelId = UserTools_1.extractUserId(channel);\n                        return [4 /*yield*/, this._client.callAPI({ url: \"streams/\" + channelId })];\n                    case 1:\n                        data = _a.sent();\n                        return [2 /*return*/, data.stream ? new Stream_1.default(data.stream, this._client) : null];\n                }\n            });\n        });\n    };\n    /**\n     * Retrieves a list of streams.\n     *\n     * @param channels A channel ID or a list thereof.\n     * @param game Show only streams playing a certain game.\n     * @param languageCode Show only streams in a certain language.\n     * @param type Show only streams of a certain type.\n     * @param page The result page you want to retrieve.\n     * @param limit The number of results you want to retrieve.\n     */\n    StreamAPI.prototype.getStreams = function (channels, game, languageCode, type, page, limit) {\n        if (limit === void 0) { limit = 25; }\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            var query, data;\n            var _this = this;\n            return tslib_1.__generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        query = { limit: limit.toString() };\n                        if (channels) {\n                            query.channel = typeof channels === 'string' ? channels : channels.join(',');\n                        }\n                        if (game) {\n                            query.game = game;\n                        }\n                        if (languageCode) {\n                            query.broadcaster_language = languageCode;\n                        }\n                        if (type) {\n                            query.stream_type = type;\n                        }\n                        if (page) {\n                            query.offset = ((page - 1) * limit).toString();\n                        }\n                        return [4 /*yield*/, this._client.callAPI({ url: 'streams', query: query })];\n                    case 1:\n                        data = _a.sent();\n                        return [2 /*return*/, data.streams.map(function (streamData) { return new Stream_1.default(streamData, _this._client); })];\n                }\n            });\n        });\n    };\n    /**\n     * Retrieves a list of all streams.\n     *\n     * @param page The result page you want to retrieve.\n     * @param limit The number of results you want to retrieve.\n     */\n    StreamAPI.prototype.getAllStreams = function (page, limit) {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            return tslib_1.__generator(this, function (_a) {\n                return [2 /*return*/, this.getStreams(undefined, undefined, undefined, Stream_1.StreamType.All, page, limit)];\n            });\n        });\n    };\n    /**\n     * Retrieves a list of all live streams.\n     *\n     * @param page The result page you want to retrieve.\n     * @param limit The number of results you want to retrieve.\n     */\n    StreamAPI.prototype.getAllLiveStreams = function (page, limit) {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            return tslib_1.__generator(this, function (_a) {\n                return [2 /*return*/, this.getStreams(undefined, undefined, undefined, Stream_1.StreamType.Live, page, limit)];\n            });\n        });\n    };\n    /**\n     * Retrieves a list of all streams on channels the currently authenticated user is following.\n     *\n     * @param type Show only streams of a certain type.\n     * @param page The result page you want to retrieve.\n     * @param limit The number of results you want to retrieve.\n     */\n    StreamAPI.prototype.getFollowedStreams = function (type, page, limit) {\n        if (limit === void 0) { limit = 25; }\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            var query, data;\n            var _this = this;\n            return tslib_1.__generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        query = { limit: limit.toString() };\n                        if (type) {\n                            query.type = type;\n                        }\n                        if (page) {\n                            query.offset = ((page - 1) * limit).toString();\n                        }\n                        return [4 /*yield*/, this._client.callAPI({ url: 'streams/followed', query: query, scope: 'user_read' })];\n                    case 1:\n                        data = _a.sent();\n                        return [2 /*return*/, data.streams.map(function (streamData) { return new Stream_1.default(streamData, _this._client); })];\n                }\n            });\n        });\n    };\n    tslib_1.__decorate([\n        Cache_1.Cached(60)\n    ], StreamAPI.prototype, \"getStreamByChannel\", null);\n    tslib_1.__decorate([\n        Cache_1.Cached(60)\n    ], StreamAPI.prototype, \"getFollowedStreams\", null);\n    StreamAPI = tslib_1.__decorate([\n        Cache_1.Cacheable\n    ], StreamAPI);\n    return StreamAPI;\n}(BaseAPI_1.default));\nexports.default = StreamAPI;\n//# sourceMappingURL=StreamAPI.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar NonEnumerable_1 = require(\"../../../Toolkit/Decorators/NonEnumerable\");\nvar ChannelPlaceholder_1 = require(\"../Channel/ChannelPlaceholder\");\nvar NoSubscriptionProgramError_1 = require(\"../../../Errors/NoSubscriptionProgramError\");\n/**\n * A Twitch user.\n */\nvar User = /** @class */ (function () {\n    /** @private */\n    function User(/** @private */ _data, client) {\n        this._data = _data;\n        this._client = client;\n    }\n    Object.defineProperty(User.prototype, \"cacheKey\", {\n        /** @private */\n        get: function () {\n            return this._data._id;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(User.prototype, \"id\", {\n        /**\n         * The ID of the user.\n         */\n        get: function () {\n            return this._data._id;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(User.prototype, \"bio\", {\n        /**\n         * The bio of the user.\n         */\n        get: function () {\n            return this._data.bio;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(User.prototype, \"creationDate\", {\n        /**\n         * The date when the user was created, i.e. when they registered on Twitch.\n         */\n        get: function () {\n            return new Date(this._data.created_at);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(User.prototype, \"updateDate\", {\n        /**\n         * The last date when the user changed anything in their profile, e.g. their description or their profile picture.\n         */\n        get: function () {\n            return new Date(this._data.updated_at);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(User.prototype, \"name\", {\n        /**\n         * The user name of the user.\n         */\n        get: function () {\n            return this._data.name;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(User.prototype, \"displayName\", {\n        /**\n         * The display name of the user.\n         */\n        get: function () {\n            return this._data.display_name;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(User.prototype, \"logoUrl\", {\n        /**\n         * The URL to the profile picture of the user.\n         */\n        get: function () {\n            return this._data.logo;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(User.prototype, \"type\", {\n        /**\n         * The type of the user.\n         */\n        get: function () {\n            return this._data.type;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Retrieves the channel data of the user.\n     */\n    User.prototype.getChannel = function () {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            return tslib_1.__generator(this, function (_a) {\n                return [2 /*return*/, this._client.kraken.channels.getChannel(this)];\n            });\n        });\n    };\n    /**\n     * Gets a channel placeholder object for the user, which can do anything you can do to a channel with just the ID.\n     */\n    User.prototype.getChannelPlaceholder = function () {\n        return new ChannelPlaceholder_1.default(this._data._id, this._client);\n    };\n    /**\n     * Retrieves the currently running stream of the user.\n     */\n    User.prototype.getStream = function () {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            return tslib_1.__generator(this, function (_a) {\n                return [2 /*return*/, this.getChannelPlaceholder().getStream()];\n            });\n        });\n    };\n    /**\n     * Retrieves the subscription data for the user to the given channel.\n     *\n     * Throws if the channel doesn't have a subscription program or the user is not subscribed to it.\n     *\n     * This method requires access to the user. If you only have access to the channel,\n     * use {@ChannelPlaceholder#getSubscriptionBy} instead.\n     *\n     * @param channel The channel you want to get the subscription data for.\n     */\n    User.prototype.getSubscriptionTo = function (channel) {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            return tslib_1.__generator(this, function (_a) {\n                return [2 /*return*/, this._client.kraken.users.getSubscriptionData(this, channel)];\n            });\n        });\n    };\n    /**\n     * Checks whether the user is subscribed to the given channel.\n     *\n     * @param channel The channel you want to check the subscription for.\n     */\n    User.prototype.isSubscribedTo = function (channel) {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            var e_1;\n            return tslib_1.__generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        _a.trys.push([0, 2, , 3]);\n                        return [4 /*yield*/, this.getSubscriptionTo(channel)];\n                    case 1: return [2 /*return*/, (_a.sent()) !== null];\n                    case 2:\n                        e_1 = _a.sent();\n                        if (e_1 instanceof NoSubscriptionProgramError_1.default) {\n                            return [2 /*return*/, false];\n                        }\n                        throw e_1;\n                    case 3: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Retrieves a list of channels followed by the user.\n     *\n     * @param page The result page you want to retrieve.\n     * @param limit The number of results you want to retrieve.\n     * @param orderBy The field to order by.\n     * @param orderDirection The direction to order in - ascending or descending.\n     */\n    User.prototype.getFollows = function (page, limit, orderBy, orderDirection) {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            return tslib_1.__generator(this, function (_a) {\n                return [2 /*return*/, this._client.kraken.users.getFollowedChannels(this, page, limit, orderBy, orderDirection)];\n            });\n        });\n    };\n    /**\n     * Retrieves the follow data of the user to a given channel.\n     *\n     * @param channel The channel to retrieve the follow data for.\n     */\n    User.prototype.getFollowTo = function (channel) {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            return tslib_1.__generator(this, function (_a) {\n                return [2 /*return*/, this._client.kraken.users.getFollowedChannel(this, channel)];\n            });\n        });\n    };\n    /**\n     * Checks whether the user is following the given channel.\n     *\n     * @param channel The channel to check for the user's follow.\n     */\n    User.prototype.follows = function (channel) {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            var e_2;\n            return tslib_1.__generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        _a.trys.push([0, 2, , 3]);\n                        return [4 /*yield*/, this.getFollowTo(channel)];\n                    case 1: return [2 /*return*/, (_a.sent()) !== null];\n                    case 2:\n                        e_2 = _a.sent();\n                        throw e_2;\n                    case 3: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Follows the channel with the authenticated user.\n     */\n    User.prototype.follow = function () {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            var currentUser;\n            return tslib_1.__generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this._client.kraken.users.getMe()];\n                    case 1:\n                        currentUser = _a.sent();\n                        return [2 /*return*/, currentUser.followChannel(this)];\n                }\n            });\n        });\n    };\n    /**\n     * Unfollows the channel with the authenticated user.\n     */\n    User.prototype.unfollow = function () {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            var currentUser;\n            return tslib_1.__generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this._client.kraken.users.getMe()];\n                    case 1:\n                        currentUser = _a.sent();\n                        return [2 /*return*/, currentUser.unfollowChannel(this)];\n                }\n            });\n        });\n    };\n    /**\n     * Retrieves the emotes the user can use.\n     */\n    User.prototype.getEmotes = function () {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            return tslib_1.__generator(this, function (_a) {\n                return [2 /*return*/, this._client.kraken.users.getUserEmotes(this)];\n            });\n        });\n    };\n    tslib_1.__decorate([\n        NonEnumerable_1.NonEnumerable\n    ], User.prototype, \"_client\", void 0);\n    return User;\n}());\nexports.default = User;\n//# sourceMappingURL=User.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar TwitchClient_1 = require(\"../../TwitchClient\");\nvar NonEnumerable_1 = require(\"../../Toolkit/Decorators/NonEnumerable\");\n/**\n * Represents a request to the new Twitch API (Helix) that utilizes a cursor to paginate through its results.\n *\n * Aside from the methods described below, you can also utilize the async iterator using `for await .. of`:\n *\n * ```ts\n * const result = client.helix.videos.getVideosByUser('125328655');\n * for await (const video of result) {\n *     console.log(video.title);\n * }\n * ```\n */\nvar HelixPaginatedRequest = /** @class */ (function () {\n    /** @private */\n    function HelixPaginatedRequest(_callOptions, client, _mapper) {\n        this._callOptions = _callOptions;\n        this._mapper = _mapper;\n        this._client = client;\n    }\n    Object.defineProperty(HelixPaginatedRequest.prototype, \"current\", {\n        /**\n         * The last retrieved page of data associated to the requested resource.\n         *\n         * Only works with {@HelixPaginatedRequest#getNext} and not with any other methods of data retrieval.\n         */\n        get: function () {\n            return this._currentData ? this._currentData.data : undefined;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Retrieves and returns the next available page of data associated to the requested resource, or an empty array if there are no more available pages.\n     */\n    HelixPaginatedRequest.prototype.getNext = function () {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            var result;\n            return tslib_1.__generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this._fetchData()];\n                    case 1:\n                        result = _a.sent();\n                        if (!result.data.length) {\n                            return [2 /*return*/, []];\n                        }\n                        return [2 /*return*/, this._processResult(result)];\n                }\n            });\n        });\n    };\n    /**\n     * Retrieves and returns all data associated to the requested resource.\n     *\n     * Be aware that this makes multiple calls to the Twitch API. Due to this, you might be more suspectible to rate limits.\n     *\n     * Also be aware that this resets the internal cursor, so avoid using this and {@HelixPaginatedRequest#getNext} together.\n     */\n    HelixPaginatedRequest.prototype.getAll = function () {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            var result, data;\n            return tslib_1.__generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        this.reset();\n                        result = [];\n                        _a.label = 1;\n                    case 1: return [4 /*yield*/, this.getNext()];\n                    case 2:\n                        data = _a.sent();\n                        if (!data.length) {\n                            return [3 /*break*/, 4];\n                        }\n                        result.push.apply(result, tslib_1.__spread(data));\n                        _a.label = 3;\n                    case 3:\n                        if (this._currentCursor) return [3 /*break*/, 1];\n                        _a.label = 4;\n                    case 4:\n                        this.reset();\n                        return [2 /*return*/, result];\n                }\n            });\n        });\n    };\n    Object.defineProperty(HelixPaginatedRequest.prototype, \"currentCursor\", {\n        /**\n         * Retrieves the current cursor.\n         *\n         * Only useful if you want to make manual requests to the API.\n         */\n        get: function () {\n            return this._currentCursor;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Resets the internal cursor.\n     *\n     * This will make {@HelixPaginatedRequest#getNext} start from the first page again.\n     */\n    HelixPaginatedRequest.prototype.reset = function () {\n        this._currentCursor = undefined;\n    };\n    /** @private */\n    HelixPaginatedRequest.prototype._fetchData = function (additionalOptions) {\n        if (additionalOptions === void 0) { additionalOptions = {}; }\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            return tslib_1.__generator(this, function (_a) {\n                return [2 /*return*/, this._client.callAPI(tslib_1.__assign({ type: TwitchClient_1.TwitchAPICallType.Helix }, this._callOptions, additionalOptions, { query: tslib_1.__assign({}, this._callOptions.query, { after: this._currentCursor, first: '100' }, additionalOptions.query) }))];\n            });\n        });\n    };\n    /** @private */\n    HelixPaginatedRequest.prototype._processResult = function (result) {\n        var _this = this;\n        this._currentCursor = result.pagination ? result.pagination.cursor : undefined;\n        this._currentData = result;\n        return result.data.reduce(function (acc, elem) {\n            var mapped = _this._mapper(elem);\n            return Array.isArray(mapped) ? tslib_1.__spread(acc, mapped) : tslib_1.__spread(acc, [mapped]);\n        }, []);\n    };\n    tslib_1.__decorate([\n        NonEnumerable_1.NonEnumerable\n    ], HelixPaginatedRequest.prototype, \"_client\", void 0);\n    return HelixPaginatedRequest;\n}());\nexports.default = HelixPaginatedRequest;\nif (typeof Symbol === 'function' && typeof Symbol.asyncIterator === 'symbol') {\n    Object.defineProperty(HelixPaginatedRequest.prototype, Symbol.asyncIterator, {\n        value: function () {\n            return tslib_1.__asyncGenerator(this, arguments, function () {\n                var data;\n                return tslib_1.__generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0:\n                            this.reset();\n                            _a.label = 1;\n                        case 1:\n                            if (!true) return [3 /*break*/, 5];\n                            return [4 /*yield*/, tslib_1.__await(this.getNext())];\n                        case 2:\n                            data = _a.sent();\n                            if (!data.length) {\n                                return [3 /*break*/, 5];\n                            }\n                            return [5 /*yield**/, tslib_1.__values(tslib_1.__asyncDelegator(tslib_1.__asyncValues(data[Symbol.iterator]())))];\n                        case 3: return [4 /*yield*/, tslib_1.__await.apply(void 0, [_a.sent()])];\n                        case 4:\n                            _a.sent();\n                            return [3 /*break*/, 1];\n                        case 5: return [2 /*return*/];\n                    }\n                });\n            });\n        }\n    });\n}\n//# sourceMappingURL=HelixPaginatedRequest.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar NonEnumerable_1 = require(\"../../../Toolkit/Decorators/NonEnumerable\");\n/**\n * A subscription to a Twitch WebHook.\n */\nvar HelixWebHookSubscription = /** @class */ (function () {\n    /** @private */\n    function HelixWebHookSubscription(_data, client) {\n        this._data = _data;\n        this._client = client;\n    }\n    Object.defineProperty(HelixWebHookSubscription.prototype, \"topicUrl\", {\n        /**\n         * The topic the WebHook is listening to.\n         */\n        get: function () {\n            return this._data.topic;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(HelixWebHookSubscription.prototype, \"callbackUrl\", {\n        /**\n         * The URL that will be called for every subscribed event.\n         */\n        get: function () {\n            return this._data.callback;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(HelixWebHookSubscription.prototype, \"expiryDate\", {\n        /**\n         * The time when the subscription will expire.\n         */\n        get: function () {\n            return new Date(this._data.expires_at);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    tslib_1.__decorate([\n        NonEnumerable_1.NonEnumerable\n    ], HelixWebHookSubscription.prototype, \"_client\", void 0);\n    return HelixWebHookSubscription;\n}());\nexports.default = HelixWebHookSubscription;\n//# sourceMappingURL=HelixWebHookSubscription.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar CustomError_1 = require(\"./CustomError\");\n/**\n * Thrown whenever a HTTP error occurs. Some HTTP errors are handled in the library when they're expected.\n */\nvar HTTPStatusCodeError = /** @class */ (function (_super) {\n    tslib_1.__extends(HTTPStatusCodeError, _super);\n    /** @private */\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    function HTTPStatusCodeError(statusCode, statusText, body) {\n        var _this = _super.call(this, \"Encountered HTTP status code \" + statusCode + \": \" + statusText + \"\\n\\nBody:\\n\" + JSON.stringify(body, null, 2)) || this;\n        _this._statusCode = statusCode;\n        _this._body = body;\n        return _this;\n    }\n    Object.defineProperty(HTTPStatusCodeError.prototype, \"statusCode\", {\n        get: function () {\n            return this._statusCode;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(HTTPStatusCodeError.prototype, \"body\", {\n        get: function () {\n            return this._body;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return HTTPStatusCodeError;\n}(CustomError_1.default));\nexports.default = HTTPStatusCodeError;\n//# sourceMappingURL=HTTPStatusCodeError.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar NonEnumerable_1 = require(\"../../../Toolkit/Decorators/NonEnumerable\");\nvar HelixBitsLeaderboardEntry_1 = require(\"./HelixBitsLeaderboardEntry\");\nvar Cache_1 = require(\"../../../Toolkit/Decorators/Cache\");\n/**\n * A leaderboard where the users who used the most bits to a broadcaster are listed.\n */\nvar HelixBitsLeaderboard = /** @class */ (function () {\n    /** @private */\n    function HelixBitsLeaderboard(_data, client) {\n        this._data = _data;\n        this._client = client;\n    }\n    Object.defineProperty(HelixBitsLeaderboard.prototype, \"entries\", {\n        /**\n         * The entries of the leaderboard.\n         */\n        get: function () {\n            var _this = this;\n            return this._data.data.map(function (entry) { return new HelixBitsLeaderboardEntry_1.default(entry, _this._client); });\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(HelixBitsLeaderboard.prototype, \"totalCount\", {\n        /**\n         * The total amount of people on the requested leaderboard.\n         */\n        get: function () {\n            return this._data.total;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    tslib_1.__decorate([\n        NonEnumerable_1.NonEnumerable\n    ], HelixBitsLeaderboard.prototype, \"_client\", void 0);\n    tslib_1.__decorate([\n        Cache_1.CachedGetter()\n    ], HelixBitsLeaderboard.prototype, \"entries\", null);\n    HelixBitsLeaderboard = tslib_1.__decorate([\n        Cache_1.Cacheable\n    ], HelixBitsLeaderboard);\n    return HelixBitsLeaderboard;\n}());\nexports.default = HelixBitsLeaderboard;\n//# sourceMappingURL=HelixBitsLeaderboard.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar NonEnumerable_1 = require(\"../../../Toolkit/Decorators/NonEnumerable\");\nvar User_1 = require(\"./User\");\n/**\n * A relation of a previously givn user blocking another user.\n */\nvar UserBlock = /** @class */ (function () {\n    /** @private */\n    function UserBlock(_data, client) {\n        this._data = _data;\n        this._client = client;\n    }\n    Object.defineProperty(UserBlock.prototype, \"blockedUser\", {\n        /**\n         * The blocked user.\n         */\n        get: function () {\n            return new User_1.default(this._data.user, this._client);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    tslib_1.__decorate([\n        NonEnumerable_1.NonEnumerable\n    ], UserBlock.prototype, \"_client\", void 0);\n    return UserBlock;\n}());\nexports.default = UserBlock;\n//# sourceMappingURL=UserBlock.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar NonEnumerable_1 = require(\"../../../Toolkit/Decorators/NonEnumerable\");\nvar HelixClip = /** @class */ (function () {\n    /** @private */\n    function HelixClip(_data, client) {\n        this._data = _data;\n        this._client = client;\n    }\n    Object.defineProperty(HelixClip.prototype, \"id\", {\n        /**\n         * The clip ID.\n         */\n        get: function () {\n            return this._data.id;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(HelixClip.prototype, \"url\", {\n        /**\n         * The URL of the clip.\n         */\n        get: function () {\n            return this._data.url;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(HelixClip.prototype, \"embedUrl\", {\n        /**\n         * The embed URL of the clip.\n         */\n        get: function () {\n            return this._data.embed_url;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(HelixClip.prototype, \"broadcasterId\", {\n        /**\n         * The user ID of the broadcaster of the stream where the clip was created.\n         */\n        get: function () {\n            return this._data.broadcaster_id;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(HelixClip.prototype, \"broadcasterDisplayName\", {\n        /**\n         * The display name of the broadcaster of the stream where the clip was created.\n         */\n        get: function () {\n            return this._data.broadcaster_name;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Retrieves information about the broadcaster of the stream where the clip was created.\n     */\n    HelixClip.prototype.getBroadcaster = function () {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            return tslib_1.__generator(this, function (_a) {\n                return [2 /*return*/, this._client.helix.users.getUserById(this._data.broadcaster_id)];\n            });\n        });\n    };\n    Object.defineProperty(HelixClip.prototype, \"creatorId\", {\n        /**\n         * The user ID of the creator of the clip.\n         */\n        get: function () {\n            return this._data.creator_id;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(HelixClip.prototype, \"creatorDisplayName\", {\n        /**\n         * The display name of the creator of the clip.\n         */\n        get: function () {\n            return this._data.creator_name;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Retrieves information about the creator of the clip.\n     */\n    HelixClip.prototype.getCreator = function () {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            return tslib_1.__generator(this, function (_a) {\n                return [2 /*return*/, this._client.helix.users.getUserById(this._data.creator_id)];\n            });\n        });\n    };\n    Object.defineProperty(HelixClip.prototype, \"videoId\", {\n        /**\n         * The ID of the video the clip is taken from.\n         */\n        get: function () {\n            return this._data.video_id;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Retrieves information about the video the clip is taken from.\n     */\n    HelixClip.prototype.getVideo = function () {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            return tslib_1.__generator(this, function (_a) {\n                return [2 /*return*/, this._client.helix.videos.getVideoById(this._data.video_id)];\n            });\n        });\n    };\n    Object.defineProperty(HelixClip.prototype, \"gameId\", {\n        /**\n         * The ID of the game that was being played when the clip was created.\n         */\n        get: function () {\n            return this._data.game_id;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Retrieves information about the game that was being played when the clip was created.\n     */\n    HelixClip.prototype.getGame = function () {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            return tslib_1.__generator(this, function (_a) {\n                return [2 /*return*/, this._client.helix.games.getGameById(this._data.game_id)];\n            });\n        });\n    };\n    Object.defineProperty(HelixClip.prototype, \"language\", {\n        /**\n         * The language of the stream where the clip was created.\n         */\n        get: function () {\n            return this._data.language;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(HelixClip.prototype, \"title\", {\n        /**\n         * The title of the clip.\n         */\n        get: function () {\n            return this._data.title;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(HelixClip.prototype, \"views\", {\n        /**\n         * The number of views of the clip.\n         */\n        get: function () {\n            return this._data.view_count;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(HelixClip.prototype, \"creationDate\", {\n        /**\n         * The date when the clip was created.\n         */\n        get: function () {\n            return new Date(this._data.created_at);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(HelixClip.prototype, \"thumbnailUrl\", {\n        /**\n         * The URL of the thumbnail of the clip.\n         */\n        get: function () {\n            return this._data.thumbnail_url;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    tslib_1.__decorate([\n        NonEnumerable_1.NonEnumerable\n    ], HelixClip.prototype, \"_client\", void 0);\n    return HelixClip;\n}());\nexports.default = HelixClip;\n//# sourceMappingURL=HelixClip.js.map"],"sourceRoot":""}