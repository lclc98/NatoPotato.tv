{"version":3,"sources":["webpack:///./node_modules/twitch/lib/API/Badges/ChatBadgeSet.js","webpack:///./node_modules/twitch/lib/Toolkit/UserTools.js","webpack:///./node_modules/twitch/lib/API/Helix/Stream/HelixStreamMarkerWithVideo.js","webpack:///./node_modules/twitch/lib/API/Helix/User/HelixFollow.js","webpack:///./node_modules/twitch/lib/API/Kraken/Channel/ChannelSubscription.js","webpack:///./node_modules/twitch/lib/API/Helix/Subscriptions/HelixSubscription.js","webpack:///./node_modules/twitch/lib/API/Kraken/Chat/ChatEmoteList.js","webpack:///./node_modules/twitch/lib/API/Helix/Stream/HelixStreamMarker.js","webpack:///./node_modules/twitch/lib/Auth/ClientCredentialsAuthProvider.js","webpack:///./node_modules/fetch-ponyfill/build/fetch-browser.js","webpack:///./node_modules/twitch/lib/API/Helix/Clip/HelixClipAPI.js","webpack:///./node_modules/twitch/lib/API/Helix/Video/HelixVideoAPI.js","webpack:///./node_modules/twitch/lib/API/Kraken/Search/SearchAPI.js","webpack:///./node_modules/twitch/lib/API/Helix/Game/HelixGame.js","webpack:///./node_modules/twitch/lib/TwitchClient.js","webpack:///./node_modules/twitch/lib/API/Badges/ChatBadgeVersion.js","webpack:///./node_modules/twitch/lib/API/Kraken/Bits/BitsAPI.js","webpack:///./node_modules/twitch/lib/API/Unsupported/ChannelEvent.js","webpack:///./node_modules/twitch/lib/API/Helix/User/HelixUser.js","webpack:///./node_modules/qs/lib/stringify.js","webpack:///./node_modules/qs/lib/index.js","webpack:///./node_modules/twitch/lib/Toolkit/ArrayTools.js","webpack:///./node_modules/twitch/lib/API/Kraken/Channel/PrivilegedChannel.js","webpack:///./node_modules/twitch/lib/API/Kraken/Chat/ChatAPI.js","webpack:///./node_modules/twitch/lib/Errors/StreamNotLiveError.js","webpack:///./node_modules/twitch/lib/API/Kraken/Channel/ChannelFollow.js","webpack:///./node_modules/twitch/lib/Toolkit/Decorators/Cache.js","webpack:///./node_modules/twitch/lib/API/Helix/Stream/HelixStream.js","webpack:///./node_modules/twitch/lib/API/Helix/Stream/HelixStreamAPI.js","webpack:///./node_modules/twitch/lib/API/Kraken/User/PrivilegedUser.js","webpack:///./node_modules/twitch/lib/Auth/StaticAuthProvider.js","webpack:///./node_modules/twitch/lib/API/Kraken/Bits/CheermoteList.js","webpack:///./node_modules/twitch/lib/Errors/ConfigError.js","webpack:///./node_modules/twitch/lib/Errors/CustomError.js","webpack:///./node_modules/twitch/lib/API/Kraken/Channel/EmoteSetList.js","webpack:///./node_modules/twitch/lib/API/Helix/Video/HelixVideo.js","webpack:///./node_modules/twitch/lib/Toolkit/ObjectTools.js","webpack:///./node_modules/twitch/lib/Errors/HellFreezesOverError.js","webpack:///./node_modules/twitch/lib/API/Badges/ChatBadgeList.js","webpack:///./node_modules/twitch/lib/API/Helix/Subscriptions/HelixSubscriptionAPI.js","webpack:///./node_modules/twitch/lib/API/Kraken/Chat/ChatEmote.js","webpack:///./node_modules/twitch/lib/Errors/NoSubscriptionProgramError.js","webpack:///./node_modules/twitch/lib/API/Helix/WebHooks/HelixWebHooksAPI.js","webpack:///./node_modules/tslib/tslib.es6.js","webpack:///./node_modules/twitch/lib/API/Helix/User/HelixUserAPI.js","webpack:///./node_modules/qs/lib/parse.js","webpack:///./node_modules/twitch/lib/API/Kraken/Channel/ChannelAPI.js","webpack:///./node_modules/twitch/lib/API/Helix/User/HelixPrivilegedUser.js","webpack:///./node_modules/twitch/lib/API/Helix/HelixAPIGroup.js","webpack:///./node_modules/twitch/lib/API/Unsupported/UnsupportedAPI.js","webpack:///./node_modules/twitch/lib/API/Kraken/Chat/ChatRoom.js","webpack:///./node_modules/twitch/lib/API/Kraken/Subscription.js","webpack:///./node_modules/twitch/lib/API/Kraken/Channel/Channel.js","webpack:///./node_modules/twitch/lib/API/Kraken/KrakenAPIGroup.js","webpack:///./node_modules/qs/lib/formats.js","webpack:///./node_modules/twitch/lib/API/Kraken/Channel/ChannelPlaceholder.js","webpack:///./node_modules/twitch/lib/API/AccessToken.js","webpack:///./node_modules/twitch/lib/index.js","webpack:///./node_modules/twitch/lib/API/Badges/BadgesAPI.js","webpack:///./node_modules/twitch/lib/API/Kraken/User/UserSubscription.js","webpack:///./node_modules/twitch/lib/API/Kraken/Stream/Stream.js","webpack:///./node_modules/twitch/lib/Toolkit/Decorators/NonEnumerable.js","webpack:///./node_modules/twitch/lib/API/TokenInfo.js","webpack:///./node_modules/twitch/lib/API/Helix/Bits/HelixBitsAPI.js","webpack:///./node_modules/twitch/lib/API/Helix/Bits/HelixBitsLeaderboardEntry.js","webpack:///./node_modules/qs/lib/utils.js","webpack:///./node_modules/twitch/lib/API/Kraken/User/UserFollow.js","webpack:///./node_modules/twitch/lib/API/Helix/Game/HelixGameAPI.js","webpack:///./node_modules/twitch/lib/API/BaseAPI.js","webpack:///./node_modules/twitch/lib/API/Helix/HelixPaginatedRequestWithTotal.js","webpack:///./node_modules/twitch/lib/API/Kraken/User/UserAPI.js","webpack:///./node_modules/twitch/lib/API/Unsupported/ChattersList.js","webpack:///./node_modules/twitch/lib/Auth/RefreshableAuthProvider.js","webpack:///./node_modules/twitch/lib/API/Kraken/Stream/StreamAPI.js","webpack:///./node_modules/twitch/lib/API/Kraken/User/User.js","webpack:///./node_modules/twitch/lib/API/Helix/HelixPaginatedRequest.js","webpack:///./node_modules/twitch/lib/API/Helix/WebHooks/HelixWebHookSubscription.js","webpack:///./node_modules/twitch/lib/Errors/HTTPStatusCodeError.js","webpack:///./node_modules/twitch/lib/API/Helix/Bits/HelixBitsLeaderboard.js","webpack:///./node_modules/twitch/lib/API/Kraken/User/UserBlock.js","webpack:///./node_modules/twitch/lib/API/Helix/Clip/HelixClip.js"],"names":["Object","defineProperty","exports","value","tslib_1","__webpack_require__","ChatBadgeVersion_1","NonEnumerable_1","ChatBadgeSet","_data","client","this","_client","prototype","get","keys","versions","enumerable","configurable","getVersion","name","default","__decorate","NonEnumerable","extractUserId","user","id","extractUserName","HelixStreamMarker_1","HelixStreamMarkerWithVideo","_super","data","_videoId","_this","call","__extends","URL","getVideo","__awaiter","__generator","_a","helix","videos","getVideoById","HelixFollow","from_id","from_name","getUser","users","getUserById","to_id","to_name","getFollowedUser","Date","followed_at","Subscription_1","User_1","ChannelSubscription","apply","arguments","HelixSubscription","broadcaster_id","broadcaster_name","getBroadcaster","broadcasterId","is_gift","tier","user_id","user_name","userId","ChatEmote_1","Cache_1","ChatEmoteList","map","emote","getAllFromSet","setId","filter","emoticon_set","getById","find","CachedGetter","Cached","Cacheable","HelixStreamMarker","created_at","description","position_seconds","TwitchClient_1","ClientCredentialsAuthProvider","clientId","clientSecret","_clientId","_clientSecret","getAccessToken","scopes","length","Error","_token","isExpired","refresh","_b","label","getAppAccessToken","sent","setAccessToken","token","global","__WEBPACK_AMD_DEFINE_RESULT__","self","fetchPonyfill","options","Promise","XMLHttpRequest","create","fetch","undefined","writable","support","searchParams","iterable","Symbol","blob","Blob","e","formData","arrayBuffer","viewClasses","isDataView","obj","DataView","isPrototypeOf","isArrayBufferView","ArrayBuffer","isView","indexOf","toString","Headers","append","normalizeName","normalizeValue","oldValue","has","hasOwnProperty","set","forEach","callback","thisArg","items","push","iteratorFor","values","entries","iterator","methods","Request","clone","body","_bodyInit","Body","Response","status","statusText","headers","url","error","response","type","redirectStatuses","redirect","RangeError","location","input","init","resolve","reject","request","xhr","onload","parseHeaders","getAllResponseHeaders","responseURL","responseText","onerror","TypeError","ontimeout","open","method","credentials","withCredentials","responseType","setRequestHeader","send","polyfill","String","test","toLowerCase","next","shift","done","Array","isArray","header","getOwnPropertyNames","consumed","bodyUsed","fileReaderReady","reader","result","readBlobAsArrayBuffer","FileReader","promise","readAsArrayBuffer","readBlobAsText","readAsText","readArrayBufferAsText","buf","view","Uint8Array","chars","i","fromCharCode","join","bufferClone","slice","byteLength","buffer","_initBody","_bodyText","_bodyBlob","FormData","_bodyFormData","URLSearchParams","_bodyArrayBuffer","rejected","then","text","decode","json","JSON","parse","normalizeMethod","upcased","toUpperCase","mode","referrer","form","trim","split","bytes","replace","decodeURIComponent","rawHeaders","preProcessedHeaders","line","parts","key","bodyInit","ok","module","BaseAPI_1","HelixClip_1","HelixPaginatedRequest_1","HelixClipAPI","getClipsForBroadcaster","_getClips","__assign","filterType","ids","getClipsForBroadcasterPaginated","_getClipsPaginated","getClipsForGame","gameId","getClipsForGamePaginated","getClipsByIds","getClipById","clips","createClip","params","channelId","createAfterDelay","callAPI","TwitchAPICallType","Helix","scope","query","has_delay","startDate","endDate","limit","_c","started_at","ended_at","first","HelixVideo_1","UserTools_1","HelixVideoAPI","getVideosByIds","getVideosByUser","_getVideos","getVideosByGame","filterValues","language","period","orderBy","sort","Channel_1","Stream_1","SearchAPI","searchChannels","term","page","offset","channels","channelData","searchStreams","hls","streams","streamData","HelixGame","box_art_url","qs","TokenInfo_1","CheermoteList_1","AccessToken_1","StaticAuthProvider_1","RefreshableAuthProvider_1","ClientCredentialsAuthProvider_1","ConfigError_1","HTTPStatusCodeError_1","KrakenAPIGroup_1","HelixAPIGroup_1","BadgesAPI_1","UnsupportedAPI_1","TwitchClient","config","authProvider","restConfig","__rest","_config","preAuth","cheermotes","defaultBackground","CheermoteBackground","dark","defaultState","CheermoteState","animated","defaultScale","CheermoteScale","x1","initialScopes","accessToken","refreshConfig","tokenData","newToken","getTokenInfo","valid","refreshAccessToken","refreshToken","withClientCredentials","requestOptions","_getUrl","stringify","arrayFormat","Accept","version","jsonBody","bind","concat","code","redirectUri","grant_type","client_id","client_secret","redirect_uri","refresh_token","Kraken","typeName","Custom","ChatBadgeVersion","click_action","click_url","getImageUrl","scale","title","BitsAPI","getCheermotes","channel","includeSponsored","channel_id","include_sponsored","actions","ChannelEvent","_id","start_time","end_time","time_zone_id","buildCoverImageUrl","width","height","cover_image_url","NoSubscriptionProgramError_1","HelixBroadcasterType","HelixUserType","HelixUser","login","display_name","broadcaster_type","profile_image_url","offline_image_url","view_count","getFollows","getFollowTo","broadcaster","req","followedUser","getAll","follows","follow","currentUser","kraken","getMe","followChannel","unfollow","unfollowChannel","getSubscriptionTo","subscriptions","getSubscriptionForUser","isSubscribedTo","e_1","trys","utils","formats","arrayPrefixGenerators","brackets","prefix","comma","indices","repeat","pushToArray","arr","valueOrArray","toISO","toISOString","defaults","addQueryPrefix","allowDots","charset","charsetSentinel","delimiter","encode","encoder","encodeValuesOnly","formatter","formatters","serializeDate","date","skipNulls","strictNullHandling","object","generateArrayPrefix","isBuffer","keyValue","objKeys","normalizeStringifyOptions","opts","format","joined","flatten","__spread","PrivilegedChannel","stream_key","email","getEditors","getChannelEditors","startCommercial","startChannelCommercial","resetStreamKey","streamKey","resetChannelStreamKey","ChatEmoteList_1","ChatRoom_1","ChatAPI","getEmotesBySets","emotesets","emoticons","getChatRoomsForChannel","rooms","room","CustomError_1","StreamNotLiveError","ChannelFollow","notifications","createCacheKey","propName","createSingleCacheKey","param","cacheKey","objKey","cls","class_1","cache","Map","getFromCache","_cleanCache","entry","setCache","timeInSeconds","expires","now","removeFromCache","internalCacheKey","endsWith","val","startsWith","delete","cacheFailures","Infinity","target","descriptor","origFn","_i","cachedValue","origFn_1","ClearsCache","cacheName","numberOfArguments","args","HelixStreamType","HelixStream","game_id","getGame","games","getGameById","viewer_count","thumbnail_url","HelixStream_1","HelixStreamMarkerWithVideo_1","StreamNotLiveError_1","HelixStreamAPI","getStreams","community_id","community","game","user_login","userName","getStreamByUserName","getStreamByUserId","getStreamMarkersForUser","_getStreamMarkers","getStreamMarkersForVideo","videoId","createStreamMarker","statusCode","queryType","reduce","video","markers","marker","video_id","PrivilegedUser","email_verified","partnered","twitter_connected","blockUser","userToBlock","unblockUser","userToUnblock","StaticAuthProvider","_accessToken","access_token","_scopes","tokenInfo","some","includes","HellFreezesOverError_1","ObjectTools_1","CheermoteList","indexBy","action","getCheermoteDisplayInfo","bits","cheermoteDefaults","fullOptions","background","state","tiers","correctTier","a","b","min_bits","images","color","getPossibleNames","parseMessage","message","match","names","re","RegExp","exec","name_1","amount","Number","position","index","displayInfo","transformCheerMessage","transformer","currentPosition","__values","foundCheermote","substring","e_1_1","return","substr","ConfigError","CustomError","captureStackTrace","constructor","EmoteSetList","findEmoteId","emoteCode","e_2","_d","emoteSet","emoteSet_1","emoteSet_1_1","e_2_1","HelixVideo","published_at","viewable","duration","part","partialMatch","__read","num","unit","parseInt","h","m","s","mapObject","fn","mapped","assign","objectFromArray","keyFn","key_1","forEachObjectEntry","entriesToObject","HellFreezesOverError","ChatBadgeSet_1","ChatBadgeList","getBadgeSet","_merge","additionalData","__1","HelixSubscription_1","HelixSubscriptionAPI","getSubscriptions","getSubscriptionsForUsers","list","ChatEmote","NoSubscriptionProgramError","HelixPaginatedRequestWithTotal_1","HelixWebHookSubscription_1","HelixWebHooksAPI","sendHubRequest","callbackUrl","topicUrl","validityInSeconds","secret","hub.mode","hub.topic","hub.callback","hub.lease_seconds","hub.secret","subscribeToUserFollowsFrom","_sendUserFollowsHubRequest","subscribeToUserFollowsTo","unsubscribeFromUserFollowsFrom","unsubscribeFromUserFollowsTo","subscribeToStreamChanges","_sendStreamChangeHubRequest","unsubscribeFromStreamChanges","subscribeToUserChanges","withEmail","_sendUserChangeHubRequest","unsubscribeFromUserChanges","direction","r","__webpack_exports__","d","__param","__metadata","__exportStar","__await","__asyncGenerator","__asyncDelegator","__asyncValues","__makeTemplateObject","__importStar","__importDefault","extendStatics","setPrototypeOf","__proto__","p","__","t","n","getOwnPropertySymbols","decorators","desc","c","getOwnPropertyDescriptor","Reflect","decorate","paramIndex","decorator","metadataKey","metadataValue","metadata","_arguments","P","generator","fulfilled","step","f","y","g","_","ops","verb","throw","v","op","pop","o","ar","asyncIterator","q","resume","settle","fulfill","cooked","raw","mod","__esModule","k","UserLookupType","HelixUser_1","HelixPrivilegedUser_1","HelixFollow_1","HelixUserAPI","getUsersByIds","userIds","_getUsers","Id","getUsersByNames","userNames","Login","getUserByName","updateUser","hasUserIdParam","lookupType","userData","allowPrototypes","arrayLimit","decoder","depth","ignoreQueryPrefix","interpretNumericEntities","parameterLimit","parseArrays","plainObjects","str","$0","numberStr","isoSentinel","parseValues","cleanStr","skipIndex","bracketEqualsPos","pos","combine","parseObject","chain","leaf","root","cleanRoot","charAt","isNaN","0","parseKeys","givenKey","child","segment","parent","normalizeParseOptions","isRegExp","tempObj","newObj","merge","compact","ChannelSubscription_1","PrivilegedChannel_1","ChannelFollow_1","ChannelAPI","getMyChannel","getChannel","updateChannel","getChannelFollowers","orderDirection","getChannelSubscriptions","_getChannelSubscriptions","sub","getChannelSubscriptionCount","_total","getChannelSubscriptionByUser","byUser","HelixPrivilegedUser","setDescription","HelixBitsAPI_1","HelixClipAPI_1","HelixGameAPI_1","HelixStreamAPI_1","HelixSubscriptionAPI_1","HelixUserAPI_1","HelixVideoAPI_1","HelixWebHooksAPI_1","HelixAPIGroup","ChattersList_1","ChannelEvent_1","UnsupportedAPI","getChatters","channelName","getEvents","events","event","ChatRoom","owner_id","getOwner","topic","is_previewable","minimum_allowed_role","Subscription","sub_plan","sub_plan_name","ChannelPlaceholder_1","Channel","update","broadcaster_language","followers","logo","mature","partner","profile_banner","profile_banner_background_color","updated_at","video_banner","views","BitsAPI_1","ChannelAPI_1","ChatAPI_1","SearchAPI_1","StreamAPI_1","UserAPI_1","KrakenAPIGroup","percentTwenties","RFC1738","RFC3986","ChannelPlaceholder","getStream","getStreamByChannel","getFollowers","getSubscriptionBy","hasSubscriber","AccessToken","obtainmentDate","_obtainmentDate","expires_in","getTime","HTTPStatusCodeError","RefreshableAuthProvider","TokenInfo","EmoteSetList_1","Stream","StreamType","ChattersList","PrivilegedUser_1","User","UserBlock_1","UserBlock","UserFollow_1","UserFollow","UserSubscription_1","UserSubscription","HelixPaginatedRequest","HelixBitsLeaderboard_1","HelixBitsLeaderboard","HelixBitsLeaderboardEntry_1","HelixBitsLeaderboardEntry","HelixClip","HelixGame_1","ChatBadgeList_1","BadgesAPI","getGlobalBadges","badge_sets","getChannelBadges","includeGlobal","channelBadges","viewers","video_height","average_fps","delay","is_playlist","stream_type","getPreviewUrl","size","preview","authorization","HelixBitsAPI","getLeaderboard","count","contextUserId","rank","score","hexTable","array","compactQueue","queue","item","prop","compacted","j","arrayToObject","source","mergeTarget","targetItem","acc","strWithoutPlus","unescape","defaultEncoder","string","escape","out","charCodeAt","refs","HelixGameAPI","getGamesByIds","_getGames","getGamesByNames","getGameByName","getTopGames","BaseAPI","HelixPaginatedRequestWithTotal","getTotalCount","_currentData","_fetchData","after","total","UserAPI","_userByNameCache","_cleanUserCache","cachedEntries","cachedObject","cachedUsers","toFetch","usersData","usersArr","from","getUserEmotes","emoticon_sets","getSubscriptionData","toChannel","getFollowedChannels","sortby","getFollowedChannel","Boolean","getBlockedUsers","blocks","block","userIdToBlock","userIdToUnblock","ArrayTools_1","chatters","childProvider","_refreshToken","_childProvider","_initialExpiry","expiry","_onRefresh","onRefresh","oldToken","refreshedToken","currentScopes","StreamAPI","stream","languageCode","getAllStreams","All","getAllLiveStreams","Live","getFollowedStreams","bio","getChannelPlaceholder","getEmotes","_callOptions","_mapper","getNext","_processResult","reset","_currentCursor","additionalOptions","pagination","cursor","elem","HelixWebHookSubscription","expires_at","_statusCode","_body","embed_url","creator_id","creator_name","getCreator"],"mappings":"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","file":"js/home~unitetv.3f4c4929.js","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar ChatBadgeVersion_1 = require(\"./ChatBadgeVersion\");\nvar NonEnumerable_1 = require(\"../../Toolkit/Decorators/NonEnumerable\");\n/**\n * A set of badges.\n */\nvar ChatBadgeSet = /** @class */ (function () {\n    /** @private */\n    function ChatBadgeSet(_data, client) {\n        this._data = _data;\n        this._client = client;\n    }\n    Object.defineProperty(ChatBadgeSet.prototype, \"versionNames\", {\n        /**\n         * Names of all versions of the badge set.\n         */\n        get: function () {\n            return Object.keys(this._data.versions);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Gets a specific version of a badge by name.\n     *\n     * @param name The name of the version.\n     */\n    ChatBadgeSet.prototype.getVersion = function (name) {\n        return new ChatBadgeVersion_1.default(this._data.versions[name], this._client);\n    };\n    tslib_1.__decorate([\n        NonEnumerable_1.NonEnumerable\n    ], ChatBadgeSet.prototype, \"_client\", void 0);\n    return ChatBadgeSet;\n}());\nexports.default = ChatBadgeSet;\n//# sourceMappingURL=ChatBadgeSet.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Extracts the user ID from an argument that is possibly an object containing that ID.\n *\n * @param user The user ID or object.\n */\nfunction extractUserId(user) {\n    return typeof user === 'string' ? user : user.id;\n}\nexports.extractUserId = extractUserId;\n/**\n * Extracts the user name from an argument that is possibly an object containing that name.\n *\n * @param user The user name or object.\n */\nfunction extractUserName(user) {\n    return typeof user === 'string' ? user : user.name;\n}\nexports.extractUserName = extractUserName;\n//# sourceMappingURL=UserTools.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar HelixStreamMarker_1 = require(\"./HelixStreamMarker\");\nvar HelixStreamMarkerWithVideo = /** @class */ (function (_super) {\n    tslib_1.__extends(HelixStreamMarkerWithVideo, _super);\n    /** @private */\n    function HelixStreamMarkerWithVideo(data, _videoId, client) {\n        var _this = _super.call(this, data, client) || this;\n        _this._videoId = _videoId;\n        return _this;\n    }\n    Object.defineProperty(HelixStreamMarkerWithVideo.prototype, \"url\", {\n        /**\n         * The URL of the video, which will start playing at the position of the stream marker.\n         */\n        get: function () {\n            return this._data.URL;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(HelixStreamMarkerWithVideo.prototype, \"videoId\", {\n        /**\n         * The ID of the video.\n         */\n        get: function () {\n            return this._videoId;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Retrieves the video data of the video the marker was set in.\n     */\n    HelixStreamMarkerWithVideo.prototype.getVideo = function () {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            return tslib_1.__generator(this, function (_a) {\n                return [2 /*return*/, this._client.helix.videos.getVideoById(this._videoId)];\n            });\n        });\n    };\n    return HelixStreamMarkerWithVideo;\n}(HelixStreamMarker_1.default));\nexports.default = HelixStreamMarkerWithVideo;\n//# sourceMappingURL=HelixStreamMarkerWithVideo.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar NonEnumerable_1 = require(\"../../../Toolkit/Decorators/NonEnumerable\");\n/**\n * A relation of a user following a broadcaster.\n */\nvar HelixFollow = /** @class */ (function () {\n    /** @private */\n    function HelixFollow(/** @private */ _data, client) {\n        this._data = _data;\n        this._client = client;\n    }\n    Object.defineProperty(HelixFollow.prototype, \"userId\", {\n        /**\n         * The user ID of the following user.\n         */\n        get: function () {\n            return this._data.from_id;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(HelixFollow.prototype, \"userDisplayName\", {\n        /**\n         * The display name of the following user.\n         */\n        get: function () {\n            return this._data.from_name;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Retrieves the data of the following user.\n     */\n    HelixFollow.prototype.getUser = function () {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            return tslib_1.__generator(this, function (_a) {\n                return [2 /*return*/, this._client.helix.users.getUserById(this._data.from_id)];\n            });\n        });\n    };\n    Object.defineProperty(HelixFollow.prototype, \"followedUserId\", {\n        /**\n         * The user ID of the followed broadcaster.\n         */\n        get: function () {\n            return this._data.to_id;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(HelixFollow.prototype, \"followedUserDisplayName\", {\n        /**\n         * The display name of the followed user.\n         */\n        get: function () {\n            return this._data.to_name;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Retrieves the data of the followed broadcaster.\n     */\n    HelixFollow.prototype.getFollowedUser = function () {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            return tslib_1.__generator(this, function (_a) {\n                return [2 /*return*/, this._client.helix.users.getUserById(this._data.to_id)];\n            });\n        });\n    };\n    Object.defineProperty(HelixFollow.prototype, \"followDate\", {\n        /**\n         * The date when the user followed the broadcaster.\n         */\n        get: function () {\n            return new Date(this._data.followed_at);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    tslib_1.__decorate([\n        NonEnumerable_1.NonEnumerable\n    ], HelixFollow.prototype, \"_client\", void 0);\n    return HelixFollow;\n}());\nexports.default = HelixFollow;\n//# sourceMappingURL=HelixFollow.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar Subscription_1 = require(\"../Subscription\");\nvar User_1 = require(\"../User/User\");\n/**\n * A relation of a user subscribing to a previously given channel.\n */\nvar ChannelSubscription = /** @class */ (function (_super) {\n    tslib_1.__extends(ChannelSubscription, _super);\n    function ChannelSubscription() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Object.defineProperty(ChannelSubscription.prototype, \"user\", {\n        /**\n         * The user subscribing to the given channel.\n         */\n        get: function () {\n            return new User_1.default(this._data.user, this._client);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return ChannelSubscription;\n}(Subscription_1.default));\nexports.default = ChannelSubscription;\n//# sourceMappingURL=ChannelSubscription.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar NonEnumerable_1 = require(\"../../../Toolkit/Decorators/NonEnumerable\");\n/**\n * A (paid) subscription of a user to a broadcaster.\n */\nvar HelixSubscription = /** @class */ (function () {\n    /** @private */\n    function HelixSubscription(_data, client) {\n        this._data = _data;\n        this._client = client;\n    }\n    Object.defineProperty(HelixSubscription.prototype, \"broadcasterId\", {\n        /**\n         * The user ID of the broadcaster.\n         */\n        get: function () {\n            return this._data.broadcaster_id;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(HelixSubscription.prototype, \"broadcasterDisplayName\", {\n        /**\n         * The display name of the broadcaster.\n         */\n        get: function () {\n            return this._data.broadcaster_name;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Retrieves more data about the broadcaster.\n     */\n    HelixSubscription.prototype.getBroadcaster = function () {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            return tslib_1.__generator(this, function (_a) {\n                return [2 /*return*/, this._client.helix.users.getUserById(this.broadcasterId)];\n            });\n        });\n    };\n    Object.defineProperty(HelixSubscription.prototype, \"isGift\", {\n        /**\n         * Whether the subscription has been gifted by another user.\n         */\n        get: function () {\n            return this._data.is_gift;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(HelixSubscription.prototype, \"tier\", {\n        /**\n         * The tier of the subscription.\n         */\n        get: function () {\n            return this._data.tier;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(HelixSubscription.prototype, \"userId\", {\n        /**\n         * The user ID of the subscribed user.\n         */\n        get: function () {\n            return this._data.user_id;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(HelixSubscription.prototype, \"userDisplayName\", {\n        /**\n         * The display name of the subscribed user.\n         */\n        get: function () {\n            return this._data.user_name;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Retrieves more data about the subscribed user.\n     */\n    HelixSubscription.prototype.getUser = function () {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            return tslib_1.__generator(this, function (_a) {\n                return [2 /*return*/, this._client.helix.users.getUserById(this.userId)];\n            });\n        });\n    };\n    tslib_1.__decorate([\n        NonEnumerable_1.NonEnumerable\n    ], HelixSubscription.prototype, \"_client\", void 0);\n    return HelixSubscription;\n}());\nexports.default = HelixSubscription;\n//# sourceMappingURL=HelixSubscription.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar NonEnumerable_1 = require(\"../../../Toolkit/Decorators/NonEnumerable\");\nvar ChatEmote_1 = require(\"./ChatEmote\");\nvar Cache_1 = require(\"../../../Toolkit/Decorators/Cache\");\n/**\n * A list of emotes.\n */\nvar ChatEmoteList = /** @class */ (function () {\n    /** @private */\n    function ChatEmoteList(_data, client) {\n        this._data = _data;\n        this._client = client;\n    }\n    Object.defineProperty(ChatEmoteList.prototype, \"emotes\", {\n        /**\n         * A list of all emotes in the list.\n         */\n        get: function () {\n            var _this = this;\n            return this._data.map(function (emote) { return new ChatEmote_1.default(emote, _this._client); });\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Gets all emotes from the list that are from a given emote set.\n     *\n     * @param setId\n     */\n    ChatEmoteList.prototype.getAllFromSet = function (setId) {\n        var _this = this;\n        return this._data.filter(function (emote) { return emote.emoticon_set === setId; }).map(function (emote) { return new ChatEmote_1.default(emote, _this._client); });\n    };\n    /**\n     * Finds a single emote by its ID.\n     *\n     * @param id\n     */\n    ChatEmoteList.prototype.getById = function (id) {\n        var data = this._data.find(function (emote) { return emote.id === id; });\n        return data ? new ChatEmote_1.default(data, this._client) : null;\n    };\n    tslib_1.__decorate([\n        NonEnumerable_1.NonEnumerable\n    ], ChatEmoteList.prototype, \"_client\", void 0);\n    tslib_1.__decorate([\n        Cache_1.CachedGetter()\n    ], ChatEmoteList.prototype, \"emotes\", null);\n    tslib_1.__decorate([\n        Cache_1.Cached()\n    ], ChatEmoteList.prototype, \"getAllFromSet\", null);\n    tslib_1.__decorate([\n        Cache_1.Cached()\n    ], ChatEmoteList.prototype, \"getById\", null);\n    ChatEmoteList = tslib_1.__decorate([\n        Cache_1.Cacheable\n    ], ChatEmoteList);\n    return ChatEmoteList;\n}());\nexports.default = ChatEmoteList;\n//# sourceMappingURL=ChatEmoteList.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar NonEnumerable_1 = require(\"../../../Toolkit/Decorators/NonEnumerable\");\nvar HelixStreamMarker = /** @class */ (function () {\n    /** @private */\n    function HelixStreamMarker(/** @private */ _data, client) {\n        this._data = _data;\n        this._client = client;\n    }\n    Object.defineProperty(HelixStreamMarker.prototype, \"id\", {\n        /**\n         * The ID of the marker.\n         */\n        get: function () {\n            return this._data.id;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(HelixStreamMarker.prototype, \"creationDate\", {\n        /**\n         * The date and time when the marker was created.\n         */\n        get: function () {\n            return new Date(this._data.created_at);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(HelixStreamMarker.prototype, \"description\", {\n        /**\n         * The description of the marker.\n         */\n        get: function () {\n            return this._data.description;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(HelixStreamMarker.prototype, \"positionInSeconds\", {\n        /**\n         * The position in the stream when the marker was created, in seconds.\n         */\n        get: function () {\n            return this._data.position_seconds;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    tslib_1.__decorate([\n        NonEnumerable_1.NonEnumerable\n    ], HelixStreamMarker.prototype, \"_client\", void 0);\n    return HelixStreamMarker;\n}());\nexports.default = HelixStreamMarker;\n//# sourceMappingURL=HelixStreamMarker.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar NonEnumerable_1 = require(\"../Toolkit/Decorators/NonEnumerable\");\nvar TwitchClient_1 = require(\"../TwitchClient\");\n/**\n * An auth provider that retrieve tokens using client credentials.\n */\nvar ClientCredentialsAuthProvider = /** @class */ (function () {\n    /**\n     * Creates a new auth provider to receive an application token with using the client ID and secret.\n     *\n     * You don't usually have to create this manually. You should use `TwitchClient.withClientCredentials` instead.\n     *\n     * @param clientId The client ID of your application.\n     * @param clientSecret The client secret of your application.\n     *\n     * You need to obtain one using one of the [Twitch OAuth flows](https://dev.twitch.tv/docs/authentication/getting-tokens-oauth/).\n     */\n    function ClientCredentialsAuthProvider(clientId, clientSecret) {\n        this._clientId = clientId;\n        this._clientSecret = clientSecret;\n    }\n    /**\n     * Retrieves an access token.\n     *\n     * If any scopes are provided, this throws. The client credentials flow does not support scopes.\n     *\n     * @param scopes The requested scopes.\n     */\n    ClientCredentialsAuthProvider.prototype.getAccessToken = function (scopes) {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            return tslib_1.__generator(this, function (_a) {\n                if (scopes && scopes.length > 0) {\n                    throw new Error('The client credentials flow does not support scopes');\n                }\n                if (!this._token || this._token.isExpired) {\n                    return [2 /*return*/, this.refresh()];\n                }\n                return [2 /*return*/, this._token];\n            });\n        });\n    };\n    /**\n     * Retrieves a new app access token.\n     */\n    ClientCredentialsAuthProvider.prototype.refresh = function () {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            var _a;\n            return tslib_1.__generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0:\n                        _a = this;\n                        return [4 /*yield*/, TwitchClient_1.default.getAppAccessToken(this._clientId, this._clientSecret)];\n                    case 1: return [2 /*return*/, _a._token = _b.sent()];\n                }\n            });\n        });\n    };\n    /** @private */\n    ClientCredentialsAuthProvider.prototype.setAccessToken = function (token) {\n        this._token = token;\n    };\n    Object.defineProperty(ClientCredentialsAuthProvider.prototype, \"clientId\", {\n        /**\n         * The client ID.\n         */\n        get: function () {\n            return this._clientId;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ClientCredentialsAuthProvider.prototype, \"currentScopes\", {\n        /**\n         * The scopes that are currently available using the access token.\n         */\n        get: function () {\n            return [];\n        },\n        enumerable: true,\n        configurable: true\n    });\n    tslib_1.__decorate([\n        NonEnumerable_1.NonEnumerable\n    ], ClientCredentialsAuthProvider.prototype, \"_clientId\", void 0);\n    tslib_1.__decorate([\n        NonEnumerable_1.NonEnumerable\n    ], ClientCredentialsAuthProvider.prototype, \"_clientSecret\", void 0);\n    tslib_1.__decorate([\n        NonEnumerable_1.NonEnumerable\n    ], ClientCredentialsAuthProvider.prototype, \"_token\", void 0);\n    return ClientCredentialsAuthProvider;\n}());\nexports.default = ClientCredentialsAuthProvider;\n//# sourceMappingURL=ClientCredentialsAuthProvider.js.map","(function (self) {\n  'use strict';\n\n  function fetchPonyfill(options) {\n    var Promise = options && options.Promise || self.Promise;\n    var XMLHttpRequest = options && options.XMLHttpRequest || self.XMLHttpRequest;\n    var global = self;\n\n    return (function () {\n      var self = Object.create(global, {\n        fetch: {\n          value: undefined,\n          writable: true\n        }\n      });\n\n      (function(self) {\n        'use strict';\n\n        if (self.fetch) {\n          return\n        }\n\n        var support = {\n          searchParams: 'URLSearchParams' in self,\n          iterable: 'Symbol' in self && 'iterator' in Symbol,\n          blob: 'FileReader' in self && 'Blob' in self && (function() {\n            try {\n              new Blob()\n              return true\n            } catch(e) {\n              return false\n            }\n          })(),\n          formData: 'FormData' in self,\n          arrayBuffer: 'ArrayBuffer' in self\n        }\n\n        if (support.arrayBuffer) {\n          var viewClasses = [\n            '[object Int8Array]',\n            '[object Uint8Array]',\n            '[object Uint8ClampedArray]',\n            '[object Int16Array]',\n            '[object Uint16Array]',\n            '[object Int32Array]',\n            '[object Uint32Array]',\n            '[object Float32Array]',\n            '[object Float64Array]'\n          ]\n\n          var isDataView = function(obj) {\n            return obj && DataView.prototype.isPrototypeOf(obj)\n          }\n\n          var isArrayBufferView = ArrayBuffer.isView || function(obj) {\n            return obj && viewClasses.indexOf(Object.prototype.toString.call(obj)) > -1\n          }\n        }\n\n        function normalizeName(name) {\n          if (typeof name !== 'string') {\n            name = String(name)\n          }\n          if (/[^a-z0-9\\-#$%&'*+.\\^_`|~]/i.test(name)) {\n            throw new TypeError('Invalid character in header field name')\n          }\n          return name.toLowerCase()\n        }\n\n        function normalizeValue(value) {\n          if (typeof value !== 'string') {\n            value = String(value)\n          }\n          return value\n        }\n\n        // Build a destructive iterator for the value list\n        function iteratorFor(items) {\n          var iterator = {\n            next: function() {\n              var value = items.shift()\n              return {done: value === undefined, value: value}\n            }\n          }\n\n          if (support.iterable) {\n            iterator[Symbol.iterator] = function() {\n              return iterator\n            }\n          }\n\n          return iterator\n        }\n\n        function Headers(headers) {\n          this.map = {}\n\n          if (headers instanceof Headers) {\n            headers.forEach(function(value, name) {\n              this.append(name, value)\n            }, this)\n          } else if (Array.isArray(headers)) {\n            headers.forEach(function(header) {\n              this.append(header[0], header[1])\n            }, this)\n          } else if (headers) {\n            Object.getOwnPropertyNames(headers).forEach(function(name) {\n              this.append(name, headers[name])\n            }, this)\n          }\n        }\n\n        Headers.prototype.append = function(name, value) {\n          name = normalizeName(name)\n          value = normalizeValue(value)\n          var oldValue = this.map[name]\n          this.map[name] = oldValue ? oldValue+','+value : value\n        }\n\n        Headers.prototype['delete'] = function(name) {\n          delete this.map[normalizeName(name)]\n        }\n\n        Headers.prototype.get = function(name) {\n          name = normalizeName(name)\n          return this.has(name) ? this.map[name] : null\n        }\n\n        Headers.prototype.has = function(name) {\n          return this.map.hasOwnProperty(normalizeName(name))\n        }\n\n        Headers.prototype.set = function(name, value) {\n          this.map[normalizeName(name)] = normalizeValue(value)\n        }\n\n        Headers.prototype.forEach = function(callback, thisArg) {\n          for (var name in this.map) {\n            if (this.map.hasOwnProperty(name)) {\n              callback.call(thisArg, this.map[name], name, this)\n            }\n          }\n        }\n\n        Headers.prototype.keys = function() {\n          var items = []\n          this.forEach(function(value, name) { items.push(name) })\n          return iteratorFor(items)\n        }\n\n        Headers.prototype.values = function() {\n          var items = []\n          this.forEach(function(value) { items.push(value) })\n          return iteratorFor(items)\n        }\n\n        Headers.prototype.entries = function() {\n          var items = []\n          this.forEach(function(value, name) { items.push([name, value]) })\n          return iteratorFor(items)\n        }\n\n        if (support.iterable) {\n          Headers.prototype[Symbol.iterator] = Headers.prototype.entries\n        }\n\n        function consumed(body) {\n          if (body.bodyUsed) {\n            return Promise.reject(new TypeError('Already read'))\n          }\n          body.bodyUsed = true\n        }\n\n        function fileReaderReady(reader) {\n          return new Promise(function(resolve, reject) {\n            reader.onload = function() {\n              resolve(reader.result)\n            }\n            reader.onerror = function() {\n              reject(reader.error)\n            }\n          })\n        }\n\n        function readBlobAsArrayBuffer(blob) {\n          var reader = new FileReader()\n          var promise = fileReaderReady(reader)\n          reader.readAsArrayBuffer(blob)\n          return promise\n        }\n\n        function readBlobAsText(blob) {\n          var reader = new FileReader()\n          var promise = fileReaderReady(reader)\n          reader.readAsText(blob)\n          return promise\n        }\n\n        function readArrayBufferAsText(buf) {\n          var view = new Uint8Array(buf)\n          var chars = new Array(view.length)\n\n          for (var i = 0; i < view.length; i++) {\n            chars[i] = String.fromCharCode(view[i])\n          }\n          return chars.join('')\n        }\n\n        function bufferClone(buf) {\n          if (buf.slice) {\n            return buf.slice(0)\n          } else {\n            var view = new Uint8Array(buf.byteLength)\n            view.set(new Uint8Array(buf))\n            return view.buffer\n          }\n        }\n\n        function Body() {\n          this.bodyUsed = false\n\n          this._initBody = function(body) {\n            this._bodyInit = body\n            if (!body) {\n              this._bodyText = ''\n            } else if (typeof body === 'string') {\n              this._bodyText = body\n            } else if (support.blob && Blob.prototype.isPrototypeOf(body)) {\n              this._bodyBlob = body\n            } else if (support.formData && FormData.prototype.isPrototypeOf(body)) {\n              this._bodyFormData = body\n            } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n              this._bodyText = body.toString()\n            } else if (support.arrayBuffer && support.blob && isDataView(body)) {\n              this._bodyArrayBuffer = bufferClone(body.buffer)\n              // IE 10-11 can't handle a DataView body.\n              this._bodyInit = new Blob([this._bodyArrayBuffer])\n            } else if (support.arrayBuffer && (ArrayBuffer.prototype.isPrototypeOf(body) || isArrayBufferView(body))) {\n              this._bodyArrayBuffer = bufferClone(body)\n            } else {\n              throw new Error('unsupported BodyInit type')\n            }\n\n            if (!this.headers.get('content-type')) {\n              if (typeof body === 'string') {\n                this.headers.set('content-type', 'text/plain;charset=UTF-8')\n              } else if (this._bodyBlob && this._bodyBlob.type) {\n                this.headers.set('content-type', this._bodyBlob.type)\n              } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n                this.headers.set('content-type', 'application/x-www-form-urlencoded;charset=UTF-8')\n              }\n            }\n          }\n\n          if (support.blob) {\n            this.blob = function() {\n              var rejected = consumed(this)\n              if (rejected) {\n                return rejected\n              }\n\n              if (this._bodyBlob) {\n                return Promise.resolve(this._bodyBlob)\n              } else if (this._bodyArrayBuffer) {\n                return Promise.resolve(new Blob([this._bodyArrayBuffer]))\n              } else if (this._bodyFormData) {\n                throw new Error('could not read FormData body as blob')\n              } else {\n                return Promise.resolve(new Blob([this._bodyText]))\n              }\n            }\n\n            this.arrayBuffer = function() {\n              if (this._bodyArrayBuffer) {\n                return consumed(this) || Promise.resolve(this._bodyArrayBuffer)\n              } else {\n                return this.blob().then(readBlobAsArrayBuffer)\n              }\n            }\n          }\n\n          this.text = function() {\n            var rejected = consumed(this)\n            if (rejected) {\n              return rejected\n            }\n\n            if (this._bodyBlob) {\n              return readBlobAsText(this._bodyBlob)\n            } else if (this._bodyArrayBuffer) {\n              return Promise.resolve(readArrayBufferAsText(this._bodyArrayBuffer))\n            } else if (this._bodyFormData) {\n              throw new Error('could not read FormData body as text')\n            } else {\n              return Promise.resolve(this._bodyText)\n            }\n          }\n\n          if (support.formData) {\n            this.formData = function() {\n              return this.text().then(decode)\n            }\n          }\n\n          this.json = function() {\n            return this.text().then(JSON.parse)\n          }\n\n          return this\n        }\n\n        // HTTP methods whose capitalization should be normalized\n        var methods = ['DELETE', 'GET', 'HEAD', 'OPTIONS', 'POST', 'PUT']\n\n        function normalizeMethod(method) {\n          var upcased = method.toUpperCase()\n          return (methods.indexOf(upcased) > -1) ? upcased : method\n        }\n\n        function Request(input, options) {\n          options = options || {}\n          var body = options.body\n\n          if (input instanceof Request) {\n            if (input.bodyUsed) {\n              throw new TypeError('Already read')\n            }\n            this.url = input.url\n            this.credentials = input.credentials\n            if (!options.headers) {\n              this.headers = new Headers(input.headers)\n            }\n            this.method = input.method\n            this.mode = input.mode\n            if (!body && input._bodyInit != null) {\n              body = input._bodyInit\n              input.bodyUsed = true\n            }\n          } else {\n            this.url = String(input)\n          }\n\n          this.credentials = options.credentials || this.credentials || 'omit'\n          if (options.headers || !this.headers) {\n            this.headers = new Headers(options.headers)\n          }\n          this.method = normalizeMethod(options.method || this.method || 'GET')\n          this.mode = options.mode || this.mode || null\n          this.referrer = null\n\n          if ((this.method === 'GET' || this.method === 'HEAD') && body) {\n            throw new TypeError('Body not allowed for GET or HEAD requests')\n          }\n          this._initBody(body)\n        }\n\n        Request.prototype.clone = function() {\n          return new Request(this, { body: this._bodyInit })\n        }\n\n        function decode(body) {\n          var form = new FormData()\n          body.trim().split('&').forEach(function(bytes) {\n            if (bytes) {\n              var split = bytes.split('=')\n              var name = split.shift().replace(/\\+/g, ' ')\n              var value = split.join('=').replace(/\\+/g, ' ')\n              form.append(decodeURIComponent(name), decodeURIComponent(value))\n            }\n          })\n          return form\n        }\n\n        function parseHeaders(rawHeaders) {\n          var headers = new Headers()\n          // Replace instances of \\r\\n and \\n followed by at least one space or horizontal tab with a space\n          // https://tools.ietf.org/html/rfc7230#section-3.2\n          var preProcessedHeaders = rawHeaders.replace(/\\r?\\n[\\t ]+/g, ' ')\n          preProcessedHeaders.split(/\\r?\\n/).forEach(function(line) {\n            var parts = line.split(':')\n            var key = parts.shift().trim()\n            if (key) {\n              var value = parts.join(':').trim()\n              headers.append(key, value)\n            }\n          })\n          return headers\n        }\n\n        Body.call(Request.prototype)\n\n        function Response(bodyInit, options) {\n          if (!options) {\n            options = {}\n          }\n\n          this.type = 'default'\n          this.status = options.status === undefined ? 200 : options.status\n          this.ok = this.status >= 200 && this.status < 300\n          this.statusText = 'statusText' in options ? options.statusText : 'OK'\n          this.headers = new Headers(options.headers)\n          this.url = options.url || ''\n          this._initBody(bodyInit)\n        }\n\n        Body.call(Response.prototype)\n\n        Response.prototype.clone = function() {\n          return new Response(this._bodyInit, {\n            status: this.status,\n            statusText: this.statusText,\n            headers: new Headers(this.headers),\n            url: this.url\n          })\n        }\n\n        Response.error = function() {\n          var response = new Response(null, {status: 0, statusText: ''})\n          response.type = 'error'\n          return response\n        }\n\n        var redirectStatuses = [301, 302, 303, 307, 308]\n\n        Response.redirect = function(url, status) {\n          if (redirectStatuses.indexOf(status) === -1) {\n            throw new RangeError('Invalid status code')\n          }\n\n          return new Response(null, {status: status, headers: {location: url}})\n        }\n\n        self.Headers = Headers\n        self.Request = Request\n        self.Response = Response\n\n        self.fetch = function(input, init) {\n          return new Promise(function(resolve, reject) {\n            var request = new Request(input, init)\n            var xhr = new XMLHttpRequest()\n\n            xhr.onload = function() {\n              var options = {\n                status: xhr.status,\n                statusText: xhr.statusText,\n                headers: parseHeaders(xhr.getAllResponseHeaders() || '')\n              }\n              options.url = 'responseURL' in xhr ? xhr.responseURL : options.headers.get('X-Request-URL')\n              var body = 'response' in xhr ? xhr.response : xhr.responseText\n              resolve(new Response(body, options))\n            }\n\n            xhr.onerror = function() {\n              reject(new TypeError('Network request failed'))\n            }\n\n            xhr.ontimeout = function() {\n              reject(new TypeError('Network request failed'))\n            }\n\n            xhr.open(request.method, request.url, true)\n\n            if (request.credentials === 'include') {\n              xhr.withCredentials = true\n            } else if (request.credentials === 'omit') {\n              xhr.withCredentials = false\n            }\n\n            if ('responseType' in xhr && support.blob) {\n              xhr.responseType = 'blob'\n            }\n\n            request.headers.forEach(function(value, name) {\n              xhr.setRequestHeader(name, value)\n            })\n\n            xhr.send(typeof request._bodyInit === 'undefined' ? null : request._bodyInit)\n          })\n        }\n        self.fetch.polyfill = true\n      })(typeof self !== 'undefined' ? self : this);\n\n\n      return {\n        fetch: self.fetch,\n        Headers: self.Headers,\n        Request: self.Request,\n        Response: self.Response\n      };\n    }());\n  }\n\n  if (typeof define === 'function' && define.amd) {\n    define(function () {\n      return fetchPonyfill;\n    });\n  } else if (typeof exports === 'object') {\n    module.exports = fetchPonyfill;\n  } else {\n    self.fetchPonyfill = fetchPonyfill;\n  }\n}(typeof self !== 'undefined' ? self : typeof global !== 'undefined' ? global : this));\n\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar BaseAPI_1 = require(\"../../BaseAPI\");\nvar TwitchClient_1 = require(\"../../../TwitchClient\");\nvar HelixClip_1 = require(\"./HelixClip\");\nvar HelixPaginatedRequest_1 = require(\"../HelixPaginatedRequest\");\n/**\n * The Helix API methods that deal with clips.\n *\n * Can be accessed using `client.helix.clips` on a {@TwitchClient} instance.\n *\n * ## Example\n * ```ts\n * const client = await TwitchClient.withCredentials(clientId, accessToken);\n * const clipId = await client.helix.clips.createClip({ channelId: '125328655' });\n * ```\n */\nvar HelixClipAPI = /** @class */ (function (_super) {\n    tslib_1.__extends(HelixClipAPI, _super);\n    function HelixClipAPI() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * Retrieves the latest clips for the specified broadcaster.\n     *\n     * @param userId The broadcaster's user ID.\n     * @param filter\n     *\n     * @expandParams\n     */\n    HelixClipAPI.prototype.getClipsForBroadcaster = function (userId, filter) {\n        if (filter === void 0) { filter = {}; }\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            return tslib_1.__generator(this, function (_a) {\n                return [2 /*return*/, this._getClips(tslib_1.__assign({}, filter, { filterType: 'broadcaster_id', ids: userId }))];\n            });\n        });\n    };\n    /**\n     * Creates a paginator for the latest clips for the specified broadcaster.\n     *\n     * @param userId The broadcaster's user ID.\n     * @param filter\n     *\n     * @expandParams\n     */\n    HelixClipAPI.prototype.getClipsForBroadcasterPaginated = function (userId, filter) {\n        if (filter === void 0) { filter = {}; }\n        return this._getClipsPaginated(tslib_1.__assign({}, filter, { filterType: 'broadcaster_id', ids: userId }));\n    };\n    /**\n     * Retrieves the latest clips for the specified game.\n     *\n     * @param gameId The game ID.\n     * @param filter\n     *\n     * @expandParams\n     */\n    HelixClipAPI.prototype.getClipsForGame = function (gameId, filter) {\n        if (filter === void 0) { filter = {}; }\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            return tslib_1.__generator(this, function (_a) {\n                return [2 /*return*/, this._getClips(tslib_1.__assign({}, filter, { filterType: 'game_id', ids: gameId }))];\n            });\n        });\n    };\n    /**\n     * Creates a paginator for the latest clips for the specified game.\n     *\n     * @param gameId The game ID.\n     * @param filter\n     *\n     * @expandParams\n     */\n    HelixClipAPI.prototype.getClipsForGamePaginated = function (gameId, filter) {\n        if (filter === void 0) { filter = {}; }\n        return this._getClipsPaginated(tslib_1.__assign({}, filter, { filterType: 'game_id', ids: gameId }));\n    };\n    /**\n     * Retrieves the clips identified by the given IDs.\n     *\n     * @param ids The clip IDs.\n     */\n    HelixClipAPI.prototype.getClipsByIds = function (ids) {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            return tslib_1.__generator(this, function (_a) {\n                return [2 /*return*/, this._getClips({\n                        filterType: 'id',\n                        ids: ids\n                    })];\n            });\n        });\n    };\n    /**\n     * Retrieves the clip identified by the given ID.\n     *\n     * @param id The clip ID.\n     */\n    HelixClipAPI.prototype.getClipById = function (id) {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            var clips;\n            return tslib_1.__generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this.getClipsByIds([id])];\n                    case 1:\n                        clips = _a.sent();\n                        return [2 /*return*/, clips.length ? clips[0] : null];\n                }\n            });\n        });\n    };\n    /**\n     * Creates a clip of a running stream.\n     *\n     * Returns the ID of the clip.\n     *\n     * @expandParams\n     */\n    HelixClipAPI.prototype.createClip = function (params) {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            var channelId, _a, createAfterDelay, result;\n            return tslib_1.__generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0:\n                        channelId = params.channelId, _a = params.createAfterDelay, createAfterDelay = _a === void 0 ? false : _a;\n                        return [4 /*yield*/, this._client.callAPI({\n                                type: TwitchClient_1.TwitchAPICallType.Helix,\n                                url: 'clips',\n                                method: 'POST',\n                                scope: 'clips:edit',\n                                query: {\n                                    broadcaster_id: channelId,\n                                    has_delay: createAfterDelay.toString()\n                                }\n                            })];\n                    case 1:\n                        result = _b.sent();\n                        return [2 /*return*/, result.data[0].id];\n                }\n            });\n        });\n    };\n    HelixClipAPI.prototype._getClips = function (params) {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            var _a, filterType, ids, startDate, endDate, _b, limit, result;\n            var _this = this;\n            return tslib_1.__generator(this, function (_c) {\n                switch (_c.label) {\n                    case 0:\n                        filterType = params.filterType, ids = params.ids, startDate = params.startDate, endDate = params.endDate, _b = params.limit, limit = _b === void 0 ? 20 : _b;\n                        return [4 /*yield*/, this._client.callAPI({\n                                type: TwitchClient_1.TwitchAPICallType.Helix,\n                                url: 'clips',\n                                query: (_a = {},\n                                    _a[filterType] = ids,\n                                    _a.started_at = startDate,\n                                    _a.ended_at = endDate,\n                                    _a.first = limit.toString(),\n                                    _a)\n                            })];\n                    case 1:\n                        result = _c.sent();\n                        return [2 /*return*/, result.data.map(function (data) { return new HelixClip_1.default(data, _this._client); })];\n                }\n            });\n        });\n    };\n    HelixClipAPI.prototype._getClipsPaginated = function (params) {\n        var _this = this;\n        var _a;\n        var filterType = params.filterType, ids = params.ids, startDate = params.startDate, endDate = params.endDate;\n        return new HelixPaginatedRequest_1.default({\n            url: 'clips',\n            query: (_a = {},\n                _a[filterType] = ids,\n                _a.started_at = startDate,\n                _a.ended_at = endDate,\n                _a)\n        }, this._client, function (data) { return new HelixClip_1.default(data, _this._client); });\n    };\n    return HelixClipAPI;\n}(BaseAPI_1.default));\nexports.default = HelixClipAPI;\n//# sourceMappingURL=HelixClipAPI.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar BaseAPI_1 = require(\"../../BaseAPI\");\nvar TwitchClient_1 = require(\"../../../TwitchClient\");\nvar HelixVideo_1 = require(\"./HelixVideo\");\nvar UserTools_1 = require(\"../../../Toolkit/UserTools\");\nvar HelixPaginatedRequest_1 = require(\"../HelixPaginatedRequest\");\n/**\n * The Helix API methods that deal with videos.\n *\n * Can be accessed using `client.helix.videos` on a {@TwitchClient} instance.\n *\n * ## Example\n * ```ts\n * const client = await TwitchClient.withCredentials(clientId, accessToken);\n * const videos = await client.helix.videos.getVideosByUser('125328655');\n * ```\n */\nvar HelixVideoAPI = /** @class */ (function (_super) {\n    tslib_1.__extends(HelixVideoAPI, _super);\n    function HelixVideoAPI() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * Retrieves the video data for the given list of video IDs.\n     *\n     * @param ids The video IDs you want to look up.\n     */\n    HelixVideoAPI.prototype.getVideosByIds = function (ids) {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            var result;\n            var _this = this;\n            return tslib_1.__generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this._client.callAPI({\n                            type: TwitchClient_1.TwitchAPICallType.Helix,\n                            url: 'videos',\n                            query: {\n                                id: ids\n                            }\n                        })];\n                    case 1:\n                        result = _a.sent();\n                        return [2 /*return*/, result.data.map(function (data) { return new HelixVideo_1.default(data, _this._client); })];\n                }\n            });\n        });\n    };\n    /**\n     * Retrieves the video data for the given video ID.\n     *\n     * @param id The video ID you want to look up.\n     */\n    HelixVideoAPI.prototype.getVideoById = function (id) {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            var videos;\n            return tslib_1.__generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this.getVideosByIds(id)];\n                    case 1:\n                        videos = _a.sent();\n                        return [2 /*return*/, videos.length ? videos[0] : null];\n                }\n            });\n        });\n    };\n    /**\n     * Retrieves the videos of the given user.\n     *\n     * @param user The user you want to retrieve videos from.\n     * @param filter Additional filters for the result set.\n     */\n    HelixVideoAPI.prototype.getVideosByUser = function (user, filter) {\n        if (filter === void 0) { filter = {}; }\n        var userId = UserTools_1.extractUserId(user);\n        return this._getVideos('user_id', userId, filter);\n    };\n    /**\n     * Retrieves the videos of the given game.\n     *\n     * @param gameId The game you want to retrieve videos from.\n     * @param filter Additional filters for the result set.\n     */\n    HelixVideoAPI.prototype.getVideosByGame = function (gameId, filter) {\n        if (filter === void 0) { filter = {}; }\n        return this._getVideos('game_id', gameId, filter);\n    };\n    HelixVideoAPI.prototype._getVideos = function (filterType, filterValues, filter) {\n        var _this = this;\n        var _a;\n        if (filter === void 0) { filter = {}; }\n        var language = filter.language, period = filter.period, orderBy = filter.orderBy, type = filter.type;\n        return new HelixPaginatedRequest_1.default({\n            url: 'videos',\n            query: (_a = {},\n                _a[filterType] = filterValues,\n                _a.language = language,\n                _a.period = period,\n                _a.sort = orderBy,\n                _a.type = type,\n                _a)\n        }, this._client, function (data) { return new HelixVideo_1.default(data, _this._client); });\n    };\n    return HelixVideoAPI;\n}(BaseAPI_1.default));\nexports.default = HelixVideoAPI;\n//# sourceMappingURL=HelixVideoAPI.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar Cache_1 = require(\"../../../Toolkit/Decorators/Cache\");\nvar BaseAPI_1 = require(\"../../BaseAPI\");\nvar Channel_1 = require(\"../Channel/Channel\");\nvar Stream_1 = require(\"../Stream/Stream\");\n/**\n * The API methods that deal with searching.\n *\n * Can be accessed using `client.kraken.search` on a {@TwitchClient} instance.\n *\n * ## Example\n * ```ts\n * const client = await TwitchClient.withCredentials(clientId, accessToken);\n * const channel = await client.kraken.search.searchStreams('Hearthstone');\n * ```\n */\nvar SearchAPI = /** @class */ (function (_super) {\n    tslib_1.__extends(SearchAPI, _super);\n    function SearchAPI() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * Retrieves a list of channels that match the given search term.\n     *\n     * @param term The term you want to search for.\n     * @param page The result page you want to retrieve.\n     * @param limit The number of results you want to retrieve.\n     */\n    SearchAPI.prototype.searchChannels = function (term, page, limit) {\n        if (limit === void 0) { limit = 25; }\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            var query, data;\n            var _this = this;\n            return tslib_1.__generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        query = { query: term, limit: limit.toString() };\n                        if (page) {\n                            query.offset = ((page - 1) * limit).toString();\n                        }\n                        return [4 /*yield*/, this._client.callAPI({ url: 'search/channels', query: query })];\n                    case 1:\n                        data = _a.sent();\n                        return [2 /*return*/, data.channels.map(function (channelData) { return new Channel_1.default(channelData, _this._client); })];\n                }\n            });\n        });\n    };\n    /**\n     * Retrieves a list of streams that match the given search term.\n     *\n     * @param term The term you want to search for.\n     * @param page The result page you want to retrieve.\n     * @param limit The number of results you want to retrieve.\n     * @param hls Whether you want only HLS or only non-HLS (RTMP) streams. If not set, finds both types of streams.\n     */\n    SearchAPI.prototype.searchStreams = function (term, page, limit, hls) {\n        if (limit === void 0) { limit = 25; }\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            var query, data;\n            var _this = this;\n            return tslib_1.__generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        query = { query: term, limit: limit.toString() };\n                        if (page) {\n                            query.offset = ((page - 1) * limit).toString();\n                        }\n                        if (hls !== undefined) {\n                            query.hls = hls.toString();\n                        }\n                        return [4 /*yield*/, this._client.callAPI({ url: 'search/streams', query: query })];\n                    case 1:\n                        data = _a.sent();\n                        return [2 /*return*/, data.streams.map(function (streamData) { return new Stream_1.default(streamData, _this._client); })];\n                }\n            });\n        });\n    };\n    tslib_1.__decorate([\n        Cache_1.Cached(300)\n    ], SearchAPI.prototype, \"searchChannels\", null);\n    tslib_1.__decorate([\n        Cache_1.Cached(300)\n    ], SearchAPI.prototype, \"searchStreams\", null);\n    SearchAPI = tslib_1.__decorate([\n        Cache_1.Cacheable\n    ], SearchAPI);\n    return SearchAPI;\n}(BaseAPI_1.default));\nexports.default = SearchAPI;\n//# sourceMappingURL=SearchAPI.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar NonEnumerable_1 = require(\"../../../Toolkit/Decorators/NonEnumerable\");\n/**\n * A game as displayed on Twitch.\n */\nvar HelixGame = /** @class */ (function () {\n    /** @private */\n    function HelixGame(_data, client) {\n        this._data = _data;\n        this._client = client;\n    }\n    Object.defineProperty(HelixGame.prototype, \"id\", {\n        /**\n         * The ID of the game.\n         */\n        get: function () {\n            return this._data.id;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(HelixGame.prototype, \"name\", {\n        /**\n         * The name of the game.\n         */\n        get: function () {\n            return this._data.name;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(HelixGame.prototype, \"boxArtUrl\", {\n        /**\n         * The URL of the box art of the game.\n         */\n        get: function () {\n            return this._data.box_art_url;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    tslib_1.__decorate([\n        NonEnumerable_1.NonEnumerable\n    ], HelixGame.prototype, \"_client\", void 0);\n    return HelixGame;\n}());\nexports.default = HelixGame;\n//# sourceMappingURL=HelixGame.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar qs = require(\"qs\");\nvar Cache_1 = require(\"./Toolkit/Decorators/Cache\");\nvar TokenInfo_1 = require(\"./API/TokenInfo\");\nvar CheermoteList_1 = require(\"./API/Kraken/Bits/CheermoteList\");\nvar AccessToken_1 = require(\"./API/AccessToken\");\nvar StaticAuthProvider_1 = require(\"./Auth/StaticAuthProvider\");\nvar RefreshableAuthProvider_1 = require(\"./Auth/RefreshableAuthProvider\");\nvar ClientCredentialsAuthProvider_1 = require(\"./Auth/ClientCredentialsAuthProvider\");\nvar ConfigError_1 = require(\"./Errors/ConfigError\");\nvar HTTPStatusCodeError_1 = require(\"./Errors/HTTPStatusCodeError\");\nvar KrakenAPIGroup_1 = require(\"./API/Kraken/KrakenAPIGroup\");\nvar HelixAPIGroup_1 = require(\"./API/Helix/HelixAPIGroup\");\nvar BadgesAPI_1 = require(\"./API/Badges/BadgesAPI\");\nvar UnsupportedAPI_1 = require(\"./API/Unsupported/UnsupportedAPI\");\nvar fetchPonyfill = require(\"fetch-ponyfill\");\nvar _a = fetchPonyfill(), fetch = _a.fetch, Headers = _a.Headers;\n/**\n * The endpoint to call, i.e. /kraken, /helix or a custom (potentially unsupported) endpoint.\n */\nvar TwitchAPICallType;\n(function (TwitchAPICallType) {\n    /**\n     * Call a Kraken API endpoint.\n     */\n    TwitchAPICallType[TwitchAPICallType[\"Kraken\"] = 0] = \"Kraken\";\n    /**\n     * Call a Helix API endpoint.\n     */\n    TwitchAPICallType[TwitchAPICallType[\"Helix\"] = 1] = \"Helix\";\n    /**\n     * Call a custom (potentially unsupported) endpoint.\n     */\n    TwitchAPICallType[TwitchAPICallType[\"Custom\"] = 2] = \"Custom\";\n})(TwitchAPICallType = exports.TwitchAPICallType || (exports.TwitchAPICallType = {}));\n/**\n * The main entry point of this library. Manages API calls and the use of access tokens in these.\n */\nvar TwitchClient = /** @class */ (function () {\n    /**\n     * Creates a new Twitch client instance.\n     *\n     * @param config Configuration for the client instance.\n     */\n    function TwitchClient(config) {\n        var authProvider = config.authProvider, restConfig = tslib_1.__rest(config, [\"authProvider\"]);\n        if (!authProvider) {\n            throw new ConfigError_1.default('No auth provider given');\n        }\n        this._config = tslib_1.__assign({ preAuth: false, cheermotes: {\n                defaultBackground: CheermoteList_1.CheermoteBackground.dark,\n                defaultState: CheermoteList_1.CheermoteState.animated,\n                defaultScale: CheermoteList_1.CheermoteScale.x1\n            }, authProvider: authProvider }, restConfig);\n        if (this._config.preAuth) {\n            // tslint:disable-next-line:no-floating-promises\n            authProvider.getAccessToken(this._config.initialScopes);\n        }\n    }\n    TwitchClient_1 = TwitchClient;\n    /**\n     * Creates a new instance with fixed credentials.\n     *\n     * @param clientId The client ID of your application.\n     * @param accessToken The access token to call the API with.\n     *\n     * You need to obtain one using one of the [Twitch OAuth flows](https://dev.twitch.tv/docs/authentication/getting-tokens-oauth/).\n     * @param scopes The scopes your supplied token has.\n     *\n     * If this argument is given, the scopes need to be correct, or weird things might happen. If it's not (i.e. it's `undefined`), we fetch the correct scopes for you.\n     *\n     * If you can't exactly say which scopes your token has, don't use this parameter/set it to `undefined`.\n     * @param refreshConfig Configuration to automatically refresh expired tokens.\n     * @param config Additional configuration to pass to the constructor.\n     *\n     * Note that if you provide a custom `authProvider`, this method will overwrite it. In this case, you should use the constructor directly.\n     */\n    TwitchClient.withCredentials = function (clientId, accessToken, scopes, refreshConfig, config) {\n        if (config === void 0) { config = {}; }\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            var tokenData, newToken, authProvider;\n            return tslib_1.__generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        if (!(!scopes && accessToken)) return [3 /*break*/, 6];\n                        return [4 /*yield*/, this.getTokenInfo(clientId, accessToken)];\n                    case 1:\n                        tokenData = _a.sent();\n                        if (!!tokenData.valid) return [3 /*break*/, 5];\n                        if (!refreshConfig) return [3 /*break*/, 4];\n                        return [4 /*yield*/, this.refreshAccessToken(clientId, refreshConfig.clientSecret, refreshConfig.refreshToken)];\n                    case 2:\n                        newToken = _a.sent();\n                        accessToken = newToken.accessToken;\n                        return [4 /*yield*/, this.getTokenInfo(clientId, accessToken)];\n                    case 3:\n                        tokenData = _a.sent();\n                        _a.label = 4;\n                    case 4:\n                        if (!tokenData.valid) {\n                            throw new ConfigError_1.default('Supplied an invalid access token to retrieve scopes with');\n                        }\n                        _a.label = 5;\n                    case 5:\n                        scopes = tokenData.scopes;\n                        _a.label = 6;\n                    case 6:\n                        authProvider = refreshConfig\n                            ? new RefreshableAuthProvider_1.default(new StaticAuthProvider_1.default(clientId, accessToken, scopes), refreshConfig)\n                            : new StaticAuthProvider_1.default(clientId, accessToken, scopes);\n                        return [2 /*return*/, new this(tslib_1.__assign({}, config, { authProvider: authProvider }))];\n                }\n            });\n        });\n    };\n    /**\n     * Creates a new instance with client credentials.\n     *\n     * @param clientId The client ID of your application.\n     * @param clientSecret The client secret of your application.\n     * @param config Additional configuration to pass to the constructor.\n     *\n     * Note that if you provide a custom `authProvider`, this method will overwrite it. In this case, you should use the constructor directly.\n     */\n    TwitchClient.withClientCredentials = function (clientId, clientSecret, config) {\n        if (config === void 0) { config = {}; }\n        var authProvider = clientSecret\n            ? new ClientCredentialsAuthProvider_1.default(clientId, clientSecret)\n            : new StaticAuthProvider_1.default(clientId);\n        return new this(tslib_1.__assign({}, config, { authProvider: authProvider }));\n    };\n    /**\n     * Makes a call to the Twitch API using given credetials.\n     *\n     * @param options The configuration of the call.\n     * @param clientId The client ID of your application.\n     * @param accessToken The access token to call the API with.\n     *\n     * You need to obtain one using one of the [Twitch OAuth flows](https://dev.twitch.tv/docs/authentication/getting-tokens-oauth/).\n     */\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    TwitchClient.callAPI = function (options, clientId, accessToken) {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            var url, params, headers, body, requestOptions, response, _a, _b;\n            return tslib_1.__generator(this, function (_c) {\n                switch (_c.label) {\n                    case 0:\n                        url = this._getUrl(options.url, options.type);\n                        params = qs.stringify(options.query, { arrayFormat: 'repeat' });\n                        headers = new Headers({\n                            Accept: \"application/vnd.twitchtv.v\" + (options.version || 5) + \"+json\"\n                        });\n                        if (options.body) {\n                            body = qs.stringify(options.body);\n                            headers.append('Content-Type', 'application/x-www-form-urlencoded');\n                        }\n                        else if (options.jsonBody) {\n                            body = JSON.stringify(options.jsonBody);\n                            headers.append('Content-Type', 'application/json');\n                        }\n                        if (clientId) {\n                            headers.append('Client-ID', clientId);\n                        }\n                        if (accessToken) {\n                            headers.append('Authorization', (options.type === TwitchAPICallType.Helix ? 'Bearer' : 'OAuth') + \" \" + accessToken);\n                        }\n                        requestOptions = {\n                            method: options.method || 'GET',\n                            headers: headers,\n                            body: body\n                        };\n                        return [4 /*yield*/, fetch(params ? url + \"?\" + params : url, requestOptions)];\n                    case 1:\n                        response = _c.sent();\n                        if (!!response.ok) return [3 /*break*/, 3];\n                        _a = HTTPStatusCodeError_1.default.bind;\n                        _b = [void 0, response.status, response.statusText];\n                        return [4 /*yield*/, response.json()];\n                    case 2: throw new (_a.apply(HTTPStatusCodeError_1.default, _b.concat([_c.sent()])))();\n                    case 3:\n                        if (response.status === 201 || response.status === 202) {\n                            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                            return [2 /*return*/, undefined]; // oof\n                        }\n                        return [2 /*return*/, response.json()];\n                }\n            });\n        });\n    };\n    /**\n     * Retrieves an access token with your client credentials and an authorization code.\n     *\n     * @param clientId The client ID of your application.\n     * @param clientSecret The client secret of your application.\n     * @param code The authorization code.\n     * @param redirectUri The redirect URI. This serves no real purpose here, but must still match with the redirect URI you configured in the Twitch Developer dashboard.\n     */\n    TwitchClient.getAccessToken = function (clientId, clientSecret, code, redirectUri) {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            var _a;\n            return tslib_1.__generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0:\n                        _a = AccessToken_1.default.bind;\n                        return [4 /*yield*/, this.callAPI({\n                                url: 'oauth2/token',\n                                method: 'POST',\n                                query: {\n                                    grant_type: 'authorization_code',\n                                    client_id: clientId,\n                                    client_secret: clientSecret,\n                                    code: code,\n                                    redirect_uri: redirectUri\n                                }\n                            })];\n                    case 1: return [2 /*return*/, new (_a.apply(AccessToken_1.default, [void 0, _b.sent()]))()];\n                }\n            });\n        });\n    };\n    /**\n     * Retrieves an app access token with your client credentials.\n     *\n     * @param clientId The client ID of your application.\n     * @param clientSecret The client secret of your application.\n     * @param clientSecret\n     */\n    TwitchClient.getAppAccessToken = function (clientId, clientSecret) {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            var _a;\n            return tslib_1.__generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0:\n                        _a = AccessToken_1.default.bind;\n                        return [4 /*yield*/, this.callAPI({\n                                url: 'oauth2/token',\n                                method: 'POST',\n                                query: {\n                                    grant_type: 'client_credentials',\n                                    client_id: clientId,\n                                    client_secret: clientSecret\n                                }\n                            })];\n                    case 1: return [2 /*return*/, new (_a.apply(AccessToken_1.default, [void 0, _b.sent()]))()];\n                }\n            });\n        });\n    };\n    /**\n     * Refreshes an expired access token with your client credentials and the refresh token that was given by the initial authentication.\n     *\n     * @param clientId The client ID of your application.\n     * @param clientSecret The client secret of your application.\n     * @param refreshToken The refresh token.\n     */\n    TwitchClient.refreshAccessToken = function (clientId, clientSecret, refreshToken) {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            var _a;\n            return tslib_1.__generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0:\n                        _a = AccessToken_1.default.bind;\n                        return [4 /*yield*/, this.callAPI({\n                                url: 'oauth2/token',\n                                method: 'POST',\n                                query: {\n                                    grant_type: 'refresh_token',\n                                    client_id: clientId,\n                                    client_secret: clientSecret,\n                                    refresh_token: refreshToken\n                                }\n                            })];\n                    case 1: return [2 /*return*/, new (_a.apply(AccessToken_1.default, [void 0, _b.sent()]))()];\n                }\n            });\n        });\n    };\n    /**\n     * Retrieves information about an access token.\n     *\n     * @param clientId The client ID of your application.\n     * @param accessToken The access token to get the information of.\n     *\n     * You need to obtain one using one of the [Twitch OAuth flows](https://dev.twitch.tv/docs/authentication/getting-tokens-oauth/).\n     */\n    TwitchClient.getTokenInfo = function (clientId, accessToken) {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            var data;\n            return tslib_1.__generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this.callAPI({ url: '/' }, clientId, accessToken)];\n                    case 1:\n                        data = _a.sent();\n                        return [2 /*return*/, new TokenInfo_1.default(data.token)];\n                }\n            });\n        });\n    };\n    /**\n     * Retrieves information about your access token.\n     */\n    TwitchClient.prototype.getTokenInfo = function () {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            var data;\n            return tslib_1.__generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this.callAPI({ url: '/' })];\n                    case 1:\n                        data = _a.sent();\n                        return [2 /*return*/, new TokenInfo_1.default(data.token)];\n                }\n            });\n        });\n    };\n    /**\n     * Retrieves an access token for the authentication provider.\n     *\n     * @param scopes The scopes to request.\n     */\n    TwitchClient.prototype.getAccessToken = function (scopes) {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            return tslib_1.__generator(this, function (_a) {\n                return [2 /*return*/, this._config.authProvider.getAccessToken(scopes)];\n            });\n        });\n    };\n    /**\n     * Makes a call to the Twitch API using your access token.\n     *\n     * @param options The configuration of the call.\n     */\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    TwitchClient.prototype.callAPI = function (options) {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            var authProvider, accessToken;\n            return tslib_1.__generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        authProvider = this._config.authProvider;\n                        return [4 /*yield*/, authProvider.getAccessToken(options.scope ? [options.scope] : undefined)];\n                    case 1:\n                        accessToken = _a.sent();\n                        if (!accessToken) {\n                            return [2 /*return*/, TwitchClient_1.callAPI(options, authProvider.clientId)];\n                        }\n                        if (!(accessToken.isExpired && authProvider.refresh)) return [3 /*break*/, 3];\n                        return [4 /*yield*/, authProvider.refresh()];\n                    case 2:\n                        accessToken = _a.sent();\n                        _a.label = 3;\n                    case 3: return [2 /*return*/, TwitchClient_1.callAPI(options, authProvider.clientId, accessToken.accessToken)];\n                }\n            });\n        });\n    };\n    Object.defineProperty(TwitchClient.prototype, \"kraken\", {\n        /**\n         * A group of Kraken API methods.\n         */\n        get: function () {\n            return new KrakenAPIGroup_1.default(this);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(TwitchClient.prototype, \"helix\", {\n        /**\n         * A group of Helix API methods.\n         */\n        get: function () {\n            return new HelixAPIGroup_1.default(this);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(TwitchClient.prototype, \"badges\", {\n        /**\n         * The API methods that deal with badges.\n         */\n        get: function () {\n            return new BadgesAPI_1.default(this);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(TwitchClient.prototype, \"unsupported\", {\n        /**\n         * Various API methods that are not officially supported by Twitch.\n         */\n        get: function () {\n            return new UnsupportedAPI_1.default(this);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    TwitchClient._getUrl = function (url, type) {\n        type = type === undefined ? TwitchAPICallType.Kraken : type;\n        switch (type) {\n            case TwitchAPICallType.Kraken:\n            case TwitchAPICallType.Helix:\n                var typeName = type === TwitchAPICallType.Kraken ? 'kraken' : 'helix';\n                return \"https://api.twitch.tv/\" + typeName + \"/\" + url.replace(/^\\//, '');\n            case TwitchAPICallType.Custom:\n                return url;\n            default:\n                return url; // wat\n        }\n    };\n    var TwitchClient_1;\n    tslib_1.__decorate([\n        Cache_1.CachedGetter()\n    ], TwitchClient.prototype, \"kraken\", null);\n    tslib_1.__decorate([\n        Cache_1.CachedGetter()\n    ], TwitchClient.prototype, \"helix\", null);\n    tslib_1.__decorate([\n        Cache_1.CachedGetter()\n    ], TwitchClient.prototype, \"badges\", null);\n    tslib_1.__decorate([\n        Cache_1.CachedGetter()\n    ], TwitchClient.prototype, \"unsupported\", null);\n    TwitchClient = TwitchClient_1 = tslib_1.__decorate([\n        Cache_1.Cacheable\n    ], TwitchClient);\n    return TwitchClient;\n}());\nexports.default = TwitchClient;\n//# sourceMappingURL=TwitchClient.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar NonEnumerable_1 = require(\"../../Toolkit/Decorators/NonEnumerable\");\n/**\n * A version of a badge.\n */\nvar ChatBadgeVersion = /** @class */ (function () {\n    /** @private */\n    function ChatBadgeVersion(_data, client) {\n        this._data = _data;\n        this._client = client;\n    }\n    Object.defineProperty(ChatBadgeVersion.prototype, \"clickAction\", {\n        /**\n         * The action to execute when the badge is clicked.\n         */\n        get: function () {\n            return this._data.click_action;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ChatBadgeVersion.prototype, \"clickUrl\", {\n        /**\n         * The URL to visit when the badge is clicked.\n         *\n         * Only applies if clickAction === 'visit_url'.\n         */\n        get: function () {\n            return this._data.click_url;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ChatBadgeVersion.prototype, \"description\", {\n        /**\n         * The description of the badge.\n         */\n        get: function () {\n            return this._data.description;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Gets an image URL for the given scale.\n     *\n     * @param scale The scale of the badge image.\n     */\n    ChatBadgeVersion.prototype.getImageUrl = function (scale) {\n        return this._data[\"image_url_\" + scale + \"x\"];\n    };\n    Object.defineProperty(ChatBadgeVersion.prototype, \"title\", {\n        /**\n         * The title of the badge.\n         */\n        get: function () {\n            return this._data.title;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    tslib_1.__decorate([\n        NonEnumerable_1.NonEnumerable\n    ], ChatBadgeVersion.prototype, \"_client\", void 0);\n    return ChatBadgeVersion;\n}());\nexports.default = ChatBadgeVersion;\n//# sourceMappingURL=ChatBadgeVersion.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar UserTools_1 = require(\"../../../Toolkit/UserTools\");\nvar Cache_1 = require(\"../../../Toolkit/Decorators/Cache\");\nvar CheermoteList_1 = require(\"./CheermoteList\");\nvar BaseAPI_1 = require(\"../../BaseAPI\");\n/**\n * The API methods that deal with Bits/Cheermotes.\n *\n * Can be accessed using `client.kraken.bits` on a {@TwitchClient} instance.\n *\n * ## Example\n * ```ts\n * const client = await TwitchClient.withCredentials(clientId, accessToken);\n * const cheermotes = await client.kraken.bits.getCheermotes();\n * ```\n */\nvar BitsAPI = /** @class */ (function (_super) {\n    tslib_1.__extends(BitsAPI, _super);\n    function BitsAPI() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * Retrieves global and channel cheermotes.\n     *\n     * @param channel The channel you want to retrieve the available cheermotes for.\n     * If not given, this method retrieves a list of globally available cheermotes.\n     * @param includeSponsored Whether to include sponsored cheermotes in the list.\n     */\n    BitsAPI.prototype.getCheermotes = function (channel, includeSponsored) {\n        if (includeSponsored === void 0) { includeSponsored = true; }\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            var query, data;\n            return tslib_1.__generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        query = {};\n                        if (channel) {\n                            query.channel_id = UserTools_1.extractUserId(channel);\n                        }\n                        if (includeSponsored) {\n                            query.include_sponsored = 'true';\n                        }\n                        return [4 /*yield*/, this._client.callAPI({ url: 'bits/actions', query: query })];\n                    case 1:\n                        data = _a.sent();\n                        return [2 /*return*/, new CheermoteList_1.default(data.actions, this._client)];\n                }\n            });\n        });\n    };\n    tslib_1.__decorate([\n        Cache_1.Cached(3600)\n    ], BitsAPI.prototype, \"getCheermotes\", null);\n    BitsAPI = tslib_1.__decorate([\n        Cache_1.Cacheable\n    ], BitsAPI);\n    return BitsAPI;\n}(BaseAPI_1.default));\nexports.default = BitsAPI;\n//# sourceMappingURL=BitsAPI.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar Channel_1 = require(\"../Kraken/Channel/Channel\");\nvar NonEnumerable_1 = require(\"../../Toolkit/Decorators/NonEnumerable\");\n/**\n * An event held on a Twitch channel.\n */\nvar ChannelEvent = /** @class */ (function () {\n    /** @private */\n    function ChannelEvent(_data, client) {\n        this._data = _data;\n        this._client = client;\n    }\n    Object.defineProperty(ChannelEvent.prototype, \"id\", {\n        /**\n         * The ID of the event.\n         */\n        get: function () {\n            return this._data._id;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ChannelEvent.prototype, \"startDate\", {\n        /**\n         * The time when the event starts.\n         */\n        get: function () {\n            return new Date(this._data.start_time);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ChannelEvent.prototype, \"endDate\", {\n        /**\n         * The time when the event ends.\n         */\n        get: function () {\n            return new Date(this._data.end_time);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ChannelEvent.prototype, \"timeZoneId\", {\n        /**\n         * The ID of the timezone that the start and end times of the event are local to.\n         */\n        get: function () {\n            return this._data.time_zone_id;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ChannelEvent.prototype, \"title\", {\n        /**\n         * The title of the event.\n         */\n        get: function () {\n            return this._data.title;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ChannelEvent.prototype, \"description\", {\n        /**\n         * The description of the event.\n         */\n        get: function () {\n            return this._data.description;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ChannelEvent.prototype, \"language\", {\n        /**\n         * The language of the event.\n         */\n        get: function () {\n            return this._data.language;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ChannelEvent.prototype, \"channel\", {\n        /**\n         * The channel where the event is held.\n         */\n        get: function () {\n            return new Channel_1.default(this._data.channel, this._client);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Generates a URL to the cover image of the event with the given dimensions.\n     *\n     * @param width The width of the image.\n     * @param height The height of the image.\n     */\n    ChannelEvent.prototype.buildCoverImageUrl = function (width, height) {\n        return this._data.cover_image_url\n            .replace('{width}', width.toString())\n            .replace('{height}', height.toString());\n    };\n    tslib_1.__decorate([\n        NonEnumerable_1.NonEnumerable\n    ], ChannelEvent.prototype, \"_client\", void 0);\n    return ChannelEvent;\n}());\nexports.default = ChannelEvent;\n//# sourceMappingURL=ChannelEvent.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar NonEnumerable_1 = require(\"../../../Toolkit/Decorators/NonEnumerable\");\nvar NoSubscriptionProgramError_1 = require(\"../../../Errors/NoSubscriptionProgramError\");\n/**\n * The type of a broadcaster.\n */\nvar HelixBroadcasterType;\n(function (HelixBroadcasterType) {\n    /**\n     * A Twitch Partner.\n     */\n    HelixBroadcasterType[\"Partner\"] = \"partner\";\n    /**\n     * A Twitch Affiliate.\n     */\n    HelixBroadcasterType[\"Affiliate\"] = \"affiliate\";\n    /**\n     * A user that's neither a partner nor an affiliate.\n     */\n    HelixBroadcasterType[\"None\"] = \"\";\n})(HelixBroadcasterType = exports.HelixBroadcasterType || (exports.HelixBroadcasterType = {}));\n/**\n * The type of a user.\n */\nvar HelixUserType;\n(function (HelixUserType) {\n    /**\n     * A Twitch staff member.\n     */\n    HelixUserType[\"Staff\"] = \"staff\";\n    /**\n     * A Twitch administrator.\n     */\n    HelixUserType[\"Admin\"] = \"admin\";\n    /**\n     * A global moderator.\n     */\n    HelixUserType[\"GlobalMod\"] = \"global_mod\";\n    /**\n     * A user with no special permissions across Twitch.\n     */\n    HelixUserType[\"None\"] = \"\";\n})(HelixUserType = exports.HelixUserType || (exports.HelixUserType = {}));\n/**\n * A Twitch user.\n */\nvar HelixUser = /** @class */ (function () {\n    /** @private */\n    function HelixUser(/** @private */ _data, client) {\n        this._data = _data;\n        this._client = client;\n    }\n    Object.defineProperty(HelixUser.prototype, \"cacheKey\", {\n        /** @private */\n        get: function () {\n            return this._data.id;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(HelixUser.prototype, \"id\", {\n        /**\n         * The ID of the user.\n         */\n        get: function () {\n            return this._data.id;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(HelixUser.prototype, \"name\", {\n        /**\n         * The user name of the user.\n         */\n        get: function () {\n            return this._data.login;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(HelixUser.prototype, \"displayName\", {\n        /**\n         * The display name of the user.\n         */\n        get: function () {\n            return this._data.display_name;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(HelixUser.prototype, \"description\", {\n        /**\n         * The description of the user.\n         */\n        get: function () {\n            return this._data.description;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(HelixUser.prototype, \"type\", {\n        /**\n         * The type of the user.\n         */\n        get: function () {\n            return this._data.type;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(HelixUser.prototype, \"broadcasterType\", {\n        /**\n         * The type of the user.\n         */\n        get: function () {\n            return this._data.broadcaster_type;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(HelixUser.prototype, \"profilePictureUrl\", {\n        /**\n         * The URL to the profile picture of the user.\n         */\n        get: function () {\n            return this._data.profile_image_url;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(HelixUser.prototype, \"offlinePlaceholderUrl\", {\n        /**\n         * The URL to the offline video placeholder of the user.\n         */\n        get: function () {\n            return this._data.offline_image_url;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(HelixUser.prototype, \"views\", {\n        /**\n         * The total number of views of the user's channel.\n         */\n        get: function () {\n            return this._data.view_count;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Retrieves a list of broadcasters the user follows.\n     */\n    HelixUser.prototype.getFollows = function () {\n        return this._client.helix.users.getFollows({ user: this });\n    };\n    /**\n     * Retrieves the follow data of the user to the given broadcaster.\n     *\n     * @param broadcaster The broadcaster to check the follow to.\n     */\n    HelixUser.prototype.getFollowTo = function (broadcaster) {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            var params, req, result;\n            return tslib_1.__generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        params = {\n                            user: this.id,\n                            followedUser: broadcaster\n                        };\n                        req = this._client.helix.users.getFollows(params);\n                        return [4 /*yield*/, req.getAll()];\n                    case 1:\n                        result = _a.sent();\n                        return [2 /*return*/, result.length ? result[0] : null];\n                }\n            });\n        });\n    };\n    /**\n     * Checks whether the user is following the given broadcaster.\n     *\n     * @param broadcaster The broadcaster to check the user's follow to.\n     */\n    HelixUser.prototype.follows = function (broadcaster) {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            return tslib_1.__generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this.getFollowTo(broadcaster)];\n                    case 1: return [2 /*return*/, (_a.sent()) !== null];\n                }\n            });\n        });\n    };\n    /**\n     * Follows the broadcaster.\n     */\n    HelixUser.prototype.follow = function () {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            var currentUser;\n            return tslib_1.__generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this._client.kraken.users.getMe()];\n                    case 1:\n                        currentUser = _a.sent();\n                        return [2 /*return*/, currentUser.followChannel(this)];\n                }\n            });\n        });\n    };\n    /**\n     * Unfollows the broadcaster.\n     */\n    HelixUser.prototype.unfollow = function () {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            var currentUser;\n            return tslib_1.__generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this._client.kraken.users.getMe()];\n                    case 1:\n                        currentUser = _a.sent();\n                        return [2 /*return*/, currentUser.unfollowChannel(this)];\n                }\n            });\n        });\n    };\n    /**\n     * Retrieves the subscription data for the user to the given broadcaster, or `null` if the user is not subscribed.\n     *\n     * @param broadcaster The broadcaster you want to get the subscription data for.\n     */\n    HelixUser.prototype.getSubscriptionTo = function (broadcaster) {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            return tslib_1.__generator(this, function (_a) {\n                return [2 /*return*/, this._client.helix.subscriptions.getSubscriptionForUser(broadcaster, this)];\n            });\n        });\n    };\n    /**\n     * Checks whether the user is subscribed to the given broadcaster.\n     *\n     * @param broadcaster The broadcaster you want to check the subscription for.\n     */\n    HelixUser.prototype.isSubscribedTo = function (broadcaster) {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            var e_1;\n            return tslib_1.__generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        _a.trys.push([0, 2, , 3]);\n                        return [4 /*yield*/, this.getSubscriptionTo(broadcaster)];\n                    case 1: return [2 /*return*/, (_a.sent()) !== null];\n                    case 2:\n                        e_1 = _a.sent();\n                        if (e_1 instanceof NoSubscriptionProgramError_1.default) {\n                            return [2 /*return*/, false];\n                        }\n                        throw e_1;\n                    case 3: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    tslib_1.__decorate([\n        NonEnumerable_1.NonEnumerable\n    ], HelixUser.prototype, \"_client\", void 0);\n    return HelixUser;\n}());\nexports.default = HelixUser;\n//# sourceMappingURL=HelixUser.js.map","'use strict';\n\nvar utils = require('./utils');\nvar formats = require('./formats');\nvar has = Object.prototype.hasOwnProperty;\n\nvar arrayPrefixGenerators = {\n    brackets: function brackets(prefix) { // eslint-disable-line func-name-matching\n        return prefix + '[]';\n    },\n    comma: 'comma',\n    indices: function indices(prefix, key) { // eslint-disable-line func-name-matching\n        return prefix + '[' + key + ']';\n    },\n    repeat: function repeat(prefix) { // eslint-disable-line func-name-matching\n        return prefix;\n    }\n};\n\nvar isArray = Array.isArray;\nvar push = Array.prototype.push;\nvar pushToArray = function (arr, valueOrArray) {\n    push.apply(arr, isArray(valueOrArray) ? valueOrArray : [valueOrArray]);\n};\n\nvar toISO = Date.prototype.toISOString;\n\nvar defaults = {\n    addQueryPrefix: false,\n    allowDots: false,\n    charset: 'utf-8',\n    charsetSentinel: false,\n    delimiter: '&',\n    encode: true,\n    encoder: utils.encode,\n    encodeValuesOnly: false,\n    formatter: formats.formatters[formats['default']],\n    // deprecated\n    indices: false,\n    serializeDate: function serializeDate(date) { // eslint-disable-line func-name-matching\n        return toISO.call(date);\n    },\n    skipNulls: false,\n    strictNullHandling: false\n};\n\nvar stringify = function stringify( // eslint-disable-line func-name-matching\n    object,\n    prefix,\n    generateArrayPrefix,\n    strictNullHandling,\n    skipNulls,\n    encoder,\n    filter,\n    sort,\n    allowDots,\n    serializeDate,\n    formatter,\n    encodeValuesOnly,\n    charset\n) {\n    var obj = object;\n    if (typeof filter === 'function') {\n        obj = filter(prefix, obj);\n    } else if (obj instanceof Date) {\n        obj = serializeDate(obj);\n    } else if (generateArrayPrefix === 'comma' && isArray(obj)) {\n        obj = obj.join(',');\n    }\n\n    if (obj === null) {\n        if (strictNullHandling) {\n            return encoder && !encodeValuesOnly ? encoder(prefix, defaults.encoder, charset) : prefix;\n        }\n\n        obj = '';\n    }\n\n    if (typeof obj === 'string' || typeof obj === 'number' || typeof obj === 'boolean' || utils.isBuffer(obj)) {\n        if (encoder) {\n            var keyValue = encodeValuesOnly ? prefix : encoder(prefix, defaults.encoder, charset);\n            return [formatter(keyValue) + '=' + formatter(encoder(obj, defaults.encoder, charset))];\n        }\n        return [formatter(prefix) + '=' + formatter(String(obj))];\n    }\n\n    var values = [];\n\n    if (typeof obj === 'undefined') {\n        return values;\n    }\n\n    var objKeys;\n    if (isArray(filter)) {\n        objKeys = filter;\n    } else {\n        var keys = Object.keys(obj);\n        objKeys = sort ? keys.sort(sort) : keys;\n    }\n\n    for (var i = 0; i < objKeys.length; ++i) {\n        var key = objKeys[i];\n\n        if (skipNulls && obj[key] === null) {\n            continue;\n        }\n\n        if (isArray(obj)) {\n            pushToArray(values, stringify(\n                obj[key],\n                typeof generateArrayPrefix === 'function' ? generateArrayPrefix(prefix, key) : prefix,\n                generateArrayPrefix,\n                strictNullHandling,\n                skipNulls,\n                encoder,\n                filter,\n                sort,\n                allowDots,\n                serializeDate,\n                formatter,\n                encodeValuesOnly,\n                charset\n            ));\n        } else {\n            pushToArray(values, stringify(\n                obj[key],\n                prefix + (allowDots ? '.' + key : '[' + key + ']'),\n                generateArrayPrefix,\n                strictNullHandling,\n                skipNulls,\n                encoder,\n                filter,\n                sort,\n                allowDots,\n                serializeDate,\n                formatter,\n                encodeValuesOnly,\n                charset\n            ));\n        }\n    }\n\n    return values;\n};\n\nvar normalizeStringifyOptions = function normalizeStringifyOptions(opts) {\n    if (!opts) {\n        return defaults;\n    }\n\n    if (opts.encoder !== null && opts.encoder !== undefined && typeof opts.encoder !== 'function') {\n        throw new TypeError('Encoder has to be a function.');\n    }\n\n    var charset = opts.charset || defaults.charset;\n    if (typeof opts.charset !== 'undefined' && opts.charset !== 'utf-8' && opts.charset !== 'iso-8859-1') {\n        throw new TypeError('The charset option must be either utf-8, iso-8859-1, or undefined');\n    }\n\n    var format = formats['default'];\n    if (typeof opts.format !== 'undefined') {\n        if (!has.call(formats.formatters, opts.format)) {\n            throw new TypeError('Unknown format option provided.');\n        }\n        format = opts.format;\n    }\n    var formatter = formats.formatters[format];\n\n    var filter = defaults.filter;\n    if (typeof opts.filter === 'function' || isArray(opts.filter)) {\n        filter = opts.filter;\n    }\n\n    return {\n        addQueryPrefix: typeof opts.addQueryPrefix === 'boolean' ? opts.addQueryPrefix : defaults.addQueryPrefix,\n        allowDots: typeof opts.allowDots === 'undefined' ? defaults.allowDots : !!opts.allowDots,\n        charset: charset,\n        charsetSentinel: typeof opts.charsetSentinel === 'boolean' ? opts.charsetSentinel : defaults.charsetSentinel,\n        delimiter: typeof opts.delimiter === 'undefined' ? defaults.delimiter : opts.delimiter,\n        encode: typeof opts.encode === 'boolean' ? opts.encode : defaults.encode,\n        encoder: typeof opts.encoder === 'function' ? opts.encoder : defaults.encoder,\n        encodeValuesOnly: typeof opts.encodeValuesOnly === 'boolean' ? opts.encodeValuesOnly : defaults.encodeValuesOnly,\n        filter: filter,\n        formatter: formatter,\n        serializeDate: typeof opts.serializeDate === 'function' ? opts.serializeDate : defaults.serializeDate,\n        skipNulls: typeof opts.skipNulls === 'boolean' ? opts.skipNulls : defaults.skipNulls,\n        sort: typeof opts.sort === 'function' ? opts.sort : null,\n        strictNullHandling: typeof opts.strictNullHandling === 'boolean' ? opts.strictNullHandling : defaults.strictNullHandling\n    };\n};\n\nmodule.exports = function (object, opts) {\n    var obj = object;\n    var options = normalizeStringifyOptions(opts);\n\n    var objKeys;\n    var filter;\n\n    if (typeof options.filter === 'function') {\n        filter = options.filter;\n        obj = filter('', obj);\n    } else if (isArray(options.filter)) {\n        filter = options.filter;\n        objKeys = filter;\n    }\n\n    var keys = [];\n\n    if (typeof obj !== 'object' || obj === null) {\n        return '';\n    }\n\n    var arrayFormat;\n    if (opts && opts.arrayFormat in arrayPrefixGenerators) {\n        arrayFormat = opts.arrayFormat;\n    } else if (opts && 'indices' in opts) {\n        arrayFormat = opts.indices ? 'indices' : 'repeat';\n    } else {\n        arrayFormat = 'indices';\n    }\n\n    var generateArrayPrefix = arrayPrefixGenerators[arrayFormat];\n\n    if (!objKeys) {\n        objKeys = Object.keys(obj);\n    }\n\n    if (options.sort) {\n        objKeys.sort(options.sort);\n    }\n\n    for (var i = 0; i < objKeys.length; ++i) {\n        var key = objKeys[i];\n\n        if (options.skipNulls && obj[key] === null) {\n            continue;\n        }\n        pushToArray(keys, stringify(\n            obj[key],\n            key,\n            generateArrayPrefix,\n            options.strictNullHandling,\n            options.skipNulls,\n            options.encode ? options.encoder : null,\n            options.filter,\n            options.sort,\n            options.allowDots,\n            options.serializeDate,\n            options.formatter,\n            options.encodeValuesOnly,\n            options.charset\n        ));\n    }\n\n    var joined = keys.join(options.delimiter);\n    var prefix = options.addQueryPrefix === true ? '?' : '';\n\n    if (options.charsetSentinel) {\n        if (options.charset === 'iso-8859-1') {\n            // encodeURIComponent('&#10003;'), the \"numeric entity\" representation of a checkmark\n            prefix += 'utf8=%26%2310003%3B&';\n        } else {\n            // encodeURIComponent('✓')\n            prefix += 'utf8=%E2%9C%93&';\n        }\n    }\n\n    return joined.length > 0 ? prefix + joined : '';\n};\n","'use strict';\n\nvar stringify = require('./stringify');\nvar parse = require('./parse');\nvar formats = require('./formats');\n\nmodule.exports = {\n    formats: formats,\n    parse: parse,\n    stringify: stringify\n};\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\n/** @private */\nfunction flatten(arr) {\n    var _a;\n    return (_a = []).concat.apply(_a, tslib_1.__spread(arr));\n}\nexports.flatten = flatten;\n//# sourceMappingURL=ArrayTools.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar Channel_1 = require(\"./Channel\");\n/**\n * A channel you have extended privileges for, i.e. the channel of the currently authenticated user.\n */\nvar PrivilegedChannel = /** @class */ (function (_super) {\n    tslib_1.__extends(PrivilegedChannel, _super);\n    function PrivilegedChannel() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Object.defineProperty(PrivilegedChannel.prototype, \"streamKey\", {\n        /**\n         * The channel's stream key.\n         */\n        get: function () {\n            return this._data.stream_key;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PrivilegedChannel.prototype, \"email\", {\n        /**\n         * The channel's email address.\n         */\n        get: function () {\n            return this._data.email;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Retrieves the list of editors of the channel.\n     */\n    PrivilegedChannel.prototype.getEditors = function () {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            return tslib_1.__generator(this, function (_a) {\n                return [2 /*return*/, this._client.kraken.channels.getChannelEditors(this)];\n            });\n        });\n    };\n    /**\n     * Starts a commercial in the channel.\n     *\n     * @param length The length of the commercial.\n     */\n    PrivilegedChannel.prototype.startCommercial = function (length) {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            return tslib_1.__generator(this, function (_a) {\n                return [2 /*return*/, this._client.kraken.channels.startChannelCommercial(this, length)];\n            });\n        });\n    };\n    /**\n     * Resets the given channel's stream key.\n     */\n    PrivilegedChannel.prototype.resetStreamKey = function () {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            var channelData, streamKey;\n            return tslib_1.__generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this._client.kraken.channels.resetChannelStreamKey(this)];\n                    case 1:\n                        channelData = _a.sent();\n                        streamKey = channelData.stream_key;\n                        this._data.stream_key = streamKey;\n                        return [2 /*return*/, streamKey];\n                }\n            });\n        });\n    };\n    return PrivilegedChannel;\n}(Channel_1.default));\nexports.default = PrivilegedChannel;\n//# sourceMappingURL=PrivilegedChannel.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar BaseAPI_1 = require(\"../../BaseAPI\");\nvar Cache_1 = require(\"../../../Toolkit/Decorators/Cache\");\nvar UserTools_1 = require(\"../../../Toolkit/UserTools\");\nvar ChatEmoteList_1 = require(\"./ChatEmoteList\");\nvar ChatRoom_1 = require(\"./ChatRoom\");\n/**\n * The API methods that deal with chat and chatrooms.\n *\n * Can be accessed using `client.kraken.chat` on a {@TwitchClient} instance.\n *\n * ## Example\n * ```ts\n * const client = await TwitchClient.withCredentials(clientId, accessToken);\n * const channel = await client.kraken.chat.getBadges('125328655');\n * ```\n */\nvar ChatAPI = /** @class */ (function (_super) {\n    tslib_1.__extends(ChatAPI, _super);\n    function ChatAPI() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * Retrieves a list of emotes for a given list of enote set IDs.\n     *\n     * @param emotesets The list of emote set IDs, either as array of strings or as a comma separated string.\n     */\n    ChatAPI.prototype.getEmotesBySets = function (emotesets) {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            var data;\n            return tslib_1.__generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        if (typeof emotesets !== 'string') {\n                            emotesets = emotesets.join(',');\n                        }\n                        return [4 /*yield*/, this._client.callAPI({\n                                url: 'chat/emoticon_images',\n                                query: {\n                                    emotesets: emotesets\n                                }\n                            })];\n                    case 1:\n                        data = _a.sent();\n                        return [2 /*return*/, new ChatEmoteList_1.default(data.emoticons, this._client)];\n                }\n            });\n        });\n    };\n    /**\n     * Retrieves a list of chat rooms for a given channel.\n     *\n     * @param channel The channel to retrieve the chat rooms of.\n     */\n    ChatAPI.prototype.getChatRoomsForChannel = function (channel) {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            var data;\n            var _this = this;\n            return tslib_1.__generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this._client.callAPI({\n                            url: \"chat/\" + UserTools_1.extractUserId(channel) + \"/rooms\"\n                        })];\n                    case 1:\n                        data = _a.sent();\n                        return [2 /*return*/, data.rooms.map(function (room) { return new ChatRoom_1.default(room, _this._client); })];\n                }\n            });\n        });\n    };\n    tslib_1.__decorate([\n        Cache_1.Cached(3600)\n    ], ChatAPI.prototype, \"getEmotesBySets\", null);\n    tslib_1.__decorate([\n        Cache_1.Cached(3600)\n    ], ChatAPI.prototype, \"getChatRoomsForChannel\", null);\n    ChatAPI = tslib_1.__decorate([\n        Cache_1.Cacheable\n    ], ChatAPI);\n    return ChatAPI;\n}(BaseAPI_1.default));\nexports.default = ChatAPI;\n//# sourceMappingURL=ChatAPI.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar CustomError_1 = require(\"./CustomError\");\n/**\n * Thrown whenever you try something that requires your own stream to be live.\n */\nvar StreamNotLiveError = /** @class */ (function (_super) {\n    tslib_1.__extends(StreamNotLiveError, _super);\n    function StreamNotLiveError() {\n        return _super.call(this, 'Your stream needs to be live to do this') || this;\n    }\n    return StreamNotLiveError;\n}(CustomError_1.default));\nexports.default = StreamNotLiveError;\n//# sourceMappingURL=StreamNotLiveError.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar User_1 = require(\"../User/User\");\nvar NonEnumerable_1 = require(\"../../../Toolkit/Decorators/NonEnumerable\");\n/**\n * A relation of a user following a previously given channel.\n */\nvar ChannelFollow = /** @class */ (function () {\n    /** @private */\n    function ChannelFollow(_data, client) {\n        this._data = _data;\n        this._client = client;\n    }\n    Object.defineProperty(ChannelFollow.prototype, \"user\", {\n        /**\n         * The user following the given channel.\n         */\n        get: function () {\n            return new User_1.default(this._data.user, this._client);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ChannelFollow.prototype, \"hasNotifications\", {\n        /**\n         * Whether the user has notifications enabled for the channel.\n         */\n        get: function () {\n            return this._data.notifications;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ChannelFollow.prototype, \"followDate\", {\n        /**\n         * The date when the user followed.\n         */\n        get: function () {\n            return new Date(this._data.created_at);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    tslib_1.__decorate([\n        NonEnumerable_1.NonEnumerable\n    ], ChannelFollow.prototype, \"_client\", void 0);\n    return ChannelFollow;\n}());\nexports.default = ChannelFollow;\n//# sourceMappingURL=ChannelFollow.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\n/** @private */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction createCacheKey(propName, params, prefix) {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    function createSingleCacheKey(param) {\n        // noinspection FallThroughInSwitchStatementJS\n        switch (typeof param) {\n            case 'undefined': {\n                return '';\n            }\n            case 'object': {\n                if (param === null) {\n                    return '';\n                }\n                if ('cacheKey' in param) {\n                    return param.cacheKey;\n                }\n                var objKey = JSON.stringify(param);\n                if (objKey !== '{}') {\n                    return objKey;\n                }\n            }\n            // fallthrough\n            default: {\n                return param.toString();\n            }\n        }\n    }\n    return tslib_1.__spread([propName], params.map(createSingleCacheKey)).join('/') + (prefix ? '/' : '');\n}\nexports.createCacheKey = createCacheKey;\n/** @private */\nfunction Cacheable(cls) {\n    return /** @class */ (function (_super) {\n        tslib_1.__extends(class_1, _super);\n        function class_1() {\n            var _this = _super !== null && _super.apply(this, arguments) || this;\n            _this.cache = new Map;\n            return _this;\n        }\n        class_1.prototype.getFromCache = function (cacheKey) {\n            this._cleanCache();\n            if (this.cache.has(cacheKey)) {\n                var entry = this.cache.get(cacheKey);\n                if (entry) {\n                    return entry.value;\n                }\n            }\n            return undefined;\n        };\n        class_1.prototype.setCache = function (cacheKey, value, timeInSeconds) {\n            this.cache.set(cacheKey, {\n                value: value, expires: Date.now() + (timeInSeconds * 1000)\n            });\n        };\n        class_1.prototype.removeFromCache = function (cacheKey, prefix) {\n            var _this = this;\n            var internalCacheKey;\n            if (typeof cacheKey === 'string') {\n                internalCacheKey = cacheKey;\n                if (!internalCacheKey.endsWith('/')) {\n                    internalCacheKey += '/';\n                }\n            }\n            else {\n                var propName = cacheKey.shift();\n                internalCacheKey = createCacheKey(propName, cacheKey, prefix);\n            }\n            if (prefix) {\n                this.cache.forEach(function (val, key) {\n                    if (key.startsWith(internalCacheKey)) {\n                        _this.cache.delete(key);\n                    }\n                });\n            }\n            else {\n                this.cache.delete(internalCacheKey);\n            }\n        };\n        class_1.prototype._cleanCache = function () {\n            var _this = this;\n            var now = Date.now();\n            this.cache.forEach(function (val, key) {\n                if (val.expires < now) {\n                    _this.cache.delete(key);\n                }\n            });\n        };\n        return class_1;\n    }(cls));\n}\nexports.Cacheable = Cacheable;\n/** @private */\nfunction Cached(timeInSeconds, cacheFailures) {\n    if (timeInSeconds === void 0) { timeInSeconds = Infinity; }\n    if (cacheFailures === void 0) { cacheFailures = false; }\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    return function (target, propName, descriptor) {\n        var origFn = descriptor.value;\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        descriptor.value = function () {\n            var params = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                params[_i] = arguments[_i];\n            }\n            return tslib_1.__awaiter(this, void 0, void 0, function () {\n                var cacheKey, cachedValue, result;\n                return tslib_1.__generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0:\n                            cacheKey = createCacheKey(propName, params);\n                            cachedValue = this.getFromCache(cacheKey);\n                            if (cachedValue) {\n                                return [2 /*return*/, cachedValue];\n                            }\n                            return [4 /*yield*/, origFn.apply(this, params)];\n                        case 1:\n                            result = _a.sent();\n                            if (result != null || cacheFailures) {\n                                this.setCache(cacheKey, result, timeInSeconds);\n                            }\n                            return [2 /*return*/, result];\n                    }\n                });\n            });\n        };\n        return descriptor;\n    };\n}\nexports.Cached = Cached;\n/** @private */\nfunction CachedGetter(timeInSeconds) {\n    if (timeInSeconds === void 0) { timeInSeconds = Infinity; }\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    return function (target, propName, descriptor) {\n        if (descriptor.get) {\n            var origFn_1 = descriptor.get;\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            descriptor.get = function () {\n                var params = [];\n                for (var _i = 0; _i < arguments.length; _i++) {\n                    params[_i] = arguments[_i];\n                }\n                var cacheKey = createCacheKey(propName, params);\n                var cachedValue = this.getFromCache(cacheKey);\n                if (cachedValue) {\n                    return cachedValue;\n                }\n                var result = origFn_1.apply(this, params);\n                this.setCache(cacheKey, result, timeInSeconds);\n                return result;\n            };\n        }\n        return descriptor;\n    };\n}\nexports.CachedGetter = CachedGetter;\n/** @private */\nfunction ClearsCache(cacheName, numberOfArguments) {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    return function (target, propName, descriptor) {\n        var origFn = descriptor.value;\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        descriptor.value = function () {\n            var params = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                params[_i] = arguments[_i];\n            }\n            return tslib_1.__awaiter(this, void 0, void 0, function () {\n                var result, args;\n                return tslib_1.__generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4 /*yield*/, origFn.apply(this, params)];\n                        case 1:\n                            result = _a.sent();\n                            args = numberOfArguments === undefined ? params.slice() : params.slice(0, numberOfArguments);\n                            this.removeFromCache(tslib_1.__spread([cacheName], args), true);\n                            return [2 /*return*/, result];\n                    }\n                });\n            });\n        };\n        return descriptor;\n    };\n}\nexports.ClearsCache = ClearsCache;\n//# sourceMappingURL=Cache.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar NonEnumerable_1 = require(\"../../../Toolkit/Decorators/NonEnumerable\");\n/**\n * The type of a stream.\n */\nvar HelixStreamType;\n(function (HelixStreamType) {\n    /**\n     * Returned by Twitch in case of an error.\n     */\n    HelixStreamType[\"None\"] = \"\";\n    /**\n     * A live stream.\n     */\n    HelixStreamType[\"Live\"] = \"live\";\n    /**\n     * A vodcast.\n     *\n     * Currently not supported by Twitch - but one can only hope and leave it in here.\n     */\n    HelixStreamType[\"Vodcast\"] = \"vodcast\";\n})(HelixStreamType = exports.HelixStreamType || (exports.HelixStreamType = {}));\n/**\n * A Twitch stream.\n */\nvar HelixStream = /** @class */ (function () {\n    /** @private */\n    function HelixStream(_data, client) {\n        this._data = _data;\n        this._client = client;\n    }\n    Object.defineProperty(HelixStream.prototype, \"id\", {\n        /**\n         * The stream ID.\n         */\n        get: function () {\n            return this._data.id;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(HelixStream.prototype, \"userId\", {\n        /**\n         * The user ID.\n         */\n        get: function () {\n            return this._data.user_id;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(HelixStream.prototype, \"userDisplayName\", {\n        /**\n         * The user's display name.\n         */\n        get: function () {\n            return this._data.user_name;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Retrieves information about the user broadcasting the stream.\n     */\n    HelixStream.prototype.getUser = function () {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            return tslib_1.__generator(this, function (_a) {\n                return [2 /*return*/, this._client.helix.users.getUserById(this._data.user_id)];\n            });\n        });\n    };\n    Object.defineProperty(HelixStream.prototype, \"gameId\", {\n        /**\n         * The game ID.\n         */\n        get: function () {\n            return this._data.game_id;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Retrieves information about the game that is being played on this stream.\n     */\n    HelixStream.prototype.getGame = function () {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            return tslib_1.__generator(this, function (_a) {\n                return [2 /*return*/, this._client.helix.games.getGameById(this._data.game_id)];\n            });\n        });\n    };\n    Object.defineProperty(HelixStream.prototype, \"type\", {\n        /**\n         * The type of the stream.\n         */\n        get: function () {\n            return this._data.type;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(HelixStream.prototype, \"title\", {\n        /**\n         * The title of the stream.\n         */\n        get: function () {\n            return this._data.title;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(HelixStream.prototype, \"viewers\", {\n        /**\n         * The number of viewers the stream currently has.\n         */\n        get: function () {\n            return this._data.viewer_count;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(HelixStream.prototype, \"startDate\", {\n        /**\n         * The time when the stream started.\n         */\n        get: function () {\n            return new Date(this._data.started_at);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(HelixStream.prototype, \"language\", {\n        /**\n         * The language of the stream.\n         */\n        get: function () {\n            return this._data.language;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(HelixStream.prototype, \"thumbnailUrl\", {\n        /**\n         * The URL of the thumbnail of the stream.\n         */\n        get: function () {\n            return this._data.thumbnail_url;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    tslib_1.__decorate([\n        NonEnumerable_1.NonEnumerable\n    ], HelixStream.prototype, \"_client\", void 0);\n    return HelixStream;\n}());\nexports.default = HelixStream;\n//# sourceMappingURL=HelixStream.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar BaseAPI_1 = require(\"../../BaseAPI\");\nvar HelixStream_1 = require(\"./HelixStream\");\nvar TwitchClient_1 = require(\"../../../TwitchClient\");\nvar HelixPaginatedRequest_1 = require(\"../HelixPaginatedRequest\");\nvar UserTools_1 = require(\"../../../Toolkit/UserTools\");\nvar HelixStreamMarkerWithVideo_1 = require(\"./HelixStreamMarkerWithVideo\");\nvar HelixStreamMarker_1 = require(\"./HelixStreamMarker\");\nvar StreamNotLiveError_1 = require(\"../../../Errors/StreamNotLiveError\");\nvar HTTPStatusCodeError_1 = require(\"../../../Errors/HTTPStatusCodeError\");\n/**\n * The Helix API methods that deal with streams.\n *\n * Can be accessed using `client.helix.streams` on a {@TwitchClient} instance.\n *\n * ## Example\n * ```ts\n * const client = await TwitchClient.withCredentials(clientId, accessToken);\n * const stream = await client.helix.streams.getStreamByUserId('125328655');\n * ```\n */\nvar HelixStreamAPI = /** @class */ (function (_super) {\n    tslib_1.__extends(HelixStreamAPI, _super);\n    function HelixStreamAPI() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * Retrieves a list of streams.\n     *\n     * @expandParams\n     */\n    HelixStreamAPI.prototype.getStreams = function (filter) {\n        var _this = this;\n        if (filter === void 0) { filter = {}; }\n        return new HelixPaginatedRequest_1.default({\n            url: 'streams',\n            query: {\n                community_id: filter.community,\n                game_id: filter.game,\n                language: filter.language,\n                type: filter.type,\n                user_id: filter.userId,\n                user_login: filter.userName\n            }\n        }, this._client, function (data) { return new HelixStream_1.default(data, _this._client); });\n    };\n    /**\n     * Retrieves the current stream for the given user name.\n     *\n     * @param user The user name to retrieve the stream for.\n     */\n    HelixStreamAPI.prototype.getStreamByUserName = function (user) {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            var req, streams;\n            return tslib_1.__generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        req = this.getStreams({ userName: UserTools_1.extractUserName(user) });\n                        return [4 /*yield*/, req.getAll()];\n                    case 1:\n                        streams = _a.sent();\n                        return [2 /*return*/, streams.length ? streams[0] : null];\n                }\n            });\n        });\n    };\n    /**\n     * Retrieves the current stream for the given user ID.\n     *\n     * @param user The user ID to retrieve the stream for.\n     */\n    HelixStreamAPI.prototype.getStreamByUserId = function (user) {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            var req, streams;\n            return tslib_1.__generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        req = this.getStreams({ userId: UserTools_1.extractUserId(user) });\n                        return [4 /*yield*/, req.getAll()];\n                    case 1:\n                        streams = _a.sent();\n                        return [2 /*return*/, streams.length ? streams[0] : null];\n                }\n            });\n        });\n    };\n    /**\n     * Retrieves a list of all stream markers for an user.\n     *\n     * @param user The user to list the stream markers for.\n     */\n    HelixStreamAPI.prototype.getStreamMarkersForUser = function (user) {\n        return this._getStreamMarkers('user_id', UserTools_1.extractUserId(user));\n    };\n    /**\n     * Retrieves a list of all stream markers for a video.\n     *\n     * @param videoId The video to list the stream markers for.\n     */\n    HelixStreamAPI.prototype.getStreamMarkersForVideo = function (videoId) {\n        return this._getStreamMarkers('video_id', videoId);\n    };\n    /**\n     * Creates a new stream marker.\n     *\n     * Only works while your stream is live.\n     */\n    HelixStreamAPI.prototype.createStreamMarker = function () {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            var result, e_1;\n            return tslib_1.__generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        _a.trys.push([0, 2, , 3]);\n                        return [4 /*yield*/, this._client.callAPI({\n                                url: 'streams/markers',\n                                method: 'POST',\n                                type: TwitchClient_1.TwitchAPICallType.Helix,\n                                scope: 'user:edit:broadcast'\n                            })];\n                    case 1:\n                        result = _a.sent();\n                        return [2 /*return*/, new HelixStreamMarker_1.default(result.data[0], this._client)];\n                    case 2:\n                        e_1 = _a.sent();\n                        if ((e_1 instanceof HTTPStatusCodeError_1.default) && e_1.statusCode === 404) {\n                            throw new StreamNotLiveError_1.default();\n                        }\n                        throw e_1;\n                    case 3: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    HelixStreamAPI.prototype._getStreamMarkers = function (queryType, id) {\n        var _this = this;\n        var _a;\n        return new HelixPaginatedRequest_1.default({\n            url: 'streams/markers',\n            query: (_a = {},\n                _a[queryType] = id,\n                _a),\n            scope: 'user:read:broadcast'\n        }, this._client, function (data) { return data.videos.reduce(function (result, video) { return tslib_1.__spread(result, video.markers.map(function (marker) { return new HelixStreamMarkerWithVideo_1.default(marker, video.video_id, _this._client); })); }, []); });\n    };\n    return HelixStreamAPI;\n}(BaseAPI_1.default));\nexports.default = HelixStreamAPI;\n//# sourceMappingURL=HelixStreamAPI.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar User_1 = require(\"./User\");\n/**\n * A user you have extended privileges for, i.e. the currently authenticated user.\n *\n * @inheritDoc\n */\nvar PrivilegedUser = /** @class */ (function (_super) {\n    tslib_1.__extends(PrivilegedUser, _super);\n    function PrivilegedUser() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Object.defineProperty(PrivilegedUser.prototype, \"email\", {\n        /**\n         * The user's email address.\n         */\n        get: function () {\n            return this._data.email;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PrivilegedUser.prototype, \"isEmailVerified\", {\n        /**\n         * Whether the user's email address is verified.\n         */\n        get: function () {\n            return this._data.email_verified;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PrivilegedUser.prototype, \"hasEmailNotifications\", {\n        /**\n         * Whether the user has email notifications enabled.\n         */\n        get: function () {\n            return this._data.notifications.email;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PrivilegedUser.prototype, \"hasPushNotifications\", {\n        /**\n         * Whether the user has push notifications enabled.\n         */\n        get: function () {\n            return this._data.notifications.push;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PrivilegedUser.prototype, \"isPartnered\", {\n        /**\n         * Whether the user is partnered.\n         */\n        get: function () {\n            return this._data.partnered;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PrivilegedUser.prototype, \"hasTwitter\", {\n        /**\n         * Whether the user has a Twitter account connected.\n         */\n        get: function () {\n            return this._data.twitter_connected;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Follows a channel.\n     *\n     * @param channel The channel to follow.\n     * @param notifications Whether the user will receive notifications.\n     */\n    PrivilegedUser.prototype.followChannel = function (channel, notifications) {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            return tslib_1.__generator(this, function (_a) {\n                return [2 /*return*/, this._client.kraken.users.followChannel(this, channel, notifications)];\n            });\n        });\n    };\n    /**\n     * Unfollows a channel.\n     *\n     * @param channel The channel to unfollow.\n     */\n    PrivilegedUser.prototype.unfollowChannel = function (channel) {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            return tslib_1.__generator(this, function (_a) {\n                return [2 /*return*/, this._client.kraken.users.unfollowChannel(this, channel)];\n            });\n        });\n    };\n    /**\n     * Blocks a user.\n     *\n     * @param userToBlock The user to block.\n     */\n    PrivilegedUser.prototype.blockUser = function (userToBlock) {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            return tslib_1.__generator(this, function (_a) {\n                return [2 /*return*/, this._client.kraken.users.blockUser(this, userToBlock)];\n            });\n        });\n    };\n    /**\n     * Unblocks a user.\n     *\n     * @param userToUnblock The user to unblock.\n     */\n    PrivilegedUser.prototype.unblockUser = function (userToUnblock) {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            return tslib_1.__generator(this, function (_a) {\n                return [2 /*return*/, this._client.kraken.users.unblockUser(this, userToUnblock)];\n            });\n        });\n    };\n    return PrivilegedUser;\n}(User_1.default));\nexports.default = PrivilegedUser;\n//# sourceMappingURL=PrivilegedUser.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar NonEnumerable_1 = require(\"../Toolkit/Decorators/NonEnumerable\");\nvar AccessToken_1 = require(\"../API/AccessToken\");\nvar TwitchClient_1 = require(\"../TwitchClient\");\n/**\n * An auth provider that always returns the same initially given credentials.\n *\n * You are advised to roll your own auth provider that can handle scope upgrades,\n * or to plan ahead and supply only access tokens that account for all scopes\n * you will ever need (not recommended).\n */\nvar StaticAuthProvider = /** @class */ (function () {\n    /**\n     * Creates a new auth provider with static credentials.\n     *\n     * You don't usually have to create this manually. You should use `TwitchClient.withCredentials` instead.\n     *\n     * @param clientId The client ID.\n     * @param accessToken The access token to provide.\n     *\n     * You need to obtain one using one of the [Twitch OAuth flows](https://dev.twitch.tv/docs/authentication/getting-tokens-oauth/).\n     * @param scopes The scopes this token has.\n     */\n    function StaticAuthProvider(clientId, accessToken, scopes) {\n        this._clientId = clientId || '';\n        if (accessToken) {\n            this._accessToken = new AccessToken_1.default({ access_token: accessToken, scope: scopes ? scopes.join(' ') : '', refresh_token: '' });\n            this._scopes = scopes;\n        }\n    }\n    /**\n     * Retrieves an access token.\n     *\n     * If the current access token does not have the requested scopes, this method throws.\n     * This makes supplying an access token with the correct scopes from the beginning necessary.\n     *\n     * @param scopes The requested scopes.\n     */\n    StaticAuthProvider.prototype.getAccessToken = function (scopes) {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            var tokenInfo;\n            var _this = this;\n            return tslib_1.__generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        if (!(scopes && scopes.length > 0)) return [3 /*break*/, 3];\n                        if (!!this._scopes) return [3 /*break*/, 2];\n                        if (!this._accessToken) {\n                            throw new Error('Auth provider has not been initialized with a token yet and is requesting scopes');\n                        }\n                        return [4 /*yield*/, TwitchClient_1.default.getTokenInfo(this._clientId, this._accessToken.accessToken)];\n                    case 1:\n                        tokenInfo = _a.sent();\n                        if (!tokenInfo.valid) {\n                            throw new Error('Auth provider has been initialized with an invalid token');\n                        }\n                        this._scopes = tokenInfo.scopes;\n                        _a.label = 2;\n                    case 2:\n                        if (typeof scopes === 'string') {\n                            scopes = scopes.split(' ');\n                        }\n                        if (scopes.some(function (scope) { return !_this._scopes.includes(scope); })) {\n                            throw new Error(\"This token does not have the requested scopes (\" + scopes.join(', ') + \") and can not be upgraded\");\n                        }\n                        _a.label = 3;\n                    case 3: return [2 /*return*/, this._accessToken || null];\n                }\n            });\n        });\n    };\n    /** @private */\n    StaticAuthProvider.prototype.setAccessToken = function (token) {\n        this._accessToken = token;\n    };\n    Object.defineProperty(StaticAuthProvider.prototype, \"clientId\", {\n        /**\n         * The client ID.\n         */\n        get: function () {\n            return this._clientId;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(StaticAuthProvider.prototype, \"currentScopes\", {\n        /**\n         * The scopes that are currently available using the access token.\n         */\n        get: function () {\n            return this._scopes || [];\n        },\n        enumerable: true,\n        configurable: true\n    });\n    tslib_1.__decorate([\n        NonEnumerable_1.NonEnumerable\n    ], StaticAuthProvider.prototype, \"_clientId\", void 0);\n    tslib_1.__decorate([\n        NonEnumerable_1.NonEnumerable\n    ], StaticAuthProvider.prototype, \"_accessToken\", void 0);\n    return StaticAuthProvider;\n}());\nexports.default = StaticAuthProvider;\n//# sourceMappingURL=StaticAuthProvider.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar NonEnumerable_1 = require(\"../../../Toolkit/Decorators/NonEnumerable\");\nvar HellFreezesOverError_1 = require(\"../../../Errors/HellFreezesOverError\");\nvar ObjectTools_1 = require(\"../../../Toolkit/ObjectTools\");\n/**\n * The type of background a cheermote is supposed to appear on.\n *\n * We will supply a fitting graphic that does not show any artifacts\n * on the given type of background.\n */\nvar CheermoteBackground;\n(function (CheermoteBackground) {\n    /**\n     * A dark background.\n     *\n     * Cheermotes might show artifacts on bright backgrounds.\n     */\n    CheermoteBackground[\"dark\"] = \"dark\";\n    /**\n     * A bright background.\n     *\n     * Cheermotes might show artifacts on dark backgrounds.\n     */\n    CheermoteBackground[\"light\"] = \"light\";\n})(CheermoteBackground = exports.CheermoteBackground || (exports.CheermoteBackground = {}));\n/**\n * The state of a cheermote, i.e. whether it's animated or not.\n */\nvar CheermoteState;\n(function (CheermoteState) {\n    /**\n     * The cheermote should be animated.\n     */\n    CheermoteState[\"animated\"] = \"animated\";\n    /**\n     * The cheermote should not be animated.\n     */\n    CheermoteState[\"static\"] = \"static\";\n})(CheermoteState = exports.CheermoteState || (exports.CheermoteState = {}));\n/**\n * The scale of the cheermote, which usually relates to the pixel density of the device in use.\n */\nvar CheermoteScale;\n(function (CheermoteScale) {\n    /**\n     * The cheermote should not be scaled.\n     */\n    CheermoteScale[\"x1\"] = \"1\";\n    /**\n     * The cheermote should be scaled 1.5x.\n     */\n    CheermoteScale[\"x1_5\"] = \"1.5\";\n    /**\n     * The cheermote should be scaled 2x.\n     */\n    CheermoteScale[\"x2\"] = \"2\";\n    /**\n     * The cheermote should be scaled 3x.\n     */\n    CheermoteScale[\"x3\"] = \"3\";\n    /**\n     * The cheermote should be scaled 4x.\n     */\n    CheermoteScale[\"x4\"] = \"4\";\n})(CheermoteScale = exports.CheermoteScale || (exports.CheermoteScale = {}));\n/**\n * A list of cheermotes you can use globally or in a specific channel, depending on how you fetched the list.\n */\nvar CheermoteList = /** @class */ (function () {\n    /** @private */\n    function CheermoteList(data, client) {\n        this._client = client;\n        this._data = ObjectTools_1.indexBy(data, function (action) { return action.prefix.toLowerCase(); });\n    }\n    /**\n     * Gets the URL and color needed to properly represent a cheer of the given amount of bits with the given prefix.\n     *\n     * @param name The name/prefix of the cheermote.\n     * @param bits The amount of bits cheered.\n     * @param format The format of the cheermote you want to request.\n     */\n    CheermoteList.prototype.getCheermoteDisplayInfo = function (name, bits, format) {\n        if (format === void 0) { format = {}; }\n        name = name.toLowerCase();\n        var cheermoteDefaults = this._client._config.cheermotes;\n        var fullOptions = tslib_1.__assign({ background: cheermoteDefaults.defaultBackground, state: cheermoteDefaults.defaultState, scale: cheermoteDefaults.defaultScale }, format);\n        var tiers = this._data[name].tiers;\n        var correctTier = tiers.sort(function (a, b) { return b.min_bits - a.min_bits; }).find(function (tier) { return tier.min_bits <= bits; });\n        if (!correctTier) {\n            throw new HellFreezesOverError_1.default(\"Cheermote \\\"\" + name + \"\\\" does not have an applicable tier for \" + bits + \" bits\");\n        }\n        return {\n            url: correctTier.images[fullOptions.background][fullOptions.state][fullOptions.scale],\n            color: correctTier.color\n        };\n    };\n    /**\n     * Gets all possible cheermote names.\n     */\n    CheermoteList.prototype.getPossibleNames = function () {\n        return Object.keys(this._data);\n    };\n    /**\n     * Parses all the cheermotes out of a message.\n     *\n     * @param message The message.\n     */\n    CheermoteList.prototype.parseMessage = function (message) {\n        var result = [];\n        var names = this.getPossibleNames();\n        // TODO fix this regex so it works in firefox, which does not support lookbehind\n        var re = new RegExp('(?<=^|\\\\s)([a-z]+)(\\\\d+)(?=\\\\s|$)', 'gi');\n        var match;\n        // eslint-disable-next-line no-cond-assign\n        while (match = re.exec(message)) {\n            var name_1 = match[1].toLowerCase();\n            if (names.includes(name_1)) {\n                var amount = Number(match[2]);\n                result.push({\n                    name: name_1,\n                    amount: amount,\n                    position: match.index,\n                    length: match[0].length,\n                    displayInfo: this.getCheermoteDisplayInfo(name_1, amount)\n                });\n            }\n        }\n        return result;\n    };\n    /**\n     * Transforms all the cheermotes in a message and returns an array of all the message parts.\n     *\n     * @param message The message.\n     * @param transformer A function that transforms a message part into an arbitrary structure.\n     */\n    CheermoteList.prototype.transformCheerMessage = function (message, transformer) {\n        var e_1, _a;\n        var result = [];\n        var currentPosition = 0;\n        try {\n            for (var _b = tslib_1.__values(this.parseMessage(message)), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var foundCheermote = _c.value;\n                if (currentPosition < foundCheermote.position) {\n                    result.push(message.substring(currentPosition, foundCheermote.position));\n                }\n                result.push(transformer(foundCheermote));\n                currentPosition = foundCheermote.position + foundCheermote.length;\n            }\n        }\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n            }\n            finally { if (e_1) throw e_1.error; }\n        }\n        if (currentPosition < message.length) {\n            result.push(message.substr(currentPosition));\n        }\n        return result;\n    };\n    tslib_1.__decorate([\n        NonEnumerable_1.NonEnumerable\n    ], CheermoteList.prototype, \"_client\", void 0);\n    return CheermoteList;\n}());\nexports.default = CheermoteList;\n//# sourceMappingURL=CheermoteList.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar CustomError_1 = require(\"./CustomError\");\n/**\n * Thrown whenever you try using invalid values in the client configuration.\n */\nvar ConfigError = /** @class */ (function (_super) {\n    tslib_1.__extends(ConfigError, _super);\n    function ConfigError() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    return ConfigError;\n}(CustomError_1.default));\nexports.default = ConfigError;\n//# sourceMappingURL=ConfigError.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\n/** @private */\nvar CustomError = /** @class */ (function (_super) {\n    tslib_1.__extends(CustomError, _super);\n    function CustomError() {\n        var params = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            params[_i] = arguments[_i];\n        }\n        var _this = _super.apply(this, tslib_1.__spread(params)) || this;\n        if (Error.captureStackTrace) {\n            Error.captureStackTrace(_this, _this.constructor);\n        }\n        return _this;\n    }\n    Object.defineProperty(CustomError.prototype, \"name\", {\n        get: function () {\n            return this.constructor.name;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return CustomError;\n}(Error));\nexports.default = CustomError;\n//# sourceMappingURL=CustomError.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar Cache_1 = require(\"../../../Toolkit/Decorators/Cache\");\n/**\n * A list of emotes, grouped into emote sets, that a user can use.\n */\nvar EmoteSetList = /** @class */ (function () {\n    /** @private */\n    function EmoteSetList(_data) {\n        this._data = _data;\n    }\n    /**\n     * Finds the emote ID for the given emote code.\n     *\n     * @param emoteCode The emote code to check for.\n     */\n    EmoteSetList.prototype.findEmoteId = function (emoteCode) {\n        var e_1, _a, e_2, _b;\n        try {\n            for (var _c = tslib_1.__values(Object.values(this._data)), _d = _c.next(); !_d.done; _d = _c.next()) {\n                var emoteSet = _d.value;\n                try {\n                    for (var emoteSet_1 = tslib_1.__values(emoteSet), emoteSet_1_1 = emoteSet_1.next(); !emoteSet_1_1.done; emoteSet_1_1 = emoteSet_1.next()) {\n                        var emote = emoteSet_1_1.value;\n                        if ((new RegExp(emote.code)).test(emoteCode)) {\n                            return emote.id;\n                        }\n                    }\n                }\n                catch (e_2_1) { e_2 = { error: e_2_1 }; }\n                finally {\n                    try {\n                        if (emoteSet_1_1 && !emoteSet_1_1.done && (_b = emoteSet_1.return)) _b.call(emoteSet_1);\n                    }\n                    finally { if (e_2) throw e_2.error; }\n                }\n            }\n        }\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n        finally {\n            try {\n                if (_d && !_d.done && (_a = _c.return)) _a.call(_c);\n            }\n            finally { if (e_1) throw e_1.error; }\n        }\n        return undefined;\n    };\n    tslib_1.__decorate([\n        Cache_1.Cached(Infinity, true)\n    ], EmoteSetList.prototype, \"findEmoteId\", null);\n    EmoteSetList = tslib_1.__decorate([\n        Cache_1.Cacheable\n    ], EmoteSetList);\n    return EmoteSetList;\n}());\nexports.default = EmoteSetList;\n//# sourceMappingURL=EmoteSetList.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar NonEnumerable_1 = require(\"../../../Toolkit/Decorators/NonEnumerable\");\nvar HellFreezesOverError_1 = require(\"../../../Errors/HellFreezesOverError\");\nvar Cache_1 = require(\"../../../Toolkit/Decorators/Cache\");\n/**\n * A video on Twitch.\n */\nvar HelixVideo = /** @class */ (function () {\n    /** @private */\n    function HelixVideo(_data, client) {\n        this._data = _data;\n        this._client = client;\n    }\n    Object.defineProperty(HelixVideo.prototype, \"id\", {\n        /**\n         * The ID of the video.\n         */\n        get: function () {\n            return this._data.id;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(HelixVideo.prototype, \"userId\", {\n        /**\n         * The ID of the user who created the video.\n         */\n        get: function () {\n            return this._data.user_id;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(HelixVideo.prototype, \"userDisplayName\", {\n        /**\n         * The display name of the user who created the video.\n         */\n        get: function () {\n            return this._data.user_id;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Retrieves information about the user who created the video.\n     */\n    HelixVideo.prototype.getUser = function () {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            return tslib_1.__generator(this, function (_a) {\n                return [2 /*return*/, this._client.helix.users.getUserById(this._data.user_id)];\n            });\n        });\n    };\n    Object.defineProperty(HelixVideo.prototype, \"title\", {\n        /**\n         * The title of the video.\n         */\n        get: function () {\n            return this._data.title;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(HelixVideo.prototype, \"description\", {\n        /**\n         * The description of the video.\n         */\n        get: function () {\n            return this._data.description;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(HelixVideo.prototype, \"creationDate\", {\n        /**\n         * The date when the video was created.\n         */\n        get: function () {\n            return new Date(this._data.created_at);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(HelixVideo.prototype, \"publishDate\", {\n        /**\n         * The date when the video was published.\n         */\n        get: function () {\n            return new Date(this._data.published_at);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(HelixVideo.prototype, \"url\", {\n        /**\n         * The URL of the video.\n         */\n        get: function () {\n            return this._data.url;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(HelixVideo.prototype, \"thumbnailUrl\", {\n        /**\n         * The URL of the thumbnail of the video.\n         */\n        get: function () {\n            return this._data.thumbnail_url;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(HelixVideo.prototype, \"isPublic\", {\n        /**\n         * Whether the video is public or not.\n         */\n        get: function () {\n            return this._data.viewable === 'public';\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(HelixVideo.prototype, \"views\", {\n        /**\n         * The number of views of the video.\n         */\n        get: function () {\n            return this._data.view_count;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(HelixVideo.prototype, \"language\", {\n        /**\n         * The language of the video.\n         */\n        get: function () {\n            return this._data.language;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(HelixVideo.prototype, \"type\", {\n        /**\n         * The type of the video.\n         */\n        get: function () {\n            return this._data.type;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(HelixVideo.prototype, \"duration\", {\n        /**\n         * The duration of the video, as formatted by Twitch.\n         */\n        get: function () {\n            return this._data.duration;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(HelixVideo.prototype, \"durationInSeconds\", {\n        /**\n         * The duration of the video, in seconds.\n         */\n        get: function () {\n            var parts = this._data.duration.match(/\\d+[hms]/g);\n            if (!parts) {\n                throw new HellFreezesOverError_1.default(\"Could not parse duration string: \" + this._data.duration);\n            }\n            return parts.map(function (part) {\n                var partialMatch = part.match(/(\\d+)([hms])/);\n                if (!partialMatch) {\n                    throw new HellFreezesOverError_1.default(\"Could not parse partial duration string: \" + part);\n                }\n                var _a = tslib_1.__read(partialMatch, 3), num = _a[1], unit = _a[2];\n                return parseInt(num, 10) * { h: 3600, m: 60, s: 1 }[unit];\n            }).reduce(function (a, b) { return a + b; });\n        },\n        enumerable: true,\n        configurable: true\n    });\n    tslib_1.__decorate([\n        NonEnumerable_1.NonEnumerable\n    ], HelixVideo.prototype, \"_client\", void 0);\n    tslib_1.__decorate([\n        Cache_1.CachedGetter()\n    ], HelixVideo.prototype, \"durationInSeconds\", null);\n    HelixVideo = tslib_1.__decorate([\n        Cache_1.Cacheable\n    ], HelixVideo);\n    return HelixVideo;\n}());\nexports.default = HelixVideo;\n//# sourceMappingURL=HelixVideo.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\n/** @private */\nfunction mapObject(obj, fn) {\n    // eslint-disable-next-line @typescript-eslint/no-object-literal-type-assertion\n    var mapped = Object.entries(obj).map(function (_a) {\n        var _b;\n        var _c = tslib_1.__read(_a, 2), key = _c[0], value = _c[1];\n        return (_b = {}, _b[key] = fn(value, key), _b);\n    });\n    return Object.assign.apply(Object, tslib_1.__spread([{}], mapped));\n}\nexports.mapObject = mapObject;\n/** @private */\nfunction objectFromArray(arr, fn) {\n    return Object.assign.apply(Object, tslib_1.__spread([{}], arr.map(fn)));\n}\nexports.objectFromArray = objectFromArray;\n/** @private */\nfunction indexBy(arr, keyFn) {\n    if (typeof keyFn !== 'function') {\n        var key_1 = keyFn;\n        keyFn = (function (value) { return value[key_1].toString(); });\n    }\n    return objectFromArray(arr, function (val) {\n        var _a;\n        return (_a = {}, _a[keyFn(val)] = val, _a);\n    });\n}\nexports.indexBy = indexBy;\n/** @private */\nfunction forEachObjectEntry(obj, fn) {\n    Object.entries(obj).forEach(function (_a) {\n        var _b = tslib_1.__read(_a, 2), key = _b[0], value = _b[1];\n        return fn(value, key);\n    });\n}\nexports.forEachObjectEntry = forEachObjectEntry;\n/** @private */\nfunction entriesToObject(obj) {\n    return objectFromArray(obj, function (_a) {\n        var _b;\n        var _c = tslib_1.__read(_a, 2), key = _c[0], val = _c[1];\n        return (_b = {}, _b[key] = val, _b);\n    });\n}\nexports.entriesToObject = entriesToObject;\n//# sourceMappingURL=ObjectTools.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar CustomError_1 = require(\"./CustomError\");\n/**\n * These are the kind of errors that should never happen.\n *\n * If you see one thrown, please file a bug in the GitHub issue tracker.\n */\nvar HellFreezesOverError = /** @class */ (function (_super) {\n    tslib_1.__extends(HellFreezesOverError, _super);\n    function HellFreezesOverError(message) {\n        return _super.call(this, message + \" - this should never happen, please file a bug in the GitHub issue tracker\") || this;\n    }\n    return HellFreezesOverError;\n}(CustomError_1.default));\nexports.default = HellFreezesOverError;\n//# sourceMappingURL=HellFreezesOverError.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar NonEnumerable_1 = require(\"../../Toolkit/Decorators/NonEnumerable\");\nvar ChatBadgeSet_1 = require(\"./ChatBadgeSet\");\n/**\n * A list of badge sets.\n */\nvar ChatBadgeList = /** @class */ (function () {\n    /** @private */\n    function ChatBadgeList(_data, client) {\n        this._data = _data;\n        this._client = client;\n    }\n    Object.defineProperty(ChatBadgeList.prototype, \"badgeSetNames\", {\n        /**\n         * Names of all badge sets in the list.\n         */\n        get: function () {\n            return Object.keys(this._data);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Gets a specific badge set by name.\n     *\n     * @param name The name of the badge set.\n     */\n    ChatBadgeList.prototype.getBadgeSet = function (name) {\n        return new ChatBadgeSet_1.default(this._data[name], this._client);\n    };\n    /** @private */\n    ChatBadgeList.prototype._merge = function (additionalData) {\n        if (additionalData instanceof ChatBadgeList) {\n            additionalData = additionalData._data;\n        }\n        return new ChatBadgeList(tslib_1.__assign({}, this._data, additionalData), this._client);\n    };\n    tslib_1.__decorate([\n        NonEnumerable_1.NonEnumerable\n    ], ChatBadgeList.prototype, \"_client\", void 0);\n    return ChatBadgeList;\n}());\nexports.default = ChatBadgeList;\n//# sourceMappingURL=ChatBadgeList.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar BaseAPI_1 = require(\"../../BaseAPI\");\nvar __1 = require(\"../../..\");\nvar HelixPaginatedRequest_1 = require(\"../HelixPaginatedRequest\");\nvar HelixSubscription_1 = require(\"./HelixSubscription\");\n/**\n * The Helix API methods that deal with subscriptions.\n *\n * Can be accessed using `client.helix.subscriptions` on a {@TwitchClient} instance.\n *\n * ## Example\n * ```ts\n * const client = await TwitchClient.withCredentials(clientId, accessToken);\n * const subscriptions = await client.helix.subscriptions.getSubscriptionsForUsers('61369223', '125328655');\n * ```\n */\nvar HelixSubscriptionAPI = /** @class */ (function (_super) {\n    tslib_1.__extends(HelixSubscriptionAPI, _super);\n    function HelixSubscriptionAPI() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * Retrieves a list of all subscriptions to a given broadcaster.\n     *\n     * @param broadcaster The broadcaster to list subscriptions to.\n     */\n    HelixSubscriptionAPI.prototype.getSubscriptions = function (broadcaster) {\n        var _this = this;\n        return new HelixPaginatedRequest_1.default({\n            url: 'subscriptions',\n            query: {\n                broadcaster_id: __1.extractUserId(broadcaster)\n            }\n        }, this._client, function (data) { return new HelixSubscription_1.default(data, _this._client); });\n    };\n    /**\n     * Retrieves the subset of the given user list that is subscribed to the given broadcaster.\n     *\n     * @param broadcaster The broadcaster to find subscriptions to.\n     * @param users The users that should be checked for subscriptions.\n     */\n    HelixSubscriptionAPI.prototype.getSubscriptionsForUsers = function (broadcaster, users) {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            var result;\n            var _this = this;\n            return tslib_1.__generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this._client.callAPI({\n                            url: 'subscriptions',\n                            type: __1.TwitchAPICallType.Helix,\n                            query: {\n                                broadcaster_id: __1.extractUserId(broadcaster),\n                                user_id: users.map(__1.extractUserId)\n                            }\n                        })];\n                    case 1:\n                        result = _a.sent();\n                        return [2 /*return*/, result.data.map(function (data) { return new HelixSubscription_1.default(data, _this._client); })];\n                }\n            });\n        });\n    };\n    /**\n     * Retrieves the subscription data for a given user to a given broadcaster.\n     *\n     * @param broadcaster The broadcaster to check.\n     * @param user The user to check.\n     */\n    HelixSubscriptionAPI.prototype.getSubscriptionForUser = function (broadcaster, user) {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            var list;\n            return tslib_1.__generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this.getSubscriptionsForUsers(broadcaster, [user])];\n                    case 1:\n                        list = _a.sent();\n                        return [2 /*return*/, list.length ? list[0] : null];\n                }\n            });\n        });\n    };\n    return HelixSubscriptionAPI;\n}(BaseAPI_1.default));\nexports.default = HelixSubscriptionAPI;\n//# sourceMappingURL=HelixSubscriptionAPI.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar NonEnumerable_1 = require(\"../../../Toolkit/Decorators/NonEnumerable\");\n/**\n * A chat emote.\n */\nvar ChatEmote = /** @class */ (function () {\n    /** @private */\n    function ChatEmote(_data, client) {\n        this._data = _data;\n        this._client = client;\n    }\n    Object.defineProperty(ChatEmote.prototype, \"id\", {\n        /**\n         * The emote ID.\n         */\n        get: function () {\n            return this._data.id;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ChatEmote.prototype, \"code\", {\n        /**\n         * The emote code, i.e. how you write it in chat.\n         */\n        get: function () {\n            return this._data.code;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ChatEmote.prototype, \"setId\", {\n        /**\n         * The ID of the emote set.\n         */\n        get: function () {\n            return this._data.emoticon_set;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    tslib_1.__decorate([\n        NonEnumerable_1.NonEnumerable\n    ], ChatEmote.prototype, \"_client\", void 0);\n    return ChatEmote;\n}());\nexports.default = ChatEmote;\n//# sourceMappingURL=ChatEmote.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar CustomError_1 = require(\"./CustomError\");\n/**\n * Thrown whenever you try accessing a subscription-related resource\n * (for example {@ChannelAPI#getChannelSubscriptions})\n * and the given channel does not have a subscription program.\n */\nvar NoSubscriptionProgramError = /** @class */ (function (_super) {\n    tslib_1.__extends(NoSubscriptionProgramError, _super);\n    function NoSubscriptionProgramError(channelId) {\n        return _super.call(this, \"Channel \" + channelId + \" does not have a subscription program\") || this;\n    }\n    return NoSubscriptionProgramError;\n}(CustomError_1.default));\nexports.default = NoSubscriptionProgramError;\n//# sourceMappingURL=NoSubscriptionProgramError.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar BaseAPI_1 = require(\"../../BaseAPI\");\nvar UserTools_1 = require(\"../../../Toolkit/UserTools\");\nvar TwitchClient_1 = require(\"../../../TwitchClient\");\nvar HelixPaginatedRequestWithTotal_1 = require(\"../HelixPaginatedRequestWithTotal\");\nvar HelixWebHookSubscription_1 = require(\"./HelixWebHookSubscription\");\n/**\n * The API methods that deal with WebHooks.\n *\n * Can be accessed using `client.helix.webHooks` on a {@TwitchClient} instance.\n *\n * ## Example\n * ```ts\n * const client = await TwitchClient.withCredentials(clientId, accessToken);\n * const accepted = await client.helix.webHooks.subscribeHook('https://api.twitch.tv/helix/streams?user_id=125328655', 'https://example.com');\n * ```\n */\nvar HelixWebHooksAPI = /** @class */ (function (_super) {\n    tslib_1.__extends(HelixWebHooksAPI, _super);\n    function HelixWebHooksAPI() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * Retrieves the current WebHook subscriptions for the current client.\n     *\n     * Requires an app access token to work; does not work with user tokens.\n     */\n    HelixWebHooksAPI.prototype.getSubscriptions = function () {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            var _this = this;\n            return tslib_1.__generator(this, function (_a) {\n                return [2 /*return*/, new HelixPaginatedRequestWithTotal_1.default({\n                        url: 'webhooks/subscriptions'\n                    }, this._client, function (data) { return new HelixWebHookSubscription_1.default(data, _this._client); })];\n            });\n        });\n    };\n    /**\n     * Sends an arbitrary request to subscribe to or unsubscribe from an event.\n     *\n     * @expandParams\n     */\n    HelixWebHooksAPI.prototype.sendHubRequest = function (options) {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            var mode, callbackUrl, topicUrl, _a, validityInSeconds, secret, scope;\n            return tslib_1.__generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0:\n                        mode = options.mode, callbackUrl = options.callbackUrl, topicUrl = options.topicUrl, _a = options.validityInSeconds, validityInSeconds = _a === void 0 ? 3600 : _a, secret = options.secret, scope = options.scope;\n                        return [4 /*yield*/, this._client.callAPI({\n                                url: 'webhooks/hub',\n                                type: TwitchClient_1.TwitchAPICallType.Helix,\n                                method: 'POST',\n                                scope: scope,\n                                jsonBody: {\n                                    'hub.mode': mode,\n                                    'hub.topic': topicUrl,\n                                    'hub.callback': callbackUrl,\n                                    'hub.lease_seconds': validityInSeconds.toString(),\n                                    'hub.secret': secret\n                                }\n                            })];\n                    case 1:\n                        _b.sent();\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Subscribes to events representing a user following other users.\n     *\n     * @expandParams\n     *\n     * @param user The user for which to get notifications about the users they will follow.\n     * @param options\n     */\n    HelixWebHooksAPI.prototype.subscribeToUserFollowsFrom = function (user, options) {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            return tslib_1.__generator(this, function (_a) {\n                return [2 /*return*/, this._sendUserFollowsHubRequest('subscribe', 'from', user, options)];\n            });\n        });\n    };\n    /**\n     * Subscribes to events representing a user being followed by other users.\n     *\n     * @expandParams\n     *\n     * @param user The user for which to get notifications about the users they will be followed by.\n     * @param options\n     */\n    HelixWebHooksAPI.prototype.subscribeToUserFollowsTo = function (user, options) {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            return tslib_1.__generator(this, function (_a) {\n                return [2 /*return*/, this._sendUserFollowsHubRequest('subscribe', 'to', user, options)];\n            });\n        });\n    };\n    /**\n     * Unsubscribes from events representing a user following other users.\n     *\n     * @expandParams\n     *\n     * @param user The user for which to not get any more notifications about the users they will follow.\n     * @param options\n     */\n    HelixWebHooksAPI.prototype.unsubscribeFromUserFollowsFrom = function (user, options) {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            return tslib_1.__generator(this, function (_a) {\n                return [2 /*return*/, this._sendUserFollowsHubRequest('unsubscribe', 'from', user, options)];\n            });\n        });\n    };\n    /**\n     * Unsubscribes from events representing a user being followed by other users.\n     *\n     * @expandParams\n     *\n     * @param user The user for which to not get any more notifications about the users they will be followed by.\n     * @param options\n     */\n    HelixWebHooksAPI.prototype.unsubscribeFromUserFollowsTo = function (user, options) {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            return tslib_1.__generator(this, function (_a) {\n                return [2 /*return*/, this._sendUserFollowsHubRequest('unsubscribe', 'to', user, options)];\n            });\n        });\n    };\n    /**\n     * Subscribes to events representing a stream changing, e.g. going live, offline or changing its title.\n     *\n     * @expandParams\n     *\n     * @param user The user for which to get notifications about their streams changing.\n     * @param options\n     */\n    HelixWebHooksAPI.prototype.subscribeToStreamChanges = function (user, options) {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            return tslib_1.__generator(this, function (_a) {\n                return [2 /*return*/, this._sendStreamChangeHubRequest('subscribe', user, options)];\n            });\n        });\n    };\n    /**\n     * Unsubscribes from events representing a stream changing, e.g. going live, offline or changing its title.\n     *\n     * @expandParams\n     *\n     * @param user The user for which not to get any more notifications about their streams changing.\n     * @param options\n     */\n    HelixWebHooksAPI.prototype.unsubscribeFromStreamChanges = function (user, options) {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            return tslib_1.__generator(this, function (_a) {\n                return [2 /*return*/, this._sendStreamChangeHubRequest('unsubscribe', user, options)];\n            });\n        });\n    };\n    /**\n     * Subscribes to events representing a user changing a public setting or their email address.\n     *\n     * @expandParams\n     *\n     * @param user The user for which to get notifications about changing a setting.\n     * @param options\n     * @param withEmail Whether to subscribe to email address changes. This adds the necessary scope to read the email address to the request.\n     */\n    HelixWebHooksAPI.prototype.subscribeToUserChanges = function (user, options, withEmail) {\n        if (withEmail === void 0) { withEmail = false; }\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            return tslib_1.__generator(this, function (_a) {\n                return [2 /*return*/, this._sendUserChangeHubRequest('subscribe', user, options, withEmail)];\n            });\n        });\n    };\n    /**\n     * Unsubscribes from events representing a user changing a public setting or their email address.\n     *\n     * @expandParams\n     *\n     * @param user The user for which not to get any more notifications about changing a setting.\n     * @param options\n     */\n    HelixWebHooksAPI.prototype.unsubscribeFromUserChanges = function (user, options) {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            return tslib_1.__generator(this, function (_a) {\n                return [2 /*return*/, this._sendUserChangeHubRequest('unsubscribe', user, options)];\n            });\n        });\n    };\n    HelixWebHooksAPI.prototype._sendUserFollowsHubRequest = function (mode, direction, user, options) {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            var userId;\n            return tslib_1.__generator(this, function (_a) {\n                userId = UserTools_1.extractUserId(user);\n                return [2 /*return*/, this.sendHubRequest(tslib_1.__assign({ mode: mode, topicUrl: \"https://api.twitch.tv/helix/users/follows?first=1&\" + direction + \"_id=\" + userId }, options))];\n            });\n        });\n    };\n    HelixWebHooksAPI.prototype._sendStreamChangeHubRequest = function (mode, user, options) {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            var userId;\n            return tslib_1.__generator(this, function (_a) {\n                userId = UserTools_1.extractUserId(user);\n                return [2 /*return*/, this.sendHubRequest(tslib_1.__assign({ mode: mode, topicUrl: \"https://api.twitch.tv/helix/streams?user_id=\" + userId }, options))];\n            });\n        });\n    };\n    HelixWebHooksAPI.prototype._sendUserChangeHubRequest = function (mode, user, options, withEmail) {\n        if (withEmail === void 0) { withEmail = false; }\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            var userId;\n            return tslib_1.__generator(this, function (_a) {\n                userId = UserTools_1.extractUserId(user);\n                return [2 /*return*/, this.sendHubRequest(tslib_1.__assign({ mode: mode, topicUrl: \"https://api.twitch.tv/helix/users?id=\" + userId, scope: withEmail ? 'user:read:email' : undefined }, options))];\n            });\n        });\n    };\n    return HelixWebHooksAPI;\n}(BaseAPI_1.default));\nexports.default = HelixWebHooksAPI;\n//# sourceMappingURL=HelixWebHooksAPI.js.map","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar BaseAPI_1 = require(\"../../BaseAPI\");\nvar HelixUser_1 = require(\"./HelixUser\");\nvar HelixPrivilegedUser_1 = require(\"./HelixPrivilegedUser\");\nvar UserTools_1 = require(\"../../../Toolkit/UserTools\");\nvar HelixFollow_1 = require(\"./HelixFollow\");\nvar TwitchClient_1 = require(\"../../../TwitchClient\");\nvar HelixPaginatedRequestWithTotal_1 = require(\"../HelixPaginatedRequestWithTotal\");\nvar HellFreezesOverError_1 = require(\"../../../Errors/HellFreezesOverError\");\n/** @private */\nvar UserLookupType;\n(function (UserLookupType) {\n    UserLookupType[\"Id\"] = \"id\";\n    UserLookupType[\"Login\"] = \"login\";\n})(UserLookupType = exports.UserLookupType || (exports.UserLookupType = {}));\n/**\n * The Helix API methods that deal with users.\n *\n * Can be accessed using `client.helix.users` on a {@TwitchClient} instance.\n *\n * ## Example\n * ```ts\n * const client = await TwitchClient.withCredentials(clientId, accessToken);\n * const user = await client.helix.users.getUserById('125328655');\n * ```\n */\nvar HelixUserAPI = /** @class */ (function (_super) {\n    tslib_1.__extends(HelixUserAPI, _super);\n    function HelixUserAPI() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * Retrieves the user data for the given list of user IDs.\n     *\n     * @param userIds The user IDs you want to look up.\n     */\n    HelixUserAPI.prototype.getUsersByIds = function (userIds) {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            return tslib_1.__generator(this, function (_a) {\n                return [2 /*return*/, this._getUsers(UserLookupType.Id, userIds.map(UserTools_1.extractUserId))];\n            });\n        });\n    };\n    /**\n     * Retrieves the user data for the given list of user names.\n     *\n     * @param userNames The user names you want to look up.\n     */\n    HelixUserAPI.prototype.getUsersByNames = function (userNames) {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            return tslib_1.__generator(this, function (_a) {\n                return [2 /*return*/, this._getUsers(UserLookupType.Login, userNames.map(UserTools_1.extractUserName))];\n            });\n        });\n    };\n    /**\n     * Retrieves the user data for the given user ID.\n     *\n     * @param userId The user ID you want to look up.\n     */\n    HelixUserAPI.prototype.getUserById = function (userId) {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            var users;\n            return tslib_1.__generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this._getUsers(UserLookupType.Id, UserTools_1.extractUserId(userId))];\n                    case 1:\n                        users = _a.sent();\n                        return [2 /*return*/, users.length ? users[0] : null];\n                }\n            });\n        });\n    };\n    /**\n     * Retrieves the user data for the given user name.\n     *\n     * @param userName The user name you want to look up.\n     */\n    HelixUserAPI.prototype.getUserByName = function (userName) {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            var users;\n            return tslib_1.__generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this._getUsers(UserLookupType.Login, UserTools_1.extractUserName(userName))];\n                    case 1:\n                        users = _a.sent();\n                        return [2 /*return*/, users.length ? users[0] : null];\n                }\n            });\n        });\n    };\n    /**\n     * Retrieves the user data of the currently authenticated user.\n     *\n     * @param withEmail Whether you need the user's email address.\n     */\n    HelixUserAPI.prototype.getMe = function (withEmail) {\n        if (withEmail === void 0) { withEmail = false; }\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            var result;\n            return tslib_1.__generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this._client.callAPI({\n                            type: TwitchClient_1.TwitchAPICallType.Helix,\n                            url: 'users',\n                            scope: withEmail ? 'user:read:email' : ''\n                        })];\n                    case 1:\n                        result = _a.sent();\n                        if (!result.data || !result.data.length) {\n                            throw new HellFreezesOverError_1.default('Could not get authenticated user');\n                        }\n                        return [2 /*return*/, new HelixPrivilegedUser_1.default(result.data[0], this._client)];\n                }\n            });\n        });\n    };\n    /**\n     * Updates the currently authenticated user's data.\n     *\n     * @param data The data to update.\n     */\n    HelixUserAPI.prototype.updateUser = function (data) {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            var result;\n            return tslib_1.__generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this._client.callAPI({\n                            type: TwitchClient_1.TwitchAPICallType.Helix,\n                            url: 'users',\n                            method: 'PUT',\n                            scope: 'user:edit',\n                            query: {\n                                description: data.description\n                            }\n                        })];\n                    case 1:\n                        result = _a.sent();\n                        return [2 /*return*/, new HelixPrivilegedUser_1.default(result.data[0], this._client)];\n                }\n            });\n        });\n    };\n    /**\n     * Retrieves a list of follow relations.\n     *\n     * @param filter Several filtering and pagination parameters. See the {@HelixFollowFilter} documentation.\n     */\n    HelixUserAPI.prototype.getFollows = function (filter) {\n        var _this = this;\n        var query = {};\n        var hasUserIdParam = false;\n        if (filter.user) {\n            query.from_id = UserTools_1.extractUserId(filter.user);\n            hasUserIdParam = true;\n        }\n        if (filter.followedUser) {\n            query.to_id = UserTools_1.extractUserId(filter.followedUser);\n            hasUserIdParam = true;\n        }\n        if (!hasUserIdParam) {\n            throw new TypeError('At least one of user and followedUser have to be set');\n        }\n        return new HelixPaginatedRequestWithTotal_1.default({\n            url: 'users/follows',\n            query: query\n        }, this._client, function (data) { return new HelixFollow_1.default(data, _this._client); });\n    };\n    HelixUserAPI.prototype._getUsers = function (lookupType, param) {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            var _a, query, result;\n            var _this = this;\n            return tslib_1.__generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0:\n                        query = (_a = {}, _a[lookupType] = param, _a);\n                        return [4 /*yield*/, this._client.callAPI({\n                                type: TwitchClient_1.TwitchAPICallType.Helix,\n                                url: 'users',\n                                query: query\n                            })];\n                    case 1:\n                        result = _b.sent();\n                        return [2 /*return*/, result.data.map(function (userData) { return new HelixUser_1.default(userData, _this._client); })];\n                }\n            });\n        });\n    };\n    return HelixUserAPI;\n}(BaseAPI_1.default));\nexports.default = HelixUserAPI;\n//# sourceMappingURL=HelixUserAPI.js.map","'use strict';\n\nvar utils = require('./utils');\n\nvar has = Object.prototype.hasOwnProperty;\n\nvar defaults = {\n    allowDots: false,\n    allowPrototypes: false,\n    arrayLimit: 20,\n    charset: 'utf-8',\n    charsetSentinel: false,\n    comma: false,\n    decoder: utils.decode,\n    delimiter: '&',\n    depth: 5,\n    ignoreQueryPrefix: false,\n    interpretNumericEntities: false,\n    parameterLimit: 1000,\n    parseArrays: true,\n    plainObjects: false,\n    strictNullHandling: false\n};\n\nvar interpretNumericEntities = function (str) {\n    return str.replace(/&#(\\d+);/g, function ($0, numberStr) {\n        return String.fromCharCode(parseInt(numberStr, 10));\n    });\n};\n\n// This is what browsers will submit when the ✓ character occurs in an\n// application/x-www-form-urlencoded body and the encoding of the page containing\n// the form is iso-8859-1, or when the submitted form has an accept-charset\n// attribute of iso-8859-1. Presumably also with other charsets that do not contain\n// the ✓ character, such as us-ascii.\nvar isoSentinel = 'utf8=%26%2310003%3B'; // encodeURIComponent('&#10003;')\n\n// These are the percent-encoded utf-8 octets representing a checkmark, indicating that the request actually is utf-8 encoded.\nvar charsetSentinel = 'utf8=%E2%9C%93'; // encodeURIComponent('✓')\n\nvar parseValues = function parseQueryStringValues(str, options) {\n    var obj = {};\n    var cleanStr = options.ignoreQueryPrefix ? str.replace(/^\\?/, '') : str;\n    var limit = options.parameterLimit === Infinity ? undefined : options.parameterLimit;\n    var parts = cleanStr.split(options.delimiter, limit);\n    var skipIndex = -1; // Keep track of where the utf8 sentinel was found\n    var i;\n\n    var charset = options.charset;\n    if (options.charsetSentinel) {\n        for (i = 0; i < parts.length; ++i) {\n            if (parts[i].indexOf('utf8=') === 0) {\n                if (parts[i] === charsetSentinel) {\n                    charset = 'utf-8';\n                } else if (parts[i] === isoSentinel) {\n                    charset = 'iso-8859-1';\n                }\n                skipIndex = i;\n                i = parts.length; // The eslint settings do not allow break;\n            }\n        }\n    }\n\n    for (i = 0; i < parts.length; ++i) {\n        if (i === skipIndex) {\n            continue;\n        }\n        var part = parts[i];\n\n        var bracketEqualsPos = part.indexOf(']=');\n        var pos = bracketEqualsPos === -1 ? part.indexOf('=') : bracketEqualsPos + 1;\n\n        var key, val;\n        if (pos === -1) {\n            key = options.decoder(part, defaults.decoder, charset);\n            val = options.strictNullHandling ? null : '';\n        } else {\n            key = options.decoder(part.slice(0, pos), defaults.decoder, charset);\n            val = options.decoder(part.slice(pos + 1), defaults.decoder, charset);\n        }\n\n        if (val && options.interpretNumericEntities && charset === 'iso-8859-1') {\n            val = interpretNumericEntities(val);\n        }\n\n        if (val && options.comma && val.indexOf(',') > -1) {\n            val = val.split(',');\n        }\n\n        if (has.call(obj, key)) {\n            obj[key] = utils.combine(obj[key], val);\n        } else {\n            obj[key] = val;\n        }\n    }\n\n    return obj;\n};\n\nvar parseObject = function (chain, val, options) {\n    var leaf = val;\n\n    for (var i = chain.length - 1; i >= 0; --i) {\n        var obj;\n        var root = chain[i];\n\n        if (root === '[]' && options.parseArrays) {\n            obj = [].concat(leaf);\n        } else {\n            obj = options.plainObjects ? Object.create(null) : {};\n            var cleanRoot = root.charAt(0) === '[' && root.charAt(root.length - 1) === ']' ? root.slice(1, -1) : root;\n            var index = parseInt(cleanRoot, 10);\n            if (!options.parseArrays && cleanRoot === '') {\n                obj = { 0: leaf };\n            } else if (\n                !isNaN(index)\n                && root !== cleanRoot\n                && String(index) === cleanRoot\n                && index >= 0\n                && (options.parseArrays && index <= options.arrayLimit)\n            ) {\n                obj = [];\n                obj[index] = leaf;\n            } else {\n                obj[cleanRoot] = leaf;\n            }\n        }\n\n        leaf = obj;\n    }\n\n    return leaf;\n};\n\nvar parseKeys = function parseQueryStringKeys(givenKey, val, options) {\n    if (!givenKey) {\n        return;\n    }\n\n    // Transform dot notation to bracket notation\n    var key = options.allowDots ? givenKey.replace(/\\.([^.[]+)/g, '[$1]') : givenKey;\n\n    // The regex chunks\n\n    var brackets = /(\\[[^[\\]]*])/;\n    var child = /(\\[[^[\\]]*])/g;\n\n    // Get the parent\n\n    var segment = brackets.exec(key);\n    var parent = segment ? key.slice(0, segment.index) : key;\n\n    // Stash the parent if it exists\n\n    var keys = [];\n    if (parent) {\n        // If we aren't using plain objects, optionally prefix keys that would overwrite object prototype properties\n        if (!options.plainObjects && has.call(Object.prototype, parent)) {\n            if (!options.allowPrototypes) {\n                return;\n            }\n        }\n\n        keys.push(parent);\n    }\n\n    // Loop through children appending to the array until we hit depth\n\n    var i = 0;\n    while ((segment = child.exec(key)) !== null && i < options.depth) {\n        i += 1;\n        if (!options.plainObjects && has.call(Object.prototype, segment[1].slice(1, -1))) {\n            if (!options.allowPrototypes) {\n                return;\n            }\n        }\n        keys.push(segment[1]);\n    }\n\n    // If there's a remainder, just add whatever is left\n\n    if (segment) {\n        keys.push('[' + key.slice(segment.index) + ']');\n    }\n\n    return parseObject(keys, val, options);\n};\n\nvar normalizeParseOptions = function normalizeParseOptions(opts) {\n    if (!opts) {\n        return defaults;\n    }\n\n    if (opts.decoder !== null && opts.decoder !== undefined && typeof opts.decoder !== 'function') {\n        throw new TypeError('Decoder has to be a function.');\n    }\n\n    if (typeof opts.charset !== 'undefined' && opts.charset !== 'utf-8' && opts.charset !== 'iso-8859-1') {\n        throw new Error('The charset option must be either utf-8, iso-8859-1, or undefined');\n    }\n    var charset = typeof opts.charset === 'undefined' ? defaults.charset : opts.charset;\n\n    return {\n        allowDots: typeof opts.allowDots === 'undefined' ? defaults.allowDots : !!opts.allowDots,\n        allowPrototypes: typeof opts.allowPrototypes === 'boolean' ? opts.allowPrototypes : defaults.allowPrototypes,\n        arrayLimit: typeof opts.arrayLimit === 'number' ? opts.arrayLimit : defaults.arrayLimit,\n        charset: charset,\n        charsetSentinel: typeof opts.charsetSentinel === 'boolean' ? opts.charsetSentinel : defaults.charsetSentinel,\n        comma: typeof opts.comma === 'boolean' ? opts.comma : defaults.comma,\n        decoder: typeof opts.decoder === 'function' ? opts.decoder : defaults.decoder,\n        delimiter: typeof opts.delimiter === 'string' || utils.isRegExp(opts.delimiter) ? opts.delimiter : defaults.delimiter,\n        depth: typeof opts.depth === 'number' ? opts.depth : defaults.depth,\n        ignoreQueryPrefix: opts.ignoreQueryPrefix === true,\n        interpretNumericEntities: typeof opts.interpretNumericEntities === 'boolean' ? opts.interpretNumericEntities : defaults.interpretNumericEntities,\n        parameterLimit: typeof opts.parameterLimit === 'number' ? opts.parameterLimit : defaults.parameterLimit,\n        parseArrays: opts.parseArrays !== false,\n        plainObjects: typeof opts.plainObjects === 'boolean' ? opts.plainObjects : defaults.plainObjects,\n        strictNullHandling: typeof opts.strictNullHandling === 'boolean' ? opts.strictNullHandling : defaults.strictNullHandling\n    };\n};\n\nmodule.exports = function (str, opts) {\n    var options = normalizeParseOptions(opts);\n\n    if (str === '' || str === null || typeof str === 'undefined') {\n        return options.plainObjects ? Object.create(null) : {};\n    }\n\n    var tempObj = typeof str === 'string' ? parseValues(str, options) : str;\n    var obj = options.plainObjects ? Object.create(null) : {};\n\n    // Iterate over the keys and setup the new object\n\n    var keys = Object.keys(tempObj);\n    for (var i = 0; i < keys.length; ++i) {\n        var key = keys[i];\n        var newObj = parseKeys(key, tempObj[key], options);\n        obj = utils.merge(obj, newObj, options);\n    }\n\n    return utils.compact(obj);\n};\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar Cache_1 = require(\"../../../Toolkit/Decorators/Cache\");\nvar BaseAPI_1 = require(\"../../BaseAPI\");\nvar Channel_1 = require(\"./Channel\");\nvar UserTools_1 = require(\"../../../Toolkit/UserTools\");\nvar ChannelSubscription_1 = require(\"./ChannelSubscription\");\nvar NoSubscriptionProgramError_1 = require(\"../../../Errors/NoSubscriptionProgramError\");\nvar PrivilegedChannel_1 = require(\"./PrivilegedChannel\");\nvar User_1 = require(\"../User/User\");\nvar ChannelFollow_1 = require(\"./ChannelFollow\");\nvar HTTPStatusCodeError_1 = require(\"../../../Errors/HTTPStatusCodeError\");\n/**\n * The API methods that deal with channels.\n *\n * Can be accessed using `client.kraken.channels` on a {@TwitchClient} instance.\n *\n * ## Example\n * ```ts\n * const client = await TwitchClient.withCredentials(clientId, accessToken);\n * const channel = await client.kraken.channels.getMyChannel();\n * ```\n */\nvar ChannelAPI = /** @class */ (function (_super) {\n    tslib_1.__extends(ChannelAPI, _super);\n    function ChannelAPI() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * Gets the channel the client is logged in to.\n     */\n    ChannelAPI.prototype.getMyChannel = function () {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            var _a;\n            return tslib_1.__generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0:\n                        _a = PrivilegedChannel_1.default.bind;\n                        return [4 /*yield*/, this._client.callAPI({ url: 'channel', scope: 'channel_read' })];\n                    case 1: return [2 /*return*/, new (_a.apply(PrivilegedChannel_1.default, [void 0, _b.sent(), this._client]))()];\n                }\n            });\n        });\n    };\n    /**\n     * Retrieves the channel for the given user.\n     *\n     * @param user The user you want to retrieve the channel for.\n     */\n    ChannelAPI.prototype.getChannel = function (user) {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            var _a;\n            return tslib_1.__generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0:\n                        _a = Channel_1.default.bind;\n                        return [4 /*yield*/, this._client.callAPI({ url: \"channels/\" + UserTools_1.extractUserId(user) })];\n                    case 1: return [2 /*return*/, new (_a.apply(Channel_1.default, [void 0, _b.sent(), this._client]))()];\n                }\n            });\n        });\n    };\n    /**\n     * Updates the given channel with the given data.\n     *\n     * @param channel The channel you want to update.\n     * @param data The updated channel data.\n     */\n    ChannelAPI.prototype.updateChannel = function (channel, data) {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            var channelId;\n            return tslib_1.__generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        channelId = UserTools_1.extractUserId(channel);\n                        return [4 /*yield*/, this._client.callAPI({\n                                url: \"channels/\" + channelId,\n                                method: 'PUT',\n                                jsonBody: { channel: data },\n                                scope: 'channel_editor'\n                            })];\n                    case 1:\n                        _a.sent();\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Retrieves the list of users that have editor rights to the given channel.\n     *\n     * @param channel The channel you want to retrieve the list of editors for.\n     */\n    ChannelAPI.prototype.getChannelEditors = function (channel) {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            var channelId, data;\n            var _this = this;\n            return tslib_1.__generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        channelId = UserTools_1.extractUserId(channel);\n                        return [4 /*yield*/, this._client.callAPI({\n                                url: \"channels/\" + channelId + \"/editors\",\n                                scope: 'channel_read'\n                            })];\n                    case 1:\n                        data = _a.sent();\n                        return [2 /*return*/, data.users.map(function (userData) { return new User_1.default(userData, _this._client); })];\n                }\n            });\n        });\n    };\n    /**\n     * Retrieves the list of followers of the given channel.\n     *\n     * @param channel The channel you want to retrieve the list of followers of.\n     * @param page The result page you want to retrieve.\n     * @param limit The number of results you want to retrieve.\n     * @param orderDirection The direction to order in - ascending or descending.\n     */\n    ChannelAPI.prototype.getChannelFollowers = function (channel, page, limit, orderDirection) {\n        if (limit === void 0) { limit = 25; }\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            var channelId, query, data;\n            var _this = this;\n            return tslib_1.__generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        channelId = UserTools_1.extractUserId(channel);\n                        query = { limit: limit.toString() };\n                        if (page) {\n                            query.offset = ((page - 1) * limit).toString();\n                        }\n                        if (orderDirection) {\n                            query.direction = orderDirection;\n                        }\n                        return [4 /*yield*/, this._client.callAPI({\n                                url: \"channels/\" + channelId + \"/follows\",\n                                query: query\n                            })];\n                    case 1:\n                        data = _a.sent();\n                        return [2 /*return*/, data.follows.map(function (follow) { return new ChannelFollow_1.default(follow, _this._client); })];\n                }\n            });\n        });\n    };\n    /**\n     * Retrieves the list of subscribers of the given channel.\n     *\n     * @param channel The channel you want to retrieve the list of subscribers of.\n     * @param page The result page you want to retrieve.\n     * @param limit The number of results you want to retrieve.\n     * @param orderDirection The direction to order in - ascending or descending.\n     */\n    ChannelAPI.prototype.getChannelSubscriptions = function (channel, page, limit, orderDirection) {\n        if (limit === void 0) { limit = 25; }\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            var data;\n            var _this = this;\n            return tslib_1.__generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this._getChannelSubscriptions(channel, page, limit, orderDirection)];\n                    case 1:\n                        data = _a.sent();\n                        return [2 /*return*/, data.subscriptions.map(function (sub) { return new ChannelSubscription_1.default(sub, _this._client); })];\n                }\n            });\n        });\n    };\n    /**\n     * Retrieves the total number of subscribers for the given channel.\n     *\n     * @param channel The channel you want to retrieve the number of subscribers for.\n     */\n    ChannelAPI.prototype.getChannelSubscriptionCount = function (channel) {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            var data;\n            return tslib_1.__generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this._getChannelSubscriptions(channel, 0, 1)];\n                    case 1:\n                        data = _a.sent();\n                        return [2 /*return*/, data._total];\n                }\n            });\n        });\n    };\n    /**\n     * Retrieves the subscription data for the given user to a given channel.\n     *\n     * Throws if the channel doesn't have a subscription program or the user is not subscribed to it.\n     *\n     * This method requires access to the channel. If you only have access to the user,\n     * use {@UserAPI#getSubscriptionData} instead.\n     *\n     * @param channel The channel to check the subscription to.\n     * @param byUser The user to check the subscription for.\n     */\n    ChannelAPI.prototype.getChannelSubscriptionByUser = function (channel, byUser) {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            var channelId, userId, _a, e_1;\n            return tslib_1.__generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0:\n                        channelId = UserTools_1.extractUserId(channel);\n                        userId = UserTools_1.extractUserId(byUser);\n                        _b.label = 1;\n                    case 1:\n                        _b.trys.push([1, 3, , 4]);\n                        _a = ChannelSubscription_1.default.bind;\n                        return [4 /*yield*/, this._client.callAPI({\n                                url: \"channels/\" + channelId + \"/subscriptions/\" + userId,\n                                scope: 'channel_check_subscription'\n                            })];\n                    case 2: return [2 /*return*/, new (_a.apply(ChannelSubscription_1.default, [void 0, _b.sent(),\n                            this._client]))()];\n                    case 3:\n                        e_1 = _b.sent();\n                        if (e_1 instanceof HTTPStatusCodeError_1.default) {\n                            if (e_1.statusCode === 404) {\n                                return [2 /*return*/, null];\n                            }\n                            else if (e_1.statusCode === 422) {\n                                throw new NoSubscriptionProgramError_1.default(channelId);\n                            }\n                        }\n                        throw e_1;\n                    case 4: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Starts a commercial in the given channel.\n     *\n     * @param channel The channel to start the commercial in.\n     * @param length The length of the commercial.\n     */\n    ChannelAPI.prototype.startChannelCommercial = function (channel, length) {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            var channelId;\n            return tslib_1.__generator(this, function (_a) {\n                channelId = UserTools_1.extractUserId(channel);\n                return [2 /*return*/, this._client.callAPI({\n                        url: \"channels/\" + channelId + \"/commercial\",\n                        method: 'POST',\n                        jsonBody: { length: length },\n                        scope: 'channel_commercial'\n                    })];\n            });\n        });\n    };\n    /**\n     * Resets the given channel's stream key.\n     *\n     * @param channel The channel to reset the stream key for.\n     */\n    ChannelAPI.prototype.resetChannelStreamKey = function (channel) {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            var channelId;\n            return tslib_1.__generator(this, function (_a) {\n                channelId = UserTools_1.extractUserId(channel);\n                return [2 /*return*/, this._client.callAPI({\n                        url: \"channels/\" + channelId + \"/stream_key\",\n                        method: 'DELETE',\n                        scope: 'channel_stream'\n                    })];\n            });\n        });\n    };\n    ChannelAPI.prototype._getChannelSubscriptions = function (channel, page, limit, orderDirection) {\n        if (limit === void 0) { limit = 25; }\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            var channelId, query, e_2;\n            return tslib_1.__generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        channelId = UserTools_1.extractUserId(channel);\n                        query = { limit: limit.toString() };\n                        if (page) {\n                            query.offset = ((page - 1) * limit).toString();\n                        }\n                        if (orderDirection) {\n                            query.direction = orderDirection;\n                        }\n                        _a.label = 1;\n                    case 1:\n                        _a.trys.push([1, 3, , 4]);\n                        return [4 /*yield*/, this._client.callAPI({\n                                url: \"channels/\" + channelId + \"/subscriptions\",\n                                query: query,\n                                scope: 'channel_subscriptions'\n                            })];\n                    case 2: return [2 /*return*/, _a.sent()];\n                    case 3:\n                        e_2 = _a.sent();\n                        if (e_2 instanceof HTTPStatusCodeError_1.default && e_2.statusCode === 422) {\n                            throw new NoSubscriptionProgramError_1.default(channelId);\n                        }\n                        throw e_2;\n                    case 4: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    tslib_1.__decorate([\n        Cache_1.Cached(3600)\n    ], ChannelAPI.prototype, \"getMyChannel\", null);\n    tslib_1.__decorate([\n        Cache_1.Cached(3600)\n    ], ChannelAPI.prototype, \"getChannel\", null);\n    tslib_1.__decorate([\n        Cache_1.ClearsCache('getChannel', 1)\n    ], ChannelAPI.prototype, \"updateChannel\", null);\n    tslib_1.__decorate([\n        Cache_1.Cached(3600)\n    ], ChannelAPI.prototype, \"getChannelEditors\", null);\n    tslib_1.__decorate([\n        Cache_1.Cached(30)\n    ], ChannelAPI.prototype, \"getChannelFollowers\", null);\n    tslib_1.__decorate([\n        Cache_1.Cached(30)\n    ], ChannelAPI.prototype, \"getChannelSubscriptions\", null);\n    tslib_1.__decorate([\n        Cache_1.Cached(30)\n    ], ChannelAPI.prototype, \"getChannelSubscriptionCount\", null);\n    tslib_1.__decorate([\n        Cache_1.Cached(3600)\n    ], ChannelAPI.prototype, \"getChannelSubscriptionByUser\", null);\n    tslib_1.__decorate([\n        Cache_1.ClearsCache('getMyChannel')\n    ], ChannelAPI.prototype, \"resetChannelStreamKey\", null);\n    ChannelAPI = tslib_1.__decorate([\n        Cache_1.Cacheable\n    ], ChannelAPI);\n    return ChannelAPI;\n}(BaseAPI_1.default));\nexports.default = ChannelAPI;\n//# sourceMappingURL=ChannelAPI.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar HelixUser_1 = require(\"./HelixUser\");\n/**\n * A user you have extended privilges for, i.e. yourself.\n */\nvar HelixPrivilegedUser = /** @class */ (function (_super) {\n    tslib_1.__extends(HelixPrivilegedUser, _super);\n    function HelixPrivilegedUser() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Object.defineProperty(HelixPrivilegedUser.prototype, \"email\", {\n        /**\n         * The email address of the user.\n         */\n        get: function () {\n            return this._data.email;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Changes the description of the user.\n     *\n     * @param description The new description.\n     */\n    HelixPrivilegedUser.prototype.setDescription = function (description) {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            return tslib_1.__generator(this, function (_a) {\n                return [2 /*return*/, this._client.helix.users.updateUser({ description: description })];\n            });\n        });\n    };\n    return HelixPrivilegedUser;\n}(HelixUser_1.default));\nexports.default = HelixPrivilegedUser;\n//# sourceMappingURL=HelixPrivilegedUser.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar BaseAPI_1 = require(\"../BaseAPI\");\nvar Cache_1 = require(\"../../Toolkit/Decorators/Cache\");\nvar HelixBitsAPI_1 = require(\"./Bits/HelixBitsAPI\");\nvar HelixClipAPI_1 = require(\"./Clip/HelixClipAPI\");\nvar HelixGameAPI_1 = require(\"./Game/HelixGameAPI\");\nvar HelixStreamAPI_1 = require(\"./Stream/HelixStreamAPI\");\nvar HelixSubscriptionAPI_1 = require(\"./Subscriptions/HelixSubscriptionAPI\");\nvar HelixUserAPI_1 = require(\"./User/HelixUserAPI\");\nvar HelixVideoAPI_1 = require(\"./Video/HelixVideoAPI\");\nvar HelixWebHooksAPI_1 = require(\"./WebHooks/HelixWebHooksAPI\");\n/**\n * Groups all API calls available in Helix a.k.a. the \"New Twitch API\".\n *\n * Can be accessed using {@TwitchClient#helix}.\n */\nvar HelixAPIGroup = /** @class */ (function (_super) {\n    tslib_1.__extends(HelixAPIGroup, _super);\n    function HelixAPIGroup() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Object.defineProperty(HelixAPIGroup.prototype, \"bits\", {\n        /**\n         * The Helix bits API methods.\n         */\n        get: function () {\n            return new HelixBitsAPI_1.default(this._client);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(HelixAPIGroup.prototype, \"clips\", {\n        /**\n         * The Helix clips API methods.\n         */\n        get: function () {\n            return new HelixClipAPI_1.default(this._client);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(HelixAPIGroup.prototype, \"games\", {\n        /**\n         * The Helix game API methods.\n         */\n        get: function () {\n            return new HelixGameAPI_1.default(this._client);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(HelixAPIGroup.prototype, \"streams\", {\n        /**\n         * The Helix stream API methods.\n         */\n        get: function () {\n            return new HelixStreamAPI_1.default(this._client);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(HelixAPIGroup.prototype, \"subscriptions\", {\n        /**\n         * The Helix subscription API methods.\n         */\n        get: function () {\n            return new HelixSubscriptionAPI_1.default(this._client);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(HelixAPIGroup.prototype, \"users\", {\n        /**\n         * The Helix user API methods.\n         */\n        get: function () {\n            return new HelixUserAPI_1.default(this._client);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(HelixAPIGroup.prototype, \"webHooks\", {\n        /**\n         * The Helix WebHook API methods.\n         */\n        get: function () {\n            return new HelixWebHooksAPI_1.default(this._client);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(HelixAPIGroup.prototype, \"videos\", {\n        /**\n         * The Helix video API methods.\n         */\n        get: function () {\n            return new HelixVideoAPI_1.default(this._client);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    tslib_1.__decorate([\n        Cache_1.CachedGetter()\n    ], HelixAPIGroup.prototype, \"bits\", null);\n    tslib_1.__decorate([\n        Cache_1.CachedGetter()\n    ], HelixAPIGroup.prototype, \"clips\", null);\n    tslib_1.__decorate([\n        Cache_1.CachedGetter()\n    ], HelixAPIGroup.prototype, \"games\", null);\n    tslib_1.__decorate([\n        Cache_1.CachedGetter()\n    ], HelixAPIGroup.prototype, \"streams\", null);\n    tslib_1.__decorate([\n        Cache_1.CachedGetter()\n    ], HelixAPIGroup.prototype, \"subscriptions\", null);\n    tslib_1.__decorate([\n        Cache_1.CachedGetter()\n    ], HelixAPIGroup.prototype, \"users\", null);\n    tslib_1.__decorate([\n        Cache_1.CachedGetter()\n    ], HelixAPIGroup.prototype, \"webHooks\", null);\n    tslib_1.__decorate([\n        Cache_1.CachedGetter()\n    ], HelixAPIGroup.prototype, \"videos\", null);\n    HelixAPIGroup = tslib_1.__decorate([\n        Cache_1.Cacheable\n    ], HelixAPIGroup);\n    return HelixAPIGroup;\n}(BaseAPI_1.default));\nexports.default = HelixAPIGroup;\n//# sourceMappingURL=HelixAPIGroup.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar Cache_1 = require(\"../../Toolkit/Decorators/Cache\");\nvar BaseAPI_1 = require(\"../BaseAPI\");\nvar ChattersList_1 = require(\"./ChattersList\");\nvar UserTools_1 = require(\"../../Toolkit/UserTools\");\nvar ChannelEvent_1 = require(\"./ChannelEvent\");\nvar TwitchClient_1 = require(\"../../TwitchClient\");\n/**\n * Different API methods that are not officially supported by Twitch.\n *\n * Can be accessed using `client.unsupported` on a {@TwitchClient} instance.\n *\n * ## Example\n * ```ts\n * const client = await TwitchClient.withCredentials(clientId, accessToken);\n * const events = await client.unsupported.getEvents('125328655');\n * ```\n */\nvar UnsupportedAPI = /** @class */ (function (_super) {\n    tslib_1.__extends(UnsupportedAPI, _super);\n    function UnsupportedAPI() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * Retrieves a list of chatters in the Twitch chat of the given channel.\n     *\n     * **WARNING**: In contrast to most other methods, this takes a channel *name*, not a user ID.\n     *\n     * @param channel The channel to retrieve the chatters for.\n     */\n    UnsupportedAPI.prototype.getChatters = function (channel) {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            var channelName, data;\n            return tslib_1.__generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        channelName = UserTools_1.extractUserName(channel);\n                        return [4 /*yield*/, this._client.callAPI({\n                                url: \"https://tmi.twitch.tv/group/user/\" + channelName + \"/chatters\",\n                                type: TwitchClient_1.TwitchAPICallType.Custom\n                            })];\n                    case 1:\n                        data = _a.sent();\n                        return [2 /*return*/, new ChattersList_1.default(data)];\n                }\n            });\n        });\n    };\n    /**\n     * Retrieves a list of event planned for the given channel.\n     *\n     * @param channel The channel to retrieve the events for.\n     */\n    UnsupportedAPI.prototype.getEvents = function (channel) {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            var channelId, data;\n            var _this = this;\n            return tslib_1.__generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        channelId = UserTools_1.extractUserId(channel);\n                        return [4 /*yield*/, this._client.callAPI({ url: \"channels/\" + channelId + \"/events\" })];\n                    case 1:\n                        data = _a.sent();\n                        return [2 /*return*/, data.events.map(function (event) { return new ChannelEvent_1.default(event, _this._client); })];\n                }\n            });\n        });\n    };\n    tslib_1.__decorate([\n        Cache_1.Cached(60)\n    ], UnsupportedAPI.prototype, \"getChatters\", null);\n    tslib_1.__decorate([\n        Cache_1.Cached(60)\n    ], UnsupportedAPI.prototype, \"getEvents\", null);\n    UnsupportedAPI = tslib_1.__decorate([\n        Cache_1.Cacheable\n    ], UnsupportedAPI);\n    return UnsupportedAPI;\n}(BaseAPI_1.default));\nexports.default = UnsupportedAPI;\n//# sourceMappingURL=UnsupportedAPI.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\n/** @private */\nvar NonEnumerable_1 = require(\"../../../Toolkit/Decorators/NonEnumerable\");\nvar ChatRoom = /** @class */ (function () {\n    /** @private */\n    function ChatRoom(_data, client) {\n        this._data = _data;\n        this._client = client;\n    }\n    Object.defineProperty(ChatRoom.prototype, \"id\", {\n        /**\n         * The ID of the chat room.\n         */\n        get: function () {\n            return this._data._id;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ChatRoom.prototype, \"ownerId\", {\n        /**\n         * The user ID of the chat room owner.\n         */\n        get: function () {\n            return this._data.owner_id;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Retrieves the user data of the chat room owner.\n     */\n    ChatRoom.prototype.getOwner = function () {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            return tslib_1.__generator(this, function (_a) {\n                return [2 /*return*/, this._client.kraken.users.getUser(this._data.owner_id)];\n            });\n        });\n    };\n    Object.defineProperty(ChatRoom.prototype, \"name\", {\n        /**\n         * The name of the chat room.\n         */\n        get: function () {\n            return this._data.name;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ChatRoom.prototype, \"topic\", {\n        /**\n         * The topic of the chat room.\n         */\n        get: function () {\n            return this._data.topic;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ChatRoom.prototype, \"isPreviewable\", {\n        /**\n         * Whether the chat room is previewable.\n         */\n        get: function () {\n            return this._data.is_previewable;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ChatRoom.prototype, \"minRole\", {\n        /**\n         * The minimum role allowed to enter this chat room.\n         */\n        get: function () {\n            return this._data.minimum_allowed_role;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ChatRoom.prototype, \"ircName\", {\n        /**\n         * The name of the IRC channel that corresponds to this chat room.\n         */\n        get: function () {\n            return \"#chatrooms:\" + this._data.owner_id + \":\" + this._data._id;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    tslib_1.__decorate([\n        NonEnumerable_1.NonEnumerable\n    ], ChatRoom.prototype, \"_client\", void 0);\n    return ChatRoom;\n}());\nexports.default = ChatRoom;\n//# sourceMappingURL=ChatRoom.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar NonEnumerable_1 = require(\"../../Toolkit/Decorators/NonEnumerable\");\n/**\n * A subscription to a Twitch channel.\n */\nvar Subscription = /** @class */ (function () {\n    /** @private */\n    function Subscription(/** @private */ _data, client) {\n        this._data = _data;\n        this._client = client;\n    }\n    Object.defineProperty(Subscription.prototype, \"id\", {\n        /**\n         * The ID of the subscription.\n         */\n        get: function () {\n            return this._data._id;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Subscription.prototype, \"subPlan\", {\n        /**\n         * The identifier of the subscription plan.\n         */\n        get: function () {\n            return this._data.sub_plan;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Subscription.prototype, \"subPlanName\", {\n        /**\n         * The name of the subscription plan.\n         */\n        get: function () {\n            return this._data.sub_plan_name;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Subscription.prototype, \"startDate\", {\n        /**\n         * The date when the subscription was started.\n         */\n        get: function () {\n            return new Date(this._data.created_at);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    tslib_1.__decorate([\n        NonEnumerable_1.NonEnumerable\n    ], Subscription.prototype, \"_client\", void 0);\n    return Subscription;\n}());\nexports.default = Subscription;\n//# sourceMappingURL=Subscription.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar ChannelPlaceholder_1 = require(\"./ChannelPlaceholder\");\n/**\n * A Twitch Channel.\n */\nvar Channel = /** @class */ (function (_super) {\n    tslib_1.__extends(Channel, _super);\n    /** @private */\n    function Channel(data, client) {\n        var _this = _super.call(this, data._id, client) || this;\n        _this._data = data;\n        return _this;\n    }\n    // override parent's method so we avoid the API/cache request here if someone wrongly assumes this is a placeholder\n    /** @private */\n    Channel.prototype.getChannel = function () {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            return tslib_1.__generator(this, function (_a) {\n                return [2 /*return*/, this];\n            });\n        });\n    };\n    /**\n     * Updates the game, title or delay of a channel or toggles the channel feed.\n     */\n    Channel.prototype.update = function (data) {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            return tslib_1.__generator(this, function (_a) {\n                return [2 /*return*/, this._client.kraken.channels.updateChannel(this, data)];\n            });\n        });\n    };\n    Object.defineProperty(Channel.prototype, \"name\", {\n        /**\n         * The name of the channel.\n         */\n        get: function () {\n            return this._data.name;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Channel.prototype, \"displayName\", {\n        /**\n         * The display name of the channel, with proper capitalization or as Asian script.\n         */\n        get: function () {\n            return this._data.display_name;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Channel.prototype, \"broadcasterLanguage\", {\n        /**\n         * The broadcaster's language.\n         */\n        get: function () {\n            return this._data.broadcaster_language;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Channel.prototype, \"broadcasterType\", {\n        /**\n         * The broadcaster's type, i.e. \"partner\", \"affiliate\" or \"\" (empty string, so neither of them).\n         */\n        get: function () {\n            return this._data.broadcaster_type;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Channel.prototype, \"creationDate\", {\n        /**\n         * The date when the channel was created.\n         */\n        get: function () {\n            return new Date(this._data.created_at);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Channel.prototype, \"description\", {\n        /**\n         * The description of the channel.\n         */\n        get: function () {\n            return this._data.description;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Channel.prototype, \"followers\", {\n        /**\n         * The number of people following the channel.\n         */\n        get: function () {\n            return this._data.followers;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Channel.prototype, \"game\", {\n        /**\n         * The game that is currently being played on the channel (or was played when it was last online).\n         */\n        get: function () {\n            return this._data.game;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Channel.prototype, \"language\", {\n        /**\n         * The language of the channel.\n         */\n        get: function () {\n            return this._data.language;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Channel.prototype, \"logo\", {\n        /**\n         * The URL to the logo of the channel.\n         */\n        get: function () {\n            return this._data.logo;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Channel.prototype, \"isMature\", {\n        /**\n         * Whether the channel is flagged as suitable for mature audiences only.\n         */\n        get: function () {\n            return this._data.mature;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Channel.prototype, \"isPartner\", {\n        /**\n         * Whether the channel is partnered.\n         */\n        get: function () {\n            return this._data.partner;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Channel.prototype, \"profileBanner\", {\n        /**\n         * The URL to the profile's banner image.\n         */\n        get: function () {\n            return this._data.profile_banner;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Channel.prototype, \"profileBannerBackgroundColor\", {\n        /**\n         * The background color of the profile's banner.\n         */\n        get: function () {\n            return this._data.profile_banner_background_color;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Channel.prototype, \"status\", {\n        /**\n         * The current status message (i.e. the title) of the channel.\n         */\n        get: function () {\n            return this._data.status;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Channel.prototype, \"updateDate\", {\n        /**\n         * The date when the channel was last updated.\n         */\n        get: function () {\n            return new Date(this._data.updated_at);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Channel.prototype, \"url\", {\n        /**\n         * The URL to the channel.\n         */\n        get: function () {\n            return this._data.url;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Channel.prototype, \"videoBanner\", {\n        /**\n         * The URL to the channel's video banner, i.e. the offline image.\n         */\n        get: function () {\n            return this._data.video_banner;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Channel.prototype, \"views\", {\n        /**\n         * The total number of views of the channel.\n         */\n        get: function () {\n            return this._data.views;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return Channel;\n}(ChannelPlaceholder_1.default));\nexports.default = Channel;\n//# sourceMappingURL=Channel.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar BaseAPI_1 = require(\"../BaseAPI\");\nvar Cache_1 = require(\"../../Toolkit/Decorators/Cache\");\nvar BitsAPI_1 = require(\"./Bits/BitsAPI\");\nvar ChannelAPI_1 = require(\"./Channel/ChannelAPI\");\nvar ChatAPI_1 = require(\"./Chat/ChatAPI\");\nvar SearchAPI_1 = require(\"./Search/SearchAPI\");\nvar StreamAPI_1 = require(\"./Stream/StreamAPI\");\nvar UserAPI_1 = require(\"./User/UserAPI\");\n/**\n * Groups all API calls available in Kraken v5.\n *\n * Can be accessed using {@TwitchClient#kraken}.\n */\nvar KrakenAPIGroup = /** @class */ (function (_super) {\n    tslib_1.__extends(KrakenAPIGroup, _super);\n    function KrakenAPIGroup() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Object.defineProperty(KrakenAPIGroup.prototype, \"bits\", {\n        /**\n         * The API methods that deal with bits.\n         */\n        get: function () {\n            return new BitsAPI_1.default(this._client);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(KrakenAPIGroup.prototype, \"channels\", {\n        /**\n         * The API methods that deal with channels.\n         */\n        get: function () {\n            return new ChannelAPI_1.default(this._client);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(KrakenAPIGroup.prototype, \"chat\", {\n        /**\n         * The API methods that deal with chat.\n         */\n        get: function () {\n            return new ChatAPI_1.default(this._client);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(KrakenAPIGroup.prototype, \"search\", {\n        /**\n         * The API methods that deal with searching.\n         */\n        get: function () {\n            return new SearchAPI_1.default(this._client);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(KrakenAPIGroup.prototype, \"streams\", {\n        /**\n         * The API methods that deal with streams.\n         */\n        get: function () {\n            return new StreamAPI_1.default(this._client);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(KrakenAPIGroup.prototype, \"users\", {\n        /**\n         * The API methods that deal with users.\n         */\n        get: function () {\n            return new UserAPI_1.default(this._client);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    tslib_1.__decorate([\n        Cache_1.CachedGetter()\n    ], KrakenAPIGroup.prototype, \"bits\", null);\n    tslib_1.__decorate([\n        Cache_1.CachedGetter()\n    ], KrakenAPIGroup.prototype, \"channels\", null);\n    tslib_1.__decorate([\n        Cache_1.CachedGetter()\n    ], KrakenAPIGroup.prototype, \"chat\", null);\n    tslib_1.__decorate([\n        Cache_1.CachedGetter()\n    ], KrakenAPIGroup.prototype, \"search\", null);\n    tslib_1.__decorate([\n        Cache_1.CachedGetter()\n    ], KrakenAPIGroup.prototype, \"streams\", null);\n    tslib_1.__decorate([\n        Cache_1.CachedGetter()\n    ], KrakenAPIGroup.prototype, \"users\", null);\n    KrakenAPIGroup = tslib_1.__decorate([\n        Cache_1.Cacheable\n    ], KrakenAPIGroup);\n    return KrakenAPIGroup;\n}(BaseAPI_1.default));\nexports.default = KrakenAPIGroup;\n//# sourceMappingURL=KrakenAPIGroup.js.map","'use strict';\n\nvar replace = String.prototype.replace;\nvar percentTwenties = /%20/g;\n\nmodule.exports = {\n    'default': 'RFC3986',\n    formatters: {\n        RFC1738: function (value) {\n            return replace.call(value, percentTwenties, '+');\n        },\n        RFC3986: function (value) {\n            return value;\n        }\n    },\n    RFC1738: 'RFC1738',\n    RFC3986: 'RFC3986'\n};\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar NonEnumerable_1 = require(\"../../../Toolkit/Decorators/NonEnumerable\");\nvar NoSubscriptionProgramError_1 = require(\"../../../Errors/NoSubscriptionProgramError\");\n/**\n * A placeholder for a channel.\n *\n * This is used for example when you only have retrieved user data, but not channel data.\n * This can do anything you can do with only a channel ID, as it's equivalent to the user ID.\n */\nvar ChannelPlaceholder = /** @class */ (function () {\n    /** @private */\n    function ChannelPlaceholder(id, client) {\n        this._data = { _id: id };\n        this._client = client;\n    }\n    Object.defineProperty(ChannelPlaceholder.prototype, \"cacheKey\", {\n        /** @private */\n        get: function () {\n            return this._data._id;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ChannelPlaceholder.prototype, \"id\", {\n        /**\n         * The ID of the channel.\n         */\n        get: function () {\n            return this._data._id;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Retrieves the list of cheermotes you can use in the channel.\n     */\n    ChannelPlaceholder.prototype.getCheermotes = function () {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            return tslib_1.__generator(this, function (_a) {\n                return [2 /*return*/, this._client.kraken.bits.getCheermotes(this)];\n            });\n        });\n    };\n    /**\n     * Retrieves the channel data.\n     */\n    ChannelPlaceholder.prototype.getChannel = function () {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            return tslib_1.__generator(this, function (_a) {\n                return [2 /*return*/, this._client.kraken.channels.getChannel(this)];\n            });\n        });\n    };\n    /**\n     * Retrieves the channel's stream data.\n     */\n    ChannelPlaceholder.prototype.getStream = function () {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            return tslib_1.__generator(this, function (_a) {\n                return [2 /*return*/, this._client.kraken.streams.getStreamByChannel(this)];\n            });\n        });\n    };\n    /**\n     * Retrieves the channel's followers.\n     */\n    ChannelPlaceholder.prototype.getFollowers = function () {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            return tslib_1.__generator(this, function (_a) {\n                return [2 /*return*/, this._client.kraken.channels.getChannelFollowers(this)];\n            });\n        });\n    };\n    /**\n     * Retrieves the channel's subscribers.\n     */\n    ChannelPlaceholder.prototype.getSubscriptions = function () {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            return tslib_1.__generator(this, function (_a) {\n                return [2 /*return*/, this._client.kraken.channels.getChannelSubscriptions(this)];\n            });\n        });\n    };\n    /**\n     * Retrieves the subscription data for the given user to the channel.\n     *\n     * Throws if the channel doesn't have a subscription program or the user is not subscribed to it.\n     *\n     * This method requires access to the channel. If you only have access to the user,\n     * use {@User#getSubscriptionTo} instead.\n     *\n     * @param user The user you want to get the subscription data for.\n     */\n    ChannelPlaceholder.prototype.getSubscriptionBy = function (user) {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            return tslib_1.__generator(this, function (_a) {\n                return [2 /*return*/, this._client.kraken.channels.getChannelSubscriptionByUser(this, user)];\n            });\n        });\n    };\n    /**\n     * Checks whether the given user is subscribed to the channel.\n     *\n     * @param user The user you want to check the subscription for.\n     */\n    ChannelPlaceholder.prototype.hasSubscriber = function (user) {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            var e_1;\n            return tslib_1.__generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        _a.trys.push([0, 2, , 3]);\n                        return [4 /*yield*/, this.getSubscriptionBy(user)];\n                    case 1: return [2 /*return*/, (_a.sent()) !== null];\n                    case 2:\n                        e_1 = _a.sent();\n                        if (e_1 instanceof NoSubscriptionProgramError_1.default) {\n                            return [2 /*return*/, false];\n                        }\n                        throw e_1;\n                    case 3: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    tslib_1.__decorate([\n        NonEnumerable_1.NonEnumerable\n    ], ChannelPlaceholder.prototype, \"_client\", void 0);\n    return ChannelPlaceholder;\n}());\nexports.default = ChannelPlaceholder;\n//# sourceMappingURL=ChannelPlaceholder.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Represents the data of an OAuth access token returned by Twitch.\n */\nvar AccessToken = /** @class */ (function () {\n    /** @private */\n    function AccessToken(_data, obtainmentDate) {\n        this._data = _data;\n        this._obtainmentDate = obtainmentDate || new Date();\n    }\n    Object.defineProperty(AccessToken.prototype, \"accessToken\", {\n        /**\n         * The access token which is necessary for every request to the Twitch API.\n         */\n        get: function () {\n            return this._data.access_token;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AccessToken.prototype, \"refreshToken\", {\n        /**\n         * The refresh token which is necessary to refresh the access token once it expires.\n         */\n        get: function () {\n            return this._data.refresh_token;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AccessToken.prototype, \"expiryDate\", {\n        /**\n         * The time when the access token will expire.\n         *\n         * May be `null`, in which case the token does not expire.\n         * This can only be the case with very old Client IDs.\n         */\n        get: function () {\n            if (!this._data.expires_in) {\n                return null;\n            }\n            return new Date(this._obtainmentDate.getTime() + this._data.expires_in * 1000);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AccessToken.prototype, \"isExpired\", {\n        get: function () {\n            if (!this._data.expires_in) {\n                return false;\n            }\n            return Date.now() > (this._obtainmentDate.getTime() + this._data.expires_in * 1000);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AccessToken.prototype, \"scope\", {\n        /**\n         * The scope the access token is valid for, i.e. what this token enables you to do.\n         */\n        get: function () {\n            return this._data.scope.split(' ');\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return AccessToken;\n}());\nexports.default = AccessToken;\n//# sourceMappingURL=AccessToken.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar TwitchClient_1 = require(\"./TwitchClient\");\nexports.TwitchAPICallType = TwitchClient_1.TwitchAPICallType;\nexports.default = TwitchClient_1.default;\nvar ConfigError_1 = require(\"./Errors/ConfigError\");\nexports.ConfigError = ConfigError_1.default;\nvar HellFreezesOverError_1 = require(\"./Errors/HellFreezesOverError\");\nexports.HellFreezesOverError = HellFreezesOverError_1.default;\nvar HTTPStatusCodeError_1 = require(\"./Errors/HTTPStatusCodeError\");\nexports.HTTPStatusCodeError = HTTPStatusCodeError_1.default;\nvar NoSubscriptionProgramError_1 = require(\"./Errors/NoSubscriptionProgramError\");\nexports.NoSubscriptionProgramError = NoSubscriptionProgramError_1.default;\nvar StreamNotLiveError_1 = require(\"./Errors/StreamNotLiveError\");\nexports.StreamNotLiveError = StreamNotLiveError_1.default;\nvar StaticAuthProvider_1 = require(\"./Auth/StaticAuthProvider\");\nexports.StaticAuthProvider = StaticAuthProvider_1.default;\nvar RefreshableAuthProvider_1 = require(\"./Auth/RefreshableAuthProvider\");\nexports.RefreshableAuthProvider = RefreshableAuthProvider_1.default;\nvar AccessToken_1 = require(\"./API/AccessToken\");\nexports.AccessToken = AccessToken_1.default;\nvar TokenInfo_1 = require(\"./API/TokenInfo\");\nexports.TokenInfo = TokenInfo_1.default;\nvar Subscription_1 = require(\"./API/Kraken/Subscription\");\nexports.Subscription = Subscription_1.default;\nvar CheermoteList_1 = require(\"./API/Kraken/Bits/CheermoteList\");\nexports.CheermoteList = CheermoteList_1.default;\nexports.CheermoteBackground = CheermoteList_1.CheermoteBackground;\nexports.CheermoteState = CheermoteList_1.CheermoteState;\nexports.CheermoteScale = CheermoteList_1.CheermoteScale;\nvar Channel_1 = require(\"./API/Kraken/Channel/Channel\");\nexports.Channel = Channel_1.default;\nvar ChannelFollow_1 = require(\"./API/Kraken/Channel/ChannelFollow\");\nexports.ChannelFollow = ChannelFollow_1.default;\nvar ChannelPlaceholder_1 = require(\"./API/Kraken/Channel/ChannelPlaceholder\");\nexports.ChannelPlaceholder = ChannelPlaceholder_1.default;\nvar ChannelSubscription_1 = require(\"./API/Kraken/Channel/ChannelSubscription\");\nexports.ChannelSubscription = ChannelSubscription_1.default;\nvar EmoteSetList_1 = require(\"./API/Kraken/Channel/EmoteSetList\");\nexports.EmoteSetList = EmoteSetList_1.default;\nvar PrivilegedChannel_1 = require(\"./API/Kraken/Channel/PrivilegedChannel\");\nexports.PrivilegedChannel = PrivilegedChannel_1.default;\nvar Stream_1 = require(\"./API/Kraken/Stream/Stream\");\nexports.Stream = Stream_1.default;\nexports.StreamType = Stream_1.StreamType;\nvar ChannelEvent_1 = require(\"./API/Unsupported/ChannelEvent\");\nexports.ChannelEvent = ChannelEvent_1.default;\nvar ChattersList_1 = require(\"./API/Unsupported/ChattersList\");\nexports.ChattersList = ChattersList_1.default;\nvar PrivilegedUser_1 = require(\"./API/Kraken/User/PrivilegedUser\");\nexports.PrivilegedUser = PrivilegedUser_1.default;\nvar User_1 = require(\"./API/Kraken/User/User\");\nexports.User = User_1.default;\nvar UserBlock_1 = require(\"./API/Kraken/User/UserBlock\");\nexports.UserBlock = UserBlock_1.default;\nvar UserFollow_1 = require(\"./API/Kraken/User/UserFollow\");\nexports.UserFollow = UserFollow_1.default;\nvar UserSubscription_1 = require(\"./API/Kraken/User/UserSubscription\");\nexports.UserSubscription = UserSubscription_1.default;\nvar HelixPaginatedRequest_1 = require(\"./API/Helix/HelixPaginatedRequest\");\nexports.HelixPaginatedRequest = HelixPaginatedRequest_1.default;\nvar HelixBitsLeaderboard_1 = require(\"./API/Helix/Bits/HelixBitsLeaderboard\");\nexports.HelixBitsLeaderboard = HelixBitsLeaderboard_1.default;\nvar HelixBitsLeaderboardEntry_1 = require(\"./API/Helix/Bits/HelixBitsLeaderboardEntry\");\nexports.HelixBitsLeaderboardEntry = HelixBitsLeaderboardEntry_1.default;\nvar HelixClip_1 = require(\"./API/Helix/Clip/HelixClip\");\nexports.HelixClip = HelixClip_1.default;\nvar HelixGame_1 = require(\"./API/Helix/Game/HelixGame\");\nexports.HelixGame = HelixGame_1.default;\nvar HelixStream_1 = require(\"./API/Helix/Stream/HelixStream\");\nexports.HelixStream = HelixStream_1.default;\nexports.HelixStreamType = HelixStream_1.HelixStreamType;\nvar HelixFollow_1 = require(\"./API/Helix/User/HelixFollow\");\nexports.HelixFollow = HelixFollow_1.default;\nvar HelixPrivilegedUser_1 = require(\"./API/Helix/User/HelixPrivilegedUser\");\nexports.HelixPrivilegedUser = HelixPrivilegedUser_1.default;\nvar HelixUser_1 = require(\"./API/Helix/User/HelixUser\");\nexports.HelixUser = HelixUser_1.default;\nexports.HelixBroadcasterType = HelixUser_1.HelixBroadcasterType;\nexports.HelixUserType = HelixUser_1.HelixUserType;\nvar HelixVideo_1 = require(\"./API/Helix/Video/HelixVideo\");\nexports.HelixVideo = HelixVideo_1.default;\nvar ChatBadgeList_1 = require(\"./API/Badges/ChatBadgeList\");\nexports.ChatBadgeList = ChatBadgeList_1.default;\nvar ChatBadgeSet_1 = require(\"./API/Badges/ChatBadgeSet\");\nexports.ChatBadgeSet = ChatBadgeSet_1.default;\nvar ChatBadgeVersion_1 = require(\"./API/Badges/ChatBadgeVersion\");\nexports.ChatBadgeVersion = ChatBadgeVersion_1.default;\nvar UserTools_1 = require(\"./Toolkit/UserTools\");\nexports.extractUserId = UserTools_1.extractUserId;\nexports.extractUserName = UserTools_1.extractUserName;\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar BaseAPI_1 = require(\"../BaseAPI\");\nvar Cache_1 = require(\"../../Toolkit/Decorators/Cache\");\nvar ChatBadgeList_1 = require(\"./ChatBadgeList\");\nvar TwitchClient_1 = require(\"../../TwitchClient\");\nvar UserTools_1 = require(\"../../Toolkit/UserTools\");\n/**\n * The API methods that deal with badges.\n *\n * Can be accessed using `client.badges` on a {@TwitchClient} instance.\n *\n * ## Example\n * ```ts\n * const client = await TwitchClient.withCredentials(clientId, accessToken);\n * const cheermotes = await client.badges.getGlobalBadges();\n * ```\n */\nvar BadgesAPI = /** @class */ (function (_super) {\n    tslib_1.__extends(BadgesAPI, _super);\n    function BadgesAPI() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * Retrieves all globally applicable chat badges.\n     */\n    BadgesAPI.prototype.getGlobalBadges = function () {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            var data;\n            return tslib_1.__generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this._client.callAPI({\n                            url: 'https://badges.twitch.tv/v1/badges/global/display',\n                            type: TwitchClient_1.TwitchAPICallType.Custom\n                        })];\n                    case 1:\n                        data = _a.sent();\n                        return [2 /*return*/, new ChatBadgeList_1.default(data.badge_sets, this._client)];\n                }\n            });\n        });\n    };\n    /**\n     * Retrieves all applicable chat badges for a given channel.\n     *\n     * @param channel The channel to retrieve the chat badges for.\n     * @param includeGlobal Whether to include global badges in the result list.\n     */\n    BadgesAPI.prototype.getChannelBadges = function (channel, includeGlobal) {\n        if (includeGlobal === void 0) { includeGlobal = true; }\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            var data, channelBadges, _a, _b;\n            return tslib_1.__generator(this, function (_c) {\n                switch (_c.label) {\n                    case 0: return [4 /*yield*/, this._client.callAPI({\n                            url: \"https://badges.twitch.tv/v1/badges/channels/\" + UserTools_1.extractUserId(channel) + \"/display\",\n                            type: TwitchClient_1.TwitchAPICallType.Custom\n                        })];\n                    case 1:\n                        data = _c.sent();\n                        channelBadges = new ChatBadgeList_1.default(data.badge_sets, this._client);\n                        if (!includeGlobal) return [3 /*break*/, 3];\n                        _b = (_a = channelBadges)._merge;\n                        return [4 /*yield*/, this.getGlobalBadges()];\n                    case 2: return [2 /*return*/, _b.apply(_a, [_c.sent()])];\n                    case 3: return [2 /*return*/, channelBadges];\n                }\n            });\n        });\n    };\n    tslib_1.__decorate([\n        Cache_1.Cached(3600)\n    ], BadgesAPI.prototype, \"getGlobalBadges\", null);\n    tslib_1.__decorate([\n        Cache_1.Cached(3600)\n    ], BadgesAPI.prototype, \"getChannelBadges\", null);\n    BadgesAPI = tslib_1.__decorate([\n        Cache_1.Cacheable\n    ], BadgesAPI);\n    return BadgesAPI;\n}(BaseAPI_1.default));\nexports.default = BadgesAPI;\n//# sourceMappingURL=BadgesAPI.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar Subscription_1 = require(\"../Subscription\");\nvar Channel_1 = require(\"../Channel/Channel\");\n/**\n * A relation of a previously given user subscribing to a channel.\n */\nvar UserSubscription = /** @class */ (function (_super) {\n    tslib_1.__extends(UserSubscription, _super);\n    function UserSubscription() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Object.defineProperty(UserSubscription.prototype, \"channel\", {\n        /**\n         * The subscribed channel.\n         */\n        get: function () {\n            return new Channel_1.default(this._data.channel, this._client);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return UserSubscription;\n}(Subscription_1.default));\nexports.default = UserSubscription;\n//# sourceMappingURL=UserSubscription.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar NonEnumerable_1 = require(\"../../../Toolkit/Decorators/NonEnumerable\");\nvar Channel_1 = require(\"../Channel/Channel\");\n/**\n * The type of a stream.\n */\nvar StreamType;\n(function (StreamType) {\n    /**\n     * A live stream.\n     */\n    StreamType[\"Live\"] = \"live\";\n    /**\n     * An upload to the channel (VoD) that is streamed live for the first time.\n     */\n    StreamType[\"Premiere\"] = \"premiere\";\n    /**\n     * A rerun of a past live stream.\n     */\n    StreamType[\"ReRun\"] = \"rerun\";\n    /**\n     * All types of streams. Used for filtering.\n     */\n    StreamType[\"All\"] = \"all\";\n})(StreamType = exports.StreamType || (exports.StreamType = {}));\n/**\n * A Twitch stream.\n */\nvar Stream = /** @class */ (function () {\n    /** @private */\n    function Stream(_data, client) {\n        this._data = _data;\n        this._client = client;\n    }\n    Object.defineProperty(Stream.prototype, \"id\", {\n        /**\n         * The ID of the stream.\n         */\n        get: function () {\n            return this._data._id;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Stream.prototype, \"game\", {\n        /**\n         * The game played on the stream.\n         */\n        get: function () {\n            return this._data.game;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Stream.prototype, \"viewers\", {\n        /**\n         * The current number of concurrent viewers.\n         */\n        get: function () {\n            return this._data.viewers;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Stream.prototype, \"videoHeight\", {\n        /**\n         * The height of the stream video.\n         */\n        get: function () {\n            return this._data.video_height;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Stream.prototype, \"averageFPS\", {\n        /**\n         * The average FPS (frames per second) that are shown on the stream.\n         */\n        get: function () {\n            return this._data.average_fps;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Stream.prototype, \"delay\", {\n        /**\n         * The delay of the stream, in seconds.\n         */\n        get: function () {\n            return this._data.delay;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Stream.prototype, \"startDate\", {\n        /**\n         * The time when the stream started.\n         */\n        get: function () {\n            return new Date(this._data.created_at);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Stream.prototype, \"isPlaylist\", {\n        /**\n         * Whether the stream is running a playlist.\n         */\n        get: function () {\n            return this._data.is_playlist;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Stream.prototype, \"type\", {\n        /**\n         * The type of the stream.\n         */\n        get: function () {\n            return this._data.stream_type;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Gets the URL of a preview image for the stream\n     *\n     * @param size The size of the image.\n     */\n    Stream.prototype.getPreviewUrl = function (size) {\n        return this._data.preview[size];\n    };\n    Object.defineProperty(Stream.prototype, \"channel\", {\n        /**\n         * The channel where the stream is shown.\n         */\n        get: function () {\n            return new Channel_1.default(this._data.channel, this._client);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    tslib_1.__decorate([\n        NonEnumerable_1.NonEnumerable\n    ], Stream.prototype, \"_client\", void 0);\n    return Stream;\n}());\nexports.default = Stream;\n//# sourceMappingURL=Stream.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/** @private */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction NonEnumerable(target, key) {\n    // first property defined in prototype, that's why we use getters/setters\n    // (otherwise assignment in object will override property in prototype)\n    Object.defineProperty(target, key, {\n        get: function () {\n            return;\n        },\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        set: function (val) {\n            // here we have a reference to the instance and can set property directly to it\n            Object.defineProperty(this, key, {\n                value: val,\n                writable: true,\n                enumerable: false\n            });\n        },\n        enumerable: false\n    });\n}\nexports.NonEnumerable = NonEnumerable;\n//# sourceMappingURL=NonEnumerable.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Information about an access token.\n */\nvar TokenInfo = /** @class */ (function () {\n    /** @private */\n    function TokenInfo(_data) {\n        this._data = _data;\n        this._obtainmentDate = new Date();\n    }\n    Object.defineProperty(TokenInfo.prototype, \"clientId\", {\n        /**\n         * The client ID.\n         */\n        get: function () {\n            return this._data.valid ? this._data.client_id : null;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(TokenInfo.prototype, \"userId\", {\n        /**\n         * The ID of the authenticated user.\n         */\n        get: function () {\n            return this._data.valid ? this._data.user_id : null;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(TokenInfo.prototype, \"userName\", {\n        /**\n         * The user name of the authenticated user.\n         */\n        get: function () {\n            return this._data.valid ? this._data.user_name : null;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(TokenInfo.prototype, \"scopes\", {\n        /**\n         * The scopes for which this token is valid.\n         */\n        get: function () {\n            return this._data.valid ? this._data.authorization.scopes : [];\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(TokenInfo.prototype, \"valid\", {\n        /**\n         * Whether the token is valid or not.\n         */\n        get: function () {\n            return this._data.valid;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(TokenInfo.prototype, \"expiryDate\", {\n        /**\n         * The time when the token will expire.\n         *\n         * If this returns null, it means that the token is either invalid or never expires (happens with old client IDs).\n         */\n        get: function () {\n            if (!this._data.valid || !this._data.expires_in) {\n                return null;\n            }\n            return new Date(this._obtainmentDate.getTime() + this._data.expires_in * 1000);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return TokenInfo;\n}());\nexports.default = TokenInfo;\n//# sourceMappingURL=TokenInfo.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar BaseAPI_1 = require(\"../../BaseAPI\");\nvar TwitchClient_1 = require(\"../../../TwitchClient\");\nvar HelixBitsLeaderboard_1 = require(\"./HelixBitsLeaderboard\");\n/**\n * The Helix API methods that deal with bits.\n *\n * Can be accessed using `client.helix.bits` on a {@TwitchClient} instance.\n *\n * ## Example\n * ```ts\n * const client = await TwitchClient.withCredentials(clientId, accessToken);\n * const leaderboard = await client.helix.bits.getLeaderboard({ period: 'day' });\n * ```\n */\nvar HelixBitsAPI = /** @class */ (function (_super) {\n    tslib_1.__extends(HelixBitsAPI, _super);\n    function HelixBitsAPI() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * Gets a bits leaderboard of your channel.\n     *\n     * @expandParams\n     */\n    HelixBitsAPI.prototype.getLeaderboard = function (params) {\n        if (params === void 0) { params = {}; }\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            var _a, count, _b, period, startDate, contextUserId, result;\n            return tslib_1.__generator(this, function (_c) {\n                switch (_c.label) {\n                    case 0:\n                        _a = params.count, count = _a === void 0 ? 10 : _a, _b = params.period, period = _b === void 0 ? 'all' : _b, startDate = params.startDate, contextUserId = params.contextUserId;\n                        return [4 /*yield*/, this._client.callAPI({\n                                type: TwitchClient_1.TwitchAPICallType.Helix,\n                                url: 'bits/leaderboard',\n                                scope: 'bits:read',\n                                query: {\n                                    count: count.toString(),\n                                    period: period,\n                                    started_at: startDate ? startDate.toISOString() : undefined,\n                                    user_id: contextUserId\n                                }\n                            })];\n                    case 1:\n                        result = _c.sent();\n                        return [2 /*return*/, new HelixBitsLeaderboard_1.default(result, this._client)];\n                }\n            });\n        });\n    };\n    return HelixBitsAPI;\n}(BaseAPI_1.default));\nexports.default = HelixBitsAPI;\n//# sourceMappingURL=HelixBitsAPI.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar NonEnumerable_1 = require(\"../../../Toolkit/Decorators/NonEnumerable\");\n/**\n * A Bits leaderboard entry.\n */\nvar HelixBitsLeaderboardEntry = /** @class */ (function () {\n    /** @private */\n    function HelixBitsLeaderboardEntry(_data, client) {\n        this._data = _data;\n        this._client = client;\n    }\n    Object.defineProperty(HelixBitsLeaderboardEntry.prototype, \"userId\", {\n        /**\n         * The ID of the user on the leaderboard.\n         */\n        get: function () {\n            return this._data.user_id;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(HelixBitsLeaderboardEntry.prototype, \"userDisplayName\", {\n        /**\n         * The display name of the user on the leaderboard.\n         */\n        get: function () {\n            return this._data.user_name;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(HelixBitsLeaderboardEntry.prototype, \"rank\", {\n        /**\n         * The position of the user on the leaderboard.\n         */\n        get: function () {\n            return this._data.rank;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(HelixBitsLeaderboardEntry.prototype, \"amount\", {\n        /**\n         * The amount of bits used in the given period of time.\n         */\n        get: function () {\n            return this._data.score;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Retrieves the user that's on this place on the leaderboard.\n     */\n    HelixBitsLeaderboardEntry.prototype.getUser = function () {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            return tslib_1.__generator(this, function (_a) {\n                return [2 /*return*/, this._client.helix.users.getUserById(this._data.user_id)];\n            });\n        });\n    };\n    tslib_1.__decorate([\n        NonEnumerable_1.NonEnumerable\n    ], HelixBitsLeaderboardEntry.prototype, \"_client\", void 0);\n    return HelixBitsLeaderboardEntry;\n}());\nexports.default = HelixBitsLeaderboardEntry;\n//# sourceMappingURL=HelixBitsLeaderboardEntry.js.map","'use strict';\n\nvar has = Object.prototype.hasOwnProperty;\nvar isArray = Array.isArray;\n\nvar hexTable = (function () {\n    var array = [];\n    for (var i = 0; i < 256; ++i) {\n        array.push('%' + ((i < 16 ? '0' : '') + i.toString(16)).toUpperCase());\n    }\n\n    return array;\n}());\n\nvar compactQueue = function compactQueue(queue) {\n    while (queue.length > 1) {\n        var item = queue.pop();\n        var obj = item.obj[item.prop];\n\n        if (isArray(obj)) {\n            var compacted = [];\n\n            for (var j = 0; j < obj.length; ++j) {\n                if (typeof obj[j] !== 'undefined') {\n                    compacted.push(obj[j]);\n                }\n            }\n\n            item.obj[item.prop] = compacted;\n        }\n    }\n};\n\nvar arrayToObject = function arrayToObject(source, options) {\n    var obj = options && options.plainObjects ? Object.create(null) : {};\n    for (var i = 0; i < source.length; ++i) {\n        if (typeof source[i] !== 'undefined') {\n            obj[i] = source[i];\n        }\n    }\n\n    return obj;\n};\n\nvar merge = function merge(target, source, options) {\n    if (!source) {\n        return target;\n    }\n\n    if (typeof source !== 'object') {\n        if (isArray(target)) {\n            target.push(source);\n        } else if (target && typeof target === 'object') {\n            if ((options && (options.plainObjects || options.allowPrototypes)) || !has.call(Object.prototype, source)) {\n                target[source] = true;\n            }\n        } else {\n            return [target, source];\n        }\n\n        return target;\n    }\n\n    if (!target || typeof target !== 'object') {\n        return [target].concat(source);\n    }\n\n    var mergeTarget = target;\n    if (isArray(target) && !isArray(source)) {\n        mergeTarget = arrayToObject(target, options);\n    }\n\n    if (isArray(target) && isArray(source)) {\n        source.forEach(function (item, i) {\n            if (has.call(target, i)) {\n                var targetItem = target[i];\n                if (targetItem && typeof targetItem === 'object' && item && typeof item === 'object') {\n                    target[i] = merge(targetItem, item, options);\n                } else {\n                    target.push(item);\n                }\n            } else {\n                target[i] = item;\n            }\n        });\n        return target;\n    }\n\n    return Object.keys(source).reduce(function (acc, key) {\n        var value = source[key];\n\n        if (has.call(acc, key)) {\n            acc[key] = merge(acc[key], value, options);\n        } else {\n            acc[key] = value;\n        }\n        return acc;\n    }, mergeTarget);\n};\n\nvar assign = function assignSingleSource(target, source) {\n    return Object.keys(source).reduce(function (acc, key) {\n        acc[key] = source[key];\n        return acc;\n    }, target);\n};\n\nvar decode = function (str, decoder, charset) {\n    var strWithoutPlus = str.replace(/\\+/g, ' ');\n    if (charset === 'iso-8859-1') {\n        // unescape never throws, no try...catch needed:\n        return strWithoutPlus.replace(/%[0-9a-f]{2}/gi, unescape);\n    }\n    // utf-8\n    try {\n        return decodeURIComponent(strWithoutPlus);\n    } catch (e) {\n        return strWithoutPlus;\n    }\n};\n\nvar encode = function encode(str, defaultEncoder, charset) {\n    // This code was originally written by Brian White (mscdex) for the io.js core querystring library.\n    // It has been adapted here for stricter adherence to RFC 3986\n    if (str.length === 0) {\n        return str;\n    }\n\n    var string = typeof str === 'string' ? str : String(str);\n\n    if (charset === 'iso-8859-1') {\n        return escape(string).replace(/%u[0-9a-f]{4}/gi, function ($0) {\n            return '%26%23' + parseInt($0.slice(2), 16) + '%3B';\n        });\n    }\n\n    var out = '';\n    for (var i = 0; i < string.length; ++i) {\n        var c = string.charCodeAt(i);\n\n        if (\n            c === 0x2D // -\n            || c === 0x2E // .\n            || c === 0x5F // _\n            || c === 0x7E // ~\n            || (c >= 0x30 && c <= 0x39) // 0-9\n            || (c >= 0x41 && c <= 0x5A) // a-z\n            || (c >= 0x61 && c <= 0x7A) // A-Z\n        ) {\n            out += string.charAt(i);\n            continue;\n        }\n\n        if (c < 0x80) {\n            out = out + hexTable[c];\n            continue;\n        }\n\n        if (c < 0x800) {\n            out = out + (hexTable[0xC0 | (c >> 6)] + hexTable[0x80 | (c & 0x3F)]);\n            continue;\n        }\n\n        if (c < 0xD800 || c >= 0xE000) {\n            out = out + (hexTable[0xE0 | (c >> 12)] + hexTable[0x80 | ((c >> 6) & 0x3F)] + hexTable[0x80 | (c & 0x3F)]);\n            continue;\n        }\n\n        i += 1;\n        c = 0x10000 + (((c & 0x3FF) << 10) | (string.charCodeAt(i) & 0x3FF));\n        out += hexTable[0xF0 | (c >> 18)]\n            + hexTable[0x80 | ((c >> 12) & 0x3F)]\n            + hexTable[0x80 | ((c >> 6) & 0x3F)]\n            + hexTable[0x80 | (c & 0x3F)];\n    }\n\n    return out;\n};\n\nvar compact = function compact(value) {\n    var queue = [{ obj: { o: value }, prop: 'o' }];\n    var refs = [];\n\n    for (var i = 0; i < queue.length; ++i) {\n        var item = queue[i];\n        var obj = item.obj[item.prop];\n\n        var keys = Object.keys(obj);\n        for (var j = 0; j < keys.length; ++j) {\n            var key = keys[j];\n            var val = obj[key];\n            if (typeof val === 'object' && val !== null && refs.indexOf(val) === -1) {\n                queue.push({ obj: obj, prop: key });\n                refs.push(val);\n            }\n        }\n    }\n\n    compactQueue(queue);\n\n    return value;\n};\n\nvar isRegExp = function isRegExp(obj) {\n    return Object.prototype.toString.call(obj) === '[object RegExp]';\n};\n\nvar isBuffer = function isBuffer(obj) {\n    if (!obj || typeof obj !== 'object') {\n        return false;\n    }\n\n    return !!(obj.constructor && obj.constructor.isBuffer && obj.constructor.isBuffer(obj));\n};\n\nvar combine = function combine(a, b) {\n    return [].concat(a, b);\n};\n\nmodule.exports = {\n    arrayToObject: arrayToObject,\n    assign: assign,\n    combine: combine,\n    compact: compact,\n    decode: decode,\n    encode: encode,\n    isBuffer: isBuffer,\n    isRegExp: isRegExp,\n    merge: merge\n};\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar Channel_1 = require(\"../Channel/Channel\");\nvar NonEnumerable_1 = require(\"../../../Toolkit/Decorators/NonEnumerable\");\n/**\n * A relation of a previously given user following a channel.\n */\nvar UserFollow = /** @class */ (function () {\n    /** @private */\n    function UserFollow(_data, client) {\n        this._data = _data;\n        this._client = client;\n    }\n    Object.defineProperty(UserFollow.prototype, \"followDate\", {\n        /**\n         * The date when the user followed the channel.\n         */\n        get: function () {\n            return new Date(this._data.created_at);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(UserFollow.prototype, \"hasNotifications\", {\n        /**\n         * Whether the user has notifications enabled for the channel.\n         */\n        get: function () {\n            return this._data.notifications;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(UserFollow.prototype, \"channel\", {\n        /**\n         * The followed channel.\n         */\n        get: function () {\n            return new Channel_1.default(this._data.channel, this._client);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    tslib_1.__decorate([\n        NonEnumerable_1.NonEnumerable\n    ], UserFollow.prototype, \"_client\", void 0);\n    return UserFollow;\n}());\nexports.default = UserFollow;\n//# sourceMappingURL=UserFollow.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar BaseAPI_1 = require(\"../../BaseAPI\");\nvar TwitchClient_1 = require(\"../../../TwitchClient\");\nvar HelixGame_1 = require(\"./HelixGame\");\nvar HelixPaginatedRequest_1 = require(\"../HelixPaginatedRequest\");\n/**\n * The Helix API methods that deal with games.\n *\n * Can be accessed using `client.helix.games` on a {@TwitchClient} instance.\n *\n * ## Example\n * ```ts\n * const client = await TwitchClient.withCredentials(clientId, accessToken);\n * const game = await client.helix.games.getGameByName('Hearthstone');\n * ```\n */\nvar HelixGameAPI = /** @class */ (function (_super) {\n    tslib_1.__extends(HelixGameAPI, _super);\n    function HelixGameAPI() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * Retrieves the game data for the given list of game IDs.\n     *\n     * @param ids The game IDs you want to look up.\n     */\n    HelixGameAPI.prototype.getGamesByIds = function (ids) {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            return tslib_1.__generator(this, function (_a) {\n                return [2 /*return*/, this._getGames('id', ids)];\n            });\n        });\n    };\n    /**\n     * Retrieves the game data for the given list of game names.\n     *\n     * @param names The game names you want to look up.\n     */\n    HelixGameAPI.prototype.getGamesByNames = function (names) {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            return tslib_1.__generator(this, function (_a) {\n                return [2 /*return*/, this._getGames('name', names)];\n            });\n        });\n    };\n    /**\n     * Retrieves the game data for the given game ID.\n     *\n     * @param id The game ID you want to look up.\n     */\n    HelixGameAPI.prototype.getGameById = function (id) {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            var games;\n            return tslib_1.__generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this._getGames('id', id)];\n                    case 1:\n                        games = _a.sent();\n                        return [2 /*return*/, games.length ? games[0] : null];\n                }\n            });\n        });\n    };\n    /**\n     * Retrieves the game data for the given game name.\n     *\n     * @param name The game name you want to look up.\n     */\n    HelixGameAPI.prototype.getGameByName = function (name) {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            var games;\n            return tslib_1.__generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this._getGames('name', name)];\n                    case 1:\n                        games = _a.sent();\n                        return [2 /*return*/, games.length ? games[0] : null];\n                }\n            });\n        });\n    };\n    /**\n     * Retrieves a list of the most viewed games at the moment.\n     */\n    HelixGameAPI.prototype.getTopGames = function () {\n        var _this = this;\n        return new HelixPaginatedRequest_1.default({\n            url: 'games/top'\n        }, this._client, function (data) { return new HelixGame_1.default(data, _this._client); });\n    };\n    HelixGameAPI.prototype._getGames = function (filterType, filterValues) {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            var _a, result;\n            var _this = this;\n            return tslib_1.__generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0: return [4 /*yield*/, this._client.callAPI({\n                            type: TwitchClient_1.TwitchAPICallType.Helix,\n                            url: 'games',\n                            query: (_a = {},\n                                _a[filterType] = filterValues,\n                                _a)\n                        })];\n                    case 1:\n                        result = _b.sent();\n                        return [2 /*return*/, result.data.map(function (entry) { return new HelixGame_1.default(entry, _this._client); })];\n                }\n            });\n        });\n    };\n    return HelixGameAPI;\n}(BaseAPI_1.default));\nexports.default = HelixGameAPI;\n//# sourceMappingURL=HelixGameAPI.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar NonEnumerable_1 = require(\"../Toolkit/Decorators/NonEnumerable\");\n/** @private */\nvar BaseAPI = /** @class */ (function () {\n    function BaseAPI(client) {\n        this._client = client;\n    }\n    tslib_1.__decorate([\n        NonEnumerable_1.NonEnumerable\n    ], BaseAPI.prototype, \"_client\", void 0);\n    return BaseAPI;\n}());\nexports.default = BaseAPI;\n//# sourceMappingURL=BaseAPI.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar HelixPaginatedRequest_1 = require(\"./HelixPaginatedRequest\");\n/**\n * A special case of {@HelixPaginatedRequest} with support for fetching the total number of entities, whenever an endpoint supports it.\n */\nvar HelixPaginatedRequestWithTotal = /** @class */ (function (_super) {\n    tslib_1.__extends(HelixPaginatedRequestWithTotal, _super);\n    function HelixPaginatedRequestWithTotal() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * Retrieves and returns the total number of entities existing in the queried result set.\n     */\n    HelixPaginatedRequestWithTotal.prototype.getTotalCount = function () {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            var data, _a;\n            return tslib_1.__generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0:\n                        _a = this._currentData;\n                        if (_a) return [3 /*break*/, 2];\n                        return [4 /*yield*/, this._fetchData({ query: { first: '1', after: undefined } })];\n                    case 1:\n                        _a = (_b.sent());\n                        _b.label = 2;\n                    case 2:\n                        data = _a;\n                        return [2 /*return*/, data.total];\n                }\n            });\n        });\n    };\n    return HelixPaginatedRequestWithTotal;\n}(HelixPaginatedRequest_1.default));\nexports.default = HelixPaginatedRequestWithTotal;\n//# sourceMappingURL=HelixPaginatedRequestWithTotal.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar Cache_1 = require(\"../../../Toolkit/Decorators/Cache\");\nvar BaseAPI_1 = require(\"../../BaseAPI\");\nvar PrivilegedUser_1 = require(\"./PrivilegedUser\");\nvar User_1 = require(\"./User\");\nvar ObjectTools_1 = require(\"../../../Toolkit/ObjectTools\");\nvar UserTools_1 = require(\"../../../Toolkit/UserTools\");\nvar EmoteSetList_1 = require(\"../Channel/EmoteSetList\");\nvar UserSubscription_1 = require(\"./UserSubscription\");\nvar NoSubscriptionProgramError_1 = require(\"../../../Errors/NoSubscriptionProgramError\");\nvar UserFollow_1 = require(\"./UserFollow\");\nvar UserBlock_1 = require(\"./UserBlock\");\nvar HellFreezesOverError_1 = require(\"../../../Errors/HellFreezesOverError\");\nvar HTTPStatusCodeError_1 = require(\"../../../Errors/HTTPStatusCodeError\");\n/**\n * The API methods that deal with users.\n *\n * Can be accessed using `client.kraken.users` on a {@TwitchClient} instance.\n *\n * ## Example\n * ```ts\n * const client = await TwitchClient.withCredentials(clientId, accessToken);\n * const user = await client.kraken.users.getUser('125328655');\n * ```\n */\nvar UserAPI = /** @class */ (function (_super) {\n    tslib_1.__extends(UserAPI, _super);\n    function UserAPI() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this._userByNameCache = new Map;\n        return _this;\n    }\n    /**\n     * Retrieves the user data of the currently authenticated user.\n     */\n    UserAPI.prototype.getMe = function () {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            var _a;\n            return tslib_1.__generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0:\n                        _a = PrivilegedUser_1.default.bind;\n                        return [4 /*yield*/, this._client.callAPI({ url: 'user', scope: 'user_read' })];\n                    case 1: return [2 /*return*/, new (_a.apply(PrivilegedUser_1.default, [void 0, _b.sent(), this._client]))()];\n                }\n            });\n        });\n    };\n    /**\n     * Retrieves the user data for the given user ID.\n     *\n     * @param userId The user ID you want to look up.\n     */\n    UserAPI.prototype.getUser = function (userId) {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            var userData;\n            return tslib_1.__generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this._client.callAPI({ url: \"users/\" + UserTools_1.extractUserId(userId) })];\n                    case 1:\n                        userData = _a.sent();\n                        if (!userData) {\n                            throw new HellFreezesOverError_1.default('Could not get authenticated user');\n                        }\n                        return [2 /*return*/, new User_1.default(userData, this._client)];\n                }\n            });\n        });\n    };\n    /**\n     * Retrieves the user data for the given user name.\n     *\n     * @param userName The user name you want to look up.\n     */\n    UserAPI.prototype.getUserByName = function (userName) {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            var users, user;\n            return tslib_1.__generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        // not using the decorator's cache here as users-by-name is slightly more complex to cache\n                        this._cleanUserCache();\n                        if (this._userByNameCache.has(userName)) {\n                            return [2 /*return*/, this._userByNameCache.get(userName).value];\n                        }\n                        return [4 /*yield*/, this._client.callAPI({ url: 'users', query: { login: userName } })];\n                    case 1:\n                        users = (_a.sent()).users;\n                        if (users.length === 0) {\n                            return [2 /*return*/, null];\n                        }\n                        user = new User_1.default(users[0], this._client);\n                        this._userByNameCache.set(userName, {\n                            value: user,\n                            expires: Date.now() + 3600 * 1000\n                        });\n                        return [2 /*return*/, user];\n                }\n            });\n        });\n    };\n    /**\n     * Retrieves the user data for the given user names.\n     *\n     * @param userNames The user names you want to look up.\n     */\n    UserAPI.prototype.getUsersByNames = function (userNames) {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            var cachedEntries, cachedObject, cachedUsers, toFetch, usersData, usersArr, users;\n            var _this = this;\n            return tslib_1.__generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        this._cleanUserCache();\n                        userNames = userNames.map(function (name) { return name.toLowerCase(); });\n                        cachedEntries = Array.from(this._userByNameCache.entries()).filter(function (_a) {\n                            var _b = tslib_1.__read(_a, 1), key = _b[0];\n                            return userNames.includes(key);\n                        });\n                        cachedObject = ObjectTools_1.entriesToObject(cachedEntries);\n                        cachedUsers = ObjectTools_1.mapObject(cachedObject, function (entry) { return entry.value; });\n                        toFetch = userNames.filter(function (name) { return !(name in cachedUsers); });\n                        if (!toFetch.length) {\n                            return [2 /*return*/, cachedUsers];\n                        }\n                        return [4 /*yield*/, this._client.callAPI({ url: 'users', query: { login: toFetch.join(',') } })];\n                    case 1:\n                        usersData = _a.sent();\n                        usersArr = usersData.users.map(function (data) { return new User_1.default(data, _this._client); });\n                        usersArr.forEach(function (user) { return _this._userByNameCache.set(user.name, {\n                            value: user,\n                            expires: Date.now() + 3600 * 1000\n                        }); });\n                        users = ObjectTools_1.indexBy(usersArr, 'name');\n                        return [2 /*return*/, tslib_1.__assign({}, cachedUsers, users)];\n                }\n            });\n        });\n    };\n    /**\n     * Retrieves the emotes a given user can use.\n     *\n     * @param user The user you want to get emotes for.\n     */\n    UserAPI.prototype.getUserEmotes = function (user) {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            var userId, data;\n            return tslib_1.__generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        userId = UserTools_1.extractUserId(user);\n                        return [4 /*yield*/, this._client.callAPI({ url: \"users/\" + userId + \"/emotes\", scope: 'user_subscriptions' })];\n                    case 1:\n                        data = _a.sent();\n                        return [2 /*return*/, new EmoteSetList_1.default(data.emoticon_sets)];\n                }\n            });\n        });\n    };\n    /**\n     * Retrieves the subscription data for a given user to a given channel.\n     *\n     * @param user The user to retrieve the subscription data of.\n     * @param toChannel The channel you want to retrieve the subscription data to.\n     */\n    UserAPI.prototype.getSubscriptionData = function (user, toChannel) {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            var userId, channelId, _a, e_1;\n            return tslib_1.__generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0:\n                        userId = UserTools_1.extractUserId(user);\n                        channelId = UserTools_1.extractUserId(toChannel);\n                        _b.label = 1;\n                    case 1:\n                        _b.trys.push([1, 3, , 4]);\n                        _a = UserSubscription_1.default.bind;\n                        return [4 /*yield*/, this._client.callAPI({\n                                url: \"users/\" + userId + \"/subscriptions/\" + channelId,\n                                scope: 'user_subscriptions'\n                            })];\n                    case 2: return [2 /*return*/, new (_a.apply(UserSubscription_1.default, [void 0, _b.sent(),\n                            this._client]))()];\n                    case 3:\n                        e_1 = _b.sent();\n                        if (e_1 instanceof HTTPStatusCodeError_1.default) {\n                            if (e_1.statusCode === 404) {\n                                return [2 /*return*/, null];\n                            }\n                            else if (e_1.statusCode === 422) {\n                                throw new NoSubscriptionProgramError_1.default(channelId);\n                            }\n                        }\n                        throw e_1;\n                    case 4: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Get a list of channels a given user follows.\n     *\n     * @param user The user you want to retrieve the follows of.\n     * @param page The result page you want to retrieve.\n     * @param limit The number of results you want to retrieve.\n     * @param orderBy The field to order by.\n     * @param orderDirection The direction to order in - ascending or descending.\n     */\n    UserAPI.prototype.getFollowedChannels = function (user, page, limit, orderBy, orderDirection) {\n        if (limit === void 0) { limit = 25; }\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            var userId, query, data;\n            var _this = this;\n            return tslib_1.__generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        userId = UserTools_1.extractUserId(user);\n                        query = {};\n                        if (page) {\n                            query.offset = ((page - 1) * limit).toString();\n                        }\n                        query.limit = limit.toString();\n                        if (orderBy) {\n                            query.sortby = orderBy;\n                        }\n                        if (orderDirection) {\n                            query.direction = orderDirection;\n                        }\n                        return [4 /*yield*/, this._client.callAPI({\n                                url: \"users/\" + userId + \"/follows/channels\", query: query\n                            })];\n                    case 1:\n                        data = _a.sent();\n                        return [2 /*return*/, data.follows.map(function (follow) { return new UserFollow_1.default(follow, _this._client); })];\n                }\n            });\n        });\n    };\n    /**\n     * Get follow data for a given user to a given channel.\n     *\n     * @param user The user you want to retrieve follow data of.\n     * @param channel The channel you want to retrieve follow data to.\n     */\n    UserAPI.prototype.getFollowedChannel = function (user, channel) {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            var userId, channelId, data, e_2;\n            return tslib_1.__generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        userId = UserTools_1.extractUserId(user);\n                        channelId = UserTools_1.extractUserId(channel);\n                        _a.label = 1;\n                    case 1:\n                        _a.trys.push([1, 3, , 4]);\n                        return [4 /*yield*/, this._client.callAPI({ url: \"users/\" + userId + \"/follows/channels/\" + channelId })];\n                    case 2:\n                        data = _a.sent();\n                        return [2 /*return*/, new UserFollow_1.default(data, this._client)];\n                    case 3:\n                        e_2 = _a.sent();\n                        if (e_2 instanceof HTTPStatusCodeError_1.default) {\n                            if (e_2.statusCode === 404) {\n                                return [2 /*return*/, null];\n                            }\n                        }\n                        throw e_2;\n                    case 4: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Follows a given channel with a given user.\n     *\n     * @param user The user you want to follow with.\n     * @param channel The channel to follow.\n     * @param notifications Whether the user will receive notifications.\n     */\n    UserAPI.prototype.followChannel = function (user, channel, notifications) {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            var userId, channelId, data;\n            return tslib_1.__generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        userId = UserTools_1.extractUserId(user);\n                        channelId = UserTools_1.extractUserId(channel);\n                        return [4 /*yield*/, this._client.callAPI({\n                                url: \"users/\" + userId + \"/follows/channels/\" + channelId,\n                                method: 'PUT',\n                                scope: 'user_follows_edit',\n                                body: { notifications: Boolean(notifications).toString() }\n                            })];\n                    case 1:\n                        data = _a.sent();\n                        return [2 /*return*/, new UserFollow_1.default(data, this._client)];\n                }\n            });\n        });\n    };\n    /**\n     * Unfollows a given channel with a given user.\n     *\n     * @param user The user you want to unfollow with.\n     * @param channel The channel to unfollow.\n     */\n    UserAPI.prototype.unfollowChannel = function (user, channel) {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            var userId, channelId;\n            return tslib_1.__generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        userId = UserTools_1.extractUserId(user);\n                        channelId = UserTools_1.extractUserId(channel);\n                        return [4 /*yield*/, this._client.callAPI({\n                                url: \"users/\" + userId + \"/follows/channels/\" + channelId,\n                                scope: 'user_follows_edit',\n                                method: 'DELETE'\n                            })];\n                    case 1:\n                        _a.sent();\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Retrieves a list of users a given user has blocked.\n     *\n     * @param user The user you want to retrieve the block list of.\n     * @param page The result page you want to retrieve.\n     * @param limit The number of results you want to retrieve.\n     */\n    UserAPI.prototype.getBlockedUsers = function (user, page, limit) {\n        if (limit === void 0) { limit = 25; }\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            var userId, query, data;\n            var _this = this;\n            return tslib_1.__generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        userId = UserTools_1.extractUserId(user);\n                        query = { limit: limit.toString() };\n                        if (page) {\n                            query.offset = ((page - 1) * limit).toString();\n                        }\n                        return [4 /*yield*/, this._client.callAPI({\n                                url: \"users/\" + userId + \"/blocks\", query: query, scope: 'user_blocks_read'\n                            })];\n                    case 1:\n                        data = _a.sent();\n                        return [2 /*return*/, data.blocks.map(function (block) { return new UserBlock_1.default(block, _this._client); })];\n                }\n            });\n        });\n    };\n    /**\n     * Blocks a given user with another given user.\n     *\n     * @param user The user you want to block with.\n     * @param userToBlock The user to block.\n     */\n    UserAPI.prototype.blockUser = function (user, userToBlock) {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            var userId, userIdToBlock, data;\n            return tslib_1.__generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        userId = UserTools_1.extractUserId(user);\n                        userIdToBlock = UserTools_1.extractUserId(userToBlock);\n                        return [4 /*yield*/, this._client.callAPI({\n                                url: \"users/\" + userId + \"/blocks/\" + userIdToBlock,\n                                method: 'PUT',\n                                scope: 'user_blocks_edit'\n                            })];\n                    case 1:\n                        data = _a.sent();\n                        return [2 /*return*/, new UserBlock_1.default(data, this._client)];\n                }\n            });\n        });\n    };\n    /**\n     * Unblocks a given user with another given user.\n     *\n     * @param user The user you want to unblock with.\n     * @param userToUnblock The user to unblock.\n     */\n    UserAPI.prototype.unblockUser = function (user, userToUnblock) {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            var userId, userIdToUnblock;\n            return tslib_1.__generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        userId = UserTools_1.extractUserId(user);\n                        userIdToUnblock = UserTools_1.extractUserId(userToUnblock);\n                        return [4 /*yield*/, this._client.callAPI({\n                                url: \"users/\" + userId + \"/blocks/\" + userIdToUnblock,\n                                method: 'DELETE',\n                                scope: 'user_blocks_edit'\n                            })];\n                    case 1:\n                        _a.sent();\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    UserAPI.prototype._cleanUserCache = function () {\n        var _this = this;\n        var now = Date.now();\n        this._userByNameCache.forEach(function (val, key) {\n            if (val.expires < now) {\n                _this._userByNameCache.delete(key);\n            }\n        });\n    };\n    tslib_1.__decorate([\n        Cache_1.Cached(3600)\n    ], UserAPI.prototype, \"getMe\", null);\n    tslib_1.__decorate([\n        Cache_1.Cached(3600)\n    ], UserAPI.prototype, \"getUser\", null);\n    tslib_1.__decorate([\n        Cache_1.Cached(3600)\n    ], UserAPI.prototype, \"getUserEmotes\", null);\n    tslib_1.__decorate([\n        Cache_1.Cached(3600)\n    ], UserAPI.prototype, \"getSubscriptionData\", null);\n    tslib_1.__decorate([\n        Cache_1.Cached(300)\n    ], UserAPI.prototype, \"getFollowedChannels\", null);\n    tslib_1.__decorate([\n        Cache_1.Cached(300)\n    ], UserAPI.prototype, \"getFollowedChannel\", null);\n    tslib_1.__decorate([\n        Cache_1.ClearsCache('getFollowedChannels', 1),\n        Cache_1.ClearsCache('getFollowedChannel', 2)\n    ], UserAPI.prototype, \"followChannel\", null);\n    tslib_1.__decorate([\n        Cache_1.ClearsCache('getFollowedChannels', 1),\n        Cache_1.ClearsCache('getFollowedChannel', 2)\n    ], UserAPI.prototype, \"unfollowChannel\", null);\n    tslib_1.__decorate([\n        Cache_1.Cached(3600)\n    ], UserAPI.prototype, \"getBlockedUsers\", null);\n    tslib_1.__decorate([\n        Cache_1.ClearsCache('getBlockedUsers', 1)\n    ], UserAPI.prototype, \"blockUser\", null);\n    tslib_1.__decorate([\n        Cache_1.ClearsCache('getBlockedUsers', 1)\n    ], UserAPI.prototype, \"unblockUser\", null);\n    UserAPI = tslib_1.__decorate([\n        Cache_1.Cacheable\n    ], UserAPI);\n    return UserAPI;\n}(BaseAPI_1.default));\nexports.default = UserAPI;\n//# sourceMappingURL=UserAPI.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar Cache_1 = require(\"../../Toolkit/Decorators/Cache\");\nvar ArrayTools_1 = require(\"../../Toolkit/ArrayTools\");\n/**\n * A list of chatters in a Twitch chat.\n */\nvar ChattersList = /** @class */ (function () {\n    /** @private */\n    function ChattersList(_data) {\n        this._data = _data;\n    }\n    Object.defineProperty(ChattersList.prototype, \"allChatters\", {\n        /**\n         * A list of user names of all chatters in the chat.\n         */\n        get: function () {\n            return ArrayTools_1.flatten(Object.values(this._data.chatters));\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ChattersList.prototype, \"allChattersWithStatus\", {\n        /**\n         * A map of user names of all chatters in the chat, mapped to their status in the channel.\n         */\n        get: function () {\n            return new Map(ArrayTools_1.flatten(Object.entries(this._data.chatters).map(function (_a) {\n                var _b = tslib_1.__read(_a, 2), status = _b[0], names = _b[1];\n                return names.map(function (name) { return [name, status]; });\n            })));\n        },\n        enumerable: true,\n        configurable: true\n    });\n    tslib_1.__decorate([\n        Cache_1.CachedGetter()\n    ], ChattersList.prototype, \"allChatters\", null);\n    tslib_1.__decorate([\n        Cache_1.CachedGetter()\n    ], ChattersList.prototype, \"allChattersWithStatus\", null);\n    ChattersList = tslib_1.__decorate([\n        Cache_1.Cacheable\n    ], ChattersList);\n    return ChattersList;\n}());\nexports.default = ChattersList;\n//# sourceMappingURL=ChattersList.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar NonEnumerable_1 = require(\"../Toolkit/Decorators/NonEnumerable\");\nvar TwitchClient_1 = require(\"../TwitchClient\");\n/**\n * Enhances another auth provider with the ability to make use of refresh\n * tokens, automatically refreshing the access token whenever necessary.\n */\nvar RefreshableAuthProvider = /** @class */ (function () {\n    /**\n     * Creates a new auth provider based on the given one that can automatically\n     * refresh access tokens.\n     *\n     * You don't usually have to create this manually. You should use `TwitchClient.withCredentials`\n     * with the `refreshConfig` parameter instead.\n     *\n     * @param childProvider The base auth provider.\n     * @param refreshConfig The information necessary to automatically refresh an access token.\n     */\n    function RefreshableAuthProvider(childProvider, refreshConfig) {\n        this._clientSecret = refreshConfig.clientSecret;\n        this._refreshToken = refreshConfig.refreshToken;\n        this._childProvider = childProvider;\n        this._initialExpiry = refreshConfig.expiry;\n        this._onRefresh = refreshConfig.onRefresh;\n    }\n    /**\n     * Retrieves an access token.\n     *\n     * If the current access token does not have the requested scopes, the base auth\n     * provider is called.\n     *\n     * If the current access token is expired, automatically renew it.\n     *\n     * @param scopes The requested scopes.\n     */\n    RefreshableAuthProvider.prototype.getAccessToken = function (scopes) {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            var oldToken, newToken, now, refreshedToken;\n            var _this = this;\n            return tslib_1.__generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        if (typeof scopes === 'string') {\n                            scopes = scopes.split(' ');\n                        }\n                        return [4 /*yield*/, this._childProvider.getAccessToken()];\n                    case 1:\n                        oldToken = _a.sent();\n                        if (!(oldToken && scopes && scopes.some(function (scope) { return !_this.currentScopes.includes(scope); }))) return [3 /*break*/, 3];\n                        return [4 /*yield*/, this._childProvider.getAccessToken(scopes)];\n                    case 2:\n                        newToken = _a.sent();\n                        // ...but if the token doesn't change, carry on\n                        if (newToken !== oldToken) {\n                            return [2 /*return*/, newToken];\n                        }\n                        _a.label = 3;\n                    case 3:\n                        // if we don't have a current token, we just pass this and refresh right away\n                        if (oldToken) {\n                            if (this._initialExpiry) {\n                                now = new Date();\n                                if (now < this._initialExpiry) {\n                                    return [2 /*return*/, oldToken];\n                                }\n                            }\n                            else if (!oldToken.isExpired) {\n                                return [2 /*return*/, oldToken];\n                            }\n                        }\n                        return [4 /*yield*/, this.refresh()];\n                    case 4:\n                        refreshedToken = _a.sent();\n                        if (oldToken) {\n                            return [2 /*return*/, refreshedToken];\n                        }\n                        // need to check again for scopes after refreshing, in case a refresh token was passed without an access token\n                        return [2 /*return*/, this._childProvider.getAccessToken(scopes)];\n                }\n            });\n        });\n    };\n    /**\n     * Force a refresh of the access token.\n     */\n    RefreshableAuthProvider.prototype.refresh = function () {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            var tokenData;\n            return tslib_1.__generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, TwitchClient_1.default.refreshAccessToken(this.clientId, this._clientSecret, this._refreshToken)];\n                    case 1:\n                        tokenData = _a.sent();\n                        this.setAccessToken(tokenData);\n                        this._refreshToken = tokenData.refreshToken;\n                        this._initialExpiry = undefined;\n                        if (this._onRefresh) {\n                            this._onRefresh(tokenData);\n                        }\n                        return [2 /*return*/, tokenData];\n                }\n            });\n        });\n    };\n    /** @private */\n    RefreshableAuthProvider.prototype.setAccessToken = function (token) {\n        this._childProvider.setAccessToken(token);\n    };\n    Object.defineProperty(RefreshableAuthProvider.prototype, \"clientId\", {\n        /**\n         * The client ID.\n         */\n        get: function () {\n            return this._childProvider.clientId;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(RefreshableAuthProvider.prototype, \"currentScopes\", {\n        /**\n         * The scopes that are currently available using the access token.\n         */\n        get: function () {\n            return this._childProvider.currentScopes;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    tslib_1.__decorate([\n        NonEnumerable_1.NonEnumerable\n    ], RefreshableAuthProvider.prototype, \"_clientSecret\", void 0);\n    tslib_1.__decorate([\n        NonEnumerable_1.NonEnumerable\n    ], RefreshableAuthProvider.prototype, \"_refreshToken\", void 0);\n    return RefreshableAuthProvider;\n}());\nexports.default = RefreshableAuthProvider;\n//# sourceMappingURL=RefreshableAuthProvider.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar UserTools_1 = require(\"../../../Toolkit/UserTools\");\nvar Cache_1 = require(\"../../../Toolkit/Decorators/Cache\");\nvar BaseAPI_1 = require(\"../../BaseAPI\");\nvar Stream_1 = require(\"./Stream\");\n/**\n * The API methods that deal with streams.\n *\n * Can be accessed using `client.kraken.streams` on a {@TwitchClient} instance.\n *\n * ## Example\n * ```ts\n * const client = await TwitchClient.withCredentials(clientId, accessToken);\n * const stream = await client.kraken.streams.getStreamByChannel('125328655');\n * ```\n */\nvar StreamAPI = /** @class */ (function (_super) {\n    tslib_1.__extends(StreamAPI, _super);\n    function StreamAPI() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * Retrieves the current stream on the given channel.\n     *\n     * @param channel\n     */\n    StreamAPI.prototype.getStreamByChannel = function (channel) {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            var channelId, data;\n            return tslib_1.__generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        channelId = UserTools_1.extractUserId(channel);\n                        return [4 /*yield*/, this._client.callAPI({ url: \"streams/\" + channelId })];\n                    case 1:\n                        data = _a.sent();\n                        return [2 /*return*/, data.stream ? new Stream_1.default(data.stream, this._client) : null];\n                }\n            });\n        });\n    };\n    /**\n     * Retrieves a list of streams.\n     *\n     * @param channels A channel ID or a list thereof.\n     * @param game Show only streams playing a certain game.\n     * @param languageCode Show only streams in a certain language.\n     * @param type Show only streams of a certain type.\n     * @param page The result page you want to retrieve.\n     * @param limit The number of results you want to retrieve.\n     */\n    StreamAPI.prototype.getStreams = function (channels, game, languageCode, type, page, limit) {\n        if (limit === void 0) { limit = 25; }\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            var query, data;\n            var _this = this;\n            return tslib_1.__generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        query = { limit: limit.toString() };\n                        if (channels) {\n                            query.channel = typeof channels === 'string' ? channels : channels.join(',');\n                        }\n                        if (game) {\n                            query.game = game;\n                        }\n                        if (languageCode) {\n                            query.broadcaster_language = languageCode;\n                        }\n                        if (type) {\n                            query.stream_type = type;\n                        }\n                        if (page) {\n                            query.offset = ((page - 1) * limit).toString();\n                        }\n                        return [4 /*yield*/, this._client.callAPI({ url: 'streams', query: query })];\n                    case 1:\n                        data = _a.sent();\n                        return [2 /*return*/, data.streams.map(function (streamData) { return new Stream_1.default(streamData, _this._client); })];\n                }\n            });\n        });\n    };\n    /**\n     * Retrieves a list of all streams.\n     *\n     * @param page The result page you want to retrieve.\n     * @param limit The number of results you want to retrieve.\n     */\n    StreamAPI.prototype.getAllStreams = function (page, limit) {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            return tslib_1.__generator(this, function (_a) {\n                return [2 /*return*/, this.getStreams(undefined, undefined, undefined, Stream_1.StreamType.All, page, limit)];\n            });\n        });\n    };\n    /**\n     * Retrieves a list of all live streams.\n     *\n     * @param page The result page you want to retrieve.\n     * @param limit The number of results you want to retrieve.\n     */\n    StreamAPI.prototype.getAllLiveStreams = function (page, limit) {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            return tslib_1.__generator(this, function (_a) {\n                return [2 /*return*/, this.getStreams(undefined, undefined, undefined, Stream_1.StreamType.Live, page, limit)];\n            });\n        });\n    };\n    /**\n     * Retrieves a list of all streams on channels the currently authenticated user is following.\n     *\n     * @param type Show only streams of a certain type.\n     * @param page The result page you want to retrieve.\n     * @param limit The number of results you want to retrieve.\n     */\n    StreamAPI.prototype.getFollowedStreams = function (type, page, limit) {\n        if (limit === void 0) { limit = 25; }\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            var query, data;\n            var _this = this;\n            return tslib_1.__generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        query = { limit: limit.toString() };\n                        if (type) {\n                            query.type = type;\n                        }\n                        if (page) {\n                            query.offset = ((page - 1) * limit).toString();\n                        }\n                        return [4 /*yield*/, this._client.callAPI({ url: 'streams/followed', query: query, scope: 'user_read' })];\n                    case 1:\n                        data = _a.sent();\n                        return [2 /*return*/, data.streams.map(function (streamData) { return new Stream_1.default(streamData, _this._client); })];\n                }\n            });\n        });\n    };\n    tslib_1.__decorate([\n        Cache_1.Cached(60)\n    ], StreamAPI.prototype, \"getStreamByChannel\", null);\n    tslib_1.__decorate([\n        Cache_1.Cached(60)\n    ], StreamAPI.prototype, \"getFollowedStreams\", null);\n    StreamAPI = tslib_1.__decorate([\n        Cache_1.Cacheable\n    ], StreamAPI);\n    return StreamAPI;\n}(BaseAPI_1.default));\nexports.default = StreamAPI;\n//# sourceMappingURL=StreamAPI.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar NonEnumerable_1 = require(\"../../../Toolkit/Decorators/NonEnumerable\");\nvar ChannelPlaceholder_1 = require(\"../Channel/ChannelPlaceholder\");\nvar NoSubscriptionProgramError_1 = require(\"../../../Errors/NoSubscriptionProgramError\");\n/**\n * A Twitch user.\n */\nvar User = /** @class */ (function () {\n    /** @private */\n    function User(/** @private */ _data, client) {\n        this._data = _data;\n        this._client = client;\n    }\n    Object.defineProperty(User.prototype, \"cacheKey\", {\n        /** @private */\n        get: function () {\n            return this._data._id;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(User.prototype, \"id\", {\n        /**\n         * The ID of the user.\n         */\n        get: function () {\n            return this._data._id;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(User.prototype, \"bio\", {\n        /**\n         * The bio of the user.\n         */\n        get: function () {\n            return this._data.bio;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(User.prototype, \"creationDate\", {\n        /**\n         * The date when the user was created, i.e. when they registered on Twitch.\n         */\n        get: function () {\n            return new Date(this._data.created_at);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(User.prototype, \"updateDate\", {\n        /**\n         * The last date when the user changed anything in their profile, e.g. their description or their profile picture.\n         */\n        get: function () {\n            return new Date(this._data.updated_at);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(User.prototype, \"name\", {\n        /**\n         * The user name of the user.\n         */\n        get: function () {\n            return this._data.name;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(User.prototype, \"displayName\", {\n        /**\n         * The display name of the user.\n         */\n        get: function () {\n            return this._data.display_name;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(User.prototype, \"logoUrl\", {\n        /**\n         * The URL to the profile picture of the user.\n         */\n        get: function () {\n            return this._data.logo;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(User.prototype, \"type\", {\n        /**\n         * The type of the user.\n         */\n        get: function () {\n            return this._data.type;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Retrieves the channel data of the user.\n     */\n    User.prototype.getChannel = function () {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            return tslib_1.__generator(this, function (_a) {\n                return [2 /*return*/, this._client.kraken.channels.getChannel(this)];\n            });\n        });\n    };\n    /**\n     * Gets a channel placeholder object for the user, which can do anything you can do to a channel with just the ID.\n     */\n    User.prototype.getChannelPlaceholder = function () {\n        return new ChannelPlaceholder_1.default(this._data._id, this._client);\n    };\n    /**\n     * Retrieves the currently running stream of the user.\n     */\n    User.prototype.getStream = function () {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            return tslib_1.__generator(this, function (_a) {\n                return [2 /*return*/, this.getChannelPlaceholder().getStream()];\n            });\n        });\n    };\n    /**\n     * Retrieves the subscription data for the user to the given channel.\n     *\n     * Throws if the channel doesn't have a subscription program or the user is not subscribed to it.\n     *\n     * This method requires access to the user. If you only have access to the channel,\n     * use {@ChannelPlaceholder#getSubscriptionBy} instead.\n     *\n     * @param channel The channel you want to get the subscription data for.\n     */\n    User.prototype.getSubscriptionTo = function (channel) {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            return tslib_1.__generator(this, function (_a) {\n                return [2 /*return*/, this._client.kraken.users.getSubscriptionData(this, channel)];\n            });\n        });\n    };\n    /**\n     * Checks whether the user is subscribed to the given channel.\n     *\n     * @param channel The channel you want to check the subscription for.\n     */\n    User.prototype.isSubscribedTo = function (channel) {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            var e_1;\n            return tslib_1.__generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        _a.trys.push([0, 2, , 3]);\n                        return [4 /*yield*/, this.getSubscriptionTo(channel)];\n                    case 1: return [2 /*return*/, (_a.sent()) !== null];\n                    case 2:\n                        e_1 = _a.sent();\n                        if (e_1 instanceof NoSubscriptionProgramError_1.default) {\n                            return [2 /*return*/, false];\n                        }\n                        throw e_1;\n                    case 3: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Retrieves a list of channels followed by the user.\n     *\n     * @param page The result page you want to retrieve.\n     * @param limit The number of results you want to retrieve.\n     * @param orderBy The field to order by.\n     * @param orderDirection The direction to order in - ascending or descending.\n     */\n    User.prototype.getFollows = function (page, limit, orderBy, orderDirection) {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            return tslib_1.__generator(this, function (_a) {\n                return [2 /*return*/, this._client.kraken.users.getFollowedChannels(this, page, limit, orderBy, orderDirection)];\n            });\n        });\n    };\n    /**\n     * Retrieves the follow data of the user to a given channel.\n     *\n     * @param channel The channel to retrieve the follow data for.\n     */\n    User.prototype.getFollowTo = function (channel) {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            return tslib_1.__generator(this, function (_a) {\n                return [2 /*return*/, this._client.kraken.users.getFollowedChannel(this, channel)];\n            });\n        });\n    };\n    /**\n     * Checks whether the user is following the given channel.\n     *\n     * @param channel The channel to check for the user's follow.\n     */\n    User.prototype.follows = function (channel) {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            var e_2;\n            return tslib_1.__generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        _a.trys.push([0, 2, , 3]);\n                        return [4 /*yield*/, this.getFollowTo(channel)];\n                    case 1: return [2 /*return*/, (_a.sent()) !== null];\n                    case 2:\n                        e_2 = _a.sent();\n                        throw e_2;\n                    case 3: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Follows the channel with the authenticated user.\n     */\n    User.prototype.follow = function () {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            var currentUser;\n            return tslib_1.__generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this._client.kraken.users.getMe()];\n                    case 1:\n                        currentUser = _a.sent();\n                        return [2 /*return*/, currentUser.followChannel(this)];\n                }\n            });\n        });\n    };\n    /**\n     * Unfollows the channel with the authenticated user.\n     */\n    User.prototype.unfollow = function () {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            var currentUser;\n            return tslib_1.__generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this._client.kraken.users.getMe()];\n                    case 1:\n                        currentUser = _a.sent();\n                        return [2 /*return*/, currentUser.unfollowChannel(this)];\n                }\n            });\n        });\n    };\n    /**\n     * Retrieves the emotes the user can use.\n     */\n    User.prototype.getEmotes = function () {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            return tslib_1.__generator(this, function (_a) {\n                return [2 /*return*/, this._client.kraken.users.getUserEmotes(this)];\n            });\n        });\n    };\n    tslib_1.__decorate([\n        NonEnumerable_1.NonEnumerable\n    ], User.prototype, \"_client\", void 0);\n    return User;\n}());\nexports.default = User;\n//# sourceMappingURL=User.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar TwitchClient_1 = require(\"../../TwitchClient\");\nvar NonEnumerable_1 = require(\"../../Toolkit/Decorators/NonEnumerable\");\n/**\n * Represents a request to the new Twitch API (Helix) that utilizes a cursor to paginate through its results.\n *\n * Aside from the methods described below, you can also utilize the async iterator using `for await .. of`:\n *\n * ```ts\n * const result = client.helix.videos.getVideosByUser('125328655');\n * for await (const video of result) {\n *     console.log(video.title);\n * }\n * ```\n */\nvar HelixPaginatedRequest = /** @class */ (function () {\n    /** @private */\n    function HelixPaginatedRequest(_callOptions, client, _mapper) {\n        this._callOptions = _callOptions;\n        this._mapper = _mapper;\n        this._client = client;\n    }\n    Object.defineProperty(HelixPaginatedRequest.prototype, \"current\", {\n        /**\n         * The last retrieved page of data associated to the requested resource.\n         *\n         * Only works with {@HelixPaginatedRequest#getNext} and not with any other methods of data retrieval.\n         */\n        get: function () {\n            return this._currentData ? this._currentData.data : undefined;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Retrieves and returns the next available page of data associated to the requested resource, or an empty array if there are no more available pages.\n     */\n    HelixPaginatedRequest.prototype.getNext = function () {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            var result;\n            return tslib_1.__generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this._fetchData()];\n                    case 1:\n                        result = _a.sent();\n                        if (!result.data.length) {\n                            return [2 /*return*/, []];\n                        }\n                        return [2 /*return*/, this._processResult(result)];\n                }\n            });\n        });\n    };\n    /**\n     * Retrieves and returns all data associated to the requested resource.\n     *\n     * Be aware that this makes multiple calls to the Twitch API. Due to this, you might be more suspectible to rate limits.\n     *\n     * Also be aware that this resets the internal cursor, so avoid using this and {@HelixPaginatedRequest#getNext} together.\n     */\n    HelixPaginatedRequest.prototype.getAll = function () {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            var result, data;\n            return tslib_1.__generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        this.reset();\n                        result = [];\n                        _a.label = 1;\n                    case 1: return [4 /*yield*/, this.getNext()];\n                    case 2:\n                        data = _a.sent();\n                        if (!data.length) {\n                            return [3 /*break*/, 4];\n                        }\n                        result.push.apply(result, tslib_1.__spread(data));\n                        _a.label = 3;\n                    case 3:\n                        if (this._currentCursor) return [3 /*break*/, 1];\n                        _a.label = 4;\n                    case 4:\n                        this.reset();\n                        return [2 /*return*/, result];\n                }\n            });\n        });\n    };\n    Object.defineProperty(HelixPaginatedRequest.prototype, \"currentCursor\", {\n        /**\n         * Retrieves the current cursor.\n         *\n         * Only useful if you want to make manual requests to the API.\n         */\n        get: function () {\n            return this._currentCursor;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Resets the internal cursor.\n     *\n     * This will make {@HelixPaginatedRequest#getNext} start from the first page again.\n     */\n    HelixPaginatedRequest.prototype.reset = function () {\n        this._currentCursor = undefined;\n    };\n    /** @private */\n    HelixPaginatedRequest.prototype._fetchData = function (additionalOptions) {\n        if (additionalOptions === void 0) { additionalOptions = {}; }\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            return tslib_1.__generator(this, function (_a) {\n                return [2 /*return*/, this._client.callAPI(tslib_1.__assign({ type: TwitchClient_1.TwitchAPICallType.Helix }, this._callOptions, additionalOptions, { query: tslib_1.__assign({}, this._callOptions.query, { after: this._currentCursor, first: '100' }, additionalOptions.query) }))];\n            });\n        });\n    };\n    /** @private */\n    HelixPaginatedRequest.prototype._processResult = function (result) {\n        var _this = this;\n        this._currentCursor = result.pagination ? result.pagination.cursor : undefined;\n        this._currentData = result;\n        return result.data.reduce(function (acc, elem) {\n            var mapped = _this._mapper(elem);\n            return Array.isArray(mapped) ? tslib_1.__spread(acc, mapped) : tslib_1.__spread(acc, [mapped]);\n        }, []);\n    };\n    tslib_1.__decorate([\n        NonEnumerable_1.NonEnumerable\n    ], HelixPaginatedRequest.prototype, \"_client\", void 0);\n    return HelixPaginatedRequest;\n}());\nexports.default = HelixPaginatedRequest;\nif (typeof Symbol === 'function' && typeof Symbol.asyncIterator === 'symbol') {\n    Object.defineProperty(HelixPaginatedRequest.prototype, Symbol.asyncIterator, {\n        value: function () {\n            return tslib_1.__asyncGenerator(this, arguments, function () {\n                var data;\n                return tslib_1.__generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0:\n                            this.reset();\n                            _a.label = 1;\n                        case 1:\n                            if (!true) return [3 /*break*/, 5];\n                            return [4 /*yield*/, tslib_1.__await(this.getNext())];\n                        case 2:\n                            data = _a.sent();\n                            if (!data.length) {\n                                return [3 /*break*/, 5];\n                            }\n                            return [5 /*yield**/, tslib_1.__values(tslib_1.__asyncDelegator(tslib_1.__asyncValues(data[Symbol.iterator]())))];\n                        case 3: return [4 /*yield*/, tslib_1.__await.apply(void 0, [_a.sent()])];\n                        case 4:\n                            _a.sent();\n                            return [3 /*break*/, 1];\n                        case 5: return [2 /*return*/];\n                    }\n                });\n            });\n        }\n    });\n}\n//# sourceMappingURL=HelixPaginatedRequest.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar NonEnumerable_1 = require(\"../../../Toolkit/Decorators/NonEnumerable\");\n/**\n * A subscription to a Twitch WebHook.\n */\nvar HelixWebHookSubscription = /** @class */ (function () {\n    /** @private */\n    function HelixWebHookSubscription(_data, client) {\n        this._data = _data;\n        this._client = client;\n    }\n    Object.defineProperty(HelixWebHookSubscription.prototype, \"topicUrl\", {\n        /**\n         * The topic the WebHook is listening to.\n         */\n        get: function () {\n            return this._data.topic;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(HelixWebHookSubscription.prototype, \"callbackUrl\", {\n        /**\n         * The URL that will be called for every subscribed event.\n         */\n        get: function () {\n            return this._data.callback;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(HelixWebHookSubscription.prototype, \"expiryDate\", {\n        /**\n         * The time when the subscription will expire.\n         */\n        get: function () {\n            return new Date(this._data.expires_at);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    tslib_1.__decorate([\n        NonEnumerable_1.NonEnumerable\n    ], HelixWebHookSubscription.prototype, \"_client\", void 0);\n    return HelixWebHookSubscription;\n}());\nexports.default = HelixWebHookSubscription;\n//# sourceMappingURL=HelixWebHookSubscription.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar CustomError_1 = require(\"./CustomError\");\n/**\n * Thrown whenever a HTTP error occurs. Some HTTP errors are handled in the library when they're expected.\n */\nvar HTTPStatusCodeError = /** @class */ (function (_super) {\n    tslib_1.__extends(HTTPStatusCodeError, _super);\n    /** @private */\n    function HTTPStatusCodeError(statusCode, statusText, body) {\n        var _this = _super.call(this, \"Encountered HTTP status code \" + statusCode + \": \" + statusText + \"\\n\\nBody:\\n\" + JSON.stringify(body, null, 2)) || this;\n        _this._statusCode = statusCode;\n        _this._body = body;\n        return _this;\n    }\n    Object.defineProperty(HTTPStatusCodeError.prototype, \"statusCode\", {\n        get: function () {\n            return this._statusCode;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(HTTPStatusCodeError.prototype, \"body\", {\n        get: function () {\n            return this._body;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return HTTPStatusCodeError;\n}(CustomError_1.default));\nexports.default = HTTPStatusCodeError;\n//# sourceMappingURL=HTTPStatusCodeError.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar NonEnumerable_1 = require(\"../../../Toolkit/Decorators/NonEnumerable\");\nvar HelixBitsLeaderboardEntry_1 = require(\"./HelixBitsLeaderboardEntry\");\nvar Cache_1 = require(\"../../../Toolkit/Decorators/Cache\");\n/**\n * A leaderboard where the users who used the most bits to a broadcaster are listed.\n */\nvar HelixBitsLeaderboard = /** @class */ (function () {\n    /** @private */\n    function HelixBitsLeaderboard(_data, client) {\n        this._data = _data;\n        this._client = client;\n    }\n    Object.defineProperty(HelixBitsLeaderboard.prototype, \"entries\", {\n        /**\n         * The entries of the leaderboard.\n         */\n        get: function () {\n            var _this = this;\n            return this._data.data.map(function (entry) { return new HelixBitsLeaderboardEntry_1.default(entry, _this._client); });\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(HelixBitsLeaderboard.prototype, \"totalCount\", {\n        /**\n         * The total amount of people on the requested leaderboard.\n         */\n        get: function () {\n            return this._data.total;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    tslib_1.__decorate([\n        NonEnumerable_1.NonEnumerable\n    ], HelixBitsLeaderboard.prototype, \"_client\", void 0);\n    tslib_1.__decorate([\n        Cache_1.CachedGetter()\n    ], HelixBitsLeaderboard.prototype, \"entries\", null);\n    HelixBitsLeaderboard = tslib_1.__decorate([\n        Cache_1.Cacheable\n    ], HelixBitsLeaderboard);\n    return HelixBitsLeaderboard;\n}());\nexports.default = HelixBitsLeaderboard;\n//# sourceMappingURL=HelixBitsLeaderboard.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar NonEnumerable_1 = require(\"../../../Toolkit/Decorators/NonEnumerable\");\nvar User_1 = require(\"./User\");\n/**\n * A relation of a previously givn user blocking another user.\n */\nvar UserBlock = /** @class */ (function () {\n    /** @private */\n    function UserBlock(_data, client) {\n        this._data = _data;\n        this._client = client;\n    }\n    Object.defineProperty(UserBlock.prototype, \"blockedUser\", {\n        /**\n         * The blocked user.\n         */\n        get: function () {\n            return new User_1.default(this._data.user, this._client);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    tslib_1.__decorate([\n        NonEnumerable_1.NonEnumerable\n    ], UserBlock.prototype, \"_client\", void 0);\n    return UserBlock;\n}());\nexports.default = UserBlock;\n//# sourceMappingURL=UserBlock.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar NonEnumerable_1 = require(\"../../../Toolkit/Decorators/NonEnumerable\");\nvar HelixClip = /** @class */ (function () {\n    /** @private */\n    function HelixClip(_data, client) {\n        this._data = _data;\n        this._client = client;\n    }\n    Object.defineProperty(HelixClip.prototype, \"id\", {\n        /**\n         * The clip ID.\n         */\n        get: function () {\n            return this._data.id;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(HelixClip.prototype, \"url\", {\n        /**\n         * The URL of the clip.\n         */\n        get: function () {\n            return this._data.url;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(HelixClip.prototype, \"embedUrl\", {\n        /**\n         * The embed URL of the clip.\n         */\n        get: function () {\n            return this._data.embed_url;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(HelixClip.prototype, \"broadcasterId\", {\n        /**\n         * The user ID of the broadcaster of the stream where the clip was created.\n         */\n        get: function () {\n            return this._data.broadcaster_id;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(HelixClip.prototype, \"broadcasterDisplayName\", {\n        /**\n         * The display name of the broadcaster of the stream where the clip was created.\n         */\n        get: function () {\n            return this._data.broadcaster_name;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Retrieves information about the broadcaster of the stream where the clip was created.\n     */\n    HelixClip.prototype.getBroadcaster = function () {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            return tslib_1.__generator(this, function (_a) {\n                return [2 /*return*/, this._client.helix.users.getUserById(this._data.broadcaster_id)];\n            });\n        });\n    };\n    Object.defineProperty(HelixClip.prototype, \"creatorId\", {\n        /**\n         * The user ID of the creator of the clip.\n         */\n        get: function () {\n            return this._data.creator_id;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(HelixClip.prototype, \"creatorDisplayName\", {\n        /**\n         * The display name of the creator of the clip.\n         */\n        get: function () {\n            return this._data.creator_name;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Retrieves information about the creator of the clip.\n     */\n    HelixClip.prototype.getCreator = function () {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            return tslib_1.__generator(this, function (_a) {\n                return [2 /*return*/, this._client.helix.users.getUserById(this._data.creator_id)];\n            });\n        });\n    };\n    Object.defineProperty(HelixClip.prototype, \"videoId\", {\n        /**\n         * The ID of the video the clip is taken from.\n         */\n        get: function () {\n            return this._data.video_id;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Retrieves information about the video the clip is taken from.\n     */\n    HelixClip.prototype.getVideo = function () {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            return tslib_1.__generator(this, function (_a) {\n                return [2 /*return*/, this._client.helix.videos.getVideoById(this._data.video_id)];\n            });\n        });\n    };\n    Object.defineProperty(HelixClip.prototype, \"gameId\", {\n        /**\n         * The ID of the game that was being played when the clip was created.\n         */\n        get: function () {\n            return this._data.game_id;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Retrieves information about the game that was being played when the clip was created.\n     */\n    HelixClip.prototype.getGame = function () {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            return tslib_1.__generator(this, function (_a) {\n                return [2 /*return*/, this._client.helix.games.getGameById(this._data.game_id)];\n            });\n        });\n    };\n    Object.defineProperty(HelixClip.prototype, \"language\", {\n        /**\n         * The language of the stream where the clip was created.\n         */\n        get: function () {\n            return this._data.language;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(HelixClip.prototype, \"title\", {\n        /**\n         * The title of the clip.\n         */\n        get: function () {\n            return this._data.title;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(HelixClip.prototype, \"views\", {\n        /**\n         * The number of views of the clip.\n         */\n        get: function () {\n            return this._data.view_count;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(HelixClip.prototype, \"creationDate\", {\n        /**\n         * The date when the clip was created.\n         */\n        get: function () {\n            return new Date(this._data.created_at);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(HelixClip.prototype, \"thumbnailUrl\", {\n        /**\n         * The URL of the thumbnail of the clip.\n         */\n        get: function () {\n            return this._data.thumbnail_url;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    tslib_1.__decorate([\n        NonEnumerable_1.NonEnumerable\n    ], HelixClip.prototype, \"_client\", void 0);\n    return HelixClip;\n}());\nexports.default = HelixClip;\n//# sourceMappingURL=HelixClip.js.map"],"sourceRoot":""}